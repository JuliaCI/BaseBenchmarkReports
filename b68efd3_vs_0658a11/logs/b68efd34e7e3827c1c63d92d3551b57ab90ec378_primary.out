cset: moving following pidspec: 27906
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.072080456 seconds)
loading group "string"... done (took 0.619663719 seconds)
loading group "linalg"... done (took 9.726520928 seconds)
loading group "parallel"... done (took 0.185412394 seconds)
loading group "find"... done (took 1.554521678 seconds)
loading group "tuple"... done (took 2.222144477 seconds)
loading group "dates"... done (took 1.540143178 seconds)
loading group "micro"... done (took 0.241508703 seconds)
loading group "io"... done (took 0.595687492 seconds)
loading group "scalar"... done (took 48.708263633 seconds)
loading group "sparse"... done (took 15.107615788 seconds)
loading group "broadcast"... done (took 1.325630613 seconds)
loading group "union"... done (took 13.784445892 seconds)
loading group "simd"... done (took 2.968135417 seconds)
loading group "random"... done (took 11.985150742 seconds)
loading group "problem"... done (took 1836.510038654 seconds)
loading group "array"... done (took 29.75069077 seconds)
loading group "misc"... done (took 1.250827483 seconds)
loading group "sort"... done (took 4.034449821 seconds)
loading group "collection"... done (took 21.024921652 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.774566994 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146363084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.222594033 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.387985608 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.247042736 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.174422755 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.178137533 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.596640712 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.037716195 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.295601663 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157476506 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.609706236 seconds)
done (took 6.547980467 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.357466382 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.392528977 seconds)
    (2/2) benchmarking "String"...
    done (took 0.184241772 seconds)
  done (took 1.239452524 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075854368 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188896484 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.118250575 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115532316 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10190457 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116079674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.116379891 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116091996 seconds)
  done (took 1.53824189 seconds)
done (took 3.880201003 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.577024565 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.945519957 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574947697 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.176303187 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.209314146 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.185853757 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.33139496 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.167586282 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.122321762 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110821569 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.236764651 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.376380576 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.517173195 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.081285707 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09143379 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.129772597 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099988912 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.717979283 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087357547 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138268992 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.61922144 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119597621 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116305397 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126436955 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217560639 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13507237 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.171245431 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096944376 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.683410849 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104735233 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.24144808 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085209424 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.186936137 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.263456096 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082776218 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110504534 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68040814 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.184249549 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121699463 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104244587 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675762614 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083760068 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.254769599 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110129907 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115509096 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.199104835 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.10542952 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.110883597 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105017586 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.089234929 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.183542509 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.484430931 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10813505 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.178159263 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110847304 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.705386114 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099536005 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158886747 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141720244 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111401533 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083062718 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114002663 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.168356109 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114662689 seconds)
  done (took 20.706895555 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165139606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.174621665 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095488226 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145016125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.15119672 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099007354 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101461689 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07961876 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132381421 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.244693159 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.145816556 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192348156 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077097581 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.103290988 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1469609 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.258204262 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109576323 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125868238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102352525 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091782221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146728854 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115459948 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113342241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098120248 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.190265336 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208015184 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110531747 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125604897 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102789042 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120739748 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143061928 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152111008 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094661615 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084338027 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.20962215 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107771094 seconds)
  done (took 5.547076959 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.234314251 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121915939 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251249048 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.189696001 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.156500621 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.19359894 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148711641 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314428236 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.26160007 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118819308 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187953656 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131466291 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115329713 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079081427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098623063 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096218062 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.751701216 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184601779 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158821249 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15626064 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107075053 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.1002084 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.385549902 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086485723 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100214606 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086146305 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.096820735 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.232639699 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089916951 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.42300858 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098331978 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112900677 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134770493 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209528678 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121319958 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147070412 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105867693 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081446029 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.247842398 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113347488 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07796812 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132765428 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134936279 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137516922 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101255086 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098057679 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.252779942 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.10228996 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108913758 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.174326922 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.202674254 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.142551973 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080137114 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.398422697 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100216938 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108916139 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100555188 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.317441223 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142479509 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083314214 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096891207 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086305528 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.17985599 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078813248 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.452116999 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094488265 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.913001704 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096596058 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.169081253 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103871452 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108701293 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104179593 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086162415 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121977073 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100110895 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080762231 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097026005 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08071477 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09694301 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102813209 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105103089 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10472171 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097003682 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147977865 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.120704498 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120866533 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124956932 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085989174 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098055982 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13022387 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083520024 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102954707 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.179063119 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107048266 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123319846 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088792782 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144472214 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099023608 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.230178836 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097016752 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125183369 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10231981 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114342385 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.126289823 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099333646 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103802495 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083286389 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096149733 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08012346 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165986848 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083082702 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097909421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101445746 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096353295 seconds)
  done (took 24.989185348 seconds)
done (took 51.904584172 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.535723826 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.128323253 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128037728 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.128898381 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.126365002 seconds)
  done (took 1.794964332 seconds)
done (took 2.515289912 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.404106388 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198081919 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125633063 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195429996 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109885893 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.221735262 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187807222 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122156245 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218354943 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103556437 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19291555 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104330592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10848487 seconds)
  done (took 3.037819871 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099033372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.128303759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084778174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118649739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078100654 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118930345 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115452633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132720927 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115976007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108570039 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080540218 seconds)
  done (took 1.8945556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095897029 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122376642 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08579081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114950437 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079198574 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114252872 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113015775 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108025934 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11389518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091991542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.099646727 seconds)
  done (took 1.853095923 seconds)
done (took 7.490229097 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.260695061 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.030958304 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.152450585 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210274252 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.422154569 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.264034903 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.662035631 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.174193647 seconds)
  done (took 14.108027012 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.184158922 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103324023 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086547503 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106214094 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08942297 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104020254 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087311614 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103089258 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.102425126 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088784877 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102793931 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087637466 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.104741622 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086906441 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103860392 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102379558 seconds)
  done (took 2.428689995 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143510518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142850439 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094161944 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11649138 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109076925 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.093097715 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.111941478 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111144921 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091681788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107818485 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115295301 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09929932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.113979548 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.105463076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097206642 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116545527 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106611717 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096811001 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112182121 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111067329 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099548752 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.108639199 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112809626 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099055695 seconds)
  done (took 3.431926111 seconds)
done (took 20.683454615 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.184577306 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103674602 seconds)
  done (took 1.010008444 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.151532442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158993953 seconds)
  done (took 1.035401656 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115721406 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101736063 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.147027206 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1230456 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.102834712 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085825315 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.141410879 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103134377 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086197043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103402848 seconds)
  done (took 1.838744465 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089526198 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107317317 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.114859594 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154210508 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099692467 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108137193 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108947243 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091453346 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109838177 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.102896754 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096269522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128881226 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.111464558 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.253012666 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092274733 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112042544 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11700034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.110164367 seconds)
  done (took 2.837580778 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084364296 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102909055 seconds)
  done (took 0.915614204 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089731664 seconds)
    (2/7) benchmarking "second"...
    done (took 0.103557206 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091255219 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108165843 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.102719959 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086599271 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103744419 seconds)
  done (took 1.41300676 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.564189477 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.2839462 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.391792458 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125693214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.149666255 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.414584123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.151111432 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120977926 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.12198939 seconds)
  done (took 3.098750852 seconds)
done (took 12.877365804 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091570004 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.246661094 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.624987002 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.126178001 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08570802 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16140406 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.339843856 seconds)
done (took 2.408394579 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368692214 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166576733 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09437117 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101350138 seconds)
  done (took 1.4606131 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079936257 seconds)
    (2/2) benchmarking "read"...
    done (took 0.111444012 seconds)
  done (took 0.927050098 seconds)
done (took 3.131177101 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082845262 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.137966423 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081883269 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.103968882 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100634511 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.083997722 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099981643 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083786106 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098816692 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083511883 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.099314661 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083694534 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100223371 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083025033 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09924579 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08253784 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099803488 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08322506 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099268476 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082544061 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099245589 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098673743 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083799653 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098790801 seconds)
  done (took 3.026904877 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108647078 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.104212305 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107798252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091895138 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.108508708 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108868845 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091033879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.104670617 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108130887 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086298292 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10902599 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108829859 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085908365 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.109414719 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103017129 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.092424949 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.108564248 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104408698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087657515 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108186618 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107864019 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088079527 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10970113 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108258282 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.093517469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109683198 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086394958 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104958006 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108116187 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091837346 seconds)
  done (took 3.784243878 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092154999 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096818736 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085490014 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11034796 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081483716 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101993699 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080590284 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099232352 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.101702446 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085366665 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.103878716 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085079415 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09729637 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086487053 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103005423 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088229698 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120693341 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.098101781 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083281826 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.102887934 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087465775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098540252 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084310372 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101570146 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084031383 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.098009667 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085216605 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.100887833 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.086556772 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.101966486 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104093113 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.090095073 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100748564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097281037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105841272 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085082591 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108159952 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.098115763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.088347008 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098181047 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081259073 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.101522579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08207823 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111821743 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084411856 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.103156402 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081998306 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103948008 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.101717916 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090416414 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09823413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081294907 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104301213 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088501262 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.104772291 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081601049 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102905261 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081520272 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103055976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.101635723 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08235483 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.097149756 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.091151772 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.102825621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107957996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113567746 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098050749 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089131191 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102656754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092547311 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10603838 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118894042 seconds)
  done (took 7.647110551 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098159887 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114523662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086965205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103572597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102352045 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086117843 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110713949 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085506712 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104900701 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111577915 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085707587 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102970752 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087218719 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103837781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085553346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104839965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112915871 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085786448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.101874934 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0869857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103248858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111080285 seconds)
  done (took 2.92380659 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.271910277 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092633181 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.157657377 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123811597 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.127187426 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121976936 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08985175 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110207057 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107847123 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097320025 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114082022 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108358489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126658073 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097860537 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114603654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116756383 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090805293 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116649891 seconds)
  done (took 2.935310946 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103262052 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.106515769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129864284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088933364 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.106896305 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088583053 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114538709 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122028774 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105964453 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.089665996 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117699349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105869393 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089783413 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106338513 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090215455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105856751 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105034747 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089946413 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116101149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114645846 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097322146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116342202 seconds)
  done (took 3.064318554 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104152667 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106033206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.145312559 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092959043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.10431188 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103675373 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.096477146 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.10693667 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096564608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.106833568 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106794633 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08793079 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.115466907 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105256678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097690001 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107545949 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088327729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107750606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106596029 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088772327 seconds)
  done (took 2.827589625 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186356637 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104244046 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124147961 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137154416 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121231316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104680582 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135141099 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122849065 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10584468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140538423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121845365 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122241302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137148603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113705813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122343315 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137650479 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137847739 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137186716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105565399 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121594527 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141140227 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104582361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135797211 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122624351 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121606944 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105082383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121566933 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132108314 seconds)
  done (took 4.279909988 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084359428 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101565027 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086165852 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.102030427 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085711782 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101997433 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085830426 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103471355 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086090203 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102975135 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.086867767 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10195465 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086129621 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101714136 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085275581 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102867694 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084422818 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.102694081 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101605056 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08682599 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.102340412 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086059135 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101715818 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086039185 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10301983 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086711281 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10314472 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086466651 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103144776 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085319026 seconds)
  done (took 3.581126102 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099200765 seconds)
    (2/2) benchmarking "in"...
    done (took 0.132810278 seconds)
  done (took 0.99051598 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096376745 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12469694 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085512992 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105795546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117013526 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087230609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117099723 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11544807 seconds)
  done (took 1.607669952 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.155840782 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159117917 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093524064 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119331446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160735662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150781192 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175871757 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.111927253 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090853775 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102643182 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157851647 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083111212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111288703 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107588781 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093215446 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117375033 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.105692178 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.097842984 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.114763627 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08988853 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111434445 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121392353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095218646 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116823636 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105291434 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096688009 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117072571 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.117959956 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08924062 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116490851 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108447725 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089034335 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109605708 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093751995 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.106058577 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158314962 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121491712 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089844552 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112538991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094023513 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117083774 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.105938399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096090972 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10907785 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115411501 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09413091 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112576867 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.087510549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10242763 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105619936 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.089062697 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107264252 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087354921 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112354452 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112737167 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105737746 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10852594 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089172314 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106874665 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106180292 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09231754 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106382157 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121851838 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094729396 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112882279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094190116 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111863543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.106448151 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090516745 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106529798 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094617084 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130592672 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115792215 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094584216 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113462594 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.106430083 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090873647 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112893862 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110400414 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.098793779 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.111303888 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096824226 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11309393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106222327 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088306697 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113949959 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.090265861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109431467 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103054935 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107957601 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.108299277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.088108333 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104485531 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115230176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088698692 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.110342877 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085420664 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112660559 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.104916159 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095632828 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113000938 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090868718 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.117171486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113514367 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095526678 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11462377 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153550691 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109035833 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088778287 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.110021781 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094842861 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104866876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096216035 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.10564807 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108415446 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089419312 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114390467 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115857812 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.092023942 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.112263027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096209533 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116498831 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.109627572 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.087363773 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107605113 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093768962 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117790475 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.117207698 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091456016 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.107768463 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089010519 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113459658 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.111781939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092259271 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113283391 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090554869 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106183206 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.108630196 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094219777 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115541597 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088165881 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111512945 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114823135 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092893999 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.111414653 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11443153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087548353 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104044301 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095979295 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108523827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.108067413 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100598293 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107988059 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090789134 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108906027 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119261472 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089885991 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113596312 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110470585 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094292385 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11424799 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084462706 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10983568 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091558366 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118699553 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108090331 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088884197 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106349947 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096232022 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105241201 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.112664414 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085342139 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108875353 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09566395 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108287795 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093101334 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107702357 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126964601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104087545 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116072244 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.112027289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097240437 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112834854 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113196297 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094368927 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11530489 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.095145881 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114109143 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.1121669 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094963357 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108267814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092667754 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110880305 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1157162 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08609319 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110609315 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085098887 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.113124981 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117079342 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.094269725 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.114567097 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091007426 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112544422 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11987785 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090516062 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.112475642 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085345459 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113994951 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100245066 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.1139048 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115902394 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098166326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11109786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.1095964 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099962806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110360407 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09541965 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.109643458 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104564714 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086671455 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116204674 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092812982 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108484069 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087871522 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115022149 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115889948 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092899407 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105163365 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.093937564 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120724458 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10801968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094714799 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109345883 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113362662 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106339919 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10506111 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109032281 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.100440282 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.114180818 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087792358 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113514026 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110409747 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097299046 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110902574 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091190669 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112002128 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096440849 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11224162 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.107028172 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090311866 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.110773269 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08561574 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111073597 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115802717 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091451081 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110243849 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101064343 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115449096 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.115105388 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092297342 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.113418009 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.115116966 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096620799 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111099911 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097090789 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107725183 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104326189 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091963465 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104852733 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090733337 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109156773 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095615693 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110298529 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111717379 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.093324876 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116338822 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110183061 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096331114 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133703752 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110268121 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086181997 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11099929 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112928176 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090186211 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109849272 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090376591 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116276632 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094073854 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118234118 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109951697 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089289553 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115382892 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090791778 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114136507 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.116667411 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09696081 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109625493 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.093690254 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109582954 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12169596 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087278724 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119252889 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114532909 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093730763 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110866343 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092152352 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109841271 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105213458 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090726588 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.116461992 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091891216 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114023294 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113786966 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091767377 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110836094 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088557643 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.116210409 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112418492 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098302507 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109597326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086671702 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106448982 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115015434 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097464755 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115377239 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08994179 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.113115635 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116090737 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.094519883 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.108461348 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101177591 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116808097 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.096250715 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12203027 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106663978 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092350612 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123944925 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109024655 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092011425 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.110881709 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087438339 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116836742 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115898779 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097804205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112116206 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08651274 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109135922 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098031341 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111813226 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113567694 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.089719322 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114446049 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088755317 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111887316 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097050466 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.1144966 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117896345 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096551403 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11344939 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.111266688 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.096102221 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10976641 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086966536 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106124929 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091490451 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.117845411 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107116192 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095421774 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114526375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092737072 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112579171 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.114456569 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091072141 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117132465 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094393094 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112040022 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120757086 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.090277362 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112292413 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094368463 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114189088 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087140103 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113518912 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112771764 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096846684 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116974557 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115616174 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094963625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115047098 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092037314 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.114747285 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.094883228 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.116640489 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106473046 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098781095 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119245359 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.091284782 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113302736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112995615 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08967096 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11375859 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.116573965 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092752808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12107675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.095621513 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112991641 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117305771 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.095727493 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114493242 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099209626 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110789224 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116921749 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087337753 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.121006901 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113526236 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.097596508 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111057548 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088743765 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115833733 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094137528 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114221278 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119383939 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.098233621 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107485606 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087364625 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.112655854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112210815 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102032535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118849789 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112698566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095069682 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112710554 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09083916 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119697982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088630002 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110475101 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115635614 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098210696 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112132156 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089504032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114921424 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117248206 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097701331 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.116076614 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107589437 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095217988 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11779202 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093211638 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109620102 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111822835 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098690528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115042028 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092504609 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108107441 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123430016 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099008776 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117999939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110939705 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09540017 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113220781 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092004754 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.118528811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111292407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097192588 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113092975 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096526619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125156834 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106371272 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091899006 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124704624 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099847053 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112458827 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093225688 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118348942 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118756395 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093630354 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108879896 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088469553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113644218 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088004097 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.114349685 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125786706 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098496596 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113173013 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113370132 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094823155 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.112249604 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09387734 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.108711624 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097620425 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112010996 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.122500507 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088714935 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107701713 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093498066 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116421814 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112951342 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096794867 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.111280231 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094178576 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109951539 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094408806 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122220811 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114636135 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09722287 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115157473 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114187086 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093898488 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123309965 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090906509 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114844501 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126603392 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099854197 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116671836 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11675911 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101146011 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118718101 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092855188 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118185252 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113306757 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095490198 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.119555464 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.099335194 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131856416 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115417105 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088443323 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.115888488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113639927 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089446174 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122915568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099979552 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119005346 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116231159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092069977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121090358 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120576492 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09653812 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.115057803 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094540935 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.115543117 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113426299 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095199085 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111902473 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098762224 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.119615183 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096580891 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122944356 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109223213 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105313422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.122012683 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.120235236 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091760542 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10929999 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088863894 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11521342 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099940716 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.118951046 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.113651252 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.094052215 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.116124886 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097422623 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115830994 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113953311 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100851791 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.116398485 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091834655 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11795089 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094030931 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118148204 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.111220306 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.098677825 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120492801 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098599021 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126051349 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.118716496 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094206425 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1127549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117102978 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.093847931 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117497619 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095519352 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113375336 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089914076 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117837695 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119407532 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095734492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120422715 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101140817 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11492109 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119627346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101016223 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117366045 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.092645292 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.117570298 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.114141992 seconds)
  done (took 64.176639273 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171127485 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100945138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114207764 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093524434 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14407604 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116423748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11316534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096692558 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116099158 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107844961 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113729542 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113936707 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139024639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14780128 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.144811226 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110027383 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114209505 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116472911 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095341021 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116903052 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136985404 seconds)
  done (took 3.32881207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113691953 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.135420803 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134597842 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.136516213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124832596 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111907628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.134583064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131647916 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.135951807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127994164 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137016225 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132190955 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10827282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127501077 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128978637 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127190972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116238286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.128253536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132512633 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133592417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127244219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112477253 seconds)
  done (took 3.601905532 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098652866 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.117227012 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099009151 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113593178 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097031562 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.114106058 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124032255 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093894439 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.123854847 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093741242 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111690557 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093705301 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119710983 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114007014 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091971057 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.112934177 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.102893778 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.117285585 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099493485 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114992752 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140381582 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.11305617 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.095122606 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111650814 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107801591 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.119281904 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09639698 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.117952935 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111128705 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.097325385 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114241886 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096352201 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.118511067 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089581667 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111861015 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.117180197 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.097490091 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.114008889 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.094311692 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118079357 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.094086378 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120631911 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123663289 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.093264496 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.113997605 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096002465 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118252378 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.113643294 seconds)
  done (took 6.019971619 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.154265619 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.178928701 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.126586223 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.167054965 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141654481 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112131167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.122525208 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.177942296 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.119100669 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100693342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.143747399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.143144846 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.136749487 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.13296892 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104568624 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122856629 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.12596665 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102233009 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.133009341 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123173695 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130765679 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119776042 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.135794802 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139510678 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126271937 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100970128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.136791639 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.132575591 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.136384952 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110711464 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128247803 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.132481714 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.141770856 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128809114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102175278 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.136970011 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.140535935 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122658116 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103788414 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.120872364 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.116908709 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132420825 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120707252 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.14224225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125109149 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108176564 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124481973 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118358939 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12355701 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.140306968 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130890234 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.141794999 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127213605 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104108019 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.14225183 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.145506863 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.121967998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101430958 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125794271 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.142484082 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1007689 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127177361 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.143436184 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.137859811 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107628408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140958758 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.128973573 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126755212 seconds)
  done (took 9.697881472 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125249831 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.12454825 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141638761 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143349028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126770889 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.106106093 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.127777582 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.12705919 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106524082 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135256557 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126980013 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.21887588 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123607535 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136552133 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105704375 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12891533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.126630227 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125984017 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10662169 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126913682 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126650915 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.141771245 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106563983 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.142687908 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144302428 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123776458 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106000218 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128944376 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142778117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127200713 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144540244 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10640465 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129385274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.142971779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144858639 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.128228424 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097082625 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127612618 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.127791533 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106626698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124098423 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142406312 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127578896 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102141281 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126538005 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127467937 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142847773 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.144656149 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114445709 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137469058 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127832997 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143667167 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128011403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107756538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.143719798 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153683049 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142717983 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.141824829 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128290121 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.14336383 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142606766 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.153311377 seconds)
  done (took 8.901590501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090185437 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113468472 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095399967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117553289 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095910368 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118007645 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094919883 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116822346 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095784392 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.117296493 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096067815 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116751065 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095501839 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118420219 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094835047 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117341666 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094873466 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117941291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115740573 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095778446 seconds)
  done (took 2.937196962 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102857194 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.138114017 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.119912533 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109979986 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.121276523 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131358325 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09891672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12338377 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121083975 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101486029 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.134552975 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134716729 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100433404 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131082272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133560538 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130651756 seconds)
  done (took 2.75760721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118147806 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136448751 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174343578 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.124304225 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122278955 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108243372 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.122230059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101526585 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120338545 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128763735 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105192411 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125759641 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099424409 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122885332 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121297675 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1053865 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.118718408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104445794 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.121410828 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.181791684 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.128479362 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102751571 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123168169 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126103578 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103377563 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129647565 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.130015618 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101334703 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123451866 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12199495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105482398 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131773642 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120916194 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106052044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.121005398 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.102635914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.120711848 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122170867 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106002755 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121298424 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101178873 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125262903 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121707518 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102587431 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.117075716 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.100413631 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11905153 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127309893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103077218 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.125665507 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100609407 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.13054995 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.126991735 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111162669 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132978013 seconds)
  done (took 7.379704223 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107604026 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11584438 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13207226 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094568366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121436477 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102196693 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12360094 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123303993 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103760996 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.118936551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103619869 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125568501 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123767037 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101978027 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125525744 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101169814 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120876865 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122829537 seconds)
  done (took 2.895789605 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100089615 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116805671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105934891 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122274647 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.09865276 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121650186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120393614 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098242174 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118948204 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100145287 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121641971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097934041 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119328139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119103803 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098963498 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118957288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.099914822 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120615602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.120729678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098498627 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12114155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098805942 seconds)
  done (took 3.264879948 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106572756 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180144303 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.132041572 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19138971 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.121382457 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119136078 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109739474 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.123210944 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139665549 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097456197 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119388151 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097682202 seconds)
  done (took 2.368740413 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122723611 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160984285 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123098586 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100017642 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13717415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129377116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129602242 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10844084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14215762 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146156838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129345298 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142444239 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119964156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144649776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137203654 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136278077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12743229 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108309367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122739956 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154189582 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129511371 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142449655 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108238433 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128104467 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128302327 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144952541 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121028592 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148583871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128462985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141565005 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134858163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107335145 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144426001 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146747444 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122565202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142329712 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107820561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177670859 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115560073 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144149194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122968212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136479563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121430683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140895498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142851826 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130222378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139297676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108147382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130952296 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162056771 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137077921 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144696161 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135448667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142538389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141587645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163303551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147190385 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145487141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115672968 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146665505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144189829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136997524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144981078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148585869 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136955829 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147242013 seconds)
  done (took 9.738493452 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165767601 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103068649 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131052358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148388685 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145254179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108503255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131700969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130603219 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108349281 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126302668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.183890985 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131351942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144916275 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144745569 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129456939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109586987 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129677301 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144700237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103030182 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184608703 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108113472 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144727827 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144935359 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145043637 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149014727 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138160552 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108706801 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13085844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129434715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129489858 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117796224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130726627 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145870065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124607594 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145830996 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109851429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131124444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139531152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107865595 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137458831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144346941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154183612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130203893 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129187095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148983983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108771356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129491898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125953859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108689586 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125901917 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148435378 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148434345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150180706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144722001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108409989 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131289413 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13112793 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109074896 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131207405 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137849255 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147334753 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109158599 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186871055 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108739091 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131086359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146520329 seconds)
  done (took 9.637516242 seconds)
done (took 174.112236823 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157406794 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18599703 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.163560311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159391916 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109544425 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127611416 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143494886 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.153606729 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111056814 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095947301 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116244011 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097993065 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182444655 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086916599 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.111203297 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117524402 seconds)
  done (took 2.954061786 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210156249 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306907929 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.138866971 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121850018 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104966395 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.120673865 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.100637812 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.124726997 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118633738 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11230782 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.118999092 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096176715 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.135950812 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.12052025 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096400276 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120147214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.133763348 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098414669 seconds)
  done (took 3.220133836 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116162626 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.176565714 seconds)
  done (took 1.139400421 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128956029 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.219027845 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297690844 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17230785 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.14325649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144336362 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.182974242 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138242387 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.215226199 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.143549242 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.141422277 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101431109 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151172965 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.132115344 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114694675 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.126472214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.154648389 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.111989044 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.373724893 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118184359 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140959644 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101311626 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.129686692 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132646164 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.206416181 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.143489012 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101711443 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124964222 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12728071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113172742 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.13407774 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.145545651 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.144178978 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197251249 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.133336366 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.211903612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.113818669 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.125103488 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132643071 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.103774006 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.128532571 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.128569297 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.121972906 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.123759791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.120715916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.112049194 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127311163 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125870476 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115540217 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.137198979 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131938955 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130025058 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189701111 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.137162814 seconds)
  done (took 8.74671862 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.925745094 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159425769 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094076685 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.05324178 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147936703 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132800403 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.934934161 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117060841 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.284415413 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.920657119 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132760958 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107298848 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.291713584 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275244327 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.190940553 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.401621218 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.766656536 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12982072 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.145601156 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167372285 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123286498 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147787395 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115238421 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.47476639 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095326852 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114979941 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122145112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106447177 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.203609464 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091757107 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119549904 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.225276686 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288378773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23419419 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11731494 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091852432 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113590628 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188908177 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.306354918 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27238498 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188981273 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089077482 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115825285 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130001296 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116270312 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111825114 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205891021 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195515138 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.2166043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09722128 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129291492 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124874575 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127575383 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183067022 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110673746 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376887704 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.380074536 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113101219 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102995077 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13486028 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30177722 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11598227 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267693159 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151502864 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245538625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11233283 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826129876 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188243655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113213247 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102409313 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123634648 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120322758 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127150248 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183878534 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397160559 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132369756 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098584955 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113922522 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.285333368 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102263511 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123545681 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195875242 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125213263 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124436581 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111107091 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130715361 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.212817519 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273417249 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131712006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123033314 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098550394 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129745301 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120967198 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234257653 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.27921662 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.182995922 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.254125959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108484875 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207726095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186582614 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12805044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.21442489 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100922043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135887025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128934247 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251892251 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157053912 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.119364343 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100419099 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125804482 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163094816 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12516229 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126018364 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192320611 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.519862629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19938877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.123199339 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097414386 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125298604 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205243902 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103181311 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.301779403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126900034 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.209996665 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103401845 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112393227 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102997216 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.210424328 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131759789 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126174535 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107615555 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125425748 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.295343336 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25866456 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110662284 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272021461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.225592035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11451943 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.22568943 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129027739 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197508591 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131759884 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112869863 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120806904 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819732705 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132103717 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124503428 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100248124 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245272595 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095788331 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116033185 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100766057 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119461641 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859416696 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105146885 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12185968 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100824913 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134738984 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.134559399 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132296633 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108605319 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.220168617 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.283529184 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140080688 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105964326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120177376 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.189888836 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12915723 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.122727117 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102992478 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125587436 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107242221 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124687872 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.120082042 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201185128 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.209716966 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.267580288 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597151508 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099836134 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.120654508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273660016 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117507565 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343847341 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125108168 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.268741868 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19470708 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.115498756 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376371797 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.218998163 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.215011949 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099518831 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.218738096 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089009099 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124554967 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.205949711 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096176936 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124212598 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185761026 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142668813 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133914415 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199219086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116924538 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256003798 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121458575 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.20299532 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128932439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139332844 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.365407653 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098873916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148091902 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211349703 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105245251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12810697 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.779168852 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098956708 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138489805 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137144199 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274740921 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.222162546 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112542309 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136884374 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.140931705 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.196033825 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.268622603 seconds)
  done (took 49.146617414 seconds)
done (took 66.045624413 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.339303908 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.295296196 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.340459488 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239798456 seconds)
  done (took 2.165150651 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.240700679 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.172195519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.227385922 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098884251 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245306793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100818952 seconds)
  done (took 1.953327633 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.553228473 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.470808434 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.384903817 seconds)
  done (took 2.284279504 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.280056345 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.294062917 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.382093506 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.505495441 seconds)
  done (took 2.468154246 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297028618 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126096956 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.14244745 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.199223951 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.275196167 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.300743969 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.173159785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.224421414 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13076549 seconds)
  done (took 2.791087131 seconds)
done (took 12.534983367 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.298971954 seconds)
    (2/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.172922127 seconds)
    (3/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.218680107 seconds)
    (4/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.348575008 seconds)
    (5/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.336585282 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.212244189 seconds)
    (7/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.360564225 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.171773921 seconds)
    (9/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.345646006 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105716082 seconds)
    (11/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.146819742 seconds)
    (12/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.351836143 seconds)
    (13/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.233589033 seconds)
    (14/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152602441 seconds)
    (15/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.307848434 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.219508949 seconds)
    (17/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.181368288 seconds)
    (18/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.115151815 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.149882252 seconds)
    (20/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.181786372 seconds)
    (21/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.264142655 seconds)
    (22/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106184235 seconds)
    (23/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.210492805 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129125527 seconds)
    (25/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.165984577 seconds)
    (26/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.22738184 seconds)
    (27/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.235067212 seconds)
    (28/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.239436899 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.233047463 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.133319693 seconds)
    (31/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109147917 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.145673925 seconds)
    (33/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.268486308 seconds)
    (34/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.291504003 seconds)
    (35/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.137209819 seconds)
    (36/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.213862732 seconds)
    (37/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.120037836 seconds)
    (38/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.24310248 seconds)
    (39/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.178979577 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.165557808 seconds)
    (41/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.180558347 seconds)
    (42/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.158458134 seconds)
    (43/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.117802366 seconds)
    (44/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.180626711 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123690986 seconds)
    (46/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221783356 seconds)
    (47/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.153363459 seconds)
    (48/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121882567 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136069217 seconds)
    (50/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.127433443 seconds)
    (51/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122565899 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129861889 seconds)
    (53/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.209963148 seconds)
    (54/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.266395916 seconds)
    (55/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090031425 seconds)
    (56/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.252679945 seconds)
    (57/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12637872 seconds)
    (58/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.087112142 seconds)
    (59/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126079349 seconds)
    (60/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.217343364 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.154794492 seconds)
    (62/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083941421 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.155062054 seconds)
    (64/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.107687027 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102594164 seconds)
    (66/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.14449135 seconds)
    (67/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.213565304 seconds)
    (68/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110907623 seconds)
    (69/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.113392111 seconds)
    (70/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100611719 seconds)
    (71/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133886082 seconds)
    (72/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10834066 seconds)
    (73/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.11741623 seconds)
    (74/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125706009 seconds)
    (75/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.12395003 seconds)
    (76/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.153806255 seconds)
    (77/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110371552 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14732345 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131073285 seconds)
    (80/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101023993 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.146701561 seconds)
    (82/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.142332699 seconds)
    (83/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183424859 seconds)
    (84/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.110531746 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11576428 seconds)
    (86/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.122426882 seconds)
    (87/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136540861 seconds)
    (88/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109901725 seconds)
    (89/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.18245551 seconds)
    (90/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.182335027 seconds)
    (91/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.201335328 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146539386 seconds)
    (93/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.129081619 seconds)
    (94/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.093277089 seconds)
    (95/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.154505446 seconds)
    (96/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.086735473 seconds)
    (97/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.127168103 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11573026 seconds)
    (99/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216770006 seconds)
    (100/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.230298632 seconds)
    (101/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109379302 seconds)
    (102/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117409776 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128814944 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.138032437 seconds)
    (105/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115980795 seconds)
    (106/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.143562919 seconds)
    (107/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129670329 seconds)
    (108/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120347564 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.168764268 seconds)
    (110/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133661392 seconds)
    (111/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.091589306 seconds)
    (112/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.118530588 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.120698698 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125331599 seconds)
    (115/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214550342 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111362429 seconds)
    (117/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.116578013 seconds)
    (118/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09300975 seconds)
    (119/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.178370467 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131649948 seconds)
    (121/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.185201362 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.14357621 seconds)
    (123/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.117815491 seconds)
    (124/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110214098 seconds)
    (125/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.135101358 seconds)
    (126/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093392249 seconds)
    (127/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.145254707 seconds)
    (128/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091867809 seconds)
    (129/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.22447428 seconds)
    (130/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.225189188 seconds)
    (131/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.15638141 seconds)
    (132/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.209787009 seconds)
    (133/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.191314873 seconds)
    (134/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09044913 seconds)
    (135/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154959884 seconds)
    (136/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.120079612 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.136805015 seconds)
    (138/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.173328525 seconds)
    (139/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085606165 seconds)
    (140/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116725972 seconds)
    (141/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178385349 seconds)
    (142/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084849054 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.126597805 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.153097352 seconds)
    (145/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.118392847 seconds)
    (146/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.096306548 seconds)
    (147/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136990372 seconds)
    (148/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091500867 seconds)
    (149/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.206708172 seconds)
    (150/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.128132859 seconds)
    (151/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.156815183 seconds)
    (152/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135506661 seconds)
    (153/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.173382844 seconds)
    (154/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101094472 seconds)
    (155/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.122802531 seconds)
    (156/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111822121 seconds)
    (157/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.183904007 seconds)
    (158/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087002387 seconds)
    (159/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.136440446 seconds)
    (160/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091581942 seconds)
    (161/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137124256 seconds)
    (162/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.114212317 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108206082 seconds)
    (164/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.167565508 seconds)
    (165/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101604244 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13037035 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.139382342 seconds)
    (168/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113588991 seconds)
    (169/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.115050084 seconds)
    (170/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086837564 seconds)
    (171/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.109203557 seconds)
    (172/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.085195576 seconds)
    (173/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.113172437 seconds)
    (174/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.092281478 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.131845254 seconds)
    (176/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.098557164 seconds)
    (177/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134257702 seconds)
    (178/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.096305795 seconds)
    (179/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.228539706 seconds)
    (180/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089786987 seconds)
    (181/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126360279 seconds)
    (182/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092564215 seconds)
    (183/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.115821556 seconds)
    (184/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132984551 seconds)
    (185/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.124449558 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132795302 seconds)
    (187/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090871696 seconds)
    (188/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227627798 seconds)
    (189/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138984463 seconds)
    (190/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114873494 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133756785 seconds)
    (192/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.132813606 seconds)
    (193/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217155614 seconds)
    (194/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111493528 seconds)
    (195/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.115106888 seconds)
    (196/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093728265 seconds)
    (197/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089440181 seconds)
    (198/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.129341704 seconds)
    (199/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.095318277 seconds)
    (200/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.12033462 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089394711 seconds)
    (202/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131187577 seconds)
    (203/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.143682628 seconds)
    (204/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.092725908 seconds)
    (205/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.143629174 seconds)
    (206/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118188038 seconds)
    (207/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.113305463 seconds)
    (208/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090658141 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.128723372 seconds)
    (210/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.1328027 seconds)
    (211/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149496918 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.134614485 seconds)
    (213/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.094485892 seconds)
    (214/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.1184138 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124640413 seconds)
    (216/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.112294899 seconds)
    (217/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.085118418 seconds)
    (218/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.109326042 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093528561 seconds)
    (220/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.129715384 seconds)
    (221/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.083937031 seconds)
    (222/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.127708527 seconds)
    (223/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.085473667 seconds)
    (224/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109359678 seconds)
  done (took 34.135026787 seconds)
done (took 35.018369943 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.510018037 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13426501 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105495105 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130512988 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.189803211 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.141474537 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122396865 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.14135398 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.143223987 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.109996715 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124653455 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118944675 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.139832894 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.198356489 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142877736 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106139482 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.134920632 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14489276 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119178089 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.148995512 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198417517 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133660066 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116195856 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127871161 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19328011 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127775045 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109619785 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.134653291 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.136619806 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.106159268 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.130736816 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096332944 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.139105552 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.14069051 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095113063 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.131512895 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097589729 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116654566 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.128183465 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108591731 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135413865 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108525835 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139561649 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129921574 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107286389 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130020469 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093077316 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13357984 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120550741 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104059957 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121108016 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.138805075 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100923933 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.120310194 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093444028 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.12060518 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.132590383 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094293618 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.137019248 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093856769 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.122285266 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118609904 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.105560167 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119198321 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.101347244 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121416108 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.126448742 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104819818 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.125757475 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097062645 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119106111 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.101200587 seconds)
done (took 10.314702757 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100085521 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18166793 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.187113284 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192007613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153856071 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139491965 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140628884 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152293298 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115514336 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148696967 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162386982 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157854262 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.207343652 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.146737548 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.124000033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139525029 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.144743642 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11960275 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209609137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.161502318 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16446265 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.136809491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.163196625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120398189 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.13206293 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164092694 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133002642 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111460635 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133088357 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142032392 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129025957 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130484275 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.136838077 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131271197 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.140197191 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.135107898 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119631669 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.133753719 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132319102 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111217906 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147480141 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.152330935 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103798614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146406922 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.136354331 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116854657 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.144239018 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142948594 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110019538 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136864019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.134243259 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.143590142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141908666 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138417251 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.140325969 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118858357 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135798533 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107528524 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129950746 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.132518003 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.099932938 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126329789 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12878719 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154079105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103414157 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134204764 seconds)
  done (took 10.113139854 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1217458 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160798242 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13642064 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13717723 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108163285 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.118662423 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09197555 seconds)
  done (took 1.805687881 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093951837 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190133952 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186212679 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.190418821 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.209931266 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1981674 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140796567 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092997574 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.159423866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13242154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.197499353 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.221518467 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.127819372 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.113141319 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.217060618 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093833318 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.192242254 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121097788 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133122773 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.192743016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111898563 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.150321188 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135926975 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095134104 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214831322 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097254106 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273820211 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119266111 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132142167 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.110542312 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133055179 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205930841 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183512108 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136399982 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12701579 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18855018 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1829625 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132601832 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.203583015 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099155315 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183475033 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132912848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.132642329 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107503047 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.133039661 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.17210515 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.140604934 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11170105 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.133133283 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191360225 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.135344934 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.187632867 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.102623314 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137380725 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.133200283 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110759314 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140103146 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.135187157 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193376714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140439258 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186162743 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185049577 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18536601 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191262286 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149668566 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188993679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.18374064 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.106932378 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.130228057 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.134822429 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.193163788 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115916251 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.145194125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.174660304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142410182 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.18999367 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.191947523 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138572471 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121173788 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.126233316 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103587445 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.122600923 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17583988 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136836705 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105736764 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1448606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141518224 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11804492 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131332555 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.157898008 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114623567 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141946051 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14791061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115549493 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150886226 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.196211191 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140277779 seconds)
  done (took 15.559283664 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097104528 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.124130964 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111195292 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128041648 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103645716 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.130176362 seconds)
  done (took 1.644805491 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.131005397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134640858 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14564454 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.110176335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192300751 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21909942 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.199072435 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132779581 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.124955818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.147573173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.192315746 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.198459653 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216104367 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111729964 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.195724381 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.139580752 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195123582 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133398825 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.146557214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107638288 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141624559 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.136712529 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10452443 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.183196907 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.139322629 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.136539927 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135606312 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.119860262 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.141337832 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.134878506 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.113515665 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.136984708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131008399 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.133796821 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197427225 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.104070642 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130724947 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141624287 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11064446 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.139282796 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.197457476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130914574 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142577364 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.141748324 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1100343 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.131393512 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146433408 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110358141 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22254865 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.115851521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.142743589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134337229 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.112111156 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.143842194 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131892777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.134072196 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118377158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.22256906 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111687147 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.132531953 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.1391786 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.115521781 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132320271 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.14317036 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138830734 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.116375438 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.131972574 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134432013 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104108838 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.13596236 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139513014 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.110086514 seconds)
  done (took 11.215858856 seconds)
done (took 41.267747019 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.133516706 seconds)
  done (took 2.084400727 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.989108343 seconds)
  done (took 1.9416713 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.397559938 seconds)
  done (took 18.385250542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.570561381 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.657067786 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0068106 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148889595 seconds)
  done (took 3.333025066 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99923261 seconds)
  done (took 1.972630105 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.329345485 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.283594595 seconds)
  done (took 1.567158313 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.874813025 seconds)
  done (took 1.838444574 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.466676339 seconds)
  done (took 3.432281651 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.387498381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.200906577 seconds)
  done (took 1.561322798 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676559363 seconds)
  done (took 1.643685159 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.283366084 seconds)
  done (took 37.252680383 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250414739 seconds)
  done (took 1.2319991 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.319866825 seconds)
  done (took 1.290765162 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.674760587 seconds)
  done (took 4.647849351 seconds)
done (took 83.145206064 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106622451 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13374454 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109033984 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131138065 seconds)
  done (took 1.446078561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117313452 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.132973685 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.13753545 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107367058 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.143580908 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.10769919 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133734938 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140302932 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.107653139 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.135764871 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131997528 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.107661183 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.136840497 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131844874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105979568 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.13561108 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.111359326 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.134739443 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1338797 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108880016 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132832516 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133009998 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.111174728 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133640948 seconds)
  done (took 3.988094342 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107928686 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125775493 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102251175 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.125801483 seconds)
  done (took 1.437362241 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116553181 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.150137052 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.147365278 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.115185801 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149614865 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147394352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102359915 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127505421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.105373848 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.140901751 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129109454 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153612616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.123961087 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133594598 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.142343773 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.102045416 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1346651 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.124527309 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141482255 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.14193833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10227614 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139593344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129020326 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119535077 seconds)
  done (took 4.097012232 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218085486 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120429334 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157562058 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185801935 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.159953812 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103282909 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161394 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.136824232 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.138586546 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109801432 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.135401927 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195536054 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.135391189 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111117876 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.1351483 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.138644438 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111660059 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135962884 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.138183725 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12026482 seconds)
  done (took 3.833436158 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108149895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124399801 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094536073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124599581 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132311676 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101893648 seconds)
  done (took 1.672759505 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09499375 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.118960428 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094442098 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118118744 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09831174 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118683134 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09213759 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118760311 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094337968 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119195926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094054972 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117663375 seconds)
  done (took 2.264780067 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.311349474 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098778626 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128772489 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122906239 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103547683 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.125225675 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140277397 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09800042 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.263004964 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12593066 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115991355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203568213 seconds)
  done (took 2.820835662 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234807009 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108785066 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293828377 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402238793 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17703054 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185173717 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294590672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183984257 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.236766999 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128501397 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243200995 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173520291 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143219512 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226051811 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128672583 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.204717167 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220116188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22368431 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163981429 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232398272 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182354275 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186143852 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201860499 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169632268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153292304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176625404 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.133304547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114803211 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220808189 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193216981 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196188225 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164420358 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15635543 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224528857 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269126394 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20050117 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.336272287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147181541 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.212409317 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.203229754 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286606234 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155554047 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219209156 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17043514 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145653195 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202874626 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172718256 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.228081589 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121727355 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15606737 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208148507 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222032396 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208160815 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153079823 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320190339 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164139869 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164354741 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195555774 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212457053 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23866903 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183932174 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.108356207 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2272848 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20482485 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201759701 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164240043 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192644048 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140160761 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19648686 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21563382 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201884093 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213188368 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207134413 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148192274 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181030479 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189198557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169843059 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197289993 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17656829 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.132552053 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138968707 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150695091 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141250364 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204045834 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10796438 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254464235 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147318516 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207136349 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224238991 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175592684 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17851088 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18239324 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186817503 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161959269 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133624933 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160340048 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17734762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146185723 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144895889 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1740971 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159419436 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.143117639 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169239185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107178221 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176023418 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.150212948 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184511117 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182908988 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.145087769 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181751338 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165912319 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177120208 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191834718 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208008568 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146556108 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118534715 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240707767 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175987588 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127445438 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220241076 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21137508 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185862435 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149947653 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191999273 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217889247 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157907858 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21169078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159012002 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145534014 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169428644 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176869886 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175041828 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143573047 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143808688 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171260886 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21572881 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.141922363 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149609809 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193013585 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141724061 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113550986 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159324358 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152247105 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.156184362 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.168689869 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129548491 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171465296 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176696486 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169451248 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175749645 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157346113 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248124224 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118772978 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176878515 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162513355 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132099003 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205955021 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204701431 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143718298 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207223303 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191261215 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240584636 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181752608 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142706375 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202369982 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115244986 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.134780349 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185658236 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179886357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179230116 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.205631498 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237355318 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190336699 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172300427 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165171917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186280052 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1926092 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176989154 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.159406525 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181162599 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188659496 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132875947 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110791452 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.143450873 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154218145 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14359344 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118331047 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23067917 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183775474 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203646279 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178443704 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155262648 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202644737 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.14168316 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18497344 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.195544042 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15252713 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21057029 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202071178 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184263009 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157335919 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19244569 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.135175821 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136738549 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.125143911 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187392258 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147930373 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148908442 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159948569 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203985172 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195290955 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165222487 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248311775 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18960168 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216115454 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.136307823 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151210043 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214360512 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146339643 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.20336925 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146013817 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179165224 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198295496 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162085985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215327621 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181122991 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185928264 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253002267 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.173718082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143881625 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137345358 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214158271 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127439433 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184045022 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161712075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149527836 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17212533 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152721838 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115763954 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230299585 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15750289 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204064675 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175154721 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196144302 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139481911 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159371587 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177556002 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160384128 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104195106 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189480545 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238763886 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161429415 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174218271 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195324748 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115468069 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329364889 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237972321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205373064 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152864951 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158499525 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17787907 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176866214 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184071758 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202738094 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160232456 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201773471 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175142572 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.157257239 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120735993 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161898936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166928159 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170469806 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151917066 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17379473 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.156451098 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208594158 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158419492 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174748249 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181535544 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162551772 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146846551 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155905603 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222637353 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174865071 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224491302 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.170732706 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188718361 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20970473 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108176662 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141200705 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.141609139 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202295852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144662335 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148578478 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227098432 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215390535 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175785087 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187459613 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153365337 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.13908205 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176625316 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164681405 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21681593 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156567595 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153238747 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213343591 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.166842075 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144295868 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181238077 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298470087 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160532568 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194903728 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105650788 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316528713 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112586138 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144731674 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177411639 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191572999 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165931002 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.195729632 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183680897 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132068034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178022606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152987339 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233731818 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22991848 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191721715 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19722436 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.15834708 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176013049 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181076844 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19650039 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156808356 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.163043241 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178683648 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203478101 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.21094776 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149017141 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179851126 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180523789 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178163276 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222684723 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119499143 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20659747 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144812469 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186578074 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155541348 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139904354 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174739176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199710842 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14775907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196646153 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174655625 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143203377 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113025836 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169698577 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175656936 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16015492 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141997648 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201152211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139614263 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151564501 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201845734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145634609 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174082362 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161235775 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146953128 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129920011 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158800451 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149865936 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.186002894 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20481347 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.14674732 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197996692 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192820547 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184553461 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17726762 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159607749 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679675629 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.114254943 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232316824 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134185646 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241421087 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163923818 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18493191 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179677539 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137489259 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218041595 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164110272 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.212213522 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215306424 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179273677 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11649698 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159669357 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160671511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147308621 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167665473 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179479192 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125877161 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154167536 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178420033 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162052367 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.162715881 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151871613 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206013354 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133553385 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2373116 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204234622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153574762 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185696202 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198491603 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143366454 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184074299 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192683842 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157716281 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17068746 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.119029342 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151924854 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198202135 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.135403568 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181047338 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17702422 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179597568 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179413386 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.124878818 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177204638 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157631057 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178496022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142366494 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177824002 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178080689 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147331959 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115853919 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172864378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179601236 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.174950141 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143803159 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161342738 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226124179 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.107926683 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147190772 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300585758 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17728878 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214771652 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170668187 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151181006 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158790897 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175332242 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17385002 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177881834 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115530398 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146701868 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148856876 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198935961 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174370309 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172864602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199363389 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179295409 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21078654 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160453346 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285955433 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127677599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17198944 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145932353 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.145392629 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12705577 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149161538 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161666082 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207473789 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198092544 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.169139285 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.16075158 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143813441 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107354463 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146518192 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179115041 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172947069 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175516787 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162126881 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103911825 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162032838 seconds)
  done (took 86.325245026 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165974316 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.218801851 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.173002028 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222297686 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190231341 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.319285838 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235024022 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254956282 seconds)
  done (took 2.84666291 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133893117 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.119892312 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153101446 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132769657 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134983733 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44888309 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.145233281 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.106752778 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196599385 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.172434348 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.10388545 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.680653652 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131993923 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133333244 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124788408 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13217166 seconds)
  done (took 4.115709806 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.518408914 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552481186 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.122384064 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.262352047 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244563527 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.193172512 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.784420178 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.206852307 seconds)
  done (took 12.948399009 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137946424 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152211798 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.354095448 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.222949972 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171617109 seconds)
  done (took 2.114309025 seconds)
done (took 130.87896101 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108907318 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155675201 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110743045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156776664 seconds)
  done (took 1.593338239 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.157535141 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.121806606 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095902996 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121305938 seconds)
  done (took 1.570629138 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.542940354 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091439191 seconds)
  done (took 1.738428036 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135451504 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157141787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156125718 seconds)
  done (took 1.532496206 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116920968 seconds)
  done (took 1.191154754 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.109323847 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.140709528 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.193306284 seconds)
  done (took 1.523404503 seconds)
done (took 10.224605339 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131501561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436321989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422700972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116318679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732197475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415622643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046315581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165384966 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148369652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125875972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14652278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678055138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033731376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373101942 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989565844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.380756085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682956723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130880041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132613777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100085578 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021109321 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097116909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128289829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127796968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678931233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.431623975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098383225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387760491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12397186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104494408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416606429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097999455 seconds)
  done (took 17.17135239 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144921129 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194063335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137183106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099396778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1327835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127703583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109969064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142445599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194323809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12650457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119747381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127084586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103849238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128098875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150530065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09750607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129319513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100643158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135443876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.128153731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120502787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126550447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09998047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129692206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126438986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112661615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128045072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.139246472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099781863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131444973 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103432506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128266026 seconds)
  done (took 5.159915915 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150318872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202315789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137433909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16229226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182860467 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.10049416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220222752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169955615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195025149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128050373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148607538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099319724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168332496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098848636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152093289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126581875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10247685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130309371 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133432168 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102090551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148396116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097679749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129894834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128416547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099804405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142580586 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099323268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142727533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126591458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105299267 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134416065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099133577 seconds)
  done (took 5.445806786 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112082167 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.142595459 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120844792 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151900795 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.136357874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.111490345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140129743 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.106098089 seconds)
  done (took 2.108052679 seconds)
done (took 30.965076533 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125204357 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146713858 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.117844569 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.14177112 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.204288239 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101502079 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145117375 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.131171155 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.113527499 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.150256436 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097657251 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.134894007 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.118807815 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.13770041 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185993975 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.141067138 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.191517737 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186792149 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.105323533 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141850676 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103946509 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.192825131 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140359412 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10372341 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197659179 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13415131 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183067626 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.139008124 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109021858 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.130259499 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186704051 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.11108964 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135438542 seconds)
  done (took 5.761735818 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204964358 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.215060331 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.106250968 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.135932109 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.216300053 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104989913 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232489704 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.105349046 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.134694877 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103942373 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.132182218 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.205404893 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.213168254 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.225990723 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244933568 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.211523851 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.202334445 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.211742844 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.198088522 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.216390679 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.203648778 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.133945618 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.214095758 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.21808043 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102951884 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.134580529 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.239916621 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.210475367 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.240173302 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200291265 seconds)
  done (took 6.609540522 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113962139 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146275751 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125147138 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202963637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174430421 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.144410499 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11401166 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.154106922 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.156326934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.100764024 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139399665 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.139046535 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148644348 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.140801425 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106121931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149834878 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.154714039 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.10326864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.136195737 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120579201 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.149448217 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147105698 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117043194 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139781604 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100427578 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143125779 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.134851785 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112910416 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.137276851 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109280436 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134298416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.134134841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103889177 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.140113341 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.104823909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143373364 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.156977107 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109820541 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.14309099 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167632528 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10890077 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135913515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.150380017 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.1479845 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132189542 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141070506 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114161244 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140330538 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099954945 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151866193 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142915476 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.102805868 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.15330413 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09902222 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130043776 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138248447 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102604665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132966908 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109499646 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.134421514 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155577301 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110246208 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136899542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102574672 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.135222662 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09979654 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130523383 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.136142248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.126005774 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135822891 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161994819 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101985524 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.141727099 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108368374 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136723318 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138226881 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101520778 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135950605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10848394 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.137128882 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109453756 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.133821301 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134793062 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120412059 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154104847 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.144294898 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.112339947 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.142364424 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103490577 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132232999 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144104925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.103228598 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.135255902 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110414993 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132752197 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132743197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.112563403 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.140683382 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099533008 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149929326 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.136078312 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101056623 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.148787343 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102650007 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135834805 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110933695 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144645454 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130700332 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.111031773 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.142245891 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099594166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137637995 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.134809029 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101600958 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148645651 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.111458864 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.135779418 seconds)
  done (took 16.299334212 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.307861156 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.316953091 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211883894 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.408143073 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125772763 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.23107693 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.282532323 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.231770321 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132221552 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.174894466 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192376399 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.271441963 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100753815 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.166350238 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.31369491 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.382667521 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.164837928 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176829365 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175276376 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127274752 seconds)
  done (took 5.603408598 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126180319 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174230201 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163048063 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166091044 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107514054 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146310697 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128852675 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.128341135 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.141298528 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136624539 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.101130675 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145616563 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.109562336 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141146309 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.150531697 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150246284 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135989212 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.137848329 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.125123292 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.139306109 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140847172 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160981198 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.114116957 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159759648 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.147073298 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116752984 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.130665006 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.137564952 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.105152237 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.135826104 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107118566 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.153239626 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.138159983 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108438653 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141375939 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.11268371 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.134416564 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131628128 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103763014 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.13441168 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.120198843 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.141292365 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105262534 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127890931 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.115478302 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134459543 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.14269248 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.1132343 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.143840608 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11726945 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.143097822 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.144227629 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108905947 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.152368976 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102958018 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.147553004 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144868498 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.143060284 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109102308 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.129949677 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098852539 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135339921 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.106406091 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.145077686 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13993801 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126991843 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.148405225 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133252694 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108531957 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13516568 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104762635 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.150933731 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159682677 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.135616937 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105281685 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154093677 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.105761159 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123262799 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.11170108 seconds)
  done (took 11.510850151 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132974333 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137678788 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122273862 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170551835 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.152482871 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108377183 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137117588 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121876716 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.144526221 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.145644789 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113706173 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145116681 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157771966 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115150262 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13748649 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146043042 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.113059425 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.177174101 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151488209 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137992041 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.149186064 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.135837119 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.115778882 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.14595266 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.167015199 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.11431507 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166862656 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.141546221 seconds)
  done (took 5.035985898 seconds)
done (took 51.909368489 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.219566612 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4205481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.192177696 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.202776605 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.212028187 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.233624797 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194757204 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.383346863 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.927584567 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.191337065 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.190753354 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.188529849 seconds)
done (took 27.670162441 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.481533985 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.79949249 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504646954 seconds)
  done (took 4.429501592 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184716399 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.186013173 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.431218833 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.186556201 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.203400479 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.203603784 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.187342686 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199426912 seconds)
  done (took 15.708769876 seconds)
done (took 25.915640554 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.245635103 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.532232251 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.682137208 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.215660477 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.187575511 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.196039248 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.183120214 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.251425993 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.200291413 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.182141139 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.186736125 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.704316964 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.184199911 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.675349332 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.189463373 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.20301056 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.204342526 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.51362635 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.204654222 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.242242953 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.19820163 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.179501303 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.205083382 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221617838 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.196980781 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.188117937 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.206071002 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.180046343 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482201188 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.198167999 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.190317799 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.205002491 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.21693608 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.197687028 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297218934 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.21906097 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.476420062 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.190060708 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.181512953 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.197231188 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.430787663 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.596213902 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.188745302 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.184523608 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.191010958 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.284429582 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.184997851 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.920059228 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.196900085 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.189673598 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.237375002 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.589265784 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.201590359 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.193414951 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.206222427 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.446569302 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.194370237 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.25091017 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.2271635 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.203056032 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.193156891 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.18980479 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.209309389 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.193051739 seconds)
  done (took 143.82909926 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.189526914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.195003937 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.193516073 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.21158991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.197346299 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.193667719 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.190259291 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.189256097 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.194348618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.194889935 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.194143263 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.196233027 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.194922511 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.160658061 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.194634971 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.212949877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.197370476 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.19154936 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213876004 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.193198308 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.194167423 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.194154554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.208759133 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.19230393 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.197568313 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.306710368 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.24323821 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.199594618 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.199799948 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.191058654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.194483271 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.1995265 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.816191622 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053037195 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.202803601 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.218054119 seconds)
  done (took 79.826610068 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.190799 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192693535 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192520228 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.223919412 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192588566 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.774830888 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78074279 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.978240598 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.40680908 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.19692268 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.627074521 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525621603 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196157633 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287369903 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206807977 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197639836 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.208678225 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238766602 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193974285 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194176488 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777142409 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207051001 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.448518701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391279157 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210630143 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226729771 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596102326 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193507875 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226775658 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529409693 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245026812 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195118776 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.600601538 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.454297657 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311497285 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196463123 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225603099 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195035896 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.478951827 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194979448 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195431849 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196813011 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893588875 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198004371 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779779433 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19927048 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205051189 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198438395 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193775663 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.446522313 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.993185416 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215506733 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196076581 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19784331 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194280771 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195247143 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228681098 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.235001987 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.310927159 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212389776 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199342176 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22983048 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194617411 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194910885 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.342026093 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211709263 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.270707014 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266962917 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.306252871 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.773268795 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197145363 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293427631 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314285147 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.195403736 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193822625 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194984367 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197737483 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194398507 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.30508779 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194787027 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.618891901 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.370817456 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221554414 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.58436791 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.294846353 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200871166 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.592508344 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19760011 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.194296166 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994278077 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293463195 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193081868 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194526629 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194515631 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62486407 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765337257 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.471067921 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201885122 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.451243717 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196913199 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.619036698 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.746865031 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900163534 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.196344138 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30663386 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.367235812 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208413222 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194843663 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194601795 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.585656905 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197709401 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.24949762 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197425248 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59072966 seconds)
  done (took 365.203985603 seconds)
done (took 589.971530635 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.935594697 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.882930789 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.026187422 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.917520811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.878291287 seconds)
  done (took 10.755928059 seconds)
done (took 11.871162762 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384944107 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386778178 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254252484 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38426514 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22949936 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402282072 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365392654 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217063281 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.29875596 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276484266 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299316228 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247626351 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23085212 seconds)
  done (took 18.094414394 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473497042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20232455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261702248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444059911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241003069 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474491972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.513583814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.201631171 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342251925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239755595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210582464 seconds)
  done (took 17.723964829 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.470302066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201576618 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281046424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482791452 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240604718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468037349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.504756905 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.202016844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345450434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211963187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210583547 seconds)
  done (took 17.73610943 seconds)
done (took 54.670586941 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239269213 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.363513553 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.224541611 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213227308 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207017571 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207819917 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214601148 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207435941 seconds)
  done (took 10.996615589 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20611426 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206011222 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205810381 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205831218 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204463889 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211537633 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204706029 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.205822076 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204630377 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204909044 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.204487881 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.205923297 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206292157 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.205378746 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207737109 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205952643 seconds)
  done (took 20.414663319 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.208266433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206582142 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204689526 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205955724 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205249488 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208126774 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207351122 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206719814 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206029087 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205490102 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207317033 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206604271 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205716018 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206464727 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205530457 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206832296 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207443678 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205940438 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211151976 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.207473304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207123131 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206896284 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205301351 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.206838682 seconds)
  done (took 30.081809758 seconds)
done (took 62.61083284 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.195192478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.209664533 seconds)
  done (took 5.52500597 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.268047997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.266895204 seconds)
  done (took 3.659193829 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208449091 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206582208 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206805069 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206893449 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206500673 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.20603564 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207363616 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205390231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207048096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.205608064 seconds)
  done (took 13.185869963 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207975783 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208100957 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208084635 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206878695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20693151 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206153305 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206985328 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207906046 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208468011 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.207283961 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208304076 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.208789497 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207889137 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208550763 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208105783 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208607259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208094038 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209450083 seconds)
  done (took 22.863462683 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22201605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.229802481 seconds)
  done (took 3.572065904 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350379079 seconds)
    (2/7) benchmarking "second"...
    done (took 1.250086896 seconds)
    (3/7) benchmarking "month"...
    done (took 1.325935905 seconds)
    (4/7) benchmarking "year"...
    done (took 1.315340173 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.250320212 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.230679445 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.253159241 seconds)
  done (took 10.100291215 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209432422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400160286 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508997313 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.746129008 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210670589 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.257428461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.067858317 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.258377271 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.245169698 seconds)
  done (took 14.026356341 seconds)
done (took 74.050313284 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.198801317 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.257023271 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.230300936 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.218812708 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.549325298 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.215166867 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.203706897 seconds)
done (took 15.995798957 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.200924853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.195826451 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.214584353 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.208213937 seconds)
  done (took 9.943721947 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204430421 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560007758 seconds)
  done (took 4.88988127 seconds)
done (took 15.958251641 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211079356 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209599243 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210067078 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.210957384 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211119634 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211233305 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210422917 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211065329 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211000614 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210168223 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.210761526 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212052858 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212130585 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211763891 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211949584 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211751661 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.210805 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210852285 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21166351 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210921228 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211842816 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212505909 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212263493 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211568078 seconds)
  done (took 30.192796049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.214056557 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213258995 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212694879 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212809356 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212537183 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213538829 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21361516 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213691371 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214073576 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212389974 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212535782 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213478362 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212392053 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211321608 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212101358 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215245467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214568851 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214836589 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212283914 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213997346 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.212476637 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214422193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212946214 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212095634 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.213852585 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21409034 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21446126 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2136746 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21469157 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215380446 seconds)
  done (took 37.528279206 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219948779 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221907041 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215780734 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214550823 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214581061 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214757476 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214922882 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214912607 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21586665 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214782238 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215245187 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21697387 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21511205 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217547357 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216030935 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215901899 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214611743 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215585986 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.212823264 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216953472 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216699811 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216015233 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216868276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215220479 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218822906 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215798391 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21751347 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215606492 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215230545 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216171661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215954456 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215662421 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215693844 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215483464 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217138668 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217286065 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221729376 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.222394999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217924652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.2155684 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215623543 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216660287 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216107009 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217978033 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218651122 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217089426 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216370429 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21652898 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216277408 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217595261 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218031501 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219305061 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217103746 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.218644581 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219112708 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217534313 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217785028 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218770362 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217925489 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.218442175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218285241 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218829289 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218947109 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218336691 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219372376 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218338838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218137833 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218509845 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217699649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219215146 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220708986 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218805363 seconds)
  done (took 88.764930853 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218998842 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219246146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218439748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218571624 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218873133 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220173343 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218659746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218778402 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219373084 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220602986 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219449603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220147129 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218879051 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219762232 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219709421 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219988726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219454264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220614545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219931643 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220224842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220627855 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220785377 seconds)
  done (took 27.961584673 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220450175 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220977404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220454139 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221115123 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221303576 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221419637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219486255 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22205003 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220797397 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22008431 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221440483 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220310558 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223525778 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220518551 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221227253 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224154164 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221077236 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22376289 seconds)
  done (took 23.116859364 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.222099734 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21955035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220431327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221795921 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.221210689 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221055635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221773299 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222887015 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221097522 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222606032 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.223504084 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222596376 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222392329 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220795784 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220249754 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222844656 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221507313 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221198321 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223243589 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22312187 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220998183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222703609 seconds)
  done (took 28.012226137 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222874154 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221829003 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222262115 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223974747 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22199773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221657577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223589913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.22238299 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223442071 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222916214 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223262097 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224016858 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22571043 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223138883 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222909065 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22219496 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22365278 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22388591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222574723 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.223728016 seconds)
  done (took 25.596722357 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225343904 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223573999 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224387049 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223942575 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224806198 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224839344 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225985657 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22453469 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223851528 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225069869 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224027426 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225235845 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224122195 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224868339 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226295525 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226043035 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224473596 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22560806 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226278015 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227277525 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225162226 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225934556 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225043671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228089501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22821677 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22722701 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227458662 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22627492 seconds)
  done (took 35.450008987 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227047213 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225974261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.226282048 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225693496 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226651786 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225425628 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228801601 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.226081001 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227085548 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227408837 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226308256 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.227112439 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227124007 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226702883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226627231 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22605498 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228222825 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22732159 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22691402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227834837 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228485807 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228160751 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226479808 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227426486 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227760593 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228107972 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225935208 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228300122 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228692416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228406716 seconds)
  done (took 37.952247472 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.274554124 seconds)
    (2/2) benchmarking "in"...
    done (took 1.270660937 seconds)
  done (took 3.683720979 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228810652 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227544888 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227331839 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228402421 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229322247 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227514967 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229273759 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228365486 seconds)
  done (took 10.965676765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224994488 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.228075766 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.2289045 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.228971598 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.229301576 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225344376 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233178179 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.248588822 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.226856202 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227296858 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231541916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233129663 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22739379 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226739119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.226565278 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227316556 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.230815512 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230679917 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230902506 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230283096 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22960885 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229252142 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229048294 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232104795 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227824839 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238125011 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250048058 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232771999 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227211598 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230421446 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228158129 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231115291 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231777736 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23141971 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231964605 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.231487466 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236453433 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246350088 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234976333 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250508111 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232755559 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.230691449 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228521297 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228198329 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229727509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230181013 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231536246 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230395266 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.228067133 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231912974 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.239112607 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228836334 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.231030253 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230036939 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22958537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235736185 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250620967 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231475163 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237410478 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238862264 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257745873 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252647935 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229855306 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231424865 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238498602 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252497686 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235277572 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253038559 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234482524 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232974396 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235346512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26078037 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256254901 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.233498837 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232722057 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233587467 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230807568 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234014069 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237737304 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25093716 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.234004032 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234344026 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239848138 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254047094 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23213381 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234666288 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.233970014 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.235396154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.23208167 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242215489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.253003339 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235148706 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.231565687 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230678216 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231257702 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234992202 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229919243 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231863167 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236657111 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.23695179 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234732911 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235390298 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24058581 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234799711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234919209 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.237311242 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254393821 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231064293 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237622808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.237442969 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23498083 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.233148125 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238142696 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.235835767 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235026971 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239803016 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.236558118 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234011865 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235976494 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237799921 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241459919 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259655675 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238051271 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236680779 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238294493 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.248100486 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236864208 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236831251 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23836233 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.237574054 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.23679542 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23438223 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.238027191 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.233699433 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238781664 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234386907 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237361697 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237837985 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.237032543 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234943612 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235366985 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.235497713 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.235398729 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.235102193 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238356412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.235776603 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240422341 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254216223 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.235884785 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.235216691 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.239974578 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241036726 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234746249 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23626736 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235359167 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239274636 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238079022 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239368788 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238821722 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.240000466 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240145061 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.235865465 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239066135 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.240196677 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238293403 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234096627 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241483281 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23971285 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.238942056 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234913358 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240009625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237066562 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.23924824 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24761015 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.242731326 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239345762 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238038706 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239641157 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24068721 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24179745 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240458071 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244956923 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239512754 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244075318 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258146115 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240212901 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244643103 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237895575 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235019405 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2398087 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240514996 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.250447851 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248855043 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263307143 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238682672 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.246887954 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237689744 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245685011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.241164359 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241620897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241550201 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241630123 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237820893 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241218867 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.238362516 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241102125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236306989 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242274258 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.244204373 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241554967 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242297199 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238211506 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239100015 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243332029 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242078018 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242628304 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239090783 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241856325 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237590183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239791905 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243699205 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24209183 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.245579395 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244195233 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240361896 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240925744 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240988321 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24002355 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.244057736 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24214081 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.239666272 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246198447 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.260346584 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239507421 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247117204 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260253057 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240059515 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.242549342 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244149462 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24415823 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243832253 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252799927 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.245665431 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243293582 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243883428 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241332951 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245102994 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247006027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265567998 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240999968 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244822175 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242653887 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24538308 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240883312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24154236 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241783816 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243242264 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244419263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245479244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24242905 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245845995 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243757628 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244637817 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245349082 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252436252 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24714152 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241352796 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243461762 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.24312224 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250677477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241368073 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245044721 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242338657 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253973022 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.269230017 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24884202 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.262452802 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246794042 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249451441 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.263668479 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246562068 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243881736 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243738556 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242985387 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24325696 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.247445801 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243052227 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248255789 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245100414 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244432353 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252934306 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247806238 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.242889069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247357191 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.248084109 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.24899605 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242825432 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248163558 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246212846 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244563053 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.24315419 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244449732 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747230419 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265550394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244806898 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244189538 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244644194 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243997578 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245183791 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24691499 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246929037 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.255799294 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247890743 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252236145 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246252851 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25491894 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.248149368 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24907438 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256641235 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.249412334 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.241856935 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24647708 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250046052 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251619749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270081014 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.246787219 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251897702 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249564828 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249800742 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250346774 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250267851 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249889073 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.248912896 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253991121 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.265517692 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.250791461 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248475291 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.249252806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.248405893 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.249671797 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244934307 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250263043 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250384398 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.248098279 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246481979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.248202734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251889678 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251084518 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251135446 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25212632 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25099734 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254394589 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269597163 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255463925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252421311 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254194314 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271981561 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253797668 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272900229 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.249223364 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251062736 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251562555 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.249691887 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.247448482 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250157707 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251180517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250449025 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.258155338 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252882894 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251327713 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.248377313 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252201347 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248578097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259959959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276276003 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251811666 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258403254 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253035446 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250346984 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25705278 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251415871 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24955492 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251577373 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258696154 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260351298 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249068589 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.252061278 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248432885 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252031525 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253325031 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.252972482 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252338931 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254371923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249043865 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254305587 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251821096 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.252840826 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250655099 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250295432 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.251731723 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.2597129 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272343989 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250357015 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254976877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.256411009 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250073645 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25172177 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253651387 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251582941 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253632386 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252897081 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257729389 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257486193 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253835185 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.250093653 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255213534 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.250964348 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252131309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255707518 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25450421 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253926027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.252099317 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.254754367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252204322 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250851647 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258045528 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252733411 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255753687 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254091213 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.25971741 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252612866 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256839417 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.258064668 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254518165 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252201057 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252423414 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258104318 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274939073 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261876449 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261284183 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.260821738 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.250764544 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255394098 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.261653868 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.251995968 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253710307 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.256549934 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.253399783 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252365067 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255514379 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256731672 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.259557908 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.271960338 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251639224 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262571995 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.273565014 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25715253 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253537303 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257341465 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.253254676 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.257377081 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257330924 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253716606 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261496755 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275282041 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257107008 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256254145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.253482002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.255031473 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260730409 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258370187 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255935921 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258644873 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254690724 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25781525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257871151 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.258981143 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254404265 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256040543 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256913395 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.26226028 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.260486854 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256741667 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255510757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25587905 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259968447 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259211159 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.258845826 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258771427 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2552102 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259243712 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255895613 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.259210378 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254864706 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256279756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263454914 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260718625 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258231653 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266381499 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.267948421 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.25996025 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256878881 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.256361523 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258583622 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261454776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260899739 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257343095 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257908208 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262142662 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260145303 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261124401 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259478759 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273671759 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.280744561 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259133128 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257494933 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260458153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262325358 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261174049 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262088966 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.25992438 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.261517937 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269149035 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261084186 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265569562 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27848743 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258440021 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.266588632 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260920421 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264465574 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261635711 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262554228 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.261001801 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263020005 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273791807 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263981082 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267013267 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286695328 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279566493 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.259250113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261403686 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257820056 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262525893 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260740908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262680373 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264215834 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263917703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263996751 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258715277 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263519778 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260935151 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.26441209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.262758859 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259559861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260954806 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.264644833 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263794173 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265752781 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262711212 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263646425 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264112435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259710798 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272461586 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.287886532 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264229832 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.264712037 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264224203 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.263291469 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.26370233 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270373924 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272031801 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.265546834 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.265620242 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260906081 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264671517 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.266287616 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261259795 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.260413061 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261949149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.267719776 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.274276961 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291724298 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.266405862 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262195393 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266753983 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267157487 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26336661 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26648514 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263382687 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262698205 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.263128915 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26775563 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266356624 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266724875 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264546524 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.27346349 seconds)
  done (took 745.922123974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265831507 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264268053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266580969 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266914812 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26544959 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266582614 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266633148 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266226058 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267142359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267449281 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268098479 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266891132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26712839 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267618918 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2685902 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266554322 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266727751 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266915222 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268887607 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266410411 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267103953 seconds)
  done (took 27.775833183 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.267754373 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26737432 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266951139 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.267122631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266862724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267919165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268921945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26795604 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266654321 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268946075 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268366682 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267978818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.268852823 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.269695089 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269646222 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269672518 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26976982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270062536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269690449 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268595396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269848135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270275611 seconds)
  done (took 29.083306307 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269133351 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.268932949 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.264877346 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.27112844 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.26897364 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.269336162 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269906229 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.268121688 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267734965 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.265588717 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.265993177 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.266812015 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.271779416 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.277728788 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.266582632 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.270149259 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27056838 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2708356 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.270763428 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.269456567 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272220486 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.290940162 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.271597208 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.266381885 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.271057342 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.270175088 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.271544077 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271348865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.268870208 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273805897 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.271771242 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.266894605 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269149305 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.267133019 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.270288573 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.276596128 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269994109 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.271697825 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.271976199 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.27651118 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.29403401 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.271330938 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27361759 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.292636801 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.272310611 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.270238602 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.278527162 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.271269941 seconds)
  done (took 62.225858228 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.864757028 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.881180999 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.886925797 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879219804 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.876982388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.878753299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.880515899 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.882597725 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.88209803 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.881309915 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.880492286 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.890259438 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.885427182 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.879364815 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.883269374 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881109818 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881242423 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.888025268 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.886060574 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889943106 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.890738124 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.878256886 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.877227504 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.885887682 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884806002 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884419983 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.884242605 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.878509615 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.883270575 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.882759496 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.881079225 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88291787 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.888429534 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.88481199 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.891098508 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.883984219 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.891357399 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.889315774 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.888877869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.895618123 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.884676009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.889953718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.889198874 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.890850615 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.891492945 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.890777411 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.891509795 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.888313871 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.891646075 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.89026916 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.886828194 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.888232943 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.885276702 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.888716563 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88548642 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.889051076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.887232398 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.898380716 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.883793776 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.893250881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.889615303 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.893015323 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.888856364 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.885443863 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.886733248 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.888014251 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.889053758 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883703523 seconds)
  done (took 129.416990015 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275689891 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.274412838 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276648017 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277383137 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27613632 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275049177 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275917476 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276906311 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.276950403 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275562266 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276756132 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277650858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277603459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278064935 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277005402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278064746 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276553885 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277668138 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277129997 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278011891 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.278516307 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277653164 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278385971 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27924299 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278534243 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279537881 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279084201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277474849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278438657 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278399385 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280043311 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280332034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276996502 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27859262 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.279780178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279590591 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277814679 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2801288 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278004546 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.280512046 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278956966 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.280178632 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279519528 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279306928 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279680225 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279722857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280024455 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.279900005 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280322629 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280214899 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280630474 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279773813 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280334927 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281180348 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279796812 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280262552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280078687 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280312514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281156913 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281238147 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279855215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281053503 seconds)
  done (took 80.46148116 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280744634 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282083785 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.282008931 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.281573328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279996974 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280760265 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280626932 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28114329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282222839 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.281244899 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282594974 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282542792 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282595972 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281789018 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28179082 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282826137 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28195909 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282811205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281689407 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282618157 seconds)
  done (took 26.821948666 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.281002335 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282854374 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281481309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282185481 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.282984953 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282648367 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281892468 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282676427 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281526664 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282446155 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281011693 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283387006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283308313 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282379425 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283402966 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.283308671 seconds)
  done (took 21.706638917 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282296325 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283508035 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282542444 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.283211167 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.282035986 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.282765702 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.284600442 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.28348163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28312863 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.283656397 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284316645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.284452326 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283911936 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284146237 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.284679146 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284647968 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.284838324 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285821941 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285122902 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284702947 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285879807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.283876221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285257777 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2851106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.285050651 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290166211 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285211769 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.285650859 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.285107944 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28611474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.285909941 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284780044 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284507498 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285586567 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.284277235 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.285556807 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284641969 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284647913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.285482026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286073569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284816991 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285617638 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.285016254 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286015708 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285515539 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285396155 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285876212 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285656651 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285252465 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.286633212 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287141462 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.285710911 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285543346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.28713655 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.28640619 seconds)
  done (took 71.864437759 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287409082 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28672984 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286161578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286834268 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287091693 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285943687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284903751 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28780179 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286376016 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28599017 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284670235 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286274001 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286431954 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287549697 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288118775 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287559902 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287522429 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286963195 seconds)
  done (took 24.353176506 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.288272803 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288383218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28808338 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287350676 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287357548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288291702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288005672 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289035109 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286879483 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287545685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288352593 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.288761802 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286731909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28795403 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289144477 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289270348 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288269631 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288972606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289044744 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289180963 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287891603 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288880357 seconds)
  done (took 29.533575383 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.283951628 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.283054072 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.283236273 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.298536717 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30457029 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.284157307 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.284115379 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.284750691 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.306464239 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.358783854 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.352141464 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.307114924 seconds)
  done (took 16.824289331 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289346499 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290701179 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289144578 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290446045 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291003316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289789244 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290125409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28956234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290528957 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291555235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289785 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289750821 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289800594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289609084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289289614 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290940647 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289557605 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29118058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291155677 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290484546 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291003856 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290338885 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290707639 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290321404 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291024543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291909018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290515837 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289969613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292045365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291134659 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290301267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290522737 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292002072 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290353876 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289651912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290758754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29070262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290946872 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291359463 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293676969 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289981019 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291529348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291979368 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290971975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29181361 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292949488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292175465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291951029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293275428 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293692568 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291448262 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291536854 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292399483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293465322 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292432927 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292778381 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2933618 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293723003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293263051 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29436007 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296380814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297144711 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292239203 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293924425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293615464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293764642 seconds)
  done (took 86.43678322 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293167241 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292402054 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294324292 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293880658 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293153763 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295825756 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294058777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294337373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293774079 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294700145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294178513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294474578 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294957628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294672509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29441081 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295526124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294034274 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293518202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2951543 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294142388 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294780449 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296432463 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294515833 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293718156 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296044516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295062667 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295285949 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294922448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295337052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295531708 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295422561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294414288 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296067777 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295523274 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295793968 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295304913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296247693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296524845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296228818 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295776149 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296337351 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295694675 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297170252 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297669993 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29760919 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295794396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295518668 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296565864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296593893 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29767146 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297289306 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295938181 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296684824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297242084 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298628466 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297388047 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295982627 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295594059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298196213 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297346698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298631244 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298939178 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297493752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298108024 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297914074 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297538451 seconds)
  done (took 86.719818349 seconds)
done (took 1789.495689234 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.457711744 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.412672567 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293060153 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.306290512 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291975209 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.308431293 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306742991 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.292912275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.292360235 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.292867498 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294086249 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.480956306 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.349947777 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.294178554 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.294462649 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389287928 seconds)
  done (took 26.559759118 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.321648974 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.300648985 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.41530253 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.318722742 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.323496388 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.492291003 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357162104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.298498604 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.47775153 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.319352107 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.299586098 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.321506551 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.297949788 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.295398212 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.316338177 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493336993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.560047599 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.304364045 seconds)
  done (took 28.71461449 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.769902905 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.309273232 seconds)
  done (took 5.2819373 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.318122802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.298168905 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299676544 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298595709 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.294952458 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.291558376 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.296458613 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.299666139 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.28960814 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.447455882 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303259005 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312638114 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318104811 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.299402025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30193066 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344560413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.451620274 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.303188602 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301248728 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305770079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.299134593 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388702226 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344917416 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303611873 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428040564 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.299753295 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.301393679 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308591242 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.426212589 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.305532109 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.299871246 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.300368972 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.300812837 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.307555221 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.798168222 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313460848 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.309076207 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.326043741 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303248144 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.46223864 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.300937523 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.3075172 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.293120408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.79028985 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438952556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.427125292 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.317481219 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.301817288 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.303336152 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.367418365 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.302205291 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.302654787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.362357444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.129307706 seconds)
  done (took 83.666584519 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.298884972 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.294748544 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474486574 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.320608553 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306736864 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.29507098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.295834645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.592902936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.318278437 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296397939 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.58910255 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877174397 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315076643 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.353119954 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.160373529 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.368542606 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296469673 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310952802 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.297590033 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.300820315 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85710971 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307699773 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.295517613 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.467386455 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.335090147 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824195265 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295592451 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.313355737 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.315514961 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.294657551 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.836758671 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.322164218 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365262382 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.298440322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574689975 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687143567 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649151633 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.298125394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.32614303 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.301315997 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.306792747 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809076912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66698161 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.298167811 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297267362 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818659073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.297940643 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.303631648 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.304010546 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54724545 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.297607473 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.298210697 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314665996 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315126092 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.296205347 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.4074363 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.379784861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826725004 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297718086 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.297971591 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.318627929 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.29842097 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.301957889 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299313577 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.318920647 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.671923211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.451599223 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.304405615 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67085539 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832083857 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315320989 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913986394 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.315275161 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.317045549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.512905493 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297982141 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316472586 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837135675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.349828943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298808742 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652804551 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.300415662 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.597399434 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316314161 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301324675 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87130831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.314672215 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.31752975 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.301363382 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30058013 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.319542159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318712095 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.587775414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.349400214 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.301607937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.30120822 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.299520232 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301705563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301637981 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.306151244 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898686963 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.321348837 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.300741781 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302993581 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299939572 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304231209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.301735814 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.303941797 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570866339 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316008786 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.301555729 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.300926216 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.30054796 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.306740831 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.471030748 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.306314361 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.62335574 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.302339889 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310605984 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.299572474 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301887471 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303187623 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302334323 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.307833034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.21890176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.566500828 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322154609 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319798204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303970537 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328022938 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.305245289 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303029764 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.365036661 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.306621316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079968989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329522234 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.337921639 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.301045723 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.304240247 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303794011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.305316154 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304305916 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598836311 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.584142115 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.450039405 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.311615997 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315461888 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071782895 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.335684239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484898575 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325270709 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304173765 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559991407 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.531299045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.305660635 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.302821508 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.306339935 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564025769 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.303886891 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630983886 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869080114 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.323942909 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307863642 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.088081532 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002404241 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.304950604 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.304411461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.593189499 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.321941513 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.304358892 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.305608223 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.305303382 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323971808 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.325584047 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.310022853 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.304662644 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.304410399 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35195426 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498921431 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325050397 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315896612 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827541466 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325898459 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305557034 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.307282437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307750709 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.304980464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.378554061 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.306337174 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.33797614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.305903644 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.308801013 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843938655 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306581226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.307925001 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500442816 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.015398202 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.327247962 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.307630871 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.325884772 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.228133853 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853695205 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.348453329 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.627583467 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.310323855 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.345370823 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306902718 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328711154 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856542452 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31014218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327625688 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.985267242 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.325408502 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.834284861 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.308027706 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.310920814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934428721 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.326105579 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.314219027 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324168607 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31251666 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606616376 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.309376622 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.336443407 seconds)
  done (took 492.203505521 seconds)
done (took 637.626494101 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.30831645 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.312180584 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.305661841 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.311356408 seconds)
  done (took 10.456576401 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321252398 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312360549 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317661085 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312563001 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.318209944 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311772282 seconds)
  done (took 9.116249914 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.306298622 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.310347134 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.310257127 seconds)
  done (took 8.146005467 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523743975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.328892759 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.65104399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.330489456 seconds)
  done (took 9.055524606 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318855561 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.319192323 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318999857 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320141197 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321637822 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321903094 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319273583 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.321499752 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.322572117 seconds)
  done (took 13.103650672 seconds)
done (took 51.096998211 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.400719188 seconds)
    (2/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.337965475 seconds)
    (3/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.356838265 seconds)
    (4/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.04723286 seconds)
    (5/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.552193749 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.454569186 seconds)
    (7/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.301334748 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.389674858 seconds)
    (9/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.346832772 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.362115565 seconds)
    (11/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.353378177 seconds)
    (12/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.074512453 seconds)
    (13/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.413863211 seconds)
    (14/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.46429181 seconds)
    (15/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.989796859 seconds)
    (16/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.310835148 seconds)
    (17/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.497469693 seconds)
    (18/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.053506814 seconds)
    (19/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.310579373 seconds)
    (20/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.302916465 seconds)
    (21/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.304085449 seconds)
    (22/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.417516535 seconds)
    (23/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.438507413 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.412249374 seconds)
    (25/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.302725536 seconds)
    (26/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.222205016 seconds)
    (27/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.119995155 seconds)
    (28/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.979793374 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.392404942 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.44860393 seconds)
    (31/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.40485041 seconds)
    (32/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.36650109 seconds)
    (33/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.422285283 seconds)
    (34/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.447899212 seconds)
    (35/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.366591388 seconds)
    (36/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.130226801 seconds)
    (37/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.630484998 seconds)
    (38/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.31350424 seconds)
    (39/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.37579824 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.457564056 seconds)
    (41/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.473062664 seconds)
    (42/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.380228621 seconds)
    (43/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.308597492 seconds)
    (44/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.372654553 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.391738076 seconds)
    (46/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.480296366 seconds)
    (47/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.553610781 seconds)
    (48/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.332607533 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344790764 seconds)
    (50/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.41006631 seconds)
    (51/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.545272853 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.462139355 seconds)
    (53/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.969821408 seconds)
    (54/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.522016253 seconds)
    (55/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.495077688 seconds)
    (56/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.355075011 seconds)
    (57/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.362029374 seconds)
    (58/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.96651584 seconds)
    (59/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.373087476 seconds)
    (60/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.44329494 seconds)
    (61/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.443785292 seconds)
    (62/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.309915933 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.401371995 seconds)
    (64/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.421845974 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.410634538 seconds)
    (66/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.527638721 seconds)
    (67/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.44287891 seconds)
    (68/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.433416218 seconds)
    (69/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.493438016 seconds)
    (70/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.440997158 seconds)
    (71/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.371917466 seconds)
    (72/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344765882 seconds)
    (73/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.006962299 seconds)
    (74/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.411553653 seconds)
    (75/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.686269353 seconds)
    (76/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.344212623 seconds)
    (77/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.34869568 seconds)
    (78/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.332389229 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.458794949 seconds)
    (80/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.366658127 seconds)
    (81/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.525214933 seconds)
    (82/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.327406958 seconds)
    (83/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033841203 seconds)
    (84/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.017229237 seconds)
    (85/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.390478732 seconds)
    (86/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.524179108 seconds)
    (87/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.675621048 seconds)
    (88/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352886453 seconds)
    (89/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.363037222 seconds)
    (90/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.375934618 seconds)
    (91/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.430506064 seconds)
    (92/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.356862737 seconds)
    (93/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.335829409 seconds)
    (94/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.140839917 seconds)
    (95/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.528086269 seconds)
    (96/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.393637745 seconds)
    (97/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374484742 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.397506311 seconds)
    (99/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.306842096 seconds)
    (100/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.268423477 seconds)
    (101/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.596005674 seconds)
    (102/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.363834014 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.420501312 seconds)
    (104/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.389036527 seconds)
    (105/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.385402254 seconds)
    (106/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.420557728 seconds)
    (107/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.334083324 seconds)
    (108/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.525257359 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.537278787 seconds)
    (110/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.413750878 seconds)
    (111/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.462340083 seconds)
    (112/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.018954626 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334706557 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.42766326 seconds)
    (115/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.463930641 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365532597 seconds)
    (117/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.371194035 seconds)
    (118/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.328928341 seconds)
    (119/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.418134939 seconds)
    (120/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.344124941 seconds)
    (121/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.466065767 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.376218956 seconds)
    (123/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.247331606 seconds)
    (124/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.362654608 seconds)
    (125/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.316735445 seconds)
    (126/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.362067953 seconds)
    (127/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357369087 seconds)
    (128/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.45222428 seconds)
    (129/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.479484587 seconds)
    (130/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.428013163 seconds)
    (131/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.533566557 seconds)
    (132/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.076644418 seconds)
    (133/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.367265116 seconds)
    (134/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.488544614 seconds)
    (135/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.364145142 seconds)
    (136/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.334415333 seconds)
    (137/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.31706688 seconds)
    (138/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.480423381 seconds)
    (139/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.488813145 seconds)
    (140/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.429704878 seconds)
    (141/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.349190988 seconds)
    (142/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088712524 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375467718 seconds)
    (144/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.367904541 seconds)
    (145/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.310850802 seconds)
    (146/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.381699706 seconds)
    (147/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.366101086 seconds)
    (148/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.319533441 seconds)
    (149/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.211160932 seconds)
    (150/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.378216402 seconds)
    (151/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.434518814 seconds)
    (152/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348237377 seconds)
    (153/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.417493025 seconds)
    (154/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.408277583 seconds)
    (155/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.484342574 seconds)
    (156/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.337805951 seconds)
    (157/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.461793834 seconds)
    (158/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.481859396 seconds)
    (159/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.344507916 seconds)
    (160/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.428677287 seconds)
    (161/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.412640298 seconds)
    (162/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.406207111 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.451447479 seconds)
    (164/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.418318619 seconds)
    (165/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371982221 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.543315604 seconds)
    (167/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.449839485 seconds)
    (168/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.399337349 seconds)
    (169/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.499941576 seconds)
    (170/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.529706954 seconds)
    (171/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.4341544 seconds)
    (172/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.359524292 seconds)
    (173/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.534331181 seconds)
    (174/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.554220468 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.352014818 seconds)
    (176/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.601566406 seconds)
    (177/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.368328248 seconds)
    (178/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.502580499 seconds)
    (179/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.111773294 seconds)
    (180/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.128502004 seconds)
    (181/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.517198179 seconds)
    (182/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.4866766 seconds)
    (183/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.357666614 seconds)
    (184/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.381737919 seconds)
    (185/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.336211434 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.510942176 seconds)
    (187/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.104903585 seconds)
    (188/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.4716692 seconds)
    (189/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.435161998 seconds)
    (190/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.468646343 seconds)
    (191/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.44354784 seconds)
    (192/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.424001585 seconds)
    (193/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.314098911 seconds)
    (194/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.358675846 seconds)
    (195/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.399018112 seconds)
    (196/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.507570962 seconds)
    (197/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.383579061 seconds)
    (198/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.384918503 seconds)
    (199/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.531464894 seconds)
    (200/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.532524877 seconds)
    (201/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.094865322 seconds)
    (202/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375005355 seconds)
    (203/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.443463913 seconds)
    (204/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.473994639 seconds)
    (205/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.444111212 seconds)
    (206/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342004354 seconds)
    (207/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.69485763 seconds)
    (208/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.424376994 seconds)
    (209/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.55754696 seconds)
    (210/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.371892711 seconds)
    (211/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.322745348 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.463013924 seconds)
    (213/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.32219337 seconds)
    (214/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.978587534 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.55226033 seconds)
    (216/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.014264354 seconds)
    (217/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.380396657 seconds)
    (218/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.342150355 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.419806619 seconds)
    (220/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.420414688 seconds)
    (221/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.410578028 seconds)
    (222/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.372854321 seconds)
    (223/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.357875141 seconds)
    (224/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.315290456 seconds)
  done (took 369.79999743 seconds)
done (took 371.019089671 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377387072 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.51173201 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349161788 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.3489747 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374891961 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339062514 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375933682 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338434296 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.339495849 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34135611 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.337132735 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.344224415 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.351436833 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368934556 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.443275178 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.348931132 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348342558 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.337671815 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.379708076 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.397605103 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373906452 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376014064 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351305706 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349524998 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379583473 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37986855 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.35337807 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33552023 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.338909527 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.379226926 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.323719319 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370579962 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.388933217 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.386996732 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37622217 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.338019951 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377248131 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514321097 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.373944961 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371668594 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344102474 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.389265296 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.341873747 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343140051 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.388757721 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353175761 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381925021 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.456185786 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.3251987 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.338877502 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381274615 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.397731015 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343782363 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.336002487 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338446398 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457216785 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.339636264 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380773711 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341554062 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377521044 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.44707356 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381325622 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.399952055 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380077507 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.339840033 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.353835292 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.338575037 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402242569 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.340875445 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377941244 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377921805 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.345420799 seconds)
done (took 107.878277789 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.453610666 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.334791493 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.477791417 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.339127613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.499547502 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.481537301 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337462519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339794225 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.340040831 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.138393841 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33971409 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.337830696 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.336949264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.338790399 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46295881 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.341103528 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339293976 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.031240396 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339203218 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.474125543 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.334908423 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340619198 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339326271 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.132779636 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.335646325 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.331812999 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.477440561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.340063733 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.031381014 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.332213103 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.33328897 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.031497756 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477701653 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360156728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382986741 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349676271 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.499465972 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.359904743 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.460910019 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454230598 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.476361243 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37859706 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.33091439 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.335912497 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343353751 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.340676218 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341826587 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.369613863 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.336683394 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341976017 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.036103739 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.351907337 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.341834611 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342377287 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.341989972 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370677385 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343436734 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342262974 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.479824762 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.343190945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.46459005 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.135823068 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.14027824 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.34274428 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.336279681 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.344366441 seconds)
  done (took 108.681986534 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.40485886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413616614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.455703105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.356441593 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390281847 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.460089393 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357309854 seconds)
  done (took 11.078550437 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346021632 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346039513 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387914112 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388936305 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.343622487 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.522451175 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3438366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352586439 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.343478674 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39286684 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.346272583 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343663475 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353893685 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.340765737 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387945339 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.352617939 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454781689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342437535 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343929032 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.491927021 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346413582 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.353725935 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.39236019 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.353493287 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344784714 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.346909594 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.108421405 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345085461 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34523166 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.344842059 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345443844 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.395292584 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34694596 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.340154375 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344367686 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459492944 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346616693 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345806232 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346028684 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.335175938 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.346068402 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.346067698 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.345868327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346230714 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.347393389 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.365255985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.345261902 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.346120951 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351174527 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.346668335 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.39400858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345783934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.345854217 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.346519513 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.39732015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355909236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347665471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.345152565 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347513223 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347326061 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.49329132 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390570835 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.347594072 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390913675 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346340893 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347681854 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.347921643 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347573477 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433110671 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347602745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389836854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.346965859 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.52168185 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368559354 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348955068 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.347232282 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.346353293 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347514126 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.341692093 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.350397849 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349201858 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.346289249 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.351461508 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349229734 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347658198 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.557674916 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45527855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349072535 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.357102156 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.352053964 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349772199 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.398008452 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.34857801 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.347865842 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395665299 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.460947715 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.399376932 seconds)
  done (took 138.735236168 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356555566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358427079 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.348477851 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.372864109 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346841321 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.346168021 seconds)
  done (took 9.375041938 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348795102 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353381291 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.349141882 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.350187841 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.350730443 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351783406 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35076309 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346673548 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.355385788 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.350763265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35134579 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.351669562 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350922361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351523811 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35178798 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35101244 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.352109657 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351118972 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351749054 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351684508 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.346971197 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.351266647 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350217544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.348704045 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355852793 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.351521846 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368444611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.351438971 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.352472203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.353978739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.371566426 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.353497559 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.349402884 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.353888232 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356560452 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.348478834 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357082057 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.353113294 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351049052 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351956405 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354247942 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352556571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.354052533 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.353996574 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350792018 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354725473 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358825813 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369519533 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.355139176 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.353616672 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.353392483 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353642782 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355928281 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.354787144 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352321476 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373633106 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.358237772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354599023 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.353324561 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.351280723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360123372 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.35508559 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352105461 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359890649 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.35538803 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.355852726 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351492962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360231171 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354923727 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355141287 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356754847 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3553985 seconds)
  done (took 99.741610431 seconds)
done (took 368.849210276 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.358845068 seconds)
  done (took 3.610014887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.376316562 seconds)
  done (took 3.62842213 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.740176782 seconds)
  done (took 25.000436805 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.401128822 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.442368558 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.366868731 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.352377645 seconds)
  done (took 10.815865003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.663436173 seconds)
  done (took 3.915307537 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.363401228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.349312643 seconds)
  done (took 5.966562068 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.636030809 seconds)
  done (took 3.888268379 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.88994987 seconds)
  done (took 4.150318037 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.365671313 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.364615189 seconds)
  done (took 5.988643184 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.337060123 seconds)
  done (took 3.58921969 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.035112258 seconds)
  done (took 39.288117484 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.357270664 seconds)
  done (took 3.612829354 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.373276395 seconds)
  done (took 3.626138291 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.301637294 seconds)
  done (took 6.555255582 seconds)
done (took 124.886555322 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.345733168 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.352461211 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346281847 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.346347899 seconds)
  done (took 10.642157951 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.408683501 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409478929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408594107 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407616681 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407768439 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.408172991 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.382820121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381212616 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408587103 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408768191 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409549668 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40893011 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.408633747 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.382398533 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.407776818 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410049636 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408714799 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408258443 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.382945935 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410173841 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.357651274 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.408699765 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409735015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.358913956 seconds)
  done (took 34.859282449 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.846425961 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.424215125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.507656284 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.407625943 seconds)
  done (took 7.440908642 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435841811 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.43443892 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.449657718 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.487761706 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500702761 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450056025 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.383914159 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382793048 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.36660468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.436453819 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.488242757 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.427055655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.514530118 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.358627304 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564763696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.359779673 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.358184324 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436376139 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488154591 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500943792 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.358970464 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.436460461 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.435998382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.427792895 seconds)
  done (took 35.740194495 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.36819777 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.374543766 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.360942368 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.377402474 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.361216203 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363329012 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.362736235 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.365517833 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.36056571 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.361223232 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.360269792 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.374856435 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364615182 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.361875912 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.368284371 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363640155 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369651343 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367461435 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.362513471 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.368225002 seconds)
  done (took 28.574980144 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.351274 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.350429643 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.700213698 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.608692512 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.352520075 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.356214787 seconds)
  done (took 13.975732406 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433767714 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.599056534 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.357017839 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736230229 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.82057418 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.358151382 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357583858 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.626192573 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.967076072 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.950416371 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419420232 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.432264425 seconds)
  done (took 20.31511644 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.352476081 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.355735487 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.371897512 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.372762523 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.415775385 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.379584469 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.364249392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.35153671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.420200542 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438285031 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.378224398 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417128735 seconds)
  done (took 21.877766423 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450593634 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357237817 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375944479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420321367 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362320796 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198740311 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407786022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119629424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388849578 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633997235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362265622 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453237562 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611102738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368149058 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362132316 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343015671 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591482647 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862105494 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361624023 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36064062 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395655364 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373321101 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362056479 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.593094348 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382296999 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358466979 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.620984175 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35915128 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662079608 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376947202 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368566756 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358945497 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635966135 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047593849 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483245973 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581798212 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381663657 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382452464 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.368440853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.36826274 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367099649 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378480374 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36963521 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359226172 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360429602 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375276126 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102248283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388252997 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.360682848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360724495 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638896885 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46116767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.365891509 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361246768 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396042268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365382062 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.366443524 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496770203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968613207 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366928759 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383082332 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.366435862 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361288652 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37439967 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99965536 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38581122 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366020173 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367495724 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360232605 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360520936 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38357496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361455255 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.385566021 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361183084 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116749849 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394422043 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364112103 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931058456 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380704492 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.367247538 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591783312 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36155119 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363338201 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.361101579 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362768508 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118453889 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374708089 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.350373716 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433793378 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141934871 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615204753 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401479864 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393278345 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585045651 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.352063513 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362223662 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.36436695 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366937288 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385269203 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110661552 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38681037 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370252215 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619594021 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.574356906 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363798809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.363632426 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868012235 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401548232 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386224541 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36556596 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595002174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.996950598 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397042692 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370124448 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387210107 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365436751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157748384 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388878885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.471321845 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375348278 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650648973 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216165271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372228624 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433016411 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370115211 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365405217 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370995303 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373263933 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366152666 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.582157509 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386853226 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381394487 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.366612065 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366245461 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.376652379 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366322539 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.387560701 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588980462 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384468473 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648590742 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367703352 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366785605 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368273361 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587444218 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.365951641 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.707090141 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62950553 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366320477 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374625256 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382569412 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385444504 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47017303 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388713915 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.367563892 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627213496 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373555228 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375107727 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377991518 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373081555 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372039798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.374675287 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371158624 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004213436 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369555601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376482181 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25641268 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.384519051 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435007699 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377477579 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59959103 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.394068422 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3846888 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.377462061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.380594916 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592671451 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378916491 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.378508814 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45523824 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.881220527 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007512231 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403311832 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.371649206 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.369474628 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.36920753 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369278407 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369382994 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370792168 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596411206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403801903 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377994055 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992874124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391609391 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377088379 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.38148555 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381435781 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379061467 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371669178 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.369693942 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379677867 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381196665 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38557775 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514578056 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387871264 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370995785 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.88890268 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377503694 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371457456 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369286398 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403904618 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377497636 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208156986 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652875287 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372895268 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65146482 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387077954 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.389414429 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372669655 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380450477 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373584035 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.382209547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380958967 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.382031771 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379781112 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378571955 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945032599 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135519214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937786185 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406532433 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.37589385 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376418962 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113112148 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392555501 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373646965 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624845251 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136538552 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3934722 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876803892 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.394779195 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190137641 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655977934 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609434352 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388174992 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.392602177 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658479712 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587217712 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408316318 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373873954 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380140228 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.361170305 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953143526 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395825501 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481200175 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115382552 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402998975 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381823651 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.370884874 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378726127 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841012558 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400680222 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375350541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374457199 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389748523 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213922749 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403461421 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376063834 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017263924 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407818409 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894567553 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400363307 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603545938 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.406183472 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379974295 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.390997707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.390349416 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628683898 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656945217 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377377868 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389089334 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947437362 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263401656 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383573873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377471961 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174295547 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383199434 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690405438 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.38426508 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.381089013 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377291878 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377388317 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377268797 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.377441917 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387950857 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354320489 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890293809 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.379731262 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382154547 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380235138 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38330111 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630858785 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.393846221 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994512161 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623495835 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377559449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401998304 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38369076 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389909008 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.371484293 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377854048 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37944582 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385809833 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605043957 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396308949 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.371903627 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446052319 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593643054 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379077956 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392216045 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640295122 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.399854151 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.391969497 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138773237 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431381795 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378468803 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402964864 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378593406 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422298488 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469951361 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607758326 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.40875955 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.389076829 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821654056 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405592781 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401516832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.394380131 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476360516 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381185489 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.408939443 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.154257094 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003147783 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167127601 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008676838 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687235776 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385846965 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390982492 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38138432 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543253071 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380727174 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656559308 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416188404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.377728003 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404288128 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382256916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419746881 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595135398 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659259685 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380796192 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382958217 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387005283 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.382495392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390994352 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590404728 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894538653 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960228925 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384607793 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381223846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129752889 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678091762 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381219958 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381742118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382853861 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.397819718 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.382985693 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.395597007 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385687154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527245506 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662906106 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086096385 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416086235 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.414571998 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.901399666 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394035403 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640013478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383616713 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613759717 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022660454 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150230529 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652319773 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452452663 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612507825 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40194391 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545310299 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.389508169 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38421862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384171439 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38495485 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.384861679 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.393469352 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009519968 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667463902 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.388630042 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.389162965 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41350655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.392826434 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605088101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158208484 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612687607 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394443028 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390065335 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385559513 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009485502 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689167564 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391668262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390259187 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641522633 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406902122 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410881632 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.905061134 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.385720926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958114235 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358216319 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405813483 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384716698 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163362973 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015489831 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421990427 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906304995 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389579059 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38512439 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665921817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.392951793 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401491444 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668833136 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.392292464 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387004202 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622798712 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.024169179 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2433781 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.406390047 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388965511 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.411211432 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388330808 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405034994 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394381535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388848852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.845325593 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412868309 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388653974 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400346272 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.401956512 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398061053 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.392415706 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388797999 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.395438174 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.386141596 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.380553629 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404997105 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523145042 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977668187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410757251 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.067886227 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.714849274 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642513066 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390446532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.381624695 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.393142283 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390294852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387437982 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388341433 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391245444 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964284404 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.395386686 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.402326329 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394734695 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.388406167 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599628741 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388921622 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623641193 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423725253 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41200945 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.378392552 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391000326 seconds)
  done (took 980.124987525 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436904978 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.395527811 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.41684363 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.440614588 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.395843772 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.506724468 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.494244054 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412013821 seconds)
  done (took 20.787827278 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.38588986 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.396113465 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.399183331 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.397941493 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.397403123 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.904494629 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.423408484 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.395066282 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.413051555 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389881913 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.402455963 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.379221393 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.420228519 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.394779674 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.383610448 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.400707165 seconds)
  done (took 33.177693898 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.487248568 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.598566052 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.580344926 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.416972013 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.389580888 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.394858984 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.692324488 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.404668255 seconds)
  done (took 27.257395386 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.397732937 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397275157 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.397880389 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.398040669 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.398073117 seconds)
  done (took 8.279338898 seconds)
done (took 1244.306623412 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.39778526 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.397983435 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.3988243 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.397979408 seconds)
  done (took 6.884524896 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.380147291 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381014744 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.381901016 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.392701815 seconds)
  done (took 9.826770973 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.154685674 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.054880627 seconds)
  done (took 5.500869083 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.890906625 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.896995154 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.897158654 seconds)
  done (took 6.976784307 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682602476 seconds)
  done (took 2.974011746 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.300644528 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.393850571 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.07014434 seconds)
  done (took 8.057015802 seconds)
done (took 41.511479782 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399778715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.639600227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.546424069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400266411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.552360576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.545646832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.123487283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402205968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.393133364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393353385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402174857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.551160593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.109304781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.632451848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.108278636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.638891561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.609196558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.38925399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407222838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404538589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.125116914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.389131657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421767537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389416487 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.552228682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.536999064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.399867355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.63920516 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391493781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391053984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.538521901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390711664 seconds)
  done (took 83.107212886 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.389687139 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.392111293 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391335976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.409899478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390793914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.409386436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414546322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.391976227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408933925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390340758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39043758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.39095173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409757683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.391512612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.39212641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393415534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400253954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.395012037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392281872 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391811529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.410905445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397068979 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391251752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414107376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.398077826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.392754646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409069701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.391871744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406235538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392962542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.393784713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410201614 seconds)
  done (took 78.040216682 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405520489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.3934686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394254338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393367387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411740902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.412013016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394827616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401138284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395694926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.394187241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394514394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41146795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411020271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.393564795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415029091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39573321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.410262711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393108405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412737209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406062695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.395273937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394704254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.40354541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393781138 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.409693862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394137474 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403922213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.394548985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.401923003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405775426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394541296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395061704 seconds)
  done (took 78.122809898 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.675137881 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404351409 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406985796 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399130757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407415939 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405431084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40038647 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.683824689 seconds)
  done (took 15.080414163 seconds)
done (took 255.641800777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.40763182 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.928841735 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444506972 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.400243067 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.426040031 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426305722 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.633468991 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444302647 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.634627341 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.418881408 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.422011481 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.41327747 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.259625068 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55571599 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.274753791 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.39863644 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.346300623 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.398644442 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.032329425 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.696588262 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.427855845 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.401856905 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.26796288 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.381875986 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.393355513 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.487660308 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.506643008 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.631834138 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.564497129 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485383764 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.950545173 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.422490675 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.404520336 seconds)
  done (took 65.588248649 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.403450775 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.529785229 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.407980006 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.406807168 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.53055253 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429165626 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.40452169 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.407881577 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.407049564 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.407699604 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.409244613 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.408719055 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.409895493 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.457236564 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.535055846 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.42946482 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.404225841 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.525008495 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.403350454 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.403169355 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.457700377 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.408295995 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.411502833 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.459477097 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.408861801 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.408452856 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.53121139 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.432083779 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.410963008 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.526890954 seconds)
  done (took 44.478655648 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.410314564 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.051429578 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.208193548 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416530641 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407694069 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411635176 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.722688104 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416464512 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409418295 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.41079141 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.935092134 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.434728162 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443086192 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.23247935 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414960294 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411333979 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412173763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406942779 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.061163413 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42102886 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.737940093 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.412494546 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.721235912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422286216 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432416872 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409250919 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.413187987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.278584438 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.436893054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.933516847 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.271532096 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.716789334 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.190172753 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.23730089 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.260411705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.417028826 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412677993 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926153357 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42876896 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409732364 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.717486587 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.409446648 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.20730281 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127200938 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429231311 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413532299 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.275608297 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.950865284 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.689762675 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.417100003 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.229328285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.413718798 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414674657 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410986977 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.672616414 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412982509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.40940427 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.31027561 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.437657911 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.719997121 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.414717347 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412235673 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050687177 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411376173 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.046849836 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.412616119 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419464274 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.433138269 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.211598595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.414306681 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.137942766 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.431047208 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.415975024 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.930364046 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.065912542 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.343093115 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.413121801 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.055616005 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.221248328 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.738926924 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.4155347 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.241965535 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.743924077 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.415211231 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417612451 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416580575 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415188721 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.490766572 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.718767302 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.074194335 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128748372 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.329100614 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.745244992 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419884502 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414125492 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.313868838 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.438881262 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.41646749 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.206311627 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140009178 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.433220391 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420206456 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.164175073 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434807756 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.72421227 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.417978881 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.218898664 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.414505129 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.490573164 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416748096 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.420467253 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438220066 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.724121056 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.417592949 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.417751528 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.115085592 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.962715326 seconds)
  done (took 199.398254673 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427026906 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.409206938 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422470881 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.408623913 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.408224802 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417090134 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.407571142 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.408698418 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413107023 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.409080875 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.409118208 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.416835673 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414869927 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.408856854 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.419308537 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.410113716 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.41588978 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.424842027 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.410860242 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.409221463 seconds)
  done (took 45.579942712 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419096478 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016781803 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.007690426 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.418391349 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.419307733 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.414601871 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.474639674 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438983969 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.419733639 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.736796525 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.603653468 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.438369161 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.419408785 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.420127343 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.991413423 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.410664407 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737041698 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.015265851 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.42192095 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.017061526 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.411825665 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.420932588 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.414817414 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.017096135 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.762550461 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.725693038 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.476864022 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036742158 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439275005 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.420691063 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.017205774 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.421443496 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.417328334 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.017154283 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.439205547 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435759568 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.420881533 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479023602 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.498484359 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.758171563 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.107967695 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.753050008 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.432827587 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.598051816 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.424001758 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412594468 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.026776996 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.441956988 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.413178579 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.424173017 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428585329 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.004562059 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437852144 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.003563546 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.441902515 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424437766 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.024511492 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.004044229 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.016493243 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.604689985 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437639621 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.728999922 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.423529522 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.029061251 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.442419847 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.423217682 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.423726155 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.60676893 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.040481832 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.729011862 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.742547612 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742689853 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424679499 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.48619845 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.442682226 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.818968319 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.485557085 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.830249161 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.746662845 seconds)
  done (took 130.015328479 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.719946308 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542532283 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.848603512 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.055345761 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.418219812 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.561576737 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.535910879 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.686401558 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.419488137 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.502161498 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.103868544 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.539987771 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237858068 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.521361457 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.548192469 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570654632 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.856770789 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.415254766 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.142510864 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.0900841 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.425386372 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.557811343 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.014722676 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.652237959 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.43196516 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.05742617 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.446838492 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.127892895 seconds)
  done (took 55.345934152 seconds)
done (took 541.703062346 seconds)
SAVING RESULT...
DONE!
