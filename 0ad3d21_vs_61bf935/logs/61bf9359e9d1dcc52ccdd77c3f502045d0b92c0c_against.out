cset: moving following pidspec: 21513
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.980212125 seconds)
loading group "string"... done (took 0.519746137 seconds)
loading group "linalg"... done (took 8.446909385 seconds)
loading group "parallel"... done (took 0.172837044 seconds)
loading group "find"... done (took 3.876494515 seconds)
loading group "tuple"... done (took 1.85065683 seconds)
loading group "dates"... done (took 1.345274795 seconds)
loading group "micro"... done (took 0.1875658 seconds)
loading group "io"... done (took 0.495222519 seconds)
loading group "scalar"... done (took 50.336715807 seconds)
loading group "sparse"... done (took 13.815983042 seconds)
loading group "broadcast"... done (took 1.284380419 seconds)
loading group "union"... done (took 9.241736018 seconds)
loading group "simd"... done (took 3.095333239 seconds)
loading group "random"... done (took 11.758639459 seconds)
loading group "problem"... done (took 2.251989134 seconds)
loading group "array"... done (took 24.447218765 seconds)
loading group "misc"... done (took 1.13743656 seconds)
loading group "sort"... done (took 3.822427409 seconds)
loading group "collection"... done (took 19.608465919 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.696175273 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150051038 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207782495 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.209036443 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.282120067 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170121148 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16179629 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.173565708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.730806642 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211577171 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140239031 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438916309 seconds)
done (took 6.386406132 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269095546 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061621492 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171378638 seconds)
  done (took 0.99403793 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.096352045 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164229675 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111468889 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097250302 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096852927 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.172843766 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096908228 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112836013 seconds)
  done (took 1.61520603 seconds)
done (took 3.737122632 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.499153577 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.894556022 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.512922453 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181699502 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316186707 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.315860092 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272771425 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222960952 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094059629 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087577113 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.191843713 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.418675644 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423354445 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.971192438 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.070029844 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096765843 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154852399 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.789042472 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081721007 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110472906 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.538828026 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215482208 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117586219 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106673617 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187727594 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137335397 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142112375 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107618829 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679033674 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134620085 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217763568 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.08648087 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139003021 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16980237 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.22521967 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113042387 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683618975 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20237845 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099259471 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104264952 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684553487 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12158319 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20946291 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108134843 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069810244 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.164301464 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119130284 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081555469 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09565716 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103796344 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163387733 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.44634054 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110233107 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.193605003 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096138234 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691242313 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099658929 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276999214 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130383706 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094498888 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093593205 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091915221 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160743496 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098342706 seconds)
  done (took 20.415962788 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.175581271 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.193271037 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080535068 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.166089123 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.127567858 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101728305 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091775204 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07997087 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133050254 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184328979 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146394168 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.196180973 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078499378 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093620997 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171670702 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23908432 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129147255 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106373529 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090173876 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.114901806 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129271352 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115165762 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098392414 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.099478231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174450954 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207470702 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110639908 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125317528 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090911739 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102738367 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144694931 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152582261 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095622888 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090822969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194596858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109610129 seconds)
  done (took 5.522344975 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235836648 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105295786 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251028444 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200767063 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152339004 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185761866 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176826939 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301979297 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.229743593 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16335228 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129903418 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099075596 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080794227 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081953635 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097013034 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.832949361 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155145087 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168347137 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167763777 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118932961 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100195395 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364761519 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102413165 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088461785 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111103376 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065844005 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.19957239 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224543617 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097727747 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.493227829 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086094137 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119232991 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116245005 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104517875 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19950798 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126203939 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138230426 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096643235 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104930052 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.200514124 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121987873 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07939343 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.096388738 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119284748 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132078264 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095205088 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126546668 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.135452172 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090333743 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11290471 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.047669826 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195215454 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146275412 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104424815 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.271749488 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129042093 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103173559 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111428384 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.792996536 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138091486 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085405765 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098384467 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097714798 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07957492 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.468067278 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109227979 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.300705238 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087397495 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15811583 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0994261 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120405522 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088040021 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102448953 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111997346 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089050365 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09710624 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089492763 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081185325 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107344542 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11314648 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102344639 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083380151 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148548529 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103202383 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098931004 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108824629 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126729437 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092751822 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.105071308 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114076112 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098486403 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.090973525 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.188375739 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099053082 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131605258 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115828789 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13139212 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104882117 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.278355372 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086519904 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12265995 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103067515 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128869504 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102392731 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081934106 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102089148 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081445803 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083112815 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161837793 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086975286 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086861033 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105997825 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084658831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093738315 seconds)
  done (took 27.543635217 seconds)
done (took 54.241410352 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413497263 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083671194 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081826718 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102173058 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083078627 seconds)
  done (took 1.596715637 seconds)
done (took 2.403727791 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.306683645 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203546663 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089193418 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191507497 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090137062 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197988158 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185345643 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104821482 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210592137 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087291263 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194663553 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087188929 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108001015 seconds)
  done (took 2.890434351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107309953 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109030747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103115892 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121938443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087001384 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103262804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121985971 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11070907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103588544 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114680611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087918833 seconds)
  done (took 1.978460898 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102323883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106593544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09415544 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119902392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08779033 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100485044 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118473058 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109469631 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100615717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115257873 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089099541 seconds)
  done (took 1.954350691 seconds)
done (took 7.628411198 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.205907045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.989070509 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166372774 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245303182 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346416247 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300180827 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.615308048 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201957435 seconds)
  done (took 16.009070809 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.118114642 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.189428784 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097978666 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096252966 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.117023155 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094727807 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093078401 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113200813 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098686856 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092422575 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091718203 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115788021 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097357746 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098235506 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.114639451 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094736518 seconds)
  done (took 2.591365287 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138311333 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11780486 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118618286 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101270207 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114429405 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101087796 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104581953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117671947 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097712058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095994797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121343477 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10235991 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10040404 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113212324 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101562771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119668877 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113159512 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101937633 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118683236 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118937448 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101942642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099227146 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116445284 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101552687 seconds)
  done (took 3.531246213 seconds)
done (took 22.941740404 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.14952991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103828196 seconds)
  done (took 1.066801257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165335789 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184281941 seconds)
  done (took 1.168288804 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114612778 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091940031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140637368 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105449123 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093358918 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110537888 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117970438 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110653824 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094218902 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093928911 seconds)
  done (took 1.896106662 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096977934 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096642512 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125778859 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.170467902 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121483052 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096135255 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09571608 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114562378 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099016344 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091474279 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116023911 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110766941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09696171 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129161174 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096861389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115533146 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102613118 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096113624 seconds)
  done (took 2.79465841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093784145 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094081898 seconds)
  done (took 1.010673537 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095898883 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091947955 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094760679 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113578515 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091923073 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091206324 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109552704 seconds)
  done (took 1.510923292 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.52896658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239432057 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374134732 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073617742 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123311675 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.32243937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107597819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073613038 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092419406 seconds)
  done (took 2.792809581 seconds)
done (took 13.060682911 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094277708 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.43767195 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.633051829 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133876764 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092194866 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.14883605 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.335686219 seconds)
done (took 2.702131723 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350406547 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165644488 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08398585 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094326432 seconds)
  done (took 1.516209604 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084504258 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101012695 seconds)
  done (took 1.01477975 seconds)
done (took 3.360666547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092285193 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09076071 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130131974 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.092185128 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090770899 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091245798 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.110129904 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091502245 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090655931 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.109571755 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091550536 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090561705 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.090141041 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109377481 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091646316 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.204753878 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107442316 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091735954 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09001281 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089641761 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107357928 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091130693 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090231275 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107337055 seconds)
  done (took 3.304585347 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113698995 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093789475 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112753007 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095823893 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095928988 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113388379 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097206302 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093668105 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112015956 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093966017 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096338724 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112727215 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094573899 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096734451 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110213492 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096925587 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096877686 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109877647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094988233 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096072322 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11197944 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095472557 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095906832 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095981618 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114160336 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096448525 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092649789 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.11288844 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096891599 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096925076 seconds)
  done (took 3.866939823 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100182188 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.089167056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09171449 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119014304 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089369508 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09098212 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106370747 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093483489 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092070441 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090197754 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112821189 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092190686 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090282692 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11019174 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093391796 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093538791 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117477746 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092260047 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091183979 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092716314 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112776147 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092272564 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090444229 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109227675 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092643119 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088357771 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.108278781 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092646325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093157889 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091226024 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.113032694 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095445145 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091306731 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119927371 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095378469 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092728155 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.114845277 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089725799 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093177622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08779185 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10710008 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09209622 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091375758 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115643754 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092316685 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091004724 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091605538 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110462897 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093821411 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092446002 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105814154 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093811442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094383339 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110013765 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096861054 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088336291 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091305938 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106825623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092932236 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091587837 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106516285 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090405332 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096650399 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.1101605 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109395796 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097901908 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.108115884 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094502557 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09359551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096107081 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111929658 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102801221 seconds)
  done (took 7.916573473 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116641138 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101043671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110537734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09442767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091851257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091684174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116846804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092435626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092786542 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117464964 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092161152 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093642267 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110760977 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093316396 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092252469 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110789934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099408317 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092079211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.108592291 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094871893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092844233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095645155 seconds)
  done (took 3.041479001 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.242770031 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099613625 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141154912 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124602786 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110540578 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124246519 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097922369 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097856583 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114684792 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103391594 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101134947 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114622903 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112349376 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119319677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1035356 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101769725 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114355226 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103548617 seconds)
  done (took 2.96673213 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10738418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093837792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155516097 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095584397 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094864778 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113570648 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100381805 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111492714 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113136582 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094901215 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100503955 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111917193 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095003625 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094125307 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112334153 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095405162 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094285968 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111980544 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101553868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099364671 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.119104137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101588946 seconds)
  done (took 3.158469132 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10870095 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093425718 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129104788 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099125694 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093809286 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110816871 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100206243 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094624546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118365605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095020241 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094148585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092822411 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.12748685 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095930356 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100351862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112941875 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094138055 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094855193 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11362317 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095363034 seconds)
  done (took 2.909765898 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198036322 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127949329 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109977059 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116730151 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128354279 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111011521 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13697471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112355264 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112172755 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139155457 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110158898 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10878156 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137734016 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115920846 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128324969 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117741693 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13587717 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119768195 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109376516 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128063251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123561416 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109447947 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137139122 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109659939 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128119433 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109907895 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109277023 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134003511 seconds)
  done (took 4.313505811 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094935832 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093584525 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092057195 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110407055 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094665018 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092458074 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.110628796 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094697501 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094122124 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092829022 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112360062 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093610695 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092644471 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.108885978 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093002144 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093276476 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092142572 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110467248 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093727644 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092303361 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.110203198 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094217292 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092298601 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09177405 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111003478 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092858308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092307687 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108660704 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09447751 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093091332 seconds)
  done (took 3.779650645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10602966 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102187203 seconds)
  done (took 1.058216855 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102650921 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108020214 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092242722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112148515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099747319 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092393346 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12031249 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100269372 seconds)
  done (took 1.677791544 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168548198 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191773794 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09844359 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123888039 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171480023 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182101512 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132126937 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118941461 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093890432 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08623002 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185884561 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084677505 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113008289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092037147 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093333594 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119900707 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094546423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102872238 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119902395 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095752367 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099564147 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118132656 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096907078 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104341901 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108036847 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098130599 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098380959 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124833422 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091276189 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09528062 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111539276 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094910402 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097931047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.115426098 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095551529 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.19112498 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100921239 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091523732 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116970445 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101012648 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12564005 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115595083 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096581861 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09344555 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116864325 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098893964 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099465902 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.11230093 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08823368 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089912664 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112388195 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091656727 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093977996 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111673576 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096891668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101166558 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.113538749 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092912021 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091837448 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107575464 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094870763 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090279602 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114101828 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099388503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096039227 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111319114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095824527 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09546427 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095723911 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113364063 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093768819 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108913353 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114030722 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098825798 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09937097 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.115094679 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092066281 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098846497 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111094389 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095691807 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09826744 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141824154 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09724466 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089767929 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109181077 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.100699558 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095165886 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116249837 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088493132 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102664806 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.114977689 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095854251 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087197339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111276366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091777604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098026088 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086669197 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11400604 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094798547 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097892064 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118946468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095054531 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095744192 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117795089 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100656849 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093187449 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.17873017 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09091194 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109915456 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097465414 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099180354 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107799131 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094898556 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094880076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110349789 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090682076 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099429085 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111773763 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098186694 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099874361 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096728981 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115583032 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096453358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094600129 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110301656 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099378349 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103358678 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11579318 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098163895 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096550056 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114537675 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096567412 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098249172 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110446338 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101002445 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092303299 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113411224 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098280964 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100723681 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113096731 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092709181 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093970181 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114011558 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.096664668 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097461061 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113069774 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.092240918 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088480684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09626923 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109993524 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09715419 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103115122 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109191178 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097769261 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091891272 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123717361 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093106858 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10076762 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116456245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102817058 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099972829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107180123 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094962558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097539056 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114586238 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093124787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097828313 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094665032 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121595836 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090147617 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098731748 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.107059799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093951182 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100986697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.11693695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099383638 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091127176 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153314859 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107742471 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10182582 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.114166253 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095798165 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099408672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.112603153 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100791901 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101349721 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119125549 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097664488 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093818989 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118688527 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093901149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098049521 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093183854 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115524256 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088977317 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096641306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108344387 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101475265 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096241927 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118980338 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102001053 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096845251 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112959733 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105008563 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091669391 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118298598 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089027559 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10003606 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122531383 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102621543 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100545127 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115587756 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095375542 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096783008 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102665794 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11620783 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.096614962 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096329878 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108475612 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090284423 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101259984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116074346 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095123686 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095072956 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11455739 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099226841 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093524638 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106490075 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102799388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098420243 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.109268763 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097963689 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092254956 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093994381 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123427998 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089661936 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092100677 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11707371 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101439857 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094719176 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114982941 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099225801 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101403404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118203232 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100408403 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09307655 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122364526 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096045652 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096140468 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.119999809 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100214429 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090163485 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096823427 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116436256 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093204981 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09205325 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120264753 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102746372 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100390275 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112982955 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100057927 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100248892 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.121182194 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094189432 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101023137 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110942515 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089529082 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093596394 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10610581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098857437 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093056288 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099895947 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113082961 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09518667 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099327561 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117179808 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093925546 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100523371 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125892178 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090175253 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107650977 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095860316 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095665035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110636518 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093982024 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097703997 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097361222 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119078735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108670548 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091522164 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114855052 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103332047 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092143685 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121138449 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102331445 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101551272 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110542205 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100735449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092861161 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118655674 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.091366417 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094791071 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113436369 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09690717 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092644738 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112991892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094230128 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090001765 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092344133 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122051561 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094820183 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099820109 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115856602 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09624356 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092575994 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111599682 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103148802 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094971275 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122333941 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097996466 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089836306 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108474345 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10215323 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096685158 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120198879 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093743714 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100096868 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101953398 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120158769 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098661148 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105450857 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124217419 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103367692 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1021198 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.109128403 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095761339 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100309292 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.116030038 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100256205 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098943058 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108382357 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101129756 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102124459 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.116118588 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.096146552 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097189267 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122042581 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099026865 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09942029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.117622764 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097779092 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091998339 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118925504 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103728071 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096771318 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121538685 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097462192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100339929 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.112304445 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102905901 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098039894 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090598502 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110489153 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094393318 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102826479 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.109840851 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101098263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10067762 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112103062 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095944206 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099770704 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111596361 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101115269 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100924315 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113441015 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107176502 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097302932 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.11257444 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102423624 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101813269 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08995719 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113702982 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096090386 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102092374 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115243747 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102336747 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095905431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12099128 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10031142 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101628293 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.120954368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103645957 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089861563 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122749743 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101274988 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099782737 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093318489 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116588498 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091883943 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095175242 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.123022624 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095048545 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105067968 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.124148629 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095774397 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093439622 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.121511009 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096893085 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102965131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113351649 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100401305 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090682561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118507824 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098756344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102079214 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110996085 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.092782644 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101743706 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100476727 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121037065 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10056317 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102600118 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109762919 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092966274 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099865515 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113048562 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107767134 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099800746 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11430148 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096789375 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099644917 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116666463 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105237445 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091475746 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111975241 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099014295 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098129145 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114066449 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092871129 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10051909 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094352918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118914355 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09694939 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091651047 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115414335 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104624928 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095370443 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112334482 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094300109 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104031687 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115928231 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094407514 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091027165 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121855703 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100337516 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104156759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.113105174 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098900926 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094498003 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119123054 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105638475 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095485877 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115392511 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.096854845 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102915308 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121915675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092076626 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094175034 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125701154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102665568 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098689761 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099567061 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.117089379 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10479217 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103224984 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.119759893 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.09224726 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091559013 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116051957 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09225895 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099277784 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122304587 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097306485 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095216225 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120283711 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103099512 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099606795 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100068293 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111560954 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104404694 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094259834 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120721819 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.092582231 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093336168 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.118450268 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103225037 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095342628 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117460408 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100964119 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100169216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092530756 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114531938 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100284549 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100957806 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.122696915 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100325532 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094890111 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120369919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107920515 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09902926 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.115732055 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105542975 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103134078 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11721581 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097749331 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101399345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123686453 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100738704 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104295155 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11560256 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.098703071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104850496 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124116053 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108176458 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096379787 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11139845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102809149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095969932 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.11060723 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103287638 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105550014 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122785975 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.100043203 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094935827 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106469559 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122047618 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098631304 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094814092 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115488844 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101991544 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09610525 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.121658309 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094363312 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104457676 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125487584 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104042842 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107114332 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110193428 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104525657 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100164101 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126154226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100116941 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093064502 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092404128 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.120157286 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105621125 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102947397 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.122380414 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10256324 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101616137 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118620046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099750987 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095453576 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.12497612 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104992871 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099365368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118418179 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097851635 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098568464 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099387758 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.124937075 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105774048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098058903 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128171627 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104919557 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096496652 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.116197088 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099372388 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100398392 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118374524 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104575089 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094200349 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111359366 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104309001 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104746212 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116071908 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107027787 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106398077 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115453529 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102710759 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106664983 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103438217 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119709104 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.100202695 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100380076 seconds)
  done (took 63.282929144 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150424313 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107531741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121616141 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101766315 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117695711 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123460391 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100364591 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100829758 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12268201 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112912962 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099897827 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120740628 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116779228 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139410412 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120427583 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110233361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121247387 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103182819 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100430658 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121533493 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1165485 seconds)
  done (took 3.331302513 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118634309 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113188194 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132908834 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115020572 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106165885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133173984 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112758942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13231937 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115146939 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108977417 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135487343 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111602466 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129018348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109673938 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108444786 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130089171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115249665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107793814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133184972 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113191466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129018128 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112979915 seconds)
  done (took 3.52506555 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130800938 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103832421 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098293494 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121633653 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105053584 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.101333589 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124096565 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101678161 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108886901 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11566762 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09332272 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096093138 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098622326 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121108594 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095665838 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100321128 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130724024 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10448279 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105036237 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120825552 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093594387 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101068953 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100591294 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112743651 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105376682 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10447317 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122321099 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105250188 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092624644 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123516936 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102598067 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095927011 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091088923 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112578792 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092451186 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102915565 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123840716 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101608266 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102117656 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.0920411 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122555456 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10624381 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092927633 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121786143 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101953429 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095640863 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.123346033 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101283114 seconds)
  done (took 6.026417161 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130694807 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157768962 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105870495 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129373447 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137241252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111402491 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102137481 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.132410334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102515939 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124495263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116819435 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114781549 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127330077 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109880376 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105364176 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127949831 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107284092 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103385491 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130823987 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103864365 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129211573 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108540805 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115147602 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13461467 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107198729 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104370134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124401756 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109940423 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113958506 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.13010485 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108863334 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128791683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116852137 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106841792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123841861 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106320955 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.350941274 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126130022 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105718755 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103343283 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126446067 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108490572 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105683364 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136665268 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106307184 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105170222 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12495727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10245955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.133102707 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107570516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111653285 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135685347 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107234882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104853896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128112689 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116152645 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104099447 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124522899 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107591947 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113418337 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123112769 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107013597 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135480098 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107633926 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110671695 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134542338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106202705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107257472 seconds)
  done (took 9.219749871 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135517364 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108609151 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136972569 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117714256 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107619931 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128644857 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108699216 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127635127 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109719261 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114710814 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128616829 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.250069626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106803449 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114324375 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129386006 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109149727 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107387212 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130062132 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10869682 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107434472 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128563055 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116931805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106900554 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137770646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120314624 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124424635 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109076103 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107645453 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137829772 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107416834 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139399467 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110190518 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110644056 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136190295 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120753384 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107902911 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123254938 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10838793 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107659925 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129614238 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105431101 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13561945 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109874757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105122446 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12780782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109333956 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116079951 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139545562 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114976505 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134039616 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110605489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116702564 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129987156 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109498325 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11647278 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145365085 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117248408 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137322221 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110286237 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136758611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119056061 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123171332 seconds)
  done (took 8.465239121 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104365318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101391306 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10081191 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12283931 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102759742 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101655002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121734574 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103372884 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102532849 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101302019 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123837032 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102881883 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100819499 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120143574 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102479763 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10105893 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100832553 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121920043 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102855903 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102091252 seconds)
  done (took 3.060478097 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.113442222 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118544656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124061238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110638223 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105187332 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12869589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104245566 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104663663 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103183408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126170296 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114058427 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131698887 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104785829 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109466769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132710228 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111937617 seconds)
  done (took 2.763372384 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122584588 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119954296 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210932417 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106100643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125859317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111233486 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104114984 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128975167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104689064 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109678307 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129240179 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108462446 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104309433 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125912604 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105815718 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107289797 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102881683 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129443871 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105310049 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218334707 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108302018 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.12790955 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107697745 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109936346 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105298638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131256521 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110483273 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104158768 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128146161 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104991861 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105912192 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133961361 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104306536 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108580687 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126833435 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106020817 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104059422 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126374794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10845963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104379847 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126689958 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108185609 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104380163 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.126387978 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10417588 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105395244 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102666501 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131398229 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106014097 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106060928 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126402393 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111182089 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107437862 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132875245 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11155976 seconds)
  done (took 7.380516403 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116689168 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106334246 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136786048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105883796 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107004382 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105858606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12637311 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1082391 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105346394 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124527878 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10613792 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105714815 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127862648 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107147927 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106502531 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127349678 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103964197 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105236061 seconds)
  done (took 2.956550154 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110766035 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104569901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108057383 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126922144 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105010873 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103574458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12648259 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105037776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103475487 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.125499724 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105619257 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104669308 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103191655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12597731 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107001739 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104292223 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125282209 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106624862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103877616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124456453 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106797673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103678563 seconds)
  done (took 3.366270872 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11787834 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214773225 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.112173627 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223930217 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.102109496 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124303041 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112697131 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.103186031 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140757436 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101542842 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100043698 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122257257 seconds)
  done (took 2.501567961 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133093984 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141663073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127365886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106905182 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113787957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131057266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110752397 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109421371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14091316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120940627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131828587 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118995937 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117730804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140024948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114913672 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136394062 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112780623 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110347479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127937917 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127001763 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110983308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140271815 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110366599 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131564559 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111129424 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117702972 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138973267 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12335127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131247005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119568965 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114618815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131930315 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119290455 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143372761 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108275212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117514196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131635245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12581142 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114647154 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139649148 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105643148 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13529039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119957472 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114634015 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138790733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111155116 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136929716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111762546 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109828196 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153674262 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115727947 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138074362 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116018957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118696315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13911368 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132214775 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142412223 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118258051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135019208 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121628223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118494639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135999622 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11975048 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143688037 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115531728 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117656689 seconds)
  done (took 9.147947159 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145061122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106706418 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131082077 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123441358 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138126142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112489123 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110730265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131274715 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111947071 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108229937 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175949632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110758741 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139757479 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119512995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109857275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132248875 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11154543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118172454 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128715712 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132197837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132017409 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118746814 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118423611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141223569 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121863556 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136259089 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111217443 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111094339 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131872251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111448713 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136569473 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112904126 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118162343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126995865 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121006008 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109762691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133041562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117502248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109556954 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136751799 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120572042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146831165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111457898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110823444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143190361 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113575087 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130779962 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109248874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110504615 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128239974 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125654344 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12128352 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143879448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118799573 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13190042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110592875 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109706399 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132966148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113301253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115685313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142310369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112141318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152936779 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110797422 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110662676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142383211 seconds)
  done (took 9.10905687 seconds)
done (took 172.961487727 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177491247 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216381276 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19822669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159651195 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097018591 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.153497866 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.130318982 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199479206 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097996825 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095967538 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09748245 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.123391615 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164005902 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09607064 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120308626 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100309434 seconds)
  done (took 3.156550196 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199139023 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.347429655 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112857549 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.125329249 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103362422 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101623448 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125813837 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103901122 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102141014 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132118607 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102815768 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097329667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132144527 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097902698 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101825853 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124635182 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10981219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102793358 seconds)
  done (took 3.264747289 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124533634 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153753035 seconds)
  done (took 1.218830048 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13354962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217328091 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297650014 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174191357 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122907807 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14225443 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152755329 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135896591 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193633273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136342675 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114790902 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099654324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150100563 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107711972 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139514965 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100664266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129851929 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137518829 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116917478 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10297721 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147824787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105851812 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107360964 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139875815 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182799791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137983165 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106244568 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.126122164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.106038928 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114775119 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129886344 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120117631 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113616526 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180731478 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125886874 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157736278 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129966828 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.103259623 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115617354 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124344834 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.107082757 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10571749 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138030561 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100795085 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105292522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131136233 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10608859 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.126856872 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111666724 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110252841 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132292792 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109860139 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176766663 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109937044 seconds)
  done (took 8.097920967 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.886478359 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150497379 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100993006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.024614254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146155821 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115221072 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.864268668 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149325866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257932362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.890157498 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117042989 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131480775 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241106935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259889759 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.287809668 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362466495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.734729387 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116055481 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132984489 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164543983 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106863319 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142785159 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118672351 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518566112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10280413 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102087094 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129704343 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11095598 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182748198 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102748911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12770135 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174997572 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29399787 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21169667 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123339581 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10355843 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101926194 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187802886 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274808132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222083741 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197830535 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09945645 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101590224 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129211089 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118312955 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099042923 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180524789 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192930579 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191632248 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108012785 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109364485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132297026 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106593307 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180527436 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100035851 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359581129 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385735697 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103559381 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108408585 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136408492 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272088659 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103943607 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239138999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145815231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219449664 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102686455 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846903592 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189184004 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10280076 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10700593 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129720235 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109506946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127242766 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170790484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.497461001 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110629765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10659073 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125042957 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235924837 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104244259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101820286 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184188741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103282546 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131068236 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111276398 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130031773 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171106477 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272743706 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108231682 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130080915 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.109064759 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134717187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.105865049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236508389 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23135661 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176171253 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211559135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129544416 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159575333 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187304207 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127546921 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168638733 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128865816 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115574345 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106916629 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248301334 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138647248 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103161084 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130219454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108875922 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160299575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10672227 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107895861 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191505563 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556218704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18574425 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10033131 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106670134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131786457 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160781466 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132192075 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269926937 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109696996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188784399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106746515 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122934589 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11003401 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183589159 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110429228 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129632303 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108650868 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111705661 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282337387 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224394468 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110615617 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254435213 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.20360683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106467427 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193317379 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130235312 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170561053 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133803654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10668112 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103588379 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832824046 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138069022 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109080346 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128659409 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187026928 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101898216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12708749 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103559985 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102091507 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821788798 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129786312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101622967 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104683838 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130796453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109129495 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107736169 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130983959 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159598647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268994071 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112518891 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107487839 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126426942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159231138 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126597006 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102520996 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103537267 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126811174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110509541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107255669 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128137975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191280189 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15916683 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232954949 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.655691662 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125832304 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103063049 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244981732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124837936 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330027337 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109860477 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236653393 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186120572 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100070995 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.384967695 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167078316 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207899181 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107057347 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192868469 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100939824 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131182303 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158266279 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125331701 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110460862 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181227799 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112890983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131139097 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284078899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103691856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256044509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102326219 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192634908 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105244071 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130666308 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33082251 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103834566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114562131 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180666012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12978959 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10688001 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.633320041 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105161321 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111656207 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131592536 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23481802 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187542686 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109541625 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131046891 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114597057 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182070436 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211861888 seconds)
  done (took 48.146861601 seconds)
done (took 64.817676175 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26714059 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173277181 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.379419059 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180137617 seconds)
  done (took 2.038554203 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.273279722 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169995278 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.255627583 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10066847 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.263681045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100085954 seconds)
  done (took 2.126703167 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180667661 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172699945 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150115375 seconds)
  done (took 1.476155794 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212643614 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209358252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352126912 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262256146 seconds)
  done (took 2.093238438 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.290027098 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119412444 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128491122 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239103653 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.255029768 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209457568 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12621107 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176758701 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132135371 seconds)
  done (took 2.685840633 seconds)
done (took 11.392200009 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.426546873 seconds)
    (2/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.334802776 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.24844723 seconds)
    (4/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.263916976 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.170307332 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.404394186 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129331936 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.229878635 seconds)
    (9/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.328512015 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116001857 seconds)
    (11/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.281646922 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.360679432 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125086417 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.137746138 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.291743817 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.305500915 seconds)
    (17/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.191360718 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.327962618 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.314864767 seconds)
    (20/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.196114291 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13905385 seconds)
    (22/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.235037402 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130420278 seconds)
    (24/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112694507 seconds)
    (25/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.192663781 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195306705 seconds)
    (27/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.141058945 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124141317 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13144961 seconds)
    (30/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129197815 seconds)
    (31/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174543643 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108773283 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.199822681 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.192583212 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.210671873 seconds)
    (36/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.1394206 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132160418 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.144741495 seconds)
    (39/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.180729112 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108890425 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102931326 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115154788 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.185993052 seconds)
    (44/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.22558165 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10669131 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.305003477 seconds)
    (47/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109250185 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086303782 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.199087689 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189517818 seconds)
    (51/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103547997 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113177663 seconds)
    (53/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087402282 seconds)
    (54/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130506106 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.131050648 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106390522 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.270511637 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086559886 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102873646 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.192125171 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107137652 seconds)
    (62/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078543842 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078722006 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127630942 seconds)
    (65/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16239603 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087537111 seconds)
    (67/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078744583 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.150777227 seconds)
    (69/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084911647 seconds)
    (70/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.151682048 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08669544 seconds)
    (72/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.173347382 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135324514 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111275257 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148466504 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.174397106 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082611599 seconds)
    (78/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083889499 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.132519366 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.143109337 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132278012 seconds)
    (82/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.137469263 seconds)
    (83/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.137753563 seconds)
    (84/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079808682 seconds)
    (85/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084942376 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.128488481 seconds)
    (87/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113727413 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115088713 seconds)
    (89/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.144013001 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.253594227 seconds)
    (91/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198682753 seconds)
    (92/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106430107 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128996593 seconds)
    (94/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.162756589 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081685591 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.133751147 seconds)
    (97/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.170390108 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090505255 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082794667 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114526882 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.174207407 seconds)
    (102/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134313049 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113995253 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.10953797 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.277619519 seconds)
    (106/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.144778189 seconds)
    (107/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113675259 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178806449 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.139043343 seconds)
    (110/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087555654 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087375129 seconds)
    (112/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156918843 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.136942391 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.08168988 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142993124 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130271057 seconds)
    (117/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.087012714 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085819389 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105858996 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110469561 seconds)
    (121/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.089771465 seconds)
    (122/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.133484676 seconds)
    (123/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.08320722 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081094789 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.107901401 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108724526 seconds)
    (127/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082020604 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.126184659 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128451756 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126105102 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.200486948 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083588239 seconds)
    (133/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.082250481 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082828978 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111405453 seconds)
    (136/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.10583467 seconds)
    (137/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088481662 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113787181 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085629348 seconds)
    (140/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15708721 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114457441 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105612593 seconds)
    (143/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110830854 seconds)
    (144/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.08344788 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10725654 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08235923 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136515829 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106395846 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164493081 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.133483544 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088369597 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112228554 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083399047 seconds)
    (154/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109593915 seconds)
    (155/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080324883 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106926061 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103985936 seconds)
    (158/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.110829337 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084267697 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081237677 seconds)
    (161/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080875517 seconds)
    (162/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080127638 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.109108726 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113033396 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128468821 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106169959 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129232934 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082317853 seconds)
    (169/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.087329656 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.128301068 seconds)
    (171/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.141506449 seconds)
    (172/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081849769 seconds)
    (173/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113993669 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.13666577 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106488903 seconds)
    (176/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085724281 seconds)
    (177/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087145691 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149273127 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.087571746 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102955509 seconds)
    (181/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082886446 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.138226337 seconds)
    (183/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.107197603 seconds)
    (184/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081999333 seconds)
    (185/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080621767 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106948347 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082543454 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103329276 seconds)
    (189/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.080748046 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086673314 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130682691 seconds)
    (192/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113035708 seconds)
  done (took 27.628865365 seconds)
done (took 28.609638409 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229907653 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130672597 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114417306 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112499609 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235307461 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120318012 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155543634 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116115749 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122862019 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.14007397 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104664995 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126606112 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138512524 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.209970312 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142002654 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106440935 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104361136 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149085479 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12993086 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129955004 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.236648621 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106193813 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149277155 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105757448 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237622628 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107121508 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112616121 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.142112193 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126067575 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11328614 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140592998 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10639124 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129243178 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.155047777 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105230018 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114235149 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129686552 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088413114 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114151946 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.138584485 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127930561 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.116087308 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137405711 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10812867 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115159584 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135867922 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107159445 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117626374 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103787441 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139740837 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107607162 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129203632 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137678668 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104062144 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103296751 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130467459 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125849826 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103796718 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.15191406 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105710258 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106147812 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128553672 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116100195 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104996718 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.135668794 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.108582392 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113751639 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115799229 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.137152458 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107605396 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105295802 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13844548 seconds)
done (took 10.319361024 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111225061 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149627359 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.237904695 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.240095379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133313685 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147236287 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119649913 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129014823 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144277047 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124742212 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142779887 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.164186466 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.2429253 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122320111 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121641436 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142593439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117003105 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114965569 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.237853357 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.155942761 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133014873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121783217 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157465938 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122482927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108299119 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16936562 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113415184 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11667502 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133465102 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118668367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153598014 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110820115 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112874922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152177218 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127578586 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119646275 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145233242 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119447968 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10964952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.134151294 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118939005 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124761395 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.134625706 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123192096 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116441544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150651246 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117320062 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121946038 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1355321 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118434414 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111401395 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159377488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12184475 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124482412 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146722537 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121403335 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146753196 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124468778 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112100643 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121807845 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.134393927 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109017354 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110389494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155928426 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113713493 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.145143501 seconds)
  done (took 10.008732141 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130385313 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139566056 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144426049 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122015884 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114854535 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127434007 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104066188 seconds)
  done (took 1.899950451 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107018823 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.24597885 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220062464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248376943 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.244943993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258243349 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128249114 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104634538 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167812545 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115364266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248943916 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274822114 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116301378 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.1467272 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.224850541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131039971 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.249117485 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.107483581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119523266 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249446827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121319326 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162738275 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119781502 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106958261 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242915774 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105949367 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.295636143 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151754415 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115414741 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119098251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14779824 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186732874 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244011179 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145561537 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116312946 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.246553793 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218095617 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146496879 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.258959435 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.111430571 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.243723803 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120387547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120823904 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147273008 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122422787 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.23574006 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124588869 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120657769 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.147404576 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.252307286 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.118803054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.245678271 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117930086 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119614167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14326241 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122649737 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126200227 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.148059344 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.227726445 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.151609141 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247516708 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.222754752 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246409289 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249645497 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129297762 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248985977 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234663347 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119945177 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114388418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.150183414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.250641292 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120489087 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118432477 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.241400073 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122928184 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252400495 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250696363 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117169991 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.145208575 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.111798872 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118848858 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.133104549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.21496781 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146653537 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119356492 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12416848 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146535793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121577081 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111276885 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.158198639 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121121061 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142857682 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127350009 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120838413 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148239707 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.227656171 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.14421293 seconds)
  done (took 17.378118635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108941787 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10787899 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111788839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13379814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10831537 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108490178 seconds)
  done (took 1.722165398 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147503112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.122149647 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15506149 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122772951 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.193418081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.229931669 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26217793 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113933804 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166858233 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133315436 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255780495 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260758858 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.25642917 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125858719 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261380965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123646927 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.266508427 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119521721 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155808516 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11931029 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120790677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151086859 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120128835 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.248598597 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122310779 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12265107 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143603148 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129624376 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15464136 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117727431 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124322004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146261552 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114780357 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115759921 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.260846026 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112242924 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14378282 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124527025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12270648 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.149429853 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.262993816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120477277 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127797213 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14989761 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117408733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113053877 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151090094 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115026343 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262733935 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124163514 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150132899 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123628505 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122233527 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.151341819 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115665499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11588429 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.169102078 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.264049675 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126904052 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113916441 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148913068 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.125081947 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11616484 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151813957 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122892538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123900565 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139971857 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124047197 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119650628 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.148317892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125986547 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121601824 seconds)
  done (took 12.049497681 seconds)
done (took 44.071739081 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.582936709 seconds)
  done (took 2.632734659 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.16638387 seconds)
  done (took 2.214711866 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.012007916 seconds)
  done (took 19.090347103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442523006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482073338 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.169342035 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152646479 seconds)
  done (took 3.292425036 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.850568374 seconds)
  done (took 1.917373404 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.345374923 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259173736 seconds)
  done (took 1.654285424 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.740654614 seconds)
  done (took 1.80425581 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.574056851 seconds)
  done (took 2.63003798 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.296001389 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.25028908 seconds)
  done (took 1.61359332 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.649747441 seconds)
  done (took 1.717136367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.947296591 seconds)
  done (took 21.019097899 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265929311 seconds)
  done (took 1.34160442 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295808739 seconds)
  done (took 1.370617518 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.616279249 seconds)
  done (took 4.691010642 seconds)
done (took 68.049225197 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122702284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125778619 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.148507736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125092558 seconds)
  done (took 1.581114323 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12711281 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122926089 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.151462266 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121766189 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129110844 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146332174 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123268468 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.125195697 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119887012 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150573348 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121722628 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121246112 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151080634 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121140882 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118060864 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.15213831 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126445647 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121189782 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149034895 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123395761 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122360825 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149207821 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125673476 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124491556 seconds)
  done (took 4.216624209 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11946775 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112734865 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113348314 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.137966543 seconds)
  done (took 1.560007494 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130227632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135498727 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.157026322 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130244561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134630744 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.160686081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121623806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118032635 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146277713 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131473725 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137943337 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161383734 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135852519 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.148332137 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133999284 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117035615 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.149155038 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135302741 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128262277 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155717588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123825712 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12872583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.152359558 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133282783 seconds)
  done (took 4.380076854 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197925173 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132492259 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180439973 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166742381 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.18291282 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119920608 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148824809 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15542721 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129616669 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149686999 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124424352 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166589597 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152870402 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123054046 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121828452 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152279414 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134812798 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152210107 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.168109226 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125674605 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154569048 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133055722 seconds)
  done (took 4.355259759 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12558354 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111636131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135697385 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11132548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124124708 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140026172 seconds)
  done (took 1.830212755 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111918425 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106032247 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106200944 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131488574 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.112405164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105684845 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129613342 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108304321 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106953538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105839802 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131469524 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106082149 seconds)
  done (took 2.437251113 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209595267 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148548455 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286136713 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371314682 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193670904 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190054072 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291689874 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194958591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207568631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141422147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216226141 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165794473 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18337807 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190029055 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168683849 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161371177 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195044699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210536631 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172556386 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243164634 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160933202 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204291667 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191288907 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180590015 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142169084 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194799137 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121787176 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157837039 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173716443 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195231743 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206801217 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154679288 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168868216 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199493561 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264887795 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210118673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272773546 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137457365 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200085967 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.197862803 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262481555 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171286771 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226349657 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155697753 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159701782 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191698245 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185871821 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186670746 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.163295449 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147545811 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216202841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208475055 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175241614 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166500758 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303458101 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163213333 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145047166 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209437917 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219526495 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202526757 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209051167 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124822136 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204565584 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221176189 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242721248 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146955944 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193224677 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129053349 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194484279 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210652712 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213578511 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16189087 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.268578502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137137834 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174192924 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198567804 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184286216 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212406625 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202921506 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122975058 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183676981 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13718692 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129588936 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218267146 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124316451 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246723037 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13362736 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342412457 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210009056 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183331676 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167394939 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190883425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166992115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177726135 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104191891 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145825505 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.191295229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161928315 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158205213 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158417239 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169743054 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130209753 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180945914 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126710893 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172214903 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.164393371 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167919752 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202614227 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133275218 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207593379 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151187382 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.192754768 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198307589 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196531225 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160455005 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136378673 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249298005 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171294541 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166472513 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176298765 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224980951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177645699 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138802634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19558137 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197610547 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17256592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201430245 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169336761 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137611435 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171033932 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175805954 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191365316 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160692321 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156574368 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167014243 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22117986 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128761599 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169570571 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209837953 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137001579 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126279921 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166134728 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139055561 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170048061 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152660966 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141170018 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183606083 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167548715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194347044 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186468646 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139274111 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202221108 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134142869 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194445831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153838707 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120771271 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205257538 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227006848 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131911779 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210528811 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165993523 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211594284 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201831237 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133137088 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211952969 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132019446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122688872 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192362148 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170825046 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193795957 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217727767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18243241 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197640593 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191642818 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152777762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201025747 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184460373 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186433903 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145438336 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203464094 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199719884 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125014444 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125372105 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156798396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140514867 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133334683 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1666266 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183785237 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195892818 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204857276 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169385674 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168284316 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217990781 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129890464 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16336096 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20582269 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140407249 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218317184 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220155835 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180464719 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171820134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164727896 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150107034 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128743837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13641068 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191005742 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138562469 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165258599 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144086974 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221501282 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202160646 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152554552 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218385423 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197180367 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204028903 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150266138 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164459846 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197315495 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17182867 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187213856 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162359885 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162953367 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222225111 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143517507 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223591546 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197610048 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180957602 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226494307 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197860606 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137389416 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149175372 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190742207 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140837667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193705221 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148541325 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160335975 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15621067 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.16795109 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144534617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219696898 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146767834 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208887483 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187905724 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176197175 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154485668 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145390234 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20265153 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149145752 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106105397 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201920249 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22591309 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153102389 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188134373 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176894441 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159498768 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318653701 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219269816 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180358785 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167815318 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140490882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202839683 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161962557 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195196556 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214361823 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145692081 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238595057 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173804939 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.17227775 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133338363 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177825428 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154714074 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168153269 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.155294666 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192419161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147185786 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222082623 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139338542 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201596928 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178494084 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.17619721 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152448299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167502624 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22897319 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198764904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209817726 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.175446806 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195642714 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186474649 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153033269 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131321606 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135605943 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215445471 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130792085 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209014436 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192938352 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21390871 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179213376 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19376206 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143858489 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129141965 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198065502 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151029299 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215243145 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165528693 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141723091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221835406 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130632204 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131965643 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192192622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316237462 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150051547 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206512966 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108247116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313149321 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132995882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134662263 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191098153 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200616882 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136936137 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18465246 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205602963 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142780374 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193316375 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13781345 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209593091 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214539164 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170359887 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20773505 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148806786 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19402157 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190995628 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177315651 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175635249 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151302457 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160533026 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223715223 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20763899 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133241396 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199084267 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172382932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201943804 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17787879 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169390873 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185900345 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158957582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168024587 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169010042 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126900791 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192325398 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168467243 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160976527 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178448785 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200573823 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133771271 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157002113 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151176144 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195830787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143483538 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132041103 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217637495 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159087213 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184343846 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244556561 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13158336 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197453178 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148959489 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161473594 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142923145 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145690613 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162609499 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177514795 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21468735 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134124909 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207469776 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170022958 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196305008 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18759879 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147362369 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266982589 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159782295 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193442797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18306556 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229082931 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155450657 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206074247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172374371 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183160681 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168874413 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17880687 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223326899 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197550756 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168703806 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162931485 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147453376 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169007153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138067186 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155926297 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200352446 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144516525 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.169253281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.171068661 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17638314 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14938747 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17078629 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203500425 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183604817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219155645 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191342388 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168644131 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179459186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208048557 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131977548 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.197006967 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177002539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175863741 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154556868 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164588687 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140421209 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246660988 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129229481 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191942527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178081863 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199207278 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174863045 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.166633579 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180992966 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171979877 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178874243 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157231705 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157743406 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199613985 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136866523 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127951524 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203131613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191011323 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16771174 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144101786 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.20741961 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199946833 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153921546 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136435968 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316956199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164784088 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228273104 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137007596 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169462056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148169401 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191536819 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170336624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203265328 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132790404 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157734486 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.150562284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183285329 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14484545 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196732059 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186838807 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193399705 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189744822 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16401808 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257345499 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14403206 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202306444 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118113218 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.161569941 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143521791 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16458842 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14751892 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209273603 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24707743 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167825285 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177661663 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139971676 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129268052 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160190136 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168269439 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182348382 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173637509 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179177984 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105371073 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142562149 seconds)
  done (took 86.999871351 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203687304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.161839831 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.172447868 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226815258 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201116204 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295060412 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232850423 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252195374 seconds)
  done (took 2.915937246 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122567641 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162778945 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145643133 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148013577 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.113722208 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.495084993 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162764393 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124199305 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16450742 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154882289 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139859815 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.580043289 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119463317 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146615904 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124603988 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139148154 seconds)
  done (took 4.206004017 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.258056232 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548404453 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.048837634 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.287907339 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.272930918 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215775121 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.782170539 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.212041636 seconds)
  done (took 12.788243265 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.177659704 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172424109 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462351213 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.317354897 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186480563 seconds)
  done (took 2.484466533 seconds)
done (took 130.815038174 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129421574 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128245892 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12648247 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158233749 seconds)
  done (took 1.699568 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.198303134 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093324658 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095240119 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120484279 seconds)
  done (took 1.678062234 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47027923 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09244562 seconds)
  done (took 1.75993389 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152136271 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145353866 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169273348 seconds)
  done (took 1.649001284 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139713084 seconds)
  done (took 1.3096278 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121473849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.135802659 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280679937 seconds)
  done (took 1.711708255 seconds)
done (took 10.983057719 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125412626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926869656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437213726 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138718222 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715218301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430447098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.425863869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179714731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177855637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141214314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13623774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691623704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.438490908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881466594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.411605526 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906366915 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701002228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115507909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150549875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116375486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404702557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140782488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115714816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115469747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723529988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423943464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112829631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.925808459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113357246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116699177 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432790611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119026627 seconds)
  done (took 21.158813283 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116664246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171826694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149987376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115976825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116812745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14367455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125735615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127027609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207674311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112841562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165027522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113463595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118504529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142585479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139233617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113461422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.146127115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117609056 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121472966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144570961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137351764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113095872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144888595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117405236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114036094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16387213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114969027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127558247 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143406813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119203677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117921404 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143939826 seconds)
  done (took 5.446432855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164592543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18034784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152272173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151879189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193062389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117075013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229942965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155306432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209834993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115294616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135011494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142318755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156476665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115083054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169563882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114029099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117338392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145347686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122767132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115480759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164988933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115353416 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122851024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145305212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11462983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164076134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116714609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12612755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.14218593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119494009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119520135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142411931 seconds)
  done (took 5.773358904 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129247374 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129610976 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135436001 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165369592 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123324838 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127199585 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158007628 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123588821 seconds)
  done (took 2.267330467 seconds)
done (took 35.820424196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139501252 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132224902 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13399465 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157211974 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.257752963 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12370444 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.132246557 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11930497 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159861649 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135968954 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116224594 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153037901 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136246156 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125062796 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.260808843 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128322568 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265289795 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262576466 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122191041 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129625489 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154226606 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234809674 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156006524 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122748013 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.259112027 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117090894 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.254290782 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124904244 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124585475 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14528889 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232566417 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157871749 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123540629 seconds)
  done (took 6.568354506 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.246837551 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155800011 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.125045905 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12313635 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.124616111 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.154098364 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.250685558 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153774245 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.124478684 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122423987 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153110588 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229712717 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160397792 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.119265786 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12456094 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112146503 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.284051986 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.154802241 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.116654266 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096211436 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118023085 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.152854784 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262988011 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149887554 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123082732 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122263688 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154300023 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128735224 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12527019 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124689389 seconds)
  done (took 5.789338614 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129013976 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137700496 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.168962719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.193014872 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153245753 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164621575 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143321491 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137096992 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175348613 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118426822 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.132262051 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182838132 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133577909 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126533549 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14634323 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135166069 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139198728 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147205172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126052286 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133767352 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168077231 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.135548836 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140170707 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154402602 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115473992 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124403134 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157489091 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.129325234 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123530824 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161718214 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119413601 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120351312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148588366 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.152972167 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117936845 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160801712 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143072844 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128577011 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160686874 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150615007 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12045921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149856264 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143861166 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171548536 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.151004817 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129210024 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128458891 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161988495 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115307552 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135011817 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190286865 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118118523 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.167122468 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118872369 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11670245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125810928 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146815021 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121370182 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131476219 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149362955 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142807356 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123500386 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157809761 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119261157 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127922093 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144969448 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117938936 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120227055 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171534981 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125996798 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154077738 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116225674 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.160183276 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129780611 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127663313 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159892325 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117063917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127468268 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158411018 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124813041 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129654414 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149761334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121635693 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133109848 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.167342868 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131949115 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128391175 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.158717005 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121544457 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118029656 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164056189 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.119332139 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122331975 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157932667 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118366918 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120659284 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12902947 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.160748082 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115329996 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141684332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150378819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117440821 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142342398 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.150851257 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12263902 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125920775 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18888561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117483758 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127740859 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.160222327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118444921 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125249927 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.15085187 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118287022 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134840569 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162636143 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126658977 seconds)
  done (took 17.509340412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.361903483 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.348305718 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191990877 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.43837293 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131589968 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277147431 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345860209 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.34792413 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117236523 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183123966 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178324336 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.315589066 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.15023212 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147661683 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350108268 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.407186881 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180181007 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.154153558 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185649018 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131994581 seconds)
  done (took 6.154161265 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140013477 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153001457 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.170924852 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146492156 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.128105182 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165313955 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118416549 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138683768 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159986258 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128284385 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.12055581 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163598526 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130652826 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133832146 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.164192359 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150221101 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124934995 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153025649 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.142043293 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121670069 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13487357 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144890337 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126597797 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169399735 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136576317 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128700365 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146005904 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123502549 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123739603 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.158037746 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123396571 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136636829 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155965485 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108581713 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129224258 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.163010698 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125805716 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120752663 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123001055 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.152768037 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133205076 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130125195 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.156313074 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10308886 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136676002 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112310616 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.163774469 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131440364 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108228562 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.168455019 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13220274 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131437989 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155053181 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141828704 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123797301 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.164176218 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129410564 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.132806013 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.152570899 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118502551 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11612068 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.150312176 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128596268 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131829319 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129545776 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168628357 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.134433138 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.146184091 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124097137 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121339189 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120624604 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162216944 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13915724 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126682742 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.15446736 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.131601026 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125061039 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125746713 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128462159 seconds)
  done (took 12.099111108 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143415606 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127348694 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164203415 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154924352 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131685695 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152509811 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129235551 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138447373 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131753084 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.169827421 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132445991 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130837026 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.171422618 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129213515 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127635827 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164890055 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132077197 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.18492188 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137991051 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14519644 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163721457 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123929224 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130270504 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.159374991 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148130312 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128809053 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.176070026 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132638913 seconds)
  done (took 5.288283633 seconds)
done (took 54.591966966 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.342892947 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.545896548 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.317543083 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.316270175 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.322261003 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.326615085 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.336347916 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.317408239 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.913102043 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.287838134 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.319071457 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.317456687 seconds)
done (took 29.875490346 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.463143445 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.451697874 seconds)
    (2/2) benchmarking "String"...
    done (took 1.597637532 seconds)
  done (took 4.252262853 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.316320979 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.30230027 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.549893624 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.301003313 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.302791804 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.304104378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.305307645 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.315455226 seconds)
  done (took 16.582710662 seconds)
done (took 26.820019135 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.337510535 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.49246406 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.549194341 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.297927535 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.314603738 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.315440869 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.306302685 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.32488609 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.30613695 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.302458456 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.723232579 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.575267049 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.30757205 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.684250824 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.283441832 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.322665363 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.318287339 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.540418543 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.303910852 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.334581284 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.283075988 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.289418426 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.337762732 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.30553 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.311130184 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.318709614 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.313728211 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.318414286 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.493651069 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.325837994 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.337816713 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.303784152 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.313743487 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.305788627 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.31113246 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.310819755 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.487985421 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.307737618 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.292810843 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.328526737 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.501725094 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.325944698 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.308257503 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.314452412 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.298306775 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.321646925 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.292110328 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.440438315 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.330097998 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.305283111 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.388957324 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.674223611 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.309776599 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.311890861 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.314124354 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.524920821 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.31732988 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.357255484 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.323337825 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.312170252 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.304569206 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.305932854 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.317498896 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.31332291 seconds)
  done (took 150.256641548 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.303864522 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.308460439 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.304150988 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.321582977 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.309741738 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.309170275 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.303789385 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.305151422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.311063805 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.313096703 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.309564945 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.305063288 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.309594495 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.274665088 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.313852841 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.325226005 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.309145327 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.310014553 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.33282705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.304926125 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.326971894 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.304139088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.321114924 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.306586961 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.341232068 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.379658378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.325552045 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.331485851 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.320083708 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.305256135 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.34617983 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.313971837 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.915023332 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.18125822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.318673918 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.324329074 seconds)
  done (took 84.05075174 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.306035708 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.306524644 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306832681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.336910659 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.305924695 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.855152641 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867833614 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.272602181 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.681567447 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.641800753 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.510857958 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.306712946 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396050574 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.319740892 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.310104777 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.398257382 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.332926587 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305647819 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.306312812 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867338542 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.324724886 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.339762425 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.478560304 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.322461838 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337561584 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.697179396 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.304984522 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.307021291 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336283616 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.633581688 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353627442 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305181266 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631720713 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.309624788 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.7482557 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.419597079 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.306524405 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335856583 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.302922634 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.584181827 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.306516437 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.306651645 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.310323151 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935048116 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.310580529 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.845534793 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.306148175 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.235149328 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.306773603 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.305721028 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.298075163 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.977961198 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.31138013 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.305520548 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.30808818 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.306295349 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305942853 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.337830292 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.306434861 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.138859779 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.308397336 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.310091202 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338239452 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.307669873 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.470361305 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306898572 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.816508297 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.364199082 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.421930546 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.856467506 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312897929 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39754747 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423079795 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.306853288 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.307587867 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.308488468 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.307642905 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.418022642 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.308031669 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.973514966 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.478662462 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.325638362 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.601842897 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.314384309 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.401694616 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.309507694 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620919646 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.314322289 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.307030686 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97845127 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400740152 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.307793291 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.30889955 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308010198 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.973354726 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.856145098 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.545413083 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.3135793 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.870884588 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.31416124 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.142666029 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.841872774 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.934105728 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.313921187 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.417616662 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.482888722 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.328488099 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.309498945 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.605215087 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.315242593 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.308867346 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.31004697 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.367719451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.712285074 seconds)
  done (took 388.095771863 seconds)
done (took 623.604614901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.177542601 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.121680251 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.272617144 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.137919495 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.113487726 seconds)
  done (took 12.030680709 seconds)
done (took 13.236600817 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500386975 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505080747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375430342 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508917557 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.348709648 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520985795 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.499371761 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.335141369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420278698 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.395613892 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428181001 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.365746311 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.346084366 seconds)
  done (took 19.758409681 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.603224923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.325113206 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376746306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.594001874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360075137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.624530025 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.652066655 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.325354413 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.477287823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.334493584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334062446 seconds)
  done (took 19.217298099 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.603973441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.32770262 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.396275501 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.589269777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.360766816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.634961396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.676554191 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.325927334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.483389271 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336909004 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334732139 seconds)
  done (took 19.279516785 seconds)
done (took 59.462121402 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.351974636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.414996754 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.349531481 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.331504152 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.330652485 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.329910957 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.334155433 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.329867641 seconds)
  done (took 11.982929691 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.329416568 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.328835121 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.331070731 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328777731 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.329992088 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.329665853 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.32875669 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.330333435 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.330417616 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.329716487 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.329256887 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.330097091 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.331823812 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.328004307 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.33053583 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.330063411 seconds)
  done (took 22.487705493 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.332906155 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.329020427 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.329514737 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.330410601 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.331365849 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.331549097 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.330290339 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.329950178 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.33013402 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.331721854 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.332129716 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.332098148 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.331001386 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.330963416 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.330368486 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.332502752 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.332524656 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.330676367 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.336180999 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.333220924 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.336176447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.33191179 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.332593057 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.3319781 seconds)
  done (took 33.174225003 seconds)
done (took 68.854024472 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.330319458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.331171814 seconds)
  done (took 5.873626179 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.392611614 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.388641836 seconds)
  done (took 3.992313628 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.333101056 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.332523524 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.33334238 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.332120478 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.33254313 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33226782 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.332201736 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.331286798 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.331408947 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.332649588 seconds)
  done (took 14.535372073 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.332534335 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.333422399 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.331692533 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.33298859 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.332108291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.331586534 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.331331855 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.33261719 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.331560129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.331582361 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.333263987 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.334746457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.332482181 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.332797558 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334995639 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.334381578 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.33459379 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.333631372 seconds)
  done (took 25.206546782 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.344512942 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.354114693 seconds)
  done (took 3.912914243 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.460603848 seconds)
    (2/7) benchmarking "second"...
    done (took 1.376396354 seconds)
    (3/7) benchmarking "month"...
    done (took 1.438198859 seconds)
    (4/7) benchmarking "year"...
    done (took 1.430893816 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.375472683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.353955726 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.376049482 seconds)
  done (took 11.025710982 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.321463466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.636365703 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.816589951 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.47654422 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.31200107 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.337832067 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.309462742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.344873397 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.338694858 seconds)
  done (took 15.109239511 seconds)
done (took 80.86638873 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.320046032 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.376734332 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.355763067 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.339285785 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.674904343 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.327241529 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.326692516 seconds)
done (took 16.93513219 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.304166881 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.318951215 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.318920742 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.341449312 seconds)
  done (took 10.499343793 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.32795892 seconds)
    (2/2) benchmarking "read"...
    done (took 1.650292126 seconds)
  done (took 5.193669877 seconds)
done (took 16.907705698 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337376267 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.335175631 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.337483528 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.335435634 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335762452 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.335837469 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.337490912 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.335303564 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.336528681 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.337414912 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.335610731 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.336324261 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.337209628 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336987017 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.336451409 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336467233 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336207642 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.336870713 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.336232109 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337997818 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336128886 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336282103 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.337365352 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.337134216 seconds)
  done (took 33.294791182 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.338543486 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.33615024 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.338038491 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.336568875 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.33753181 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.337599271 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.33745186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.336308545 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.336342458 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.337705677 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336960667 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.336532152 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.337243791 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.337504843 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33738992 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.338302664 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.338182151 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335931499 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337010117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.338247726 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.336899511 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33816682 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.337450773 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335938946 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.337147116 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337861635 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.339018745 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.339100717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338493205 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.338800304 seconds)
  done (took 41.343575758 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.343216769 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.345068995 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.339164753 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.3396878 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.338966167 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.338767048 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.340925335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.340241699 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.33985701 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.33936985 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.339465754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.341185533 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.339440189 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.341354977 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.33997852 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.341941759 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.340846083 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.341199915 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.339933337 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.340295966 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.340123967 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.340633519 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.340549761 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.340788051 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.339901365 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.340263928 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.340785359 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.339675781 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.339448002 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.341868175 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.33934921 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.340056431 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.339433526 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.341395113 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.342800536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.339730414 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.345682672 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.348123458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.340970042 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.341330115 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.3424856 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.341317387 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.342621862 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.343873243 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.340790716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.340871416 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.341083474 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.3425278 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.342695726 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.34288985 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.342698698 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.341769955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.341389895 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.340923376 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.343384549 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.341803961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.342500357 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.343063495 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.344161511 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.342446072 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.344118803 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.344464186 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.342345235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.345984722 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.343788061 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.342592199 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.343177865 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.344509576 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.343591724 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.342910329 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.344049397 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.344751391 seconds)
  done (took 97.826895168 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.343547683 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344318827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.343610445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.341887305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.344348224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.344789206 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343599329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344510841 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343271955 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.345523232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344556833 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.344557251 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343934962 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.345042095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345047282 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.344448938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.344113595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344040494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.344713751 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.345088308 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34388831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346791179 seconds)
  done (took 30.798775545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346494915 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.345854365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.345747757 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346541254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347392069 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34673698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343314034 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.346193254 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346364876 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346079723 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346957315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346168183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34735066 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346385863 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346353482 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348211736 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34556601 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.346904609 seconds)
  done (took 25.459120476 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.348042144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.344846489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.344823212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.346017589 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.344848364 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.348210325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346422045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347272817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.348189858 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.347089617 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.345870682 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346034703 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.346729912 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346269038 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345568207 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.346236141 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.346033229 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345632968 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346270794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345498883 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.345064661 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346594576 seconds)
  done (took 30.844285524 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348229592 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347197628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344617183 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346242294 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.346516434 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.347763224 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.348297529 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.348383196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.34973586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.346979394 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347311111 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347284688 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.350555987 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.345466973 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.348002766 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.347030942 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.347842221 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349071863 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349366269 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349015775 seconds)
  done (took 28.183793208 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347315738 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348542688 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.348651647 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348343877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349056243 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.347773957 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348850101 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348333096 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.348764003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.34724065 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349650417 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350540615 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350387278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349329795 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.348414296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348039981 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34905829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350659124 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.348128509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349168695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351231301 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348058108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350741194 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.348452774 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351036676 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351704066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349692838 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34887457 seconds)
  done (took 39.004718787 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350624757 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352418356 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.351104667 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.351418423 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.352026164 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.351143765 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.349965112 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.352359472 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351947046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35242575 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.351974882 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.351026821 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350705919 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.352281073 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.35130249 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.351608283 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350872965 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.351916314 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352261814 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35093021 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.351709014 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351522084 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.353177919 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353965741 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353310403 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.351466675 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351489762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352055285 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350388268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350087521 seconds)
  done (took 41.780061054 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.37219116 seconds)
    (2/2) benchmarking "in"...
    done (took 1.371214414 seconds)
  done (took 3.974074137 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.352314667 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35126451 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.352337398 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.351555495 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.353368091 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352033903 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.353655152 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352541234 seconds)
  done (took 12.049754234 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.345612238 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.354119335 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.353803865 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.354418684 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.35327898 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.345686578 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353180287 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.358874209 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.34685482 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.348412565 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.351251962 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.350169994 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.347743303 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348581275 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.347462431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350268146 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.355531006 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.356550672 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.352576438 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.354294383 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354051371 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.348790855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349839474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.357813002 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.346881497 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.354861213 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.353716597 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.358818427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349367378 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.352683639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.35033724 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.35677753 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.355495497 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.357091961 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.354921947 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.358478927 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357286731 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353985081 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.355815817 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362033927 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.355955987 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.355075945 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.350526455 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.352227629 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352446559 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361428481 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.355891289 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.355649813 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.347642377 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.353011989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.363004119 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.348232002 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.359389155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353789399 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.355173948 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359754332 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.363309789 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.352158431 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.356343458 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.358971442 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.365761474 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.363992731 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356987377 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.360904049 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357838023 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.36888804 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.359523181 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.364177961 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.358297506 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.357580995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.357267685 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368737549 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.368334139 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.363480963 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358136944 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.356757198 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.351707945 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361824859 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358918763 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.360851437 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.365706379 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358270616 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358977566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368327065 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.352506971 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.362767506 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.358922924 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.359314096 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.350800799 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360509797 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369428682 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.360028672 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.352104813 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.355659431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.355558539 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.361795609 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.350292003 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356407752 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.36204186 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.361034762 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360469879 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354881456 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.360133737 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365157068 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360777958 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.359943551 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.365972845 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.353034613 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.364157775 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.367104939 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359598309 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354623936 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.359053879 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.363575564 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354095375 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.360718745 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.366144819 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.356746416 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.366726998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.361624624 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362664022 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.376778254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.365527838 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.36023917 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.357126131 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.371577148 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362598874 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.359434737 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.366738949 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.36111509 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.362150385 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.358285661 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.367426278 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.35599756 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.365859036 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356546704 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.364472466 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.360928086 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.361629081 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.358419894 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.362113874 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.359687842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.360693022 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.364753287 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.369484963 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.359690075 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.369413914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.362572049 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.359991655 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.363167745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.36789753 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362805515 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.355761859 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.367447125 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.355387703 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36698117 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.355176028 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.366267395 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364073507 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.36308384 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.363274801 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.355431284 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36061212 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.366985804 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.362292422 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.364731038 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.367470636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.364864782 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.363676184 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.356297306 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.367754084 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.356379225 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.359266984 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.371068828 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.364005894 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.366891839 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.362638426 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37148042 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367245425 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367150482 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.360018639 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.365466743 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.371129206 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.367485156 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.37401332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368254833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.365691461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.359308563 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.361128261 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367880816 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.361666994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.372951566 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372615206 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378296107 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.361694638 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.369877637 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.359911607 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.370510527 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.365730613 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.374286824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.366504758 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.365286325 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360037695 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369752764 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.360303461 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.369688937 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.358964889 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.36813259 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.367769767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.366684323 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366565925 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.360856841 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364155918 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.369694298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367345746 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.366460257 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.361015054 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.369692274 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.359199988 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.361569598 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.372305622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.369479921 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.368853555 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.374092057 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364980428 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371138887 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.369185156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.362631602 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.370361518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366744869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.36866493 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37193494 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.368715509 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.364737631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37369673 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.370163229 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.362552139 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.369134326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.377367469 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.367263194 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3636462 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.37349853 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.368445081 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.371020277 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.369760821 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364138388 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372397597 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.37059859 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.377011655 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.363542481 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.372271287 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.364138985 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.372547441 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.36701106 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.372036434 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.369860076 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374634167 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379133985 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.370965867 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36342403 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.372611774 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.369903671 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.369539861 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365396974 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.377704592 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.371897477 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.372963395 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.36849296 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.368190265 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.373909357 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.363804331 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.371252815 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.364132474 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381737112 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.389889443 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.37357139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.376037925 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.37567192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37438428 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.373872195 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.367184301 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365526725 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369367101 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.367620801 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.365908456 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.374559067 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365739226 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.376200358 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371594842 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.374229073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.374845371 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.372221292 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.366897517 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.376404795 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.372868195 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.372512218 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.364142663 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.373612373 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.366663107 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.373758618 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.375325549 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.367876156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378327523 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376481184 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.371051452 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.368783766 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.36926283 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.367781698 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.369231593 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.378257457 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.368512188 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.378496855 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.367893139 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.374153078 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.369579985 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377798718 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.383981912 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.370237779 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.378967859 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.373082198 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.365503802 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.36799402 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377848011 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379452917 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.385796521 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.367440139 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.37910247 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.373313792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.375666888 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.376734877 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.373355886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375527334 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.375284597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.380572097 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.380333053 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.372431722 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377725195 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.385792628 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.374034833 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.376776446 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.367497212 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.377481926 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.383847676 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.371035048 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.375133079 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.370546871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.377115052 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.376782345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.377686757 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.377083542 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.375600725 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.379200887 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.382221671 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379225093 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.375854996 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.379956787 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385413173 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380770769 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.387802853 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.371565935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.382690224 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.377204959 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.371777695 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.371458804 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.372651468 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.379667096 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.369254402 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.382623115 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.376890434 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.374007959 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.378778573 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.384788346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.36841598 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38043039 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396026625 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.367715641 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38221255 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.375002451 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.371680861 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.381680336 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.377378542 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.368913156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.37474776 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.378036614 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383774271 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.371980238 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.380665905 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372116342 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381005292 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.378001862 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.378418495 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.378364375 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.377728897 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.370753947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.381170072 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.378065574 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.388711572 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.37312262 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377648505 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.374937706 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.385220384 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.38951828 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.373400985 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384339824 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.379227925 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.374064463 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.377929155 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.385048203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373233802 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382702493 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.372977164 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377832756 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.3776018 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.382062718 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.383715137 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.383118801 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.372811461 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.375481451 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.382089154 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.380261451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378706618 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.378481782 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.389068543 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.375368659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.374932893 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.38555893 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.377001745 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.387235456 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.374545778 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.379904463 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.377686158 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.383317001 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.381693029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380929577 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.373725723 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.375916212 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.389494378 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.38636792 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.38188506 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.379966333 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.38487846 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.377662333 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379795392 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.381845899 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.377163338 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.37865935 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.386136127 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.375848481 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.378420274 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.378127738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.384749857 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.387426548 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.386058164 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.375377593 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.390754202 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.393205124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390164869 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.374517948 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.378901385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.379519326 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.38570784 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.383470968 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.375633913 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390883222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.389857007 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389121267 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.383128693 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.38304087 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.376725717 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386651269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385189987 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.381912491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.390717571 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.38034297 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39012692 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385737581 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.384944258 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.376116527 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.381276416 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.380083031 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.383561559 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.387893941 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38444537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.387352067 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.382760928 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391117982 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384251974 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.384445179 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.384184772 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.376333175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.387391069 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.377878896 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.386559072 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.387990738 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.379849523 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.389347334 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38627027 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.380835483 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.385825926 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.392900968 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.384342946 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.379605684 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.3839323 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.389783663 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.396126809 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.386923435 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378139359 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.383366001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.388899409 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387323314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.387370775 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.381008169 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.396879372 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.399869694 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380953405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.38475881 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390267324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.396272089 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.386310635 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.386834955 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.384443471 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.386348429 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.391867843 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.386372539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389800109 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39220857 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.383015776 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.388984418 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.381746439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38711459 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.389562832 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398189242 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.389167794 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.384812684 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398413196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.400090676 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388493001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.410118671 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.395461478 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.388190478 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.39590089 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381661325 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.389812746 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.385558207 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.393340516 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.388839976 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.388643518 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.39038757 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.383532209 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.391360829 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.396876838 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.40032408 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.388489872 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.382429436 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.386118247 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.390689013 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.391466595 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.391972171 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.39089913 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.389735062 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.391366062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.384233092 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401597757 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.408325903 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.398480179 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.392227582 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.392705368 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.391269029 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.395053347 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390536542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.397376295 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.389541309 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.391159731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.389572725 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400378272 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.392740646 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.383575769 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.388877205 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.387091301 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.395203356 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.399898126 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41373992 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.395112957 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.394917097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393657379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.390452411 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386917167 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395860634 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392277849 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.387145779 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.388434244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3955145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.393610563 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.393210512 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.387250157 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.399569702 seconds)
  done (took 819.572603174 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392698874 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392695924 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393035575 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393256341 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393745121 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391365524 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392388946 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.39351595 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.392984737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39207927 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391042859 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392476437 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.393220777 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392508939 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392468139 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.391918879 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394757051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.392858244 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.392825074 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39243135 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392593173 seconds)
  done (took 30.51116439 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.394119375 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.393496151 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.395004484 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.39453947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.393855709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.394673889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.394175851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39409307 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39378687 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393879604 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.395790298 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394940663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.394663695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.39590526 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393887387 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.395156893 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.394879155 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395161665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.395365911 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395266097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.395678051 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.395828296 seconds)
  done (took 31.950584308 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.395592298 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.396672367 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.387907562 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.399018241 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.39567601 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.39605626 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.395834075 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.396741128 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.394874999 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.387723848 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.389399221 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.390251022 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.393702177 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.40173699 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.391231401 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.400904247 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.397128498 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.398326087 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.397094133 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.396336468 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.397965227 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.408703539 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.397388082 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.38769265 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.397848372 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.396802285 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.396631421 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.397432681 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.389913852 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.400200659 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.397645664 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.390095163 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.399415852 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.399272233 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.391573893 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.401184569 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.396511952 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.397029636 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.398135976 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.404065255 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.414537402 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.39663535 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.40044748 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.410552725 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.397605794 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.392282816 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.411842912 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.396980657 seconds)
  done (took 68.338445108 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.398611117 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.39690612 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.396988291 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398417862 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.406817455 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.397227736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.397606834 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.397502326 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.397713632 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.398184092 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.397953801 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.408341351 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398513356 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.396952285 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.398351211 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.397402167 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39678106 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.398253723 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.398091512 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.414542524 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.396644306 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.398317021 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.398805399 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.398088501 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398139502 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.397334355 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.407767996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.395885271 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.39779271 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.396475487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.398852737 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.397979354 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.399299679 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.401560994 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399889415 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.397531368 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.39903498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.39899559 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.399175818 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.400358531 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.398979179 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399068803 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.399967662 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.399192187 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399431181 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.398264352 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399672638 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400200324 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.399593882 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.398834666 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.400671117 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.401000086 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399943843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.400871677 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.400792594 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.400636699 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.400176634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.399913374 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.398809494 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.399989225 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.400520503 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.398610373 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.401403354 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400036339 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.400616316 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.400143906 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.400348708 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.401062492 seconds)
  done (took 96.43776362 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401150786 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.400956473 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401867884 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399987333 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.402078315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.401346254 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.403590974 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.402221139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403123663 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.402501897 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.402436931 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400387005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.401111722 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.4023023 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.40227834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.402761885 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401542916 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.402283866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.402864921 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.403131268 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.403313136 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.404140507 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.40345759 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.402811234 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.40355413 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.401614423 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.402747945 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403148666 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.403516005 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.40375693 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.404010132 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.401890107 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.402617017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.40173133 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.40253886 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.403144467 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403187742 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403875366 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.40526346 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.40334822 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.404385942 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.404257716 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.403441202 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.405270729 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405560812 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405112642 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.403683589 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.404775382 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.402948421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.403642571 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.403816663 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.404099344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404643029 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404892779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.404119473 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.405280837 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405304482 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.405992159 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40581052 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404098619 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.406327896 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.406319129 seconds)
  done (took 88.279727657 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.40674701 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.4053054 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.40463705 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.404423635 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.402795696 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.40610411 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.405424757 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.405367008 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.406783174 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.405288441 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.405369513 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.406364539 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406007801 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.408183193 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.407005401 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407705164 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.406088679 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.40652932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.406688147 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.407539255 seconds)
  done (took 29.393593919 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.405255969 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.405646988 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.406813828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.407127341 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.409117272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.406201873 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.406467067 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.407011484 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406935185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.406144079 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.408154068 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.407771705 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407338938 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.40649537 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.407720484 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.40783981 seconds)
  done (took 23.786643245 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.407272083 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.406340587 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.407445344 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.408601458 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407874429 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.406352713 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.408111343 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.409010023 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.408313652 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.407574323 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.409408133 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.4085636 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.40819841 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.408081854 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.407217213 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.408947643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.408256451 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.409045859 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.408859301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.408720928 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.410628983 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.40656346 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.408816327 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.40832526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.408505588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.409927266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.407652756 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.408618977 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.407841314 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.407798664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.410206142 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.407967868 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.407914062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.408890802 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.409419894 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.409311749 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.408654468 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.410122435 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.409386212 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.408509096 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.410728761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.40925476 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.410812459 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.408594417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.41002629 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.409397779 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.410215361 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.410799202 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.410341124 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.410569608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.410842117 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.411400513 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.411293692 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.410797164 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.410555022 seconds)
  done (took 78.770040651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409916964 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.411547761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.410050177 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.410810925 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.410083556 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.411890656 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.412297571 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412168926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.412060993 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.411189472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.409126281 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.411616542 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.412161021 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.411768798 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.41041987 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.410578819 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.411032397 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411455015 seconds)
  done (took 26.680122178 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.413163391 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.411897286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.41217647 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.411298472 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.411585319 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.411803095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.411158145 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.411704087 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413403071 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.413738081 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412126858 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.412209862 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412632007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.413214723 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.411994405 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413136754 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.411695156 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411997146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.411644746 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.411725009 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.412293653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.413860257 seconds)
  done (took 32.350315603 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.404378721 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.403441626 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.403604211 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.42154776 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.419421 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.403347891 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.405255967 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.404492487 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.425990762 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.442201446 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.436487774 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.419525349 seconds)
  done (took 18.271462419 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414737044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412265208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414249672 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413362162 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412283491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414513119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41515262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41422021 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414007191 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414234913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414296003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415640287 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413701109 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416783962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41525164 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413781825 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415381366 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415629762 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416266173 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415814609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415181095 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417161402 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414798672 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416481735 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415632016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416087705 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416230796 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415376317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414790849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416160005 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414888465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415102485 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416817225 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416273019 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417080745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41432839 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417191505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416941095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415852622 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41726431 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.41522948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41694743 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417368781 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415160064 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416232377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41675123 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417121082 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417013932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417015638 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417558562 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417689021 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416865555 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417914359 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419248455 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419131271 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418504758 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417171587 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416757788 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418408874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417121908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416843713 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418142449 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417823337 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419412234 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417792967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418279791 seconds)
  done (took 94.748474657 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418571143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420344299 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418218202 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420404546 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418893291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418649541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41856375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418823387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420699397 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419275253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420167963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418383748 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41890188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420836143 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420213183 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419323365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420591476 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42038924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420300621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419280708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419278107 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421055885 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4217897 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418393796 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419856222 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418859649 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423034288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42147611 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420903814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41996808 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421055262 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420438405 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419424543 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420344431 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421144359 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420202582 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42129813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420359935 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421287604 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421056216 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421586305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42092676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421931597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420397541 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420759052 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420630885 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420760493 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420413688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421960778 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421503174 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422594715 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421836946 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424191754 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423584102 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422036694 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42299135 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421782664 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423037805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424531943 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4226707 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421679691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422323461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422913159 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42217348 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422608738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42266872 seconds)
  done (took 95.063635762 seconds)
done (took 1919.929694148 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.57891243 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.535272029 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.413301165 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.427425001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.414900716 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.412342082 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.426931546 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.41340556 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.415275523 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.414693609 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.414389585 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.605775144 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.446369399 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.415439145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.414735427 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.511339053 seconds)
  done (took 28.551276778 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.442805503 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.428083948 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.537758877 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.425330768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.442296318 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.620666091 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.480959601 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.423979746 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.597172196 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.443370545 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.410178481 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.456495597 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.420881381 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.409545646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.43953645 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.615212859 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.702286389 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.418742013 seconds)
  done (took 31.00535884 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.880498597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.445815042 seconds)
  done (took 5.6182389 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.440157935 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.418144718 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.421265753 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.416490179 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.41123631 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.428030084 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.418205323 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.410605943 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.433409725 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.554505994 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.428118582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.432434086 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.418443249 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.4196298 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.427234727 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.466970944 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.582613141 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.430723976 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.428734691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.425899341 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.417831285 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.514559324 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.467462919 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.435374011 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.549459426 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.425184461 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.427738357 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.426422862 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.537802056 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.430900343 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.421430066 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.421365445 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.423023154 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.404904669 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.971033601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.418963129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.445470603 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.430556246 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.4290904 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.558073389 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.422016127 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.43041967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.414773579 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.963000659 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.54163953 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.548069973 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.427320671 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.427427538 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.422359967 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.486876971 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.427826731 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.423433325 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.48197005 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.262900907 seconds)
  done (took 90.350425306 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.474791809 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.415020513 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600916622 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.44245627 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420710362 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424667411 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.419897169 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.715141257 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.441976786 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414339567 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.740689018 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.051228714 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.422981635 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.481523931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.44957878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.468871778 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.418347388 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.434699018 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.415437994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.416425841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.995089242 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421743209 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.416574403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.491332101 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.460462756 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979422659 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.41577753 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.416105442 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.420297157 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.416403207 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.023915888 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.435055598 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.463694357 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.421081692 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.711921438 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.827574176 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787792344 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.420224464 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457664386 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.421157539 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.441219958 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978910074 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.809893067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.419540138 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.418115775 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984209087 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.419141636 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.420323131 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.422073701 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.688214191 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418489737 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.420476892 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424155611 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.424235037 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.417180414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.464249803 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.489553856 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982769592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42019629 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.417198453 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423444014 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.421553851 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.423792604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419130857 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.418310756 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.813156567 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.683484919 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428279843 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812739188 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.013660201 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.42364894 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109482302 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.425325881 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.448125127 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.460225104 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419045366 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418939953 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979035848 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.450360223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.419825283 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.791270721 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.422172667 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.738851468 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.43778331 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422823675 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015148646 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.433089981 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.457750754 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.426442199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.420678544 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.427815158 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424761784 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.723194687 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.474879431 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.420771525 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.423206593 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.420024979 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422947817 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.420757375 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.430288899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091120314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.437279157 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.421935666 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.440629333 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428349285 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.425295874 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422961035 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.420475458 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.704033255 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.424768943 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.448220126 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423282784 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.42687192 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.433108229 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.502461647 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.431117817 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.747101685 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.422475132 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422252732 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.424049837 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.435146082 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442598183 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422607504 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.428307271 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.425604432 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.74377251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.443269142 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.425293069 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426542555 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.423080475 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424437659 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426447605 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.476785326 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.425701801 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.216964447 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.469712407 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.42305886 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.42382425 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425526473 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422989812 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.424651633 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425597508 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737479586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.730777386 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680872396 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426481699 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.424776443 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.244769558 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.471071482 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611692096 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.445725247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.424065468 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.72694675 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.658080572 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.426628793 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.424554464 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.427122979 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.71128958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.428402042 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7568659 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.053520167 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430851008 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.429427373 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.216425226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.256833665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.431908214 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.430204285 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.739345227 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.443506909 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.425406488 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.426155419 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.4260259 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.427604339 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.430012718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.436375669 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.426418017 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.426375515 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.768087159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.624060172 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.443773834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.436866938 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991964263 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.453757631 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.441852407 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436762638 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.431892169 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.426877339 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486936431 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.430752752 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.462192862 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.428987985 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.430110506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028033985 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.434269893 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.445828686 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.626274052 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178779236 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.430920083 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428495074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.432853916 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.485896212 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.026778565 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.477777713 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.764506592 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.443303809 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.470331431 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429213678 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.441968489 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028920881 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.437644335 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430153247 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.192385887 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.433700929 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.865331373 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.428073485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.42955266 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.11553449 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.435308578 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.43302116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.427867019 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.430644706 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.73307541 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.434458045 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.466665603 seconds)
  done (took 520.299713739 seconds)
done (took 677.11286532 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.431931777 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.429049284 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.434636976 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.434471579 seconds)
  done (took 11.038872065 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.446798554 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.435169032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.445348333 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.43509354 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.445915703 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.435879413 seconds)
  done (took 9.952919047 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429943833 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.429715979 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.436646353 seconds)
  done (took 8.603960215 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.657996398 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.463573914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.810838558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.445779489 seconds)
  done (took 9.685921947 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.446657484 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.445305281 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.448489946 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.449720436 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.448452646 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.448832131 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.447490441 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.446937863 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.449297869 seconds)
  done (took 14.33673668 seconds)
done (took 54.924629275 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.441858632 seconds)
    (2/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.463226208 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.515108765 seconds)
    (4/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.593778118 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.563191347 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.412166322 seconds)
    (7/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.442640164 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.510540131 seconds)
    (9/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.411163836 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.47184434 seconds)
    (11/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.691786715 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.418186878 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.6916105 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.470954089 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.653977496 seconds)
    (16/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.745621579 seconds)
    (17/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.417186686 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.824015565 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.606701928 seconds)
    (20/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.498741786 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.560587326 seconds)
    (22/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.514144541 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.438305512 seconds)
    (24/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.469978608 seconds)
    (25/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.552058945 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.414301708 seconds)
    (27/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.506360415 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.593472186 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.519405846 seconds)
    (30/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.522518994 seconds)
    (31/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.662233607 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.634050582 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.542418771 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.689799349 seconds)
    (35/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.418748173 seconds)
    (36/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.512350863 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.526127646 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.599625104 seconds)
    (39/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.752897246 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.562304442 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.469018587 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.506131829 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.553297277 seconds)
    (44/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.416328507 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.694927653 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.522846811 seconds)
    (47/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.503771897 seconds)
    (48/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.616162382 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.423469083 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.418612766 seconds)
    (51/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.419547603 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.477810138 seconds)
    (53/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.414424384 seconds)
    (54/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.507625878 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.466990687 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.457782867 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.811803737 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.664843258 seconds)
    (59/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.503095975 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.428601062 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.45905498 seconds)
    (62/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.420235032 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.415682353 seconds)
    (64/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.649755056 seconds)
    (65/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.458950094 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.420580222 seconds)
    (67/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.429547101 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.530263127 seconds)
    (69/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.655619545 seconds)
    (70/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.666402918 seconds)
    (71/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.664798434 seconds)
    (72/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.65024471 seconds)
    (73/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.738837537 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.482754614 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.525950728 seconds)
    (76/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.415786966 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.736369106 seconds)
    (78/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.560395645 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.556662738 seconds)
    (80/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.506422946 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.523984842 seconds)
    (82/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.471393095 seconds)
    (83/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.415365412 seconds)
    (84/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.435085032 seconds)
    (85/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.616101705 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.568418002 seconds)
    (87/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.475636371 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.543863596 seconds)
    (89/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.439532308 seconds)
    (90/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.81168212 seconds)
    (91/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.603609882 seconds)
    (92/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.450458714 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.549400422 seconds)
    (94/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.609122179 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.415720848 seconds)
    (96/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.735196475 seconds)
    (97/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.564356712 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.419568132 seconds)
    (99/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.537905624 seconds)
    (100/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.594795157 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.574046035 seconds)
    (102/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.629663464 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.555801825 seconds)
    (104/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.750622328 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.42496303 seconds)
    (106/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.461134701 seconds)
    (107/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.51832248 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.758185685 seconds)
    (109/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.485963115 seconds)
    (110/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.815784682 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.424894755 seconds)
    (112/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.558858119 seconds)
    (113/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.418168279 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.526211147 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.546765806 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.542736102 seconds)
    (117/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.614594923 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.710127513 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.614738563 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.992402753 seconds)
    (121/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.631073694 seconds)
    (122/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.512614803 seconds)
    (123/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.418614309 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.488548332 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.631979652 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.564382919 seconds)
    (127/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.527059791 seconds)
    (128/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.553461867 seconds)
    (129/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.578319386 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.534159462 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.701157493 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.898365293 seconds)
    (133/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.606058805 seconds)
    (134/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.423842603 seconds)
    (135/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.510628891 seconds)
    (136/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.528506038 seconds)
    (137/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.706272908 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.512588266 seconds)
    (139/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.595766043 seconds)
    (140/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.668329043 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.487859127 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.602068107 seconds)
    (143/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.426364127 seconds)
    (144/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.559539121 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.472521355 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.630644379 seconds)
    (147/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.480838666 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.594992694 seconds)
    (149/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.795073833 seconds)
    (150/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.573338975 seconds)
    (151/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.711993826 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.489654309 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.656906846 seconds)
    (154/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.444281994 seconds)
    (155/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.426374482 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.566780932 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.508048149 seconds)
    (158/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.421391703 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.566603225 seconds)
    (160/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.421418303 seconds)
    (161/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.555115367 seconds)
    (162/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.480228944 seconds)
    (163/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.826690338 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.487194201 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.554677621 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.69902771 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.610696722 seconds)
    (168/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.427135694 seconds)
    (169/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.60239124 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.57026844 seconds)
    (171/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.52734028 seconds)
    (172/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.429015492 seconds)
    (173/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.525009538 seconds)
    (174/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.496793615 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.555868647 seconds)
    (176/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.671850683 seconds)
    (177/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.819439388 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.652949684 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.610607066 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.561707684 seconds)
    (181/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.602871084 seconds)
    (182/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.536056315 seconds)
    (183/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.481913216 seconds)
    (184/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.750382289 seconds)
    (185/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.433334889 seconds)
    (186/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.561675038 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.42340966 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.561358791 seconds)
    (189/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.479641878 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.988030588 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.553217141 seconds)
    (192/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.479311659 seconds)
  done (took 348.027629134 seconds)
done (took 349.334819708 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.475537008 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.550891316 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.455219725 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.454386353 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455398863 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451500813 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.475942287 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.455437737 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.468776663 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.469016199 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.45995902 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.467588717 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.471089853 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.466353071 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.490253398 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.457295153 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.454329429 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.465907166 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.470384137 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.471500647 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457333592 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457659572 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.482681799 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.457057155 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.463802337 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464473517 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.463389102 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.450644827 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.463092153 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.471149509 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.45522827 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.462737197 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473429845 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.468168822 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459045326 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.467108457 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459113674 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.552960269 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.477285012 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.467720708 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.466360485 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.474833933 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.464186199 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.46301684 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.46918669 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.483773213 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467551149 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.472943607 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.457598223 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.448251851 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477097788 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.469022185 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.465311881 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.44990714 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.452222923 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.473062453 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.468044009 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.476790397 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.464939862 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.4606423 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.493883779 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.481887368 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.469909651 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.467688385 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.466674053 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.475381256 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.468127548 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.474551482 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.465293271 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461300756 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462115231 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.467678362 seconds)
done (took 115.062535919 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.582838587 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.451070022 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.612921864 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.465396407 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.626797623 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.584027878 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.464992305 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.466334604 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.46626706 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.258733239 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.465404174 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.466841843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.454819898 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.466138627 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.582453816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.465780934 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.466060869 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.181283478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.467273366 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.594973492 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.457202866 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.465458818 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.469076518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.26715418 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.453495899 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.451046378 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.596207312 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.46727551 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.167915871 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.452319173 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.453098855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169659311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.59588411 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.485859238 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.477671043 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.477465107 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.629748768 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.471208392 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.585573929 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.583589101 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.615966184 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.506614597 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.452893955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.458824306 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.470508314 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.469265598 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.468624798 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.498474258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.457161477 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.468907381 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.161730342 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.477210954 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.469966329 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.468782482 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.469800789 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.497993081 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.469268693 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.469562631 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.597225861 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.470814087 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.586480205 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.269739859 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.286002153 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.471009961 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.457120678 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.471208183 seconds)
  done (took 117.054429131 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.531622648 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.537610744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.579283876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.465779988 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.511638263 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.57908159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.466453236 seconds)
  done (took 11.998113852 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.467785548 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.471552496 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.511326137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.512163699 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.471012052 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.636471907 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469797051 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.474880536 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.47142926 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.512724562 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.472852088 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.473264871 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.480846005 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.462186067 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.511181139 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.473929931 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.583911136 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.464107213 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473066476 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.618938988 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471981299 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.479623207 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.514985682 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.475526586 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.472073189 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.4706273 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.245164667 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471308872 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470168486 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.472390514 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.4709612 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.532633153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.472460338 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.461213494 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.473936079 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.578255091 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.473451991 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471183497 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.472432439 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.46478428 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.472489577 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.472255721 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.473499176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.474180163 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.47342012 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.489321826 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.473141311 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.472602455 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.474209062 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.476950684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.515505975 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.473707498 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.472825571 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.473324238 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.519014096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482212493 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472444542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.474436508 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.47372083 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472616395 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.621818429 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.513100782 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.474927457 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.512116628 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.471886723 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.474538059 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.475119242 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.473927651 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.55742706 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.475523695 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.512407815 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.474635661 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.65017042 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.489898407 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.476554225 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.468176466 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.469528327 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476096034 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.461707625 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.473858727 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.475185078 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.469255387 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.472994131 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.475085112 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47442095 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.625383638 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.574011871 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.475829035 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.480989449 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.474293335 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.477231939 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.518479403 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.476068817 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.475083718 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.518059699 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.585574352 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.518575988 seconds)
  done (took 150.912239497 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.479469768 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.479167194 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.471308662 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.494669906 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.469463253 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.468663301 seconds)
  done (took 10.195612203 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.472353305 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.481467757 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.478569893 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.477085511 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.476654383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.477911006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.479649638 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471719893 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.481992068 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.478073945 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.478246576 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.480063609 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.478559621 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.477702078 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.478549114 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.479767438 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.479081759 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.4778956 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.478845013 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.478116492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.466435693 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.478188348 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479950102 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.471824485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.482634971 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.480292188 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.495763556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.480063662 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.478852793 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.475512132 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.482213711 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.480526157 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.472078992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.476898374 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.485224976 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.472730287 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.484332826 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.480164485 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.479374807 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.481062436 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.482597696 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480515202 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.478764075 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.482037316 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.473295828 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.476376052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.48702639 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.495419749 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.480400044 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.481715555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.48281051 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.481536728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.481009569 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.482157016 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.473618029 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.476666533 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.484565605 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.483196227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.481656755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.473919587 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.484615188 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.482271435 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.474877378 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.484376256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.481163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.483023606 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.476789374 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.485510801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482839604 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.483623072 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.483940347 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.482875469 seconds)
  done (took 108.888131497 seconds)
done (took 400.372013953 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.844026046 seconds)
  done (took 4.181303471 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.560383055 seconds)
  done (took 3.8989456 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.533361745 seconds)
  done (took 24.881027563 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.489012809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.486283522 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.49548005 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.475052706 seconds)
  done (took 11.283369975 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.777114844 seconds)
  done (took 4.114344004 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.487132603 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.475661368 seconds)
  done (took 6.301912949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.780249917 seconds)
  done (took 4.120183077 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.904092096 seconds)
  done (took 4.250386666 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.48315553 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.485682344 seconds)
  done (took 6.31338312 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.447029312 seconds)
  done (took 3.786230092 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.941026081 seconds)
  done (took 21.280382667 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.490299522 seconds)
  done (took 3.831632712 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.504271573 seconds)
  done (took 3.843269284 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.327896645 seconds)
  done (took 6.66515421 seconds)
done (took 110.087721913 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.468702215 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.472630236 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.468816189 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.46848197 seconds)
  done (took 11.218255136 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.547436739 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.54810572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.556673688 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.544242822 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.542187775 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.55106786 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.510553031 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.510961856 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.541449393 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.53788254 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.552268131 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.543173384 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.551708479 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.512603454 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.537005038 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.55354956 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.541100078 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.557430558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.511330286 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.543189359 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.487684727 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.544769206 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.538543022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.48654516 seconds)
  done (took 38.191454697 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.995247194 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.548628803 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.632041885 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.527688087 seconds)
  done (took 8.045225882 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.59027828 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.591440878 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.610378306 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.643682681 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.672896738 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.605541878 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.511882665 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.508152826 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.495261403 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.590945002 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.677471129 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.589394064 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.807479125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.487290173 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.806837833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.487922025 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.487416612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.590880585 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.639142896 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.66946107 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.487507632 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.589751517 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.595573817 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.59119983 seconds)
  done (took 39.66949533 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.497005552 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.50322819 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.488533185 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.504708861 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.48872558 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.489064029 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.489464361 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.494711897 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.488861178 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.487154041 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.48956174 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.502500298 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.488399848 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.488336678 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.495580782 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.489435006 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.489778762 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.494522691 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.499210466 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.491076281 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.489983663 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.495313892 seconds)
  done (took 34.188194835 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.473231521 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.472902673 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.824109426 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.728487604 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.475030684 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.473614876 seconds)
  done (took 14.790643217 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.553917727 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.710802798 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.486333803 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.866497352 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.957118121 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.486721805 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.48240521 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.748373762 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.067382826 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.068653365 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.548268018 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.562088175 seconds)
  done (took 21.882963085 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566629183 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485145957 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.501990613 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529425093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483994171 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485500558 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514558672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247259323 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.49439046 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762937363 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484852203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571866185 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.733983304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501850409 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490938472 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.468371097 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718902023 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021124395 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4883686 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491842846 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523805762 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491619242 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492079258 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.720197344 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491009667 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486195053 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.748488795 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48764729 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797969752 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777614472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77879392 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492616995 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762383217 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161839799 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596631696 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715268494 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508299175 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486538328 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.469578042 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.487000243 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523396581 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495928397 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771726358 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496381255 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487641043 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487035478 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264068423 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.49986896 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.486641106 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489794213 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776072628 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576129139 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.494472716 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488358491 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560552353 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487171774 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.493291547 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620516802 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128421335 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490134839 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496831871 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.495429966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478241005 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49863845 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201951468 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.50216774 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.4954579 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494774298 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48904306 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489343063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516631386 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48851451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.510087279 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48918569 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336591402 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489435089 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497570732 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084236651 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500863391 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.496275077 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716739973 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489718331 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490414029 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.489847237 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488986344 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284016555 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496432887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.458564747 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530252312 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.25614972 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724123561 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516098159 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519958938 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711873316 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.45998142 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48892688 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.490285459 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49647199 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511292888 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257694393 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495177109 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.499197506 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738962009 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.702704432 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504327752 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.46805963 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018377252 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498700286 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.525705066 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492434483 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.743552314 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.181480667 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788446226 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49870496 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533610442 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492575209 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346148542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500450658 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50508869 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49159729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791342387 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.379374683 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492561174 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566417876 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494287224 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493812208 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504271471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499767768 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493506648 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.700947403 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497824445 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804616138 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.49935088 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494201587 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.506244524 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505906563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.499543815 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71559596 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496655524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772263207 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494461112 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493452534 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495390878 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.712200421 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.498628496 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.501110671 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835730717 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493760508 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500055175 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806268903 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533014462 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607024675 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527816113 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.508862381 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.749640967 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.501603687 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.49965187 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510823479 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501797277 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497741025 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.503813372 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48613217 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183942958 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501329072 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503543953 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496909933 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.513854122 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570112819 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503529502 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.727574938 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.506495029 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496488865 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.521931659 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.49938216 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72254869 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782394842 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.501628282 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675617256 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.018391887 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186659028 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517426989 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.498592946 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.498968034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.497820423 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499713635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496468288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498737049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728768638 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792788237 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500980003 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209158158 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503282494 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498193295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.510835465 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785544498 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.511378035 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497684933 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.51034389 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516203452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515517868 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.790281427 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724795497 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.514913449 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499731373 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.061221048 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505484794 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498657503 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498212461 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525647899 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498421195 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436206454 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840492012 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491987433 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78659227 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506536868 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.520943212 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.498256147 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501404933 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516373181 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.513302552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507331694 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.730129209 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509721108 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505375767 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141129405 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335848069 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130881184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505669546 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.514003733 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504759873 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269711209 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504726598 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499665363 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767709066 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273134393 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50506216 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025571506 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.503175314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321197745 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79446244 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734226218 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516053161 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.504614447 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79798208 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.717047827 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526382238 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.515592235 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504860533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.471208307 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114766108 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502896392 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685204155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274698787 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505227887 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508439216 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.514232848 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.510999642 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924266342 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506524883 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501602699 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508358949 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506937453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452856682 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.514198038 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503155005 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218802889 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.514001333 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.034256192 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507306731 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.734485611 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797136451 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.775596821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.510496613 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.507482393 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.749283093 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794481897 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509116492 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506440665 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138538865 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.366114663 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.51150664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502889448 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362482517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508711025 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817929568 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.519664945 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.509648885 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515494335 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505613732 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504617557 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.503936752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511584101 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505401507 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042487561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.520988146 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504604491 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543986281 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511241632 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.753242578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.522183499 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196180101 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738598621 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501761337 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538609302 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.513442211 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509872441 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.481078428 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505486688 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505760552 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586657858 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728478646 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514983426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.475325711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527649829 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.716347092 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505290305 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507285227 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757536641 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.510778339 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.523720395 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344720619 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539622014 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50656858 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531291155 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516142454 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546141518 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581254916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739087967 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.796713219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.793132384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932576716 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512230329 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512543137 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.522252096 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588301229 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518643046 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.51635552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.511906436 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19657017 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375652641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204366871 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800901556 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509838175 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506834775 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507790425 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750640228 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508782514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785305671 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508248107 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.503415234 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530547273 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515582534 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529967102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724794544 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786907175 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509917789 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517914143 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514631816 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.511026973 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802997004 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.728548552 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049407494 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104312469 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509032363 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521029252 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290457253 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79044556 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509951963 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508342277 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510425516 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.535170994 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.525964494 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.517592128 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520630011 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739623847 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799318828 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200134278 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80310265 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.552500326 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.50924537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510575005 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.762997221 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358078861 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.741801998 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212101824 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326254833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767591826 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584689069 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743023003 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.515226241 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748216916 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.519892276 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516384345 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513327602 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512367652 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.510913174 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.798732637 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212755492 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769959349 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.516525095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.520425419 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548378349 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.744371135 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.738966531 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313770771 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73173957 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805487375 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526047445 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513958037 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212575546 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80883443 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520087472 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.520054911 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758797606 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519451081 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548762515 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.387196157 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.511298875 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110282437 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.723536164 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535804112 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513611134 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330188322 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215847055 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.519108169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075566116 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512604649 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513055208 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.796022659 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.522536225 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515581423 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802478101 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.519060198 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.530657297 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752717414 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.210470446 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351093804 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.522341586 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514972388 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.538727179 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514557656 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570361941 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514138508 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527002051 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.945384838 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.521844337 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516546263 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530404433 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.515112982 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515813856 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.523716572 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516489949 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.521777758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.512824401 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.490813811 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526571948 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651098801 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129811766 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522154495 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.131462515 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.850374465 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.765878802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51846887 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.492391301 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.52222562 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51828183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5173894 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51705906 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.510862808 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114468347 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.516916417 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.813889844 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532466491 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.728366333 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729203901 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523744246 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755885627 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524226649 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543765801 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.487253578 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518274455 seconds)
  done (took 1048.548546698 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.562176171 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.531780194 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.542305467 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.581051353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.52283648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.647174622 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.604031048 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.6217819 seconds)
  done (took 21.986411965 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.522106136 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.523080203 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.5093296 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.522332996 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.51555051 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.04657572 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.522896326 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.519972665 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.531587565 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.510462825 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.518971153 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.200926764 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.519710785 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.515984604 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.52091003 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.525494476 seconds)
  done (took 34.907116927 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.497532118 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.62221383 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.566662046 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.561074416 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.548941294 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.514938941 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.762151672 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.512444059 seconds)
  done (took 27.961192854 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.528355718 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.523623565 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.524681936 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.526024491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.525867434 seconds)
  done (took 9.003733302 seconds)
done (took 1311.732071227 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.525468889 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.528696453 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.526678976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.526411896 seconds)
  done (took 7.482674751 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.489709433 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.491402016 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.491631061 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.50351779 seconds)
  done (took 10.35171992 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.284771603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.092610432 seconds)
  done (took 5.753049991 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.080699726 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.073786274 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.073129245 seconds)
  done (took 7.602570462 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.827254403 seconds)
  done (took 3.201729812 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.510778409 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.528255639 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.516111761 seconds)
  done (took 8.930830821 seconds)
done (took 44.695200035 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.51187261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.273691712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.669273861 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.514084888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.692941221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.666904017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.76383893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.512434394 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517003296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.527714762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512152911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.692617153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.750802579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.273984785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.750661503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.278625041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.696521099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.519478561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.516224877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.513761898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.764327289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.516656702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.525317565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.524097942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.681350108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.658427816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.516571951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.278581746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.514798671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.520631474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.6626872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527509612 seconds)
  done (took 87.222166087 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.514745853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.532439834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.514880721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.530972713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.515665219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.536804241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.534885214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.527241987 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.514857975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.546572801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.515132422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518123944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.517390275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.514452415 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.514850382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.516112911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.521182599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.515990806 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.515712405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.514996781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.517171409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.51456135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.516406051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.515337854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.516410505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515800287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.533192637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.526827557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.515717505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.516836873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.516576862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.541180686 seconds)
  done (took 82.060062216 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.516086361 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.515642265 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.527173498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.524733615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516072342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.529235931 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.518136024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.51603618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.520051062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.524153278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5158242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.52480868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.520046953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.52392964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.518729391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.524770716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.518124853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.524058603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.539328281 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.525353063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.522101625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.533436233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.517727984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529861137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.536939686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.517565647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.535191835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.518358375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.521735803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.518323529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.541070229 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.544881667 seconds)
  done (took 82.160564256 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.761400634 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.532892868 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.537162123 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.528151638 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.539147366 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.535542821 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.528398653 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.765908898 seconds)
  done (took 16.109574239 seconds)
done (took 268.927658833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.527458812 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081843428 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.562864591 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.529910409 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.546850016 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.556177145 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.745271131 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.556262369 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.736847622 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.531473408 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.550035667 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.531971087 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.42297927 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.67491829 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.364632813 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.509834348 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.502013198 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.530951872 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.145087339 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.774651694 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.556015938 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.533556914 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.380717827 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.522144785 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.506691987 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.597904463 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.60085713 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.694657468 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.658546612 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.600937435 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.064963057 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.541071603 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.530977894 seconds)
  done (took 69.554013679 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.528101353 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.536355887 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.537774779 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.537698889 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.537626506 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.538472843 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.5310473 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.53744119 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.538112063 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.538231629 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.538173751 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.538910792 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.53897815 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.538091619 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.537566322 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.512217262 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.529370357 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.537868299 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.529152645 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.514055065 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.5388541 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.539454862 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.540314502 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.538401179 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.538280754 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.539626184 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.537382873 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.540877804 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.538856778 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.540922555 seconds)
  done (took 47.453929301 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.53768748 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.138249638 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.348088121 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.542732144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.530462549 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.53643731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.84836104 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.546827355 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.535201175 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.534824221 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.057207955 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.54719456 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.566894331 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.342767815 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.53890786 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.540797167 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.539552849 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.532508264 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.145319735 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548283801 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.843967252 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.543326981 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.846356733 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.540263489 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.53522863 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.535114096 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.538098536 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.381669215 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.556013633 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.047842203 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.407924885 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.844313342 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.312231854 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.400545632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.409242517 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.549096953 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.541929102 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065671392 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.540574551 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.535030195 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8487029 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.539791673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.354621149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.244247307 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.560096777 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.541708255 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.416652709 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.051433285 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.799932691 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.540502962 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.388427536 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.541921046 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.543823098 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.536752099 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.798356298 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.537725195 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.534744178 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.424099382 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.539710923 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.846437478 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.544331279 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.53658651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138704312 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.539289889 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.1295095 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.538942185 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.544471638 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.537538233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.341060317 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.541510149 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.265765776 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.562201917 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.545528869 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.068403219 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.148447834 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.471991317 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.539530141 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.139428019 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.344552826 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.86683783 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.541410279 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.362413509 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.868213207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.540922476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.548873007 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.548177252 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.547280316 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.658873927 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.844915335 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.178100611 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.263405655 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.442301528 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.851516975 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.547294818 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.538812333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.430429585 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.547688109 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.547431302 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.337657105 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.261851172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.563059814 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.545883293 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.242202871 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.559553074 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.851416977 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.544172978 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.38733983 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.540216787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.61036708 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.547708857 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.546256069 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.542380933 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.851548084 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.544040874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.547890205 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.238783864 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.082807158 seconds)
  done (took 213.911757037 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.534079825 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.53385326 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.53588416 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.535455824 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.533329582 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.544317437 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.533578177 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.533768925 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.540095047 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.532494696 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.5358238 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.544990037 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.541250087 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.533079384 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.534872293 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.536611948 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.534470745 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.542442275 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.535542597 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.53399998 seconds)
  done (took 48.124252161 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.547796398 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.144700968 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.118736748 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.549939014 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.549832873 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.541144046 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.603386315 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.55117464 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.549651084 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.864698279 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.730546357 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.557930692 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.550293744 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.549744532 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.119674778 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.524451922 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.864690599 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.144985763 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.550231621 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.146236015 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.525691717 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.549955785 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.540951273 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.147498564 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.878470635 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.855052859 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.606314669 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.148714619 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.553279497 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.551803175 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.148966014 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.553701271 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.54309442 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.134393709 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.552919789 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.566487217 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.551665784 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.608326518 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.607970064 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.866821039 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.154008179 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.871650136 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.570767196 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.716767694 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.554099412 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.523942021 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.17116835 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.553260572 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.524588345 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.554582533 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.558723523 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.144541456 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.548614063 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.145058778 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.557076427 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.552232753 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.171043606 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.147729912 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.137572794 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.736791707 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.543743572 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.862184442 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.558031077 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.16141013 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.554891974 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.55384941 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.55501387 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.734795622 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.149065927 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.862059283 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.874098782 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.871535345 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.554417577 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.619192094 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.554390109 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.869697855 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.617902794 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.957857594 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.871238585 seconds)
  done (took 139.868571239 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.848432734 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.670434024 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.94758671 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.147331213 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.0686733 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.691899938 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.667650121 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.809815878 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.56990952 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.659797805 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.243350153 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.644542743 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.380478935 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.618425295 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.657207463 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.67885219 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.968105002 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.542164504 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215360454 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.215680109 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.549858989 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.654013095 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.078937318 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.768016181 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.547616153 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.134277162 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.532782887 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.08690675 seconds)
  done (took 57.997130367 seconds)
done (took 578.291381596 seconds)
SAVING RESULT...
DONE!
