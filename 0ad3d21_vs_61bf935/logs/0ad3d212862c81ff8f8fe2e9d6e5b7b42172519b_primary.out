cset: moving following pidspec: 16906
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.630738072 seconds)
loading group "string"... done (took 0.527696528 seconds)
loading group "linalg"... done (took 9.540192397 seconds)
loading group "parallel"... done (took 0.17327304 seconds)
loading group "find"... done (took 3.970972123 seconds)
loading group "tuple"... done (took 2.093900439 seconds)
loading group "dates"... done (took 1.420222949 seconds)
loading group "micro"... done (took 0.196189193 seconds)
loading group "io"... done (took 0.523035255 seconds)
loading group "scalar"... done (took 57.497495959 seconds)
loading group "sparse"... done (took 14.006869649 seconds)
loading group "broadcast"... done (took 1.798305956 seconds)
loading group "union"... done (took 10.515187699 seconds)
loading group "simd"... done (took 3.65263934 seconds)
loading group "random"... done (took 13.707249585 seconds)
loading group "problem"... done (took 2.213518845 seconds)
loading group "array"... done (took 24.620300561 seconds)
loading group "misc"... done (took 1.183797803 seconds)
loading group "sort"... done (took 3.863812375 seconds)
loading group "collection"... done (took 22.164892061 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.696212777 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14437637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200522748 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.209029067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279314187 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158450265 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154420232 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170952553 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.747492944 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211192832 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135656113 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421664418 seconds)
done (took 6.278145595 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264573933 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.062733751 seconds)
    (2/2) benchmarking "String"...
    done (took 0.174506707 seconds)
  done (took 0.930007658 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092890224 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158107146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10851093 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094513201 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094250788 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109117021 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.155632761 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109987554 seconds)
  done (took 1.52386488 seconds)
done (took 3.507152385 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498376839 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887769254 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518940925 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181208896 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.301449038 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.302000347 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264475444 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220841767 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091821989 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086857209 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172269137 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.423377545 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.407846168 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954666808 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071710699 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111360101 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.136273564 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.788188516 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079306033 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111360143 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.541692097 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.21881978 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115625134 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.108160881 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185762972 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134134357 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143007461 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105693479 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665324625 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132312408 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.220464219 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083197532 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142575723 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163044026 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.219608749 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110282469 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682468741 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199654872 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098919177 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100020813 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680674024 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118115519 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205019119 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106263997 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.071494868 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.164283537 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11653016 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078173871 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093288913 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10159771 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157218283 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.437846495 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107051315 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192330864 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093322601 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702376449 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097851775 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272090165 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126226316 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093143458 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089967421 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090067627 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157173813 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095566953 seconds)
  done (took 20.160108249 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.173255222 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.190078104 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078431963 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.162531737 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125040344 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098061607 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088617045 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07941187 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129887102 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17911337 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141097293 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193734515 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075828236 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090783821 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170276062 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23675043 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124085145 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10369405 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089231713 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110884264 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127116546 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112765752 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096375056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097584115 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170917446 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205686827 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10945378 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122781301 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089460657 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099379043 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143082974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14815726 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091786916 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08937041 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189211956 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106714218 seconds)
  done (took 5.356700337 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.233612768 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105076597 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246652451 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.191645617 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.198495473 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13090834 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.197585701 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176737504 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305655624 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.295493447 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159106725 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128217779 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093712378 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079680858 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079569616 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094817962 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.794700436 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.139793625 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164517041 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164797455 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115175165 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09835399 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37019679 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099480906 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086411868 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109785865 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066870962 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22275708 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095084513 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.477443296 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082776604 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116183295 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113643189 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215447783 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114076486 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134444002 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094836692 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10179799 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.189250687 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11772647 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078249241 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.095480169 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116777894 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126793648 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092375875 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123028007 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.134319514 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086427312 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11122444 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 3.854748831 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193962833 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145552097 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102715245 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.261442803 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12395068 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100297358 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10972963 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.656601138 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134053873 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08247327 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095078688 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098520933 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078705419 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.467587654 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106522497 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.879606555 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0830916 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159947262 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095578273 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116851262 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086197824 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100786221 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083280057 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105293002 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100753729 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086360491 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078865127 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102717417 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079736217 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089087527 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128514929 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084076747 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096528669 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144911504 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098074861 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121644129 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109087724 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104386024 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086602182 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126636948 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081102809 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089218915 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186630176 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097898853 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130699073 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112019261 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126644586 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.103417873 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.25123498 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082247413 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121548348 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09994185 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125992416 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098575937 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08309824 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097238099 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083929711 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080271476 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096697454 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144913794 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087292449 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095800451 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088526987 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091776972 seconds)
  done (took 26.418663663 seconds)
done (took 52.630670841 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416435038 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083120145 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082560985 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103434235 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084123022 seconds)
  done (took 1.540807987 seconds)
done (took 2.287553857 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.306808851 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.206717084 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086844863 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193405682 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086312551 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199004532 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188326532 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099354736 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213050756 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084565502 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19772581 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086398284 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105703206 seconds)
  done (took 2.824516984 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100131501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105193671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102228623 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11936233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085490138 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09993235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116697467 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107484709 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099356477 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110917708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085269391 seconds)
  done (took 1.878210104 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0989808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10282304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091226739 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116889946 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085839586 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098803797 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115491934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105027526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098650215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112500706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085535715 seconds)
  done (took 1.859459533 seconds)
done (took 7.307483927 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.201297058 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.811809593 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163678141 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245026284 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344752499 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298292886 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617422626 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200228132 seconds)
  done (took 15.758714405 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.192716394 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110829363 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098550437 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095177223 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112294434 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096102388 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097286315 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110362892 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094004663 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098010766 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090091098 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.107081945 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090625184 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096823254 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114349918 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09807421 seconds)
  done (took 2.515852775 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142739777 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1152064 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11421318 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09960776 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093774696 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117203117 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101241524 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.114366855 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093966273 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094724071 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118969781 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098440599 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096976624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108359022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097061118 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.124036411 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110400943 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097523391 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.122503638 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112953479 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09841612 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095953215 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113675822 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097904472 seconds)
  done (took 3.413306373 seconds)
done (took 22.438070657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147641087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101872443 seconds)
  done (took 1.003193314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164458657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181001679 seconds)
  done (took 1.102367103 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111329769 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091181444 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137006432 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102411814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090001093 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106364243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116284735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108052967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090534523 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091796375 seconds)
  done (took 1.8079277 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093728467 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094137985 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12317639 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167831274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115872072 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09330094 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095295994 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111098852 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096333251 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090501494 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11385751 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108525292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094323775 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126644913 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095877087 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.112179544 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.099015709 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093439648 seconds)
  done (took 2.689873543 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089545281 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0917738 seconds)
  done (took 0.94432055 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093416392 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090865728 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092215857 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108264004 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089605107 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089594715 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106061174 seconds)
  done (took 1.434121024 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.528735932 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240208004 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376018479 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073705769 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125619611 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.318517853 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106137437 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073534248 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092751967 seconds)
  done (took 2.732484358 seconds)
done (took 12.476852063 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091898344 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.426853821 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.599964319 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129551393 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090823115 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146157059 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.332282146 seconds)
done (took 2.588853576 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350033246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167838339 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085732306 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089838102 seconds)
  done (took 1.45733897 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082509131 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098786102 seconds)
  done (took 0.955280962 seconds)
done (took 3.187031367 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088380011 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088128808 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087082149 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.130361957 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088431849 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087013238 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107413669 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088277947 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088638864 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10662223 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088593933 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088895166 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.088810526 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.106262589 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088455943 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.206876836 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10434438 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088584772 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088321743 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086907088 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104508472 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08870704 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088613528 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.104696338 seconds)
  done (took 3.187818756 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113199994 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090274914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110137539 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092700965 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093666312 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110131178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09264561 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090050643 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109220416 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089902934 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092936479 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110486359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09040712 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092561388 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107603687 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.093557542 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092467473 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107029123 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090730796 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093571018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092216494 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108001096 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093226302 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092804271 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111588819 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093112364 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089331322 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10768108 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093656409 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093661263 seconds)
  done (took 3.709505208 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096842464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086021543 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088784575 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114388415 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086719162 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089446814 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103556741 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089810907 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090623219 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087619797 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108501053 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089761308 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089457694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106356017 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090219436 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092540473 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115433627 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090439577 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089909361 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090434948 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10964599 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089741503 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089164892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106255479 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089646998 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086347452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.105363771 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.088561644 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089908229 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088863946 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110222199 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092272956 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08903349 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116176759 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092137482 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090151156 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112243487 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.085775369 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091759697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085999666 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103878373 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090407972 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089366177 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111894792 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089577449 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090951425 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089336546 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108699182 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092001976 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092010635 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103128622 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089887712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091901461 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.108597054 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092343186 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085969581 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089081173 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10349212 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091672177 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088692926 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103431456 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086054273 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094206299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08939744 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121268261 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.095457405 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.106215478 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092676509 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090384895 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094988436 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109831304 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100188656 seconds)
  done (took 7.671674982 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114517391 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097796572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107497905 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091438154 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090513997 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089036347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111759732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090331209 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089530516 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1130425 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091144225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090357967 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107324482 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091597135 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089912417 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106667297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095162611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089434739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.106076976 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091711031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090518978 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093326201 seconds)
  done (took 2.922610035 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.231791241 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09576759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140243545 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120645023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107396692 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119923618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094088129 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094970586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110801477 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09946544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098749127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111883894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108098284 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115526661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099496681 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099671438 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111686742 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101017794 seconds)
  done (took 2.845244332 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102819915 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091383541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15432884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092998601 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093014265 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109631903 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096569189 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111034382 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109440888 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092473387 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098113061 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108779434 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.091583566 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091525727 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108341358 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.09326829 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092817417 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107089032 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097861537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097312179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113830057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099119188 seconds)
  done (took 3.03934295 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106101253 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091372859 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12615183 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095079805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091174954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108164258 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.096232381 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090821161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114650187 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.091451733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091976496 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091341526 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125163276 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092120367 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096743738 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10878901 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09286538 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091257602 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110451296 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091097727 seconds)
  done (took 2.789889279 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192563815 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12571294 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108454249 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115084616 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125787453 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106901117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133564297 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108041226 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111170997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136397408 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108533605 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107705769 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132790758 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113066979 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125186389 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115897562 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131321326 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116485116 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107540618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124758345 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120003938 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10748916 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132943846 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107480261 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124261088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1088183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1081422 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129975223 seconds)
  done (took 4.176163646 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090717758 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09074849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089705468 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107845521 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090201426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0897095 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.106871929 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090751743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091340953 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089502461 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109105876 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090082939 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090197085 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.107864972 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090153482 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090322046 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091398916 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106812943 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089975187 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090895163 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.10634135 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090478776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090616512 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088312957 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106899542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091943444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09009668 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106694555 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091561198 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090156452 seconds)
  done (took 3.636935791 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101050029 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098885502 seconds)
  done (took 0.992687752 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098403253 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104626996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089776716 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108418733 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096769381 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09077284 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117748622 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097582944 seconds)
  done (took 1.597522855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.164531749 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.188438679 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096528033 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121660065 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168206342 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180730376 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13079068 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.116820175 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091581168 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084466169 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.181896003 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082766885 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110861613 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089338816 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091535344 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117467393 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092196919 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101319489 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116825717 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094733034 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096741776 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114625476 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094491792 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101603148 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104049276 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095256895 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.0950524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121449539 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089481732 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09327016 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108222924 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092449523 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095813915 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.114317707 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093076695 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.188268883 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100357355 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088922501 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111941519 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098457361 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125119182 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.110901773 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0943205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090797797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114904849 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097016273 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097526717 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109485041 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086008175 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088694836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109669688 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087471718 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091315684 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110779224 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092811817 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099525898 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111405969 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089989083 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088401438 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104987529 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093440704 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088814333 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11185703 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0960991 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093994727 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109813464 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092314737 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091955077 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093323429 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.1103515 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092941501 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106164615 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111674486 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09637875 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095830851 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.110495168 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089747298 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09768123 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108774703 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093417036 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096762435 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13780654 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095427673 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087616823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105319406 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099624146 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094090686 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.112213802 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085547001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100949481 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112442273 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093367629 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08520783 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107647073 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088826616 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09584917 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084999881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110747406 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091457996 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096472964 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116065671 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091501667 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093191559 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115895015 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09772601 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091238288 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.174596954 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090216918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106954955 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095630206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096887599 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104937072 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093019356 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091475135 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108001928 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088433021 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097820215 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111108698 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095480052 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097001239 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094802216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113628656 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096294477 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091285943 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107181798 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097737468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10090402 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113157896 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095407297 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092565706 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111499086 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092787518 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097558618 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108408079 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099555051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090047231 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.109168958 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094015086 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097805017 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110346335 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089757327 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091689028 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111606692 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092843996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096063275 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11107714 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089085732 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085857353 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092417375 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106751981 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093787536 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100761388 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107214608 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095506515 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089084304 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120159103 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090127046 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097633785 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114005336 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099839523 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098151877 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103794979 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091482731 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095900391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112698795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089579024 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093329151 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09154987 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118253989 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086526334 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096817271 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104930855 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09179654 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097622714 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.112935645 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095247525 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089037128 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150953839 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104723258 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097874033 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111055689 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094313776 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096505241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110427816 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097266809 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098234447 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.117387712 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092633882 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092020063 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11640709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089994759 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095069905 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0910582 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113945907 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086136853 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093613004 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104915478 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099051176 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094382735 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117368018 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09870359 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094279334 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111123345 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102367399 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089512387 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116267318 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086536167 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09915085 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.119770706 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10017028 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098567974 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113516746 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091485967 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093737817 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101941281 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113113203 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093559836 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094034933 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105727768 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087421436 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099120116 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114711137 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092656669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092727507 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115632817 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097088236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090802888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105548167 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097998493 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096868851 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10803576 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094437933 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089593196 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109109714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101401383 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086487488 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108219713 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096708808 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097906599 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091171177 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112051271 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096005343 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097176807 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114721682 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09589549 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090317187 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120490608 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091537478 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091827754 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109248433 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096869552 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08683277 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09433323 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113648149 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090582006 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089135935 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11719661 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099949747 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097726699 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1111572 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097823452 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097555327 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.118628495 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091784093 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098206003 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108652261 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086842731 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08967747 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105389855 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102578548 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089008796 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11626339 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093191338 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092677151 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09608224 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115845194 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091429317 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099379468 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124864206 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088399999 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105506935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092296464 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101743168 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10821165 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091443699 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094496562 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094918365 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118044153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096826963 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089299675 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114082667 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099693854 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09057498 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.119365176 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098945685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099832118 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109078677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098169136 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091165729 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117101073 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087856583 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092995375 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112013178 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093211875 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090171813 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11001899 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09039523 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087536732 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109175883 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100222927 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092122547 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096544106 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112679909 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091831707 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090185763 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108997942 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099864773 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091554798 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119039243 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096082822 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0867586 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106038759 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.098921332 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093758038 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118896213 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089580551 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096615108 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097974806 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116029482 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094169311 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101905928 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121918737 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098879704 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098263519 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107640427 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091497893 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097776494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112783673 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096519816 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09496644 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107049319 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097223646 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098431817 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114245946 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093141442 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087512778 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112947132 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101103183 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097185225 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096113337 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.114779679 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095620515 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089012992 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117089054 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09970174 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093677451 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120238834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094402198 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097265991 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109835124 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100397813 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093368143 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.107401966 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08884747 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091759833 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099613291 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107955254 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098051124 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098477542 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.110672686 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092416847 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097493848 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109851735 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097394328 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098214095 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112304139 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104619121 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094365444 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111053936 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097992019 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098587674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086821923 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112548899 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095706509 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100617579 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112011964 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098454954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092445122 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119145122 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094955145 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097936981 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119073783 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09999326 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08736604 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120561039 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098190679 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094478852 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110314487 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09299427 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089135332 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112374935 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101588927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090985101 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101828749 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.12030157 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092126158 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091386604 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.118624266 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092892483 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099058899 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110515068 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096842 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08746163 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11738866 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093122973 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100159941 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111070561 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089149449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0994864 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117724155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098272059 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096767836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121232972 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089036176 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088758181 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098055307 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112280285 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105518137 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097800918 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.1131131 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093623439 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094979667 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115223639 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101464094 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088997988 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111198921 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095273172 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096026447 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112001238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090190708 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098001838 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11279449 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097277251 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093236419 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109435135 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094283235 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100621071 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092034662 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110296707 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092208781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101249897 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114391936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092034239 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0882231 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121035843 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096319132 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101148418 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112257538 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094746077 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091535175 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117115318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102488801 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092296987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114637261 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093499646 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0992454 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120190167 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089270301 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091390702 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12472917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1014722 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096275957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116398839 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094361789 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102589783 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121864305 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097885824 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089808459 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089205748 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113863487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08936739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097526776 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120680815 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093966653 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091548712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119813052 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100119536 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096821536 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.117197924 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090386569 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102596362 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091893276 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118723095 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089287657 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08954688 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.117064598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101282639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094307726 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115258781 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096602812 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098412149 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109855871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09356962 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097600323 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119316107 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101436351 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097603545 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093127118 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118194598 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105218483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095512464 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11530188 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103022293 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101631189 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115397146 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094601533 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098758955 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122187145 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098092338 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102141474 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.112888192 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095118988 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100719641 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.122564276 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105129887 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094307498 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110546246 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100346482 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092858588 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109569625 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099672108 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102287962 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120687364 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097056014 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091978217 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124899478 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100549893 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095223945 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.11340634 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093386621 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100441441 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092024544 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120677982 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092146041 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102042882 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.123580146 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10173006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103554426 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110701453 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101587417 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097868129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.125674152 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096404904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089118018 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109927564 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098254912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102638751 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101269758 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119107101 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099245949 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099535683 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117159736 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096335833 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092386222 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123564491 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102559806 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096767638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117819071 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095040343 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095880207 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116856131 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101756449 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103041233 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116783578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107631237 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103297765 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093120309 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113238555 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096181261 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097562282 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117251618 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100078705 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092167284 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110217146 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101855901 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102885093 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116500633 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102918629 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102174116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114442767 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099523527 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103191095 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119995276 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098047726 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096112759 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098132583 seconds)
  done (took 61.694296588 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146625551 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104700727 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118539794 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097769591 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114668543 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119529829 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097548028 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098880682 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120644732 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107468117 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097470539 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117801141 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112213185 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138859031 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115522915 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107008952 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11882637 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098756117 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097546078 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117931169 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113122881 seconds)
  done (took 3.207634396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115264277 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111504513 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129733108 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111331249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103965024 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129779585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110107287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129739116 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111048539 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105155781 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132474166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108130985 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126058681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106735495 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105075011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1273717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111332493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104141883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130454035 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109786988 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127023139 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108333493 seconds)
  done (took 3.400228149 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127573975 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100563246 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096277835 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118617644 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101745641 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097131548 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122419833 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098157807 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108110768 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113147226 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089980522 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094592039 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09647896 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118524779 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092929033 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098198178 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126053778 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102324745 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103226548 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116914179 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090273666 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097466458 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098348783 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109051381 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104016239 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103845311 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118637554 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101699224 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088513244 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120519395 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098514144 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092913225 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089200772 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10975774 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089940174 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102334406 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121434383 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098421754 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098017928 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08885253 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120201504 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102480492 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08967639 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121129951 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09912986 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091853122 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.12150363 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098681202 seconds)
  done (took 5.837140696 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127232941 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156735166 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101355284 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127660731 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134458664 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106654893 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100424884 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128700924 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099830845 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124479171 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113038595 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111788296 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125291126 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105933606 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103349695 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12594448 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103039558 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100076869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127681847 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101706203 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12642517 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103843883 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111619274 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131805464 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104922652 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101625632 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121622996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105382574 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109854468 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127994187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105739772 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127212283 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113545702 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104283923 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122994151 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10393656 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.350006635 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123980644 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104055806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103881041 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123288508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106100774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103810656 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135101292 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103141547 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103075386 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122267237 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100283331 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109794681 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125183562 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108305331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134073316 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104527412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102701624 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125638195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112238815 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102396307 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122499522 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10395473 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109003978 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120550532 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104725098 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130993918 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104277581 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107478164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132568783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104855264 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10375321 seconds)
  done (took 8.981786753 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13361437 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105664903 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133652139 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113983762 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105035204 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128261594 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105331444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.12661074 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10527346 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110199274 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124903166 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.244835707 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103305907 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11086848 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127466575 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10492447 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106115923 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126876902 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105646462 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105267187 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126339447 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114611457 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104794937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134169689 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117047971 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123660452 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106447751 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106314491 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135455537 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106344732 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136298831 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.106946944 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107683637 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134643004 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.117177716 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10580361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121963578 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106725193 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105338706 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126832394 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103054618 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133833332 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107087086 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103498041 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12759337 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107067259 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113670179 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138755352 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111757582 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133069294 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107289123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114257444 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127724818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10786304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11450797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143612875 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115197967 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13406148 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106953662 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134424678 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115594796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121925005 seconds)
  done (took 8.252925931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100172768 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098822936 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098431505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119426733 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099711941 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09935572 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119379559 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.099623667 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099359412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099862212 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119758685 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099661952 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098517761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119614674 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099638501 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09948112 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098440997 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.1202815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100079041 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099102086 seconds)
  done (took 2.950600559 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108829853 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116833827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121398615 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107337717 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101095352 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128562455 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101218696 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101045449 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100526938 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123669176 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109523868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130671842 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101528654 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106834524 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131305786 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107669954 seconds)
  done (took 2.661212764 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12040456 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117733233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.20801751 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103255931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123762299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108809698 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100886019 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126859291 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10059501 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107062274 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127544532 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10437976 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102446026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122908979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10212284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103243342 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10005562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128619818 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103021354 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.213845812 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104809482 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102876404 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125861673 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105402852 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10290849 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129107117 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107291815 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101900718 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126012365 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103356869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103642485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13112235 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101096886 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106408235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124089276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103117357 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101631723 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.124135722 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104896945 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102162337 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.125370192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103942444 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10179343 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.125534428 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100536641 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101858731 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100205578 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129131778 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.1047675 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103302377 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122658674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107320872 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.1069672 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131098248 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.10951442 seconds)
  done (took 7.176520739 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113950434 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103385925 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134941524 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101370762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102619211 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10302281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125791257 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103234264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102387513 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122930088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10385545 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103917628 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124455052 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104078765 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103055155 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124623035 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100664551 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102750602 seconds)
  done (took 2.848160636 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108134168 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103072299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10652899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123594685 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101606144 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10165317 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122703082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100444311 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100458023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122750327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103768566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102306247 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1011559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123889609 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101861355 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102511369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123994888 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102225707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103489775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121732017 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102165679 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101191972 seconds)
  done (took 3.249020294 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113797669 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.211294907 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109302198 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221688324 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098753268 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121660981 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108781547 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100188836 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138415589 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098128305 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098204669 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119185758 seconds)
  done (took 2.408548645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131268191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140812633 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1239353 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103697442 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111318181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129041505 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1065912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106559906 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136088584 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118212056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128425402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115819265 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11421814 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136491837 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11159103 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132690587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107071979 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107844349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124038276 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122610645 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106685368 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136773493 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107967211 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128679475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108742716 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114405133 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136524767 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119599367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128945268 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116579396 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111736675 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129250371 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115784433 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139941088 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10432013 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115671005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128933018 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123043362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111589816 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136375975 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103863788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133284844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115709459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112153493 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136182917 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107899684 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133618232 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10758968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107683962 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149011185 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111867819 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136562071 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112891494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115300842 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138066517 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126539709 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139625297 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115552826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132574852 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119045818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116389111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133288673 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11490073 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139894307 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112154924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115413132 seconds)
  done (took 8.886143203 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143553434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10366716 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128640834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119483461 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13782085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108291371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107362483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128588317 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108212123 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105095986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171548147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108706949 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137707448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116397347 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108060651 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129259282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10892817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115055059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125896824 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127941099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1297455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115453834 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116161357 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137020965 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119483557 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13434183 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107797559 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107922902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130334449 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108501274 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133553995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108259341 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115494789 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12477191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116686015 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108463755 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129958763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113672409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10812433 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132992155 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115166648 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143896193 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108013118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108905126 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139863288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111195988 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128915734 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105795695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108550582 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125298073 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12110737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119219239 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140545608 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115376976 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131033877 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108498796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108381571 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128606867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108798253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112412469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137440504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108089586 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151022309 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108320695 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108455873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137223943 seconds)
  done (took 8.858221212 seconds)
done (took 167.756112608 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.173957885 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.212012574 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.195450517 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156512416 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093896388 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151402596 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127518988 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.196198876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093917528 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093763198 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094074344 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.119049316 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161586349 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094374998 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116506842 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097017994 seconds)
  done (took 3.04801119 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.187568702 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.339885805 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109086709 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12136579 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100837243 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099950621 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120486723 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102156053 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098504288 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128680617 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099832112 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094642925 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127450324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095757377 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098842647 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120648727 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106825949 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099702199 seconds)
  done (took 3.136065871 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119451377 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141876693 seconds)
  done (took 1.149631211 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131015867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21526301 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279262743 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170559986 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119936207 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138950337 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15124161 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132262468 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178907802 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134736818 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112408696 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096738702 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146707457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106035373 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13902305 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097383025 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126821939 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13537522 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113563899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100632526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144066487 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102420016 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105194682 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136137747 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.168215334 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135533862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10381052 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123544179 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10238676 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112868272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128603441 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116602195 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110966529 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179443852 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124746827 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154629355 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12825589 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100159085 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112530357 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120785128 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104176245 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103430984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134793094 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097446124 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102625745 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127079557 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10280773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102406345 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129076337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107388764 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130232666 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106516987 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174236778 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107733622 seconds)
  done (took 7.853244688 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.847809849 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147256925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100210445 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.997240017 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143665368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113137146 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.837331533 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144833471 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25250874 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.85879656 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11417426 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129021904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23796914 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250715825 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.22200559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.349944065 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697128292 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11330898 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128515593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160680325 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105358229 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139183594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114853854 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438541081 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099700284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098445722 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126244187 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107534386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178474343 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.1000878 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125651481 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171583731 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.280753361 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209253634 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120737983 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100304043 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098814118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182356357 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270155166 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218903734 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184813104 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096204916 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098194033 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124968741 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113849391 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096424598 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175865871 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18991868 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.18754305 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103612105 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107844237 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128247651 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.103047594 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176264951 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.096786274 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.347750496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372104784 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09960264 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105348262 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132862612 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265333876 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101087352 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234811323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14200895 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217986776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099236818 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809946818 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184063719 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099217973 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103493724 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126335537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105381858 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12415235 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158740733 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402001955 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107358352 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103018647 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120801675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242594061 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099455459 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098767616 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180843364 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100162669 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12775138 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107880891 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126435767 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165493692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.266659673 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105695 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126514744 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104670593 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13019423 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101249127 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231427256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228661064 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17354897 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209996662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127002594 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.155870065 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18236199 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126576648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164060502 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126536349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110848943 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103459403 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245417359 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132928496 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100626711 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126196036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105668064 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157434919 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103532802 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105372566 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184752283 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.465173058 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184100802 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098011799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104078923 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127841225 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157719969 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128541879 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263590627 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10677561 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183471342 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10396711 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118545583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106205024 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179953011 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107856353 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127270818 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104636638 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108264231 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27182135 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222550381 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128661325 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243679054 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169018641 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10502114 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1901712 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127366193 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164666748 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132206207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103655883 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101481239 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793247634 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133512169 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104919584 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126213362 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181678584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09945497 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123974449 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100300555 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100176878 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803606508 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126036791 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097792324 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101709798 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12616502 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105807099 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105020246 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12646915 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154359181 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265130616 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10920394 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103883515 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121859823 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178663557 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101840098 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10031894 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0997976 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12231412 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107523075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103934155 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124541748 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188041422 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152873462 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228352756 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579486828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100976713 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100669065 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23918866 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122226498 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321638977 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106674712 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232201875 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182953064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097563816 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372839585 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161344927 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204016274 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10318919 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189516581 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097975361 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127494935 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155581762 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122396299 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107393614 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17651264 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108994901 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128906797 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203242821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100534913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24864306 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098138907 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187212882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102053353 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126763199 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32354525 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100728951 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111614568 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177121614 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126621987 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101791866 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699611872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101510208 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108910599 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127681741 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232378451 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185619179 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106053518 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128665954 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109770352 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178480892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210981493 seconds)
  done (took 45.557738122 seconds)
done (took 61.623356016 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256287039 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16877318 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.365534447 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15060106 seconds)
  done (took 1.919508313 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.268876077 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169119876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.249444977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098098901 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.257921282 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096291101 seconds)
  done (took 2.054040839 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17564079 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172558443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146314741 seconds)
  done (took 1.410399176 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201444593 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207216704 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355031008 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261792446 seconds)
  done (took 2.025467801 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283304785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115699457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126779414 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.233253616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.248508462 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207895411 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122933159 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1745059 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13022373 seconds)
  done (took 2.59253973 seconds)
done (took 10.916171963 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.432033302 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.404591051 seconds)
    (3/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.3611486 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.159639948 seconds)
    (5/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.27409434 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.223540804 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113581618 seconds)
    (8/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.152240576 seconds)
    (9/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.2021073 seconds)
    (10/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.293992212 seconds)
    (11/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.409916145 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.26099809 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.349008259 seconds)
    (14/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.19281237 seconds)
    (15/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136278016 seconds)
    (16/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111275294 seconds)
    (17/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205642951 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106375743 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128979997 seconds)
    (20/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.307471466 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.174190373 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197529864 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.27545125 seconds)
    (24/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.14767758 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.141841004 seconds)
    (26/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.214259694 seconds)
    (27/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.21657974 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.209277038 seconds)
    (29/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.187335506 seconds)
    (30/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133895912 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125329724 seconds)
    (32/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196270355 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.400580463 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.114773426 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123705972 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11190336 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175544305 seconds)
    (38/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079158427 seconds)
    (39/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134291093 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.12658063 seconds)
    (41/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.179062159 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117710231 seconds)
    (43/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132842466 seconds)
    (44/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.252328312 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079075992 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14442017 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.302185451 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086639082 seconds)
    (49/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.150650678 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209408786 seconds)
    (51/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100239545 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.083046796 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101784036 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13388376 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119456537 seconds)
    (56/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082451071 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128779104 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100548875 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.141240626 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.226292508 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123711216 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130844009 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.142591481 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08695386 seconds)
    (65/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085544338 seconds)
    (66/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123966301 seconds)
    (67/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.170603255 seconds)
    (68/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083366578 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102820707 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.164234317 seconds)
    (71/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121104149 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10896503 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128424868 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158119345 seconds)
    (75/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108995753 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.110415071 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106189419 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124467962 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.133224805 seconds)
    (80/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110398469 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087319055 seconds)
    (82/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.219528261 seconds)
    (83/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080533462 seconds)
    (84/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.142327976 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082768946 seconds)
    (86/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085803436 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.223919492 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.195273911 seconds)
    (89/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.213518264 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099915068 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13598938 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112710735 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.137570002 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133434848 seconds)
    (95/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117265881 seconds)
    (96/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.140220367 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128094085 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109690784 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126269139 seconds)
    (100/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.229379576 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102640368 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091312737 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125453073 seconds)
    (104/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.182327356 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086932803 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.112415832 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081202803 seconds)
    (108/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095890672 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102964401 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134842337 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.147268524 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081252297 seconds)
    (113/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100383669 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.104215632 seconds)
    (115/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106831171 seconds)
    (116/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080516327 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102608655 seconds)
    (118/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.170551808 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.202488758 seconds)
    (120/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10661074 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104080044 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08839426 seconds)
    (123/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081218328 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128165594 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080980811 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124106105 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122839865 seconds)
    (128/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.174489755 seconds)
    (129/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083697734 seconds)
    (130/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.283409437 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.138704894 seconds)
    (132/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.147057808 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136798918 seconds)
    (134/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086994219 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.088617295 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085937751 seconds)
    (137/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080144838 seconds)
    (138/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.109377651 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087985463 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087145839 seconds)
    (141/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080799295 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086471404 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111462737 seconds)
    (144/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081150233 seconds)
    (145/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080987661 seconds)
    (146/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086661579 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126445023 seconds)
    (148/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081658498 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100408731 seconds)
    (150/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13685261 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126581862 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087569556 seconds)
    (153/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109898325 seconds)
    (154/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083670416 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124136836 seconds)
    (156/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.148436012 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102928598 seconds)
    (158/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.109492504 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11088626 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083897267 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124723372 seconds)
    (162/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102622259 seconds)
    (163/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08530007 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104663387 seconds)
    (165/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087533261 seconds)
    (166/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.088038781 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.126437217 seconds)
    (168/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.081940257 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102937507 seconds)
    (170/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.153218568 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104235157 seconds)
    (172/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082632732 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.135588978 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.107389384 seconds)
    (175/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112163613 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111669274 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081412797 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145788134 seconds)
    (179/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084648224 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080252825 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088205086 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.126959232 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103791293 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083617908 seconds)
    (185/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134348602 seconds)
    (186/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114330117 seconds)
    (187/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.082356026 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08071672 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132249224 seconds)
    (190/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113079346 seconds)
    (191/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.083313156 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083311736 seconds)
  done (took 27.552273076 seconds)
done (took 28.473936106 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.223586475 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128315715 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109576086 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109166449 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.228281909 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116023119 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148108119 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112284186 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117534721 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136247641 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10216966 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120107057 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134131478 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.200683494 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138352061 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104110226 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101829103 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.143387857 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123176884 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122980043 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.229662346 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103798694 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.143787932 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102896218 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230592491 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104316076 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109735023 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.135560067 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121256841 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11081363 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.134454589 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102832141 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.122175181 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.146532809 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103116845 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111109688 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125573142 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088914576 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112381026 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134649099 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121001682 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111833548 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13385462 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104090415 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112224195 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134071001 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103422077 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11368244 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100324024 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.133414731 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104444259 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121861465 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134387005 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10118045 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10051248 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126898979 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119744558 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101905831 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144073299 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103407002 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103252357 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125089965 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113540037 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103127774 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133671936 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103949035 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111940521 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112288674 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133924096 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104817016 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102128073 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.13439863 seconds)
done (took 9.961401024 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107207226 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148174661 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233002678 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.234110228 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130856492 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144308078 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116392856 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125891167 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140044778 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12271311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13957068 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159610316 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.239668801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118225938 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11866813 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140643775 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114884239 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111063092 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.233095347 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153736483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13048847 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11938769 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15608362 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121335752 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105523832 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154775434 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110228069 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.137330132 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108623053 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124805486 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150475536 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107982673 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110683677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149965549 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125128764 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115912178 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142389298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11515274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106598066 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130087859 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115894587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1218952 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.130496124 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12070829 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114285677 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145500819 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114810541 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.1188564 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131563387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11452201 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107218096 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15743883 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118636623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123585597 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14209219 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120508557 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120527985 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144706101 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111004895 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118909594 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131950437 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106786545 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107008909 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153159419 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11047872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143892564 seconds)
  done (took 9.752519382 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127871753 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13722581 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140572445 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118322503 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11185293 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124406155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100761009 seconds)
  done (took 1.824603549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102922306 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.241152984 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216059763 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.240972759 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.240258365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.252183131 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125920253 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10158544 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163327729 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112428376 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.243393612 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.27173293 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112621082 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142259565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.219521834 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12882017 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218912186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.13012219 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11766016 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.243172759 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119563928 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160977913 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115851603 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102681998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.236419784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104271731 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.289548419 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147215814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113109641 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11563782 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142744985 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181474521 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.23917575 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11592768 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137624073 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.240277133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.212339759 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14317074 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.253041134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109083246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.239620531 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118484772 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118315151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144444394 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119128352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.229904929 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122515763 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118124564 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143273807 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.247264796 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114372937 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.24130572 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115343104 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11724134 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139133761 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119017786 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124015925 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143737704 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223490788 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147503468 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.242712167 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.216114224 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.242035938 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.243974264 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127450972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.243771366 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.230271571 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116500214 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110761071 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145049649 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247945057 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116199086 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140337841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.208302315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147507274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.219920313 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.243985801 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141775496 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116339358 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106770811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140736675 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104683901 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.235528525 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117802731 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115365798 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14744215 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117244855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117836282 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134682367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127505622 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117655099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.139881782 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12331907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140606242 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120320432 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.248924195 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114904918 seconds)
  done (took 16.936483267 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106247931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104579811 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108304457 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130108418 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105681135 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104623556 seconds)
  done (took 1.651582876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143306969 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118648547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152143514 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119393297 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192580369 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.223598107 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.256286786 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111820797 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.164894929 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131014293 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.250201417 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.252819337 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.252004304 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123162023 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.254136256 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122034683 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.25861946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115582852 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153969394 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11754042 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118392679 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148717787 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116766938 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.241872408 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118761038 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119802648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138863324 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128080536 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152748191 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113127905 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121415409 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143663848 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111290251 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111854224 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.254095695 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136410383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115606527 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121740437 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146431955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119569058 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.255955878 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117558409 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125609526 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148148386 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113234268 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109721141 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147325746 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112855955 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.256716919 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121316572 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147565151 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12111626 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119291903 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147824641 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112254742 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112191481 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14824815 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.257511739 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124773175 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11120744 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146952151 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120520151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112181986 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148681319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12094389 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121220773 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135931031 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121567153 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116962409 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.144762083 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121411067 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118784632 seconds)
  done (took 11.726844399 seconds)
done (took 42.850588555 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.605427134 seconds)
  done (took 2.596143722 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.121878501 seconds)
  done (took 2.115109375 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.584269806 seconds)
  done (took 18.605571292 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.431087273 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476039795 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.127712704 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146381309 seconds)
  done (took 3.172272653 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.760436896 seconds)
  done (took 1.773412975 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.337955738 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.246837029 seconds)
  done (took 1.582392712 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.704282348 seconds)
  done (took 1.713168782 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.535719494 seconds)
  done (took 2.532501723 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.288371215 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241888937 seconds)
  done (took 1.543830475 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.640758646 seconds)
  done (took 1.650198245 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.791698619 seconds)
  done (took 19.806445724 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244973137 seconds)
  done (took 1.258071103 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290311479 seconds)
  done (took 1.304593191 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.468812129 seconds)
  done (took 4.483496589 seconds)
done (took 65.141450394 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11874664 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122233796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.143967227 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.120233301 seconds)
  done (took 1.50732039 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123594277 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118994446 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146106587 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118398013 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12509951 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141940011 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119381652 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120341199 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117070493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14442388 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119267015 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116694988 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145066778 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118012805 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116250216 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145390735 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122619803 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117798237 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143618807 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11997713 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119523888 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144754205 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122641042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120872442 seconds)
  done (took 4.063384524 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115188081 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109633938 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110669866 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13220199 seconds)
  done (took 1.487302859 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127171548 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131578346 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151864635 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126516749 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130388387 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153763575 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118569472 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114688089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141873416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128082197 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134245206 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157533555 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132049306 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144114976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129624249 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113421365 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11976593 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155184322 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126064301 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151868559 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120140894 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125792693 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148191596 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128508395 seconds)
  done (took 4.224521792 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193654991 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12880526 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169190311 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164132749 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.171491794 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117569452 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.138412443 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148297789 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123899616 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145543389 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122222564 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162875817 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149676698 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120484963 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117790859 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14855413 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132106217 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.148062938 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.160083328 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122301654 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149933502 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130279859 seconds)
  done (took 4.186598292 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120579347 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108905908 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130874362 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107460177 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119902621 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135142363 seconds)
  done (took 1.744135569 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108113463 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10287648 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102833328 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127024658 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108326623 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103858204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126425229 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103909489 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102993129 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104255167 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128084685 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104081861 seconds)
  done (took 2.337132829 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211085246 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144978537 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284843649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369271837 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189327348 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185637791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284659319 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189297088 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206754692 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136266003 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21274291 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156759702 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178513397 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182750476 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165007446 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158280432 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195148623 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203977751 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168985167 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235885724 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155842559 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198375981 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184005463 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174888745 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135416461 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19079126 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119931325 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154627975 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168890837 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192355954 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202207084 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147856793 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141525598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221379486 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266581118 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205043681 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265877768 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133749164 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195939185 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.18466302 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258877787 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164226408 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219060213 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152378562 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15887464 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182434589 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1818387 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183333425 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159127958 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141748196 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21228999 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198834858 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174968107 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162513781 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299786491 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159067913 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142225344 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206260677 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209052711 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195933274 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201935685 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122150574 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201509924 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210700512 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235814005 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140905413 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194467747 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125565649 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188191849 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201643646 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212529875 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156255064 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238735705 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15682105 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166001169 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195397529 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182023743 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19902006 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193016497 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118917663 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178122212 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134927122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124471904 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219682216 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121279828 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237661851 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130040994 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.336137274 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20831397 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155672081 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188497512 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185523932 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159378216 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171203137 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103970717 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142513556 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187061894 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156621905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155295796 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155328482 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162595461 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126332318 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15169958 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148075381 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164402896 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159524463 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164093818 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195957549 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13102742 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20167525 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147266154 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.183086891 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195348482 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187751779 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155956497 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132719869 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238629261 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164397334 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1601796 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173473541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221466292 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175100191 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134952207 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192540295 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189211951 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167666678 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193037678 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164540463 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134279715 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169796633 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167147667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187696354 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155668976 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153005185 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163555152 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217361562 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125309264 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162256622 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177981253 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159365373 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123331007 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160954168 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136231178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13922734 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170460994 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135014134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179757705 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161526723 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186634391 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156843843 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160101068 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201016335 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131532123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163653497 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172366145 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118722573 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20356795 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21751789 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129357426 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175674466 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18969149 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210257559 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166911618 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153943774 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177411982 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154154232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119694405 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190191654 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167233518 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190250184 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214025741 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180157875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193338946 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.189289888 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147021685 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195383365 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.176471191 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183343671 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14331248 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196971 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167936874 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146548521 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122390355 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126335756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162677577 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129934226 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160103295 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18070176 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192954014 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20285257 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162036268 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16188847 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18484832 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151792514 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16129553 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201204546 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135507634 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215120538 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209930716 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174568449 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166945511 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163565793 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144897434 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126001523 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133651821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18905506 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134385885 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161582934 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142012976 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211702057 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173551367 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174556823 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215930193 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164635589 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222149895 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118183369 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189307149 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167125851 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191826342 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183337012 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155672422 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162088426 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215635002 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14071496 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21606829 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190475471 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176180329 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22281213 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.158616853 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158651914 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147262987 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185428183 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137618012 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186883262 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144536766 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155384011 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152939642 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134188913 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166693203 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21540775 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141134352 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206406436 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155525828 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199807736 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124793285 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167754332 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167978049 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170871847 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107475766 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197913345 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192217371 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174568302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156075564 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199538245 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128417077 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340299931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213500131 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176804978 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163130606 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138403099 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193883295 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158083908 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19029208 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177890729 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169311432 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231847701 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167884024 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167870693 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130827868 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146942625 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177547032 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.142582721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179374669 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159945221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.167969974 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215859075 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135713467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191765386 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172341165 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170868322 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144519352 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13649836 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245652089 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191686182 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172536829 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.186057321 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188259306 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178396957 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121801795 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152983812 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132439664 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208779801 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128804483 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200834962 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.165565065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208439616 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19545247 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159019638 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16595178 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126799577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18978602 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148615108 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211312689 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134554363 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162438306 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216946082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130184678 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13005675 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185864616 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31168197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14509145 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19851094 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109310622 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304310894 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12713743 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132353867 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18623764 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169831266 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159771942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180761007 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195173926 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137830922 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186905369 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135429943 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203136227 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183393345 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195683999 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204466179 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14624665 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189937547 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161956964 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202593266 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14158107 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.17365393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16142699 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217103606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203149246 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131864059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16347409 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191348178 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19239976 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175433093 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163394496 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179057578 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152880753 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165201447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164565887 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124734971 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157705868 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193994003 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155199119 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175683385 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194497236 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130680256 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12679668 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173811174 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161904675 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168025819 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129601327 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214289143 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126932356 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205694715 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231026496 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131816007 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186994398 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145704249 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130853887 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165462543 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142436413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157098192 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168391467 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20650292 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132358446 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202016461 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165343115 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19233546 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158138106 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169583727 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26491248 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154276509 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185260519 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175858526 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19183403 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176826627 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17084139 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191612768 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147407727 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194210956 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146509423 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.259712821 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191508876 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16710989 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130561848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170877548 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136903938 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160939439 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153565919 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189597386 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141603548 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13335354 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194749817 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140062709 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.173837999 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138739144 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221716101 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147146292 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217588848 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210727722 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13788126 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19947054 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204013443 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127996033 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19203798 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172751823 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165978305 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152509057 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13109613 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164400287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203359981 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151056383 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158354546 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198510098 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163596772 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194939241 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134280691 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201916525 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139530543 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198175634 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12621896 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17952348 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164015924 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161022525 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127074685 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193580475 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160817234 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.18623436 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141170415 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.171596887 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211803032 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122127768 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161192702 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308745236 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161159435 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217713037 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139659358 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134542225 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173363886 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156886824 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.195422872 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192613102 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129316596 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128471519 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172701835 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159758465 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167968891 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163799283 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210020951 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162362245 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20918463 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134003227 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.308846743 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139125071 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19377558 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120138439 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128344421 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165280908 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134291419 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170840476 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180780332 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230811996 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.186880063 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147157002 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162457022 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124695058 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129200352 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189371088 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151992472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190380165 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146766244 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105250134 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167221766 seconds)
  done (took 84.596881274 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159242687 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149040837 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165935469 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219703714 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194471975 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288837874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227803869 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25293724 seconds)
  done (took 2.764303207 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117942958 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158783 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14186225 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141919475 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110086873 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.46942387 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158757222 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119711777 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162642015 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149583961 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134372196 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.565222318 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116449247 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144020598 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118995225 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133633944 seconds)
  done (took 4.040578288 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.406735118 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.574464376 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.159525728 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285503782 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.268886444 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209154475 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.795096944 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204658928 seconds)
  done (took 13.006771109 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.172716517 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170221025 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.45518158 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.310024271 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184402613 seconds)
  done (took 2.403194402 seconds)
done (took 127.368872391 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123681188 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123173868 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12273344 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15161392 seconds)
  done (took 1.62091932 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196390297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093834971 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095388305 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120756774 seconds)
  done (took 1.618422933 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.464052552 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093481382 seconds)
  done (took 1.6982506 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150908572 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145938859 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165347838 seconds)
  done (took 1.589476948 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134192771 seconds)
  done (took 1.248576478 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.115934132 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123978958 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271602732 seconds)
  done (took 1.630380212 seconds)
done (took 10.527443784 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120317018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.405023075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43031895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132592432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716039593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425237372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.014606718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172449107 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174211937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137318257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131170084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691726097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.067211583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.354911156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023299678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.386666563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694530952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111304662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143810591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113057921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997146876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136095369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111981522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111853592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71657391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422008083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109666263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.394887693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109386995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114188803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425655394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110576188 seconds)
  done (took 17.311581729 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111551492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167719253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145578448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111367242 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113371823 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138334278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121393664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12256914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203728654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110166628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158585855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109966926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115663491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138247631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134417135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110228713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141138827 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112915267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117885964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139488607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131446581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109595426 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139435937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116047761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110367049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159621927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110948627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122962715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138028782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115694912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115642447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138528457 seconds)
  done (took 5.255231837 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156025284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174824275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146636925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14712862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185622297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112951895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221104004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147300866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203939678 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110332443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13173795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137437306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15176965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111233354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162445572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110143678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113430614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1404782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118677121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112441224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158290138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111194744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111976201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139180512 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111502276 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160405559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110756833 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124083689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137675109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115774547 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116428564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138270584 seconds)
  done (took 5.551749812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12477572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125757982 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133803665 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162031834 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120988696 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124905058 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153074669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120814043 seconds)
  done (took 2.185380955 seconds)
done (took 31.42645427 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136194312 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128920258 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131334926 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153055766 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.251169764 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117281643 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127663727 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115905856 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154661667 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132975758 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109347171 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148931086 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13099071 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121217923 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.251852121 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125382627 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.258892164 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.254043013 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118499395 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125587382 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.147800137 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229543653 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.151876916 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118553985 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256268738 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114307485 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249075573 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122557061 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.119962768 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.139968881 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225319749 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.152685749 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118197454 seconds)
  done (took 6.354816376 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.236980466 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152273096 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121446008 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119657235 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120893628 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147144332 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.243059129 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147798776 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119626516 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119481301 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149355382 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227330226 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.154849622 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.115156429 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121726162 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114159923 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.275789514 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.151285386 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.111980367 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09668294 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115585674 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.148357355 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255594521 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.144935964 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119997041 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12012449 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.15112172 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124612236 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121373732 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120613725 seconds)
  done (took 5.604310159 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12669415 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134417518 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164828878 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185500355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146872812 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162086772 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139694477 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135422387 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170631772 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114926399 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129388061 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180113865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131027739 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12358926 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.141489346 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134147397 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136778464 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14255469 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121888088 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131199883 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162930792 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132453664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137597058 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150717181 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113146962 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120971879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152486914 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125213638 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120645095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156933109 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115340037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117608708 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143661493 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149262511 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11386933 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155711666 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140998806 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125102869 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157394798 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144986814 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11659969 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143966143 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140646069 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.197385094 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11590026 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.1275801 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124463888 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156641436 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111265207 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132296751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183926643 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113726839 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162083336 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113017938 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111766191 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120851023 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.141635839 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118413115 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127295041 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145071793 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139564523 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120718926 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15287067 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116424932 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123885749 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.139751975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113870893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118291149 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.168424644 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121426295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150071525 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11238135 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126620591 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126108782 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123989589 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153486623 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113047716 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124249996 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15247772 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120720563 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125610115 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.144582639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11698697 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130455027 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163019031 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128581526 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12535124 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15520024 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117759151 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115821827 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158979169 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115333607 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119111623 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.153849148 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114386783 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118742872 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154817784 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125815458 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111908026 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137978297 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.145039621 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114309837 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137347176 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.145729386 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119785789 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122565226 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183496415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113715373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124374552 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1552663 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114647133 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120473123 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145875839 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113539564 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13232777 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156966044 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121257049 seconds)
  done (took 16.98382192 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.352116316 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.338714711 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187858525 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.427896115 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128077641 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.269444854 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.339346779 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.340869082 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113601565 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178920754 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175963013 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.310143403 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145466269 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142074426 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.341472812 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.398275965 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174942849 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149948263 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180029312 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128035338 seconds)
  done (took 5.972829968 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134987731 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150762772 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166994406 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144339886 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124647918 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157971498 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114594342 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134641052 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153270233 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125340147 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117748936 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15832311 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126605455 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13266388 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157423895 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.15339372 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122138127 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148124624 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138010735 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119186075 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.1337045 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141307781 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123970468 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166926285 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134100277 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124365828 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141281164 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120035653 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119598699 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150674112 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119405152 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132522373 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148947705 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108841347 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126799442 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158633493 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120760986 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11731926 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11996558 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146113626 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129536312 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12652604 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151235624 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103245314 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133916654 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113966978 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156001216 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127212995 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108885705 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161961747 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12786975 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12858199 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149471786 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135982758 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121278943 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159679996 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12514379 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128063639 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146938779 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113227151 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113132862 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117195708 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151177138 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128499067 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125759275 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162636722 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131935582 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141375573 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119873643 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119559083 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118118675 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157599267 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135900298 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.122389332 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.149716999 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127012053 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121484983 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125527339 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124272957 seconds)
  done (took 11.741120269 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14115197 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124564919 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160637055 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15126765 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127317976 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.147888686 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.123600688 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135639046 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127217309 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1611873 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13130434 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128541858 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165062347 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125305737 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122201074 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16082444 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127589353 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182580206 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134536147 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14352505 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157570589 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121046812 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127831458 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.154605023 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143425809 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126051355 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170338886 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.127214826 seconds)
  done (took 5.114240867 seconds)
done (took 52.90060824 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.262623835 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.465339498 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.251277994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.245733519 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.261294247 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.25652783 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.246706088 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.251094146 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.710805639 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.223599772 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.249595081 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.250031576 seconds)
done (took 28.828162248 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.321393263 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.390918896 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52834329 seconds)
  done (took 4.064534097 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.246708833 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.239430014 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.463356685 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.239589999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.239817368 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.256914255 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.251202787 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.244875083 seconds)
  done (took 16.080805722 seconds)
done (took 25.860370343 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.256797223 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.422792493 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.488421451 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.223714346 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.245116605 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.245713346 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.246508528 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.261956771 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.247914493 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.22562767 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.636129582 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.508682699 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.240100493 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.629313685 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.221754534 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.26626219 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.241126397 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.503659982 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.241994882 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.287612158 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.222751706 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.222893548 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.247876948 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.248340017 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.245456708 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.248836522 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.241379791 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.242780988 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.459432535 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.261166675 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.274380327 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.246236824 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.242027987 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245044601 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.24056621 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.25795583 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.447002118 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.246742182 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.227247681 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.249259888 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.442811879 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.244732837 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.243022347 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.247625466 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.227970003 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.262586734 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.228951184 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.35241554 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.262532824 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.26209085 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.283495753 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.621355814 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.259661173 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.248634186 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.251711577 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.484195593 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.25118546 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.295078081 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.270097188 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.248872879 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.244373788 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.258655111 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.293493306 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.24419093 seconds)
  done (took 146.13531933 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.243890301 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.247336802 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.242541124 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.308675914 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.248654612 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.247566042 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.244288174 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.242399322 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.246849701 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.275087423 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.247426041 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.243260306 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.245616093 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.210553474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.252872394 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.263978962 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.245719415 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.244634521 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.269819551 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.244974649 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.245212314 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.247036661 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.258553211 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.244387906 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.281768007 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.315825031 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.256519265 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.261591817 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.25692607 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.242560507 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.278705137 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.293700545 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.813750563 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.115859772 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.248594241 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.246867922 seconds)
  done (took 81.771911834 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.242096004 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.244597818 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243517023 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.272379013 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.242620817 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.242767881 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767743573 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771261039 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.953410949 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.833216317 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.451631595 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480589331 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.246199471 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334827749 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.254153866 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.244860873 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.333535052 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.268912507 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241736498 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.242657002 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761672214 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.25813262 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.453672202 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409456924 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.255696819 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27005355 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.634004396 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241978311 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27158229 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.563610168 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.286357149 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241983708 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.567264763 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.844387295 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.356548235 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.24393607 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271636282 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.241828883 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.516822197 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243462136 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.242034909 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.243838371 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856566114 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.244683065 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.7507254 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245890773 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148821125 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.246163471 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.242685638 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.509721204 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.783247644 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.245762576 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.240583308 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.24301687 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.242239154 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.241198564 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.269599638 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.487363107 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.057318199 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.243610018 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.244709938 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269060747 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.240477514 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.253420433 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.244651369 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.588028926 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.301090602 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.466983947 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.739235668 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.244918742 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333424236 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357125429 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.241317992 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.240779693 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.24027979 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.240007674 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.24257251 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.242026233 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.347814888 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.24041143 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.655584084 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.404267234 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.257467301 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.364600509 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.336135888 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.241539122 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533862346 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.243981536 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.240899628 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913426675 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332373519 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.240642209 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.239695145 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241126974 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.652679326 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.735769169 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.410695238 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.245184911 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.778502287 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.243699424 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.050325594 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729704772 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.853653515 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.24583006 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.242515827 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350452378 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.405413107 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.256788107 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.242771604 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.364616086 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.245300684 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.301763354 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.244348498 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.63905948 seconds)
  done (took 381.585712041 seconds)
done (took 610.639347965 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.055260645 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.006752873 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.155834878 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.021314133 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.007494323 seconds)
  done (took 11.393600586 seconds)
done (took 12.539643027 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.42007495 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41935599 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297254864 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.419639989 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273448996 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435647929 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40737303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.264739359 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.349750724 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316316904 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345980701 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.29250634 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.276082357 seconds)
  done (took 18.662633377 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512030258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.254001948 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.31536655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498593565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290687433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527250729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.591670353 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.255331425 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400853331 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265944559 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264718935 seconds)
  done (took 18.322855862 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504421949 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.253107923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321705416 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540262609 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287530199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523289276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.559363849 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.255240484 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452654666 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265614627 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265309053 seconds)
  done (took 18.375189643 seconds)
done (took 56.507485849 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.282988704 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.333646903 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.274360119 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2633312 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.262239429 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.262238479 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.266966094 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.263019853 seconds)
  done (took 11.354958917 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.262437096 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.261381024 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.260449715 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.261376327 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.260999248 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.261569913 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.25960521 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.260966994 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.260569389 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.25964832 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.260413336 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.261518094 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.26112612 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.26107742 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.261359159 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.261802363 seconds)
  done (took 21.323954575 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.26259146 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.261902647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.260652023 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.261669772 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.260746337 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.26257166 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.264381055 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.259561938 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.260933945 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.262521131 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.263394625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.262411236 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.26137729 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.263009569 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.26186806 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.262639294 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.261323531 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.263988043 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.267645949 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.263044007 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26161258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.262457569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.262914567 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.262287311 seconds)
  done (took 31.447888775 seconds)
done (took 65.275072389 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.253139305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.248755917 seconds)
  done (took 5.650071487 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.324951492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322175371 seconds)
  done (took 3.799027627 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.265001924 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.264373039 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.264364447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.262300728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.263452915 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.262620409 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.264138755 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.262633491 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.263259832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.263008634 seconds)
  done (took 13.785116181 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.264241963 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.263047831 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.263158284 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.264344268 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.263149174 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.264683431 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.26501901 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.263065716 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.263167118 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.264658908 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.264722691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.263970093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.263684157 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.265208922 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.264093134 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.263979439 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.263364297 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.265766007 seconds)
  done (took 23.903668151 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.277956406 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.285617424 seconds)
  done (took 3.715355397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.405170583 seconds)
    (2/7) benchmarking "second"...
    done (took 1.304693234 seconds)
    (3/7) benchmarking "month"...
    done (took 1.381015569 seconds)
    (4/7) benchmarking "year"...
    done (took 1.370961623 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.305687509 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.286165323 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.305741511 seconds)
  done (took 10.511188402 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.253734015 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.537046905 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.711324721 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.405164633 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.245904349 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.272717444 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.232252169 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.29045965 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.273772219 seconds)
  done (took 14.373338331 seconds)
done (took 76.888130083 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.250158752 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.279150724 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.280150823 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.292215152 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.608842965 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.282803452 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.254464115 seconds)
done (took 16.401593216 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.234681962 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.242880095 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.244353568 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.247784907 seconds)
  done (took 10.121466307 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.252367802 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543140465 seconds)
  done (took 4.94810549 seconds)
done (took 16.224419281 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266834995 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.266414984 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.267174298 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.268479445 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.267725645 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.266947065 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.267441009 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.265307987 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.267736466 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.267724783 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.266206663 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.267024818 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.267462015 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.269316762 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267177523 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267497873 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268159102 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268717617 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.267932979 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267756589 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268663604 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26789409 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.267671022 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.266398048 seconds)
  done (took 31.574384509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.268037241 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.266994237 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.267726981 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.269156712 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.267917772 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.267535438 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.268592266 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.268009692 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.268599962 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.269814898 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267022807 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.269962289 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.267968112 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.267863982 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269191622 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.270007821 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.27041012 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269349089 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270608808 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.26794299 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.269344744 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269368314 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.26761029 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268065612 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.27067944 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267979717 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.26968609 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.270314282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26976039 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.270042791 seconds)
  done (took 39.220543719 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.273214009 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.273185139 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.270494723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.268650305 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.269968568 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.268545408 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.270732925 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.270204601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.27010196 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.271270404 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.269169294 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.268971649 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.270035788 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.269702916 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.26930223 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.272802861 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.271007535 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.269718701 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.270831663 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.269920052 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.271523651 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.270490307 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.272707313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.26996204 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.270987736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.270882364 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.271588545 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.271370864 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.271750796 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.271421398 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.270839025 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.271941051 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.271474334 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.272568356 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.271120765 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.271502922 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.275781837 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.276366228 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.272600915 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.272957884 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.271807077 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.272633172 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.272353481 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.272022288 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.273995078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.270704128 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.272543577 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.273347098 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.272865566 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.272444013 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.273523582 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.273479115 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.271573637 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.272734334 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.272459067 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.272752304 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.272574508 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.273050777 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.274972341 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.272469807 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.275084185 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.271899076 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.273481801 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.273989493 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.273229314 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.272336599 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.271848053 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.273725114 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.273325679 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.273860592 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.273845519 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.274198372 seconds)
  done (took 92.741292017 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.276245472 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273794247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.275428816 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.274350111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273899698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275859211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274920824 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27370511 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274975181 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.273961781 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274270074 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275142548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274604553 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274649957 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275690074 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275105053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273856243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273785136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.274186745 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276283084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276363937 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274859405 seconds)
  done (took 29.205781801 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275679995 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276539883 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.275333114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27602119 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278112407 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275856179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276603484 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278285628 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275064049 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276135778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276985789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275342402 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278712194 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277014952 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274740829 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278755656 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276748561 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27868058 seconds)
  done (took 24.140420864 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.276417036 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.276690857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.277800433 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.275278437 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.275219903 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276649204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276402518 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.276955537 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.278615713 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.277794844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.276693248 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277183054 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.277161002 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277467067 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279193114 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.278266206 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.278691072 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27605485 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276346772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278547902 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.279124033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277505908 seconds)
  done (took 29.2616361 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279037224 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27802701 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277591855 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277084182 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278484094 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278278654 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.278464535 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.277561692 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.278368124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.277752958 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278033204 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279346643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.279803929 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277830339 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.278999508 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280467795 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277706231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277866011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279757487 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.279690142 seconds)
  done (took 26.733067637 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28087857 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280031007 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281169252 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279839499 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280389352 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279475782 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280749602 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279762183 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281591247 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281363019 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281380377 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279991167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280189876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280367472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281618122 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280897165 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280186954 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281349593 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280281417 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281868769 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281317962 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280816075 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280568307 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281520848 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281471935 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281869336 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280640497 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282371922 seconds)
  done (took 37.028414037 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281261119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281781619 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.282016669 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279842436 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.280556801 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.280361639 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.281748075 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.282774926 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280874384 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280599483 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.281564963 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.2796668 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282441287 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.282236764 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282763996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.281952706 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282873438 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.283468405 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282454276 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283851498 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.282287007 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282825949 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282671711 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283539318 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282364342 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.282431193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282473467 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283530859 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281555649 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282973741 seconds)
  done (took 39.627735361 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.303246537 seconds)
    (2/2) benchmarking "in"...
    done (took 1.303341958 seconds)
  done (took 3.773912935 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.281742901 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285810102 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.280054384 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.280564955 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.279261597 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.279941222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.279632121 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280039441 seconds)
  done (took 11.414206291 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.273724833 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.270562845 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.270047984 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270823978 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.269893595 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.263333888 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271342065 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273912688 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263594463 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.25667443 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260074983 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.25889008 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258682073 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256952769 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256010182 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2588799 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.265706435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.255478523 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256683177 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255552438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254777935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251323836 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253606511 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.257123212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247770976 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250919479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.247883283 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.251562025 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24121765 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245715691 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.242883504 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249736386 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249477767 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.243435074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243671625 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24236005 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245401767 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244662626 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248570262 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252107149 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247194392 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.240409629 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235779154 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236192522 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236945222 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.243354758 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.243556194 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.241899118 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.234158848 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233626137 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.244844129 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231709954 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241478628 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236350512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236425247 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242731644 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247688354 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235154242 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238572036 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242684681 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248781758 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243513335 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237151868 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.244011246 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24153361 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.246595752 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243329724 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.244722882 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.240986024 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239893744 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239285706 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247555127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.244967215 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241046079 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241030218 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241360133 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233245528 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240775447 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241189674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.239493323 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.242076194 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240334612 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241097005 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247159528 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233479929 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242000031 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242232429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242271526 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235030507 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242215207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246464876 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240159112 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.232896128 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.233339508 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234886793 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24059295 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.234819566 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232592615 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238762555 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238732985 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238622136 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233021389 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237373312 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240455839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239032361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.235030398 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.241047116 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228222021 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.236708165 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240602402 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236121939 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230053355 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232603479 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238098519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229315867 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.232466413 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235104073 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229390104 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235385053 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.235834978 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235553935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.244746475 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238197338 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235760637 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.231221113 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.241424416 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235266082 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.231057097 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236433136 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236604038 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234773049 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23024142 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237881044 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229277297 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236591471 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228998949 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.236330226 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.236139489 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.2361862 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229581745 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.231397058 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230062279 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23088052 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232410344 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238276286 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.231591947 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.238072809 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232681198 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.230576452 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232043624 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238247364 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237061716 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.230831786 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239434697 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229361723 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238339762 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229911058 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.238600082 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237952701 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.2373954 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236509751 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230029908 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231837495 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238591927 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.233411888 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231473298 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.238488989 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237521745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236751246 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.229624947 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237992778 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230235471 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231890371 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241931919 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.237337115 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237244321 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231512705 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240468567 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237204808 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238607718 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232852929 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.236193917 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238555465 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237488989 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.243122641 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24090743 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237967765 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.231345807 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.232816886 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23866401 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.23321257 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244825051 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24263227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243168897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.23317129 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.240671585 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231303588 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.240834255 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.235090664 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241427293 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.238714995 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239365453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231521875 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24068769 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233173991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241235935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.232753672 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.240719119 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242574109 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238363099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2392868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.23382714 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234218295 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.241813227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24070957 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239762357 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232522123 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241340241 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.232415726 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.234706556 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241211891 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239494386 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240173102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244526797 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236061142 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238289891 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237134859 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23429405 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243934469 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237062193 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.236436131 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241967572 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.239434095 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.235045967 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244027416 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240030718 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.236301021 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.239720462 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24551926 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.242303771 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.236845473 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246801441 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243658483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243706033 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244404805 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234253314 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242978063 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.241980973 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248014366 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.236449082 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245691607 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.237376248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.2436112 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.238475256 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.238703032 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23819132 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240743768 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247225815 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245185911 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23704787 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245593167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24417717 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244249274 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237810575 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248216867 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.242288732 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240240518 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.237428779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.236114351 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245165404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.23577478 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24251371 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.235577474 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247830274 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.253651295 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238434714 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.236395 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240900192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237545665 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.235858179 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.233911295 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231992279 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233365892 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229273099 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229809895 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.236847328 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228715611 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.23786863 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23143641 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231856264 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240536052 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237439517 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.229739086 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.238186301 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235881557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.23635486 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227820903 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.236684422 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231874689 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233306948 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231653223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230641229 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239058535 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23467531 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.231954246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.23139737 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231383657 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.231075816 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.233066287 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.239291853 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232281768 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.242253482 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.232310673 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.235157273 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232776558 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239091732 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241124229 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233295656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242954833 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.23857809 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230448412 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.231949148 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.239859617 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238947992 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.242952322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.231840222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.240146856 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239311755 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237645994 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.238974987 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.239547584 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23896603 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.237581235 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240389263 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.239063695 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235750293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236351164 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243497624 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240956085 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.24214827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.232763526 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237043381 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.24329361 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234623577 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.235214908 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234044787 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.241969943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.241303224 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243152611 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241100592 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.243342062 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242132304 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.238172483 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245155918 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24103051 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.241300817 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24554189 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241700166 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.247736499 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235901956 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243444644 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.242992168 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235332349 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.23491373 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.236086612 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243343674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.235359412 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.245261003 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.243082104 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.237952622 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.236636611 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244299311 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.235695459 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24331447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257453839 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235920245 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24571901 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24260162 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236114346 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.246358627 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.242750593 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234002255 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237534075 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241373802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248741671 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.237337426 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246000211 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237248441 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244681132 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244541156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243967132 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244341172 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.244297708 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237361539 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244603716 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240434985 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246823037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.238012973 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239532884 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238039868 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.245748675 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.248086905 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.238075659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245735065 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246566868 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.237732264 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.238203064 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.248063019 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238895823 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247203484 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237483875 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241524289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.240981249 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.240867287 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.240146403 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247208185 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.238089859 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23833021 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246731815 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246773451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246778986 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.241529354 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.248278123 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23875943 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.237803272 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.246418398 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.240466393 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246269668 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240125337 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.242038773 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239592298 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248708733 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247086635 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247021288 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23826097 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.239473895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.247837438 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245174829 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.245229736 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.243851065 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.249751779 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.240374499 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241826459 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.245051208 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.239712704 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242011962 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248619231 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.241170139 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240689595 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242922612 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250253391 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247357347 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.243939162 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239883128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249218377 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.247622721 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249415046 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.240865036 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243419572 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.242621776 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249100472 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249363071 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241072859 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249599002 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.248405343 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249414736 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244542345 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.242374363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24246565 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.250470041 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249275147 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242800978 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25175507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242395569 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251167204 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25077156 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250881621 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241817098 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24274031 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244833046 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245481292 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251189595 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245655894 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244719021 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245283356 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251233439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249920047 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251002072 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251549236 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.242036273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249619593 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243455371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.246354189 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.244282257 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244320749 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253076988 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250448309 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245794068 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.249777456 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.256092582 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252354735 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242970332 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.244054177 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246574545 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253666506 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.251284017 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244079204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.245462646 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251484501 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251839082 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25219495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245557818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25778062 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.258315806 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244946534 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.246159261 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248780443 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255118824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252862353 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252508852 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.247282282 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.248541791 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.256695099 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253534723 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253482517 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250051249 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245696318 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.254538366 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246843867 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.250235589 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.249556923 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254772855 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253947877 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248974643 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.257801689 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257262396 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254109016 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268463405 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.252533642 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250010461 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255607656 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246620517 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25397036 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248250374 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.25593177 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25390502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254502501 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255485892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.247540674 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251411291 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250945245 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.255661035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.253136798 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.247757989 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.248475646 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254833959 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.25615625 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256012599 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255824388 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255407245 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.253628076 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.246856265 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258577163 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.259142235 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25541419 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.255138735 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255596423 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.25260035 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.251377868 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253570934 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260228002 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.255926675 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255623193 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.249515785 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257093353 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.256542386 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249396838 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.249441923 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249485395 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.256958842 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260466508 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268136714 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.255072569 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.251277197 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257302213 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258588341 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248853372 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258149599 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256089936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249390484 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251093068 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259401564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258830313 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256202349 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251304329 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.261399557 seconds)
  done (took 741.988340868 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257897677 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258337943 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256921612 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257670401 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25826897 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257976829 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257482171 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258021015 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256415474 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257901364 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25783215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258016306 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257742307 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257837712 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257194398 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258354292 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259000192 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259329079 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258627112 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259475036 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259497273 seconds)
  done (took 27.565439394 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.25900858 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.260279112 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259800854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259764801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25998506 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.258078161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.259605589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26033335 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.259570641 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258933242 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260949738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25861267 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.260330139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258938554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258385745 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260215318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259949702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259858955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260955591 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260671185 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259454416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260995743 seconds)
  done (took 28.861969429 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2611983 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260310428 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251296373 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.260776063 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.259244242 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.259732794 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.260498644 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.259733681 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.260841344 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.252770943 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.252324431 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.254649333 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256686234 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.264217284 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.254775336 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.263285319 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.261548395 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261389581 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260931262 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.26114317 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.262220243 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.265449741 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.262468887 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.253398692 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262268894 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.261374888 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.261870852 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.261624616 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.253127225 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.264157204 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.262143615 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253982806 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256486386 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.2575512 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.255591278 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.264759153 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261682815 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.263099726 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.26416631 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263236797 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.275727868 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.26272637 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.262446295 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.266601265 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.262693287 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.25760341 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.268251493 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.26383389 seconds)
  done (took 61.656534181 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263301889 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.265099337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.262923669 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26352633 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.263538703 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.263996139 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26472052 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26429108 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2633928 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263996371 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.264033001 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.264522609 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264637444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.264361856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264911257 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.263547134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263662089 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263023042 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264000655 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265072699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265328962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.265770161 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.266070456 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.266259538 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26454839 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265169483 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26602195 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265398887 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.2648669 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.265545068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.265364859 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2649697 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.265703641 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264954927 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264707754 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.266184062 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.267173851 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.265940897 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266015942 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264422004 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.266915863 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265964389 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.26573772 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.265814889 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.2668093 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.266677594 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266149993 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266763695 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265205045 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.266438049 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.266311794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.267436632 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266474359 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267568402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.266004874 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.267085793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265474305 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.266518548 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267562208 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265655069 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266169346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.266426199 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.268438353 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.265889401 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.267843782 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.267804353 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266233922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.26764734 seconds)
  done (took 87.20875692 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267552722 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26737216 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266968364 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267895486 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269580634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267592879 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26729988 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268174623 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268977596 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268692318 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269174279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2697448 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268711808 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267410667 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269561952 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268552327 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268069818 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26993347 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269754132 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268506138 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267528846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268714388 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.268925946 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268839153 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27017815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269615724 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269327014 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27020847 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269152029 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269607219 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268885669 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.270682558 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270846966 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270463774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26954902 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.269403592 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27071338 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269130401 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26998995 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27113156 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270412018 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269690578 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269759447 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270975569 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271300303 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269599555 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269836668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.269842141 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2710853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270341325 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.269870004 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270998795 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271722229 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270419259 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271323175 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.26999554 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270825348 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271133302 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271061857 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270955584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272832531 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27158335 seconds)
  done (took 79.874205991 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271179334 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27082869 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271250641 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270075281 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272213296 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273069954 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271939995 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.272130571 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272254582 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.272975434 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273895596 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272941824 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273608259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272187597 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272679209 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273511185 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272681457 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272639416 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273946564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272856804 seconds)
  done (took 26.607243113 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.272188023 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272734766 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272118929 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272709105 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.272780748 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272658393 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27278863 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273383124 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273640453 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272303147 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274466054 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273400297 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273464102 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27406886 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274004355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272596579 seconds)
  done (took 21.527862382 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273079347 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.273810186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.274205268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273976934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275777327 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.273247418 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.275023354 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274233313 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.274461818 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275370964 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.274982431 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275829172 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275076301 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.273210348 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.273988716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.274189876 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274684869 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27457237 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.275789323 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274369367 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274352806 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274675214 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275376998 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274678297 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276447302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275797988 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275636894 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.275427646 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.275624077 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.275860912 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276027841 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.275896337 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275926674 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274873077 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.276179462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.275780614 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.278114942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.275863555 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.275171125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.275689403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276869829 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.276033251 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27558288 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276201823 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276480803 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276352807 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276191316 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.27644792 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.275715076 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276018727 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.275675827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276094854 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.276219681 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.277354617 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.278261733 seconds)
  done (took 71.308976398 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276024319 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276148749 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.275915453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2772392 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277384085 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.276939801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278695617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279858083 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276826466 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277079378 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.276981141 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.279163082 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278407682 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27705919 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278546122 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276263439 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278004874 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279056783 seconds)
  done (took 24.157857756 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279008515 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278367801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.279612601 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280404795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.278052973 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278041618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278647559 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.278416688 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277639758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279366792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278797981 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.278698115 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278269757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.279294842 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280058335 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278161158 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279561596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279862007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280079905 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279604156 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28012813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279466418 seconds)
  done (took 29.303570909 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.269952456 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.271234459 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.270093543 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.285593681 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.283760351 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.270671085 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.271189221 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.271484717 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.290787346 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.308714285 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.304516514 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.282788489 seconds)
  done (took 16.544497377 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280158335 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27943666 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279612419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280387544 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280132237 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280929452 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281511362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280653691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280143073 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28129955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280738553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281347062 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28223241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281791376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280480992 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281898315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2808649 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281976714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280965432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282021818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281725663 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280720476 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280798611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281849477 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281444727 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281292231 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283094379 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282376739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283193015 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281943599 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28223318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282695142 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281438515 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281928774 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282474491 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28121956 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282411212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283514941 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282603936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282081783 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28323944 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282667279 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284043802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282837845 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28182054 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282220041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282840099 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284040047 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284609351 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284196814 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282725297 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283629467 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282956505 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284383397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285045734 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284609687 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285179264 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282184809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283831807 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283305551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283918167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284169026 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284428795 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28564523 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285503294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285627578 seconds)
  done (took 85.806194606 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284400051 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284819695 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283637988 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285655035 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285225087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284823152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285882767 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28350485 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284568367 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28485009 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284927372 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285367177 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285021502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285278924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284113417 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285630832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284366031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286260877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285703252 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286124347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285056675 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28488328 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285722829 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28600684 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286973201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286201875 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285755196 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285620043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2866432 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285667422 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285956215 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286416837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286086866 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28627995 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287315827 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28660425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287169571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286933534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285514255 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286885686 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287700407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286469452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285838366 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287485933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287538072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287429009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288242039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287462905 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286778771 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287942299 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287640492 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28856883 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28809718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288359702 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28788622 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287262514 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287680003 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288561911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28825416 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28824407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287632886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288249683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289502288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287812381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288032017 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288924753 seconds)
  done (took 86.077876978 seconds)
done (took 1754.366181396 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446417075 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.401860795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.279447395 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.291411155 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.279039898 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.279786157 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.290999473 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.279007699 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.278694074 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.280222628 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279483929 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474601176 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.314788908 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.280250712 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.279569086 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.376555075 seconds)
  done (took 26.285325129 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.302654903 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290230894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393186729 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.286841291 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.308459795 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.467115301 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.340264078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.289108664 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.446925005 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.304851329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.280959679 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.306851138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295464331 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.283812706 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.305374949 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.466712302 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521318964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.283386088 seconds)
  done (took 28.345957489 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.703921882 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.286479643 seconds)
  done (took 5.166918168 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306373738 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.287779242 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290962532 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.287581895 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.281208665 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.281168114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.286645285 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.283801577 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.289896049 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.405718933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291101628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.302919061 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.3048461 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.290746877 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.297190212 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330935636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.485005294 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297916949 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.297452307 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293700599 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.290162501 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383713925 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.329030617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298352983 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.407268948 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.292253525 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.292394258 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.295603695 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.41185757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299946807 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289960066 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.289788495 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.291644512 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.28321498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.728768036 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.283191759 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.312702976 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.297853423 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298853886 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.437892676 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.291317427 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297189518 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.286901092 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.724800286 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.410039102 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405134111 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.308478664 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29110237 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.292140708 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.357195487 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291698855 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292950828 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347853336 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.115411077 seconds)
  done (took 82.899880121 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319711962 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.28448635 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466864519 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.307877168 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284784287 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.288170439 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.290643997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.553019124 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.335716776 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.298367348 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.564806732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817291528 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293972975 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.377828159 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.27626794 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.387786641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286348097 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.284942226 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.290801258 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.287600933 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82264751 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286841956 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286571947 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.445712433 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323157224 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821058806 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291731353 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.290799413 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.291194407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.285896319 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.788561431 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.295612241 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.35873613 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.288408151 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.553796782 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677040436 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637686456 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.292947921 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.288674716 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.292362823 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.302619484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82823425 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660657783 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.291218533 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302914523 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828400926 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.291095548 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.295113148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.290823814 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536871546 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.288400447 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.286905014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287880805 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288873416 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.287754547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.304035565 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.396241146 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82432405 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290978787 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.288523002 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.310156077 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.290796437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29049093 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29148694 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.306336285 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663242518 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.490462645 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.295865053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660598215 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783194511 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292669061 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851967527 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.292637424 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.298677871 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.536126499 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289648508 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.287703262 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824299865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.302334929 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.289211834 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637683955 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.29742874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.571656643 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.303795504 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.290119114 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845741643 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.297593265 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.303856962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.291183717 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.290109122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.29264275 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293352852 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.560561719 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.353267071 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.29070171 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.290063066 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.332929712 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.291072221 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.308414943 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.297816741 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.849850993 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.302563748 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.290580521 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294317484 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291229819 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.304691123 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.294008928 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.295057967 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555670282 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.295916578 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.294287814 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.291913525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29201008 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.299386838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3763591 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.29556418 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.592958599 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.299354045 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291034648 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.293446913 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.291928902 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.308130578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291848789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.296599784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.137933137 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.614098946 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.30877727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.291830492 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291803396 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292052057 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291943824 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294577315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.368889922 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.296673594 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002186203 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.297644033 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.300926437 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.293236388 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.296082366 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.293942061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.297506429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29334737 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588022991 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.562423495 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.474607329 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.296921362 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294658416 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01803231 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324918325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476067146 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31130125 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.293910429 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602081177 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.532866179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.296494809 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.294405527 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.294101473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550673771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.294878087 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610668462 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816883741 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.298772097 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.300810758 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.010229284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.992793746 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.295564602 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.295922573 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.574964307 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.311101522 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.295218034 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.295264884 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.296420505 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.29515252 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.300168646 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304573882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.29578413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.294633906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.3471487 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490528229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.31095368 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295975057 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828122901 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349134253 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295453677 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.30424698 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.298756022 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296420276 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.39890295 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.299959635 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.321837849 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.296347262 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.304658428 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868257941 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.300121062 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.295340656 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489999697 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946202327 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.299177518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.297177577 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.298996673 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.2732727 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.860115044 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.301781527 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.597996272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.308048237 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334631166 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297438631 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390529638 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858227807 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30464458 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.297846853 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95121493 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.302551223 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.797962525 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.297502536 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.297498953 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868793285 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.302780357 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.301641797 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.298648061 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299076774 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596211612 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.299479804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.318984991 seconds)
  done (took 489.299969978 seconds)
done (took 633.169982461 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.29774361 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.302251383 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.303415318 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.303505141 seconds)
  done (took 10.399430711 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319342873 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30545918 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314190517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.304654249 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315367486 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.305468686 seconds)
  done (took 9.056665127 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.298553108 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.307447843 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.304321139 seconds)
  done (took 8.103686146 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504995893 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.314021839 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.660133006 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.307725009 seconds)
  done (took 8.979821565 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314752097 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.315510553 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.315450813 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.316083145 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319961634 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320832791 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316018241 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.318135788 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321068563 seconds)
  done (took 13.049928268 seconds)
done (took 50.781277486 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.648712872 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.283347081 seconds)
    (3/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.552896365 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.40805602 seconds)
    (5/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.41089271 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.36747171 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337019835 seconds)
    (8/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.396039009 seconds)
    (9/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.444864748 seconds)
    (10/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.514662894 seconds)
    (11/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.807437656 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.40387774 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.286895553 seconds)
    (14/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.547080412 seconds)
    (15/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.470616526 seconds)
    (16/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349788128 seconds)
    (17/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.309515344 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.309287168 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.380859816 seconds)
    (20/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.394275545 seconds)
    (21/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.283245153 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.589087813 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.405890951 seconds)
    (24/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.333856181 seconds)
    (25/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.303442825 seconds)
    (26/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.383710067 seconds)
    (27/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.383048658 seconds)
    (28/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.284137763 seconds)
    (29/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.625577509 seconds)
    (30/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.341218268 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.393086826 seconds)
    (32/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.449512266 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.577074099 seconds)
    (34/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.287394861 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.307523977 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369834211 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.287231238 seconds)
    (38/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.286171191 seconds)
    (39/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.519505351 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.302672197 seconds)
    (41/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.379623745 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.459821882 seconds)
    (43/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.335357378 seconds)
    (44/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.600651937 seconds)
    (45/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.285072642 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.30496233 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.286998836 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.557879848 seconds)
    (49/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.383343716 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.284853542 seconds)
    (51/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.418345692 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.515256797 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.457235376 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.390967639 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.5553266 seconds)
    (56/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.486282099 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.371683792 seconds)
    (58/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.386171689 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.286675316 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.316681016 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.458348798 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.40030965 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.410726768 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.285888236 seconds)
    (65/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.431933901 seconds)
    (66/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.484090524 seconds)
    (67/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.29168534 seconds)
    (68/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.453813561 seconds)
    (69/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.317788724 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.551424603 seconds)
    (71/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.399494429 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.342957315 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.40930758 seconds)
    (74/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.55731533 seconds)
    (75/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351587563 seconds)
    (76/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.590508748 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.430980523 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.389003781 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.336804012 seconds)
    (80/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346446149 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.476389601 seconds)
    (82/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.528794367 seconds)
    (83/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.285988364 seconds)
    (84/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.38453037 seconds)
    (85/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.290258471 seconds)
    (86/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.478685357 seconds)
    (87/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.46365745 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.518188603 seconds)
    (89/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.387974259 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.420939033 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340025785 seconds)
    (92/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.427834147 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.580079237 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.341661132 seconds)
    (95/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.316309624 seconds)
    (96/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.489251549 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.305588676 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.342154022 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.381437258 seconds)
    (100/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.382857953 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.461347382 seconds)
    (102/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.288192589 seconds)
    (103/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.423585786 seconds)
    (104/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.288456045 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.809785476 seconds)
    (106/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.292423456 seconds)
    (107/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.454537187 seconds)
    (108/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.628782593 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.31117102 seconds)
    (110/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349554341 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.51453921 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.294464164 seconds)
    (113/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.369462779 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.28940157 seconds)
    (115/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.426830091 seconds)
    (116/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.288573434 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.417525624 seconds)
    (118/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.520858749 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.634857398 seconds)
    (120/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.412306308 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.414596329 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.561311513 seconds)
    (123/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.387196693 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.440897557 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.292905501 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.441833633 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.403128025 seconds)
    (128/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.289939549 seconds)
    (129/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.620949159 seconds)
    (130/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.347047132 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.690466911 seconds)
    (132/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.432195656 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.375212723 seconds)
    (134/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.429131153 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.292308331 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.468535989 seconds)
    (137/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.347241736 seconds)
    (138/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.493613757 seconds)
    (139/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.515422033 seconds)
    (140/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.650147289 seconds)
    (141/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.454616213 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.657556264 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.455419468 seconds)
    (144/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.304112198 seconds)
    (145/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.40682754 seconds)
    (146/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.517718855 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.572506199 seconds)
    (148/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296053093 seconds)
    (149/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.419938045 seconds)
    (150/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.455917542 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.411726201 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.655367619 seconds)
    (153/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.350572186 seconds)
    (154/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.419426215 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.372941939 seconds)
    (156/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.42870963 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.46959284 seconds)
    (158/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.476829368 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351818145 seconds)
    (160/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.577547628 seconds)
    (161/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.437553 seconds)
    (162/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.292758951 seconds)
    (163/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.579516451 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.566221743 seconds)
    (165/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.521296447 seconds)
    (166/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.315844213 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.459259459 seconds)
    (168/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.393384849 seconds)
    (169/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.315829081 seconds)
    (170/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.39864322 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.460843649 seconds)
    (172/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.292522714 seconds)
    (173/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.396689968 seconds)
    (174/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.410397484 seconds)
    (175/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.38013465 seconds)
    (176/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.351565937 seconds)
    (177/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.2963504 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.527425712 seconds)
    (179/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.503579407 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.296447344 seconds)
    (181/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.294935178 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.42326412 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.312633315 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.416637529 seconds)
    (185/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.381953477 seconds)
    (186/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.51277629 seconds)
    (187/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.343173698 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.293825215 seconds)
    (189/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350015592 seconds)
    (190/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.388037575 seconds)
    (191/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.458922297 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.292908133 seconds)
  done (took 321.079135663 seconds)
done (took 322.272850588 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337841252 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.398696857 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.319796744 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.320533293 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323046077 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.324819719 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.343502329 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322641751 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334653499 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334923551 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.325158425 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.331828392 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333345583 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.330986026 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.355785473 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.321691153 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.321397865 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.331065869 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340806416 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.338564629 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323422762 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323754962 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.345900354 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.321218831 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329928914 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331505849 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327595968 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313275915 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.345289692 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.336469424 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.314740063 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.329226466 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.338631356 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.334149386 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324680797 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.333557957 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324439714 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.401027237 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.343305155 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.333355554 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.331206065 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.338494846 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.328250898 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.32932802 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.334002211 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.345551428 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332290811 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.337981439 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.315258256 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.308869331 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.339991896 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.334873458 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329910769 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.30985867 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323166227 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.340478485 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334321077 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341025549 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.332258403 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32553958 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.358694097 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341287658 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.336571972 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.33431264 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.332384333 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.338842058 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.335161681 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340741884 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33280073 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326706769 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326732952 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332102627 seconds)
done (took 105.223807393 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.451870049 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.322748816 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.46785625 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.333475553 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.486895277 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457021648 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331997528 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.332779881 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.333152378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.155958014 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332445716 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332678668 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.322822206 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.334021923 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.455945196 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333115769 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332703494 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.045802598 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332963541 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.471488522 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.32215974 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.333668414 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333362875 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.152807881 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.323435409 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.320494397 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.471475407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333234572 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.047292972 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.319695809 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.321638964 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.046843054 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.474100341 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.355370233 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344271279 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.343304972 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.487572331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.335427682 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455097329 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455430148 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.469825091 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372501639 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.321781242 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.325829903 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334809206 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336495387 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33388404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363836237 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.326446252 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.334464968 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.048556319 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.34397889 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335408363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.335971146 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334992556 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364420135 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.337069194 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.335687964 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.477141 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.335296194 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.457763458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.154468528 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.159502777 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336056311 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.32543012 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.335023999 seconds)
  done (took 108.291408635 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.397074527 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.402733641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.432845498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.327595026 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.379616495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.435780507 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.327092735 seconds)
  done (took 10.914779205 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.33399804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336850417 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377383885 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.379128266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335769892 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.484094408 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335871508 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.339423591 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336619801 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.381701542 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.338051658 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.338320246 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.346247134 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.326283639 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.376980224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.339544769 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443983289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329062108 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336227001 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479892958 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336906465 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345832538 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.379815185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.341408606 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.338532303 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.335774498 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.09923995 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336453163 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337471679 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338948631 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338095272 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384274692 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338030696 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.328369183 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339391771 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445729914 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339311465 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338683661 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.338484743 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.332165202 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339610925 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.33791706 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340251986 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.340225593 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.337446597 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.354661062 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.340610057 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.339627858 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.339379986 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339777176 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.381673593 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339804994 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.340003795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338410432 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.387072507 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348141483 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.339266507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338988417 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338069852 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339389201 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.48352436 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378578528 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.341016526 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379289741 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339303961 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34042839 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.340857702 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.339131387 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423353057 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340678902 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380077452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.341028833 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.513503028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.355232231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341512232 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.33592397 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.337554449 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339058764 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.329434865 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338711078 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339940649 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.333373441 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.33762524 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339872477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339392271 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.494218282 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441612022 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.340343996 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.347112481 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.340069283 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.341803904 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387332148 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.341590241 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.341557388 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386872615 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.449469741 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.386257041 seconds)
  done (took 137.730465289 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.345380376 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.345893621 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.336287146 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36132146 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.334770737 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.33401991 seconds)
  done (took 9.275232324 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.335262129 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343897743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.342387541 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343585686 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.344084662 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.341987733 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.342985837 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335952513 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.344862782 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343671342 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343975683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.343516313 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.345156427 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.343411232 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.342877218 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343664502 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.343973105 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342305979 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344010668 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344791126 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.333003421 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.344560944 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.34518535 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336009676 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.345482782 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.343388222 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360659766 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.343487941 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.343824237 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343397355 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.346084932 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.344601821 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.337753853 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.340130502 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346180135 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.337787041 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.346704472 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.346440532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344963077 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.34223267 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343331209 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341616393 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.344369087 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.34261466 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.335100362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.337217081 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.346298201 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352868764 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335317872 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338513477 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.336340198 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.336332168 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336740429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.340468733 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.326852363 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327335634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.336459861 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.334411981 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.333265241 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.326294172 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.334801263 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.332996967 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324743181 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.334296497 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.332322209 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.332928467 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.324484342 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333904871 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333068859 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.332418335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.333374312 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.331692288 seconds)
  done (took 98.681529147 seconds)
done (took 366.102479953 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.655350095 seconds)
  done (took 3.864932005 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.323109376 seconds)
  done (took 3.537460642 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.909433339 seconds)
  done (took 22.12517454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.357776742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.4283438 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.354577117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.330840062 seconds)
  done (took 10.682795171 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.401687181 seconds)
  done (took 3.61370259 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.327862612 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.347876587 seconds)
  done (took 5.888978627 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.497437979 seconds)
  done (took 3.710229252 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.579185226 seconds)
  done (took 3.792326828 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.346448383 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.337936595 seconds)
  done (took 5.905687843 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.302931183 seconds)
  done (took 3.516069911 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.121252173 seconds)
  done (took 20.335990625 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.338373637 seconds)
  done (took 3.555565802 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.37505371 seconds)
  done (took 3.589185124 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.745455868 seconds)
  done (took 5.959314925 seconds)
done (took 101.287714124 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.321977669 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.327232698 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.324125299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.324120944 seconds)
  done (took 10.511885659 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.387864273 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.388887596 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.395090163 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.38852876 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.389144011 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.390328484 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.369791339 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.362131623 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.387649393 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388670892 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396178893 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.388842933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390398242 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363288888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38856288 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.394820294 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389648096 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.395269564 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.362961062 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.388995325 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.33873953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.389893235 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39010839 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337962006 seconds)
  done (took 34.378066818 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.897856682 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.400619506 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48326573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.383047897 seconds)
  done (took 7.379558702 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416823817 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.418900378 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.438242771 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472033757 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.500909712 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.43539984 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.365590574 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.36189227 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.34771448 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420620102 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.470349357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.407471 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.510388073 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.338696514 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557286872 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339127244 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.339895332 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.417760027 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471069545 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488094431 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.339841611 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417271115 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424696854 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.410515617 seconds)
  done (took 35.326194855 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.34574032 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.35996123 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.3418012 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.356639713 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.341414369 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.341625579 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.342728252 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.346817796 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.340113111 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.340302956 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.341815334 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.354879162 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.342281244 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.341471879 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.34780232 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.342105129 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.344233476 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.348004271 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.349988211 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.342130445 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.34200022 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.349019879 seconds)
  done (took 30.818997396 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.327237413 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.326777865 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.677224146 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.579581726 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.327397564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.32717271 seconds)
  done (took 13.78307136 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.397413616 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.53702453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.337625196 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.669465691 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.753534 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.33394948 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.334406627 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.567638635 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.854546475 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.859513478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.387262381 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.40070945 seconds)
  done (took 19.651131824 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426868733 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338231769 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35286383 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40772637 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341058444 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227701083 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405192591 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018145363 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.344456175 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613644167 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337016564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430946683 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592837045 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337759873 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342650777 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.306346341 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571849734 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819868478 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344622413 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33701503 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374162385 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338368572 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35570816 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537938473 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186416479 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339069801 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.602619254 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338207029 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611348029 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593168996 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59175491 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346532114 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615546045 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976778107 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43861124 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532392639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342387785 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344579517 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.316783218 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.372793413 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355903051 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346249232 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585784757 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345923547 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340087236 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347439916 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027495222 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349697709 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.341340347 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340348334 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587613082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444063575 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345399851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341093666 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350009617 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34490287 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.346873541 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469014343 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903449355 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344047246 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347668 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.345711655 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341384086 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345665431 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970638423 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.352851916 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.345982756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348231304 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341703031 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341039355 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372748324 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342398253 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.362829867 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341862 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10037976 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348113219 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34888686 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893289133 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349514469 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363674174 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573289197 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342761985 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342301001 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.341971244 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342827276 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075466816 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354717933 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.314548878 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404507609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021120014 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537634164 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362323841 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373596403 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567009554 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.315268285 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343835265 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.358374198 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347539114 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362846188 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024485958 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343758518 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.349008769 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601549757 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.55510342 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343435809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.320328034 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790203288 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34443461 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.387412689 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347155032 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54245205 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.949297816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601612085 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350092455 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395694926 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344667587 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132234121 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350532251 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.355963059 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346976777 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616847447 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.163012336 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349401574 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413515174 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349156975 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345079946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345841414 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35223594 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345956204 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.521391748 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347440918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599560237 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.353192504 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34683578 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.358470729 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357617335 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.348351908 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56772491 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346763351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643054052 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347294129 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345618711 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345879778 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.570352825 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.349122018 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.353411755 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609361993 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345497495 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352611919 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602269272 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379222825 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457515657 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376926922 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.346998283 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609273435 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.353441681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.353170473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348350988 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35015035 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353487052 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355332996 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344050051 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95380306 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324954435 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349160498 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347620759 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.363198467 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416395807 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356104681 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542694317 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.352714894 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350192411 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372486838 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.358399199 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579118952 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596762101 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.363336496 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426058346 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.790058691 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952588125 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364676075 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.350836485 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.349448889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.349176611 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34945808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349325643 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34949809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545967116 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604720018 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362975476 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958549333 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35245307 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349606776 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.357092415 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59819339 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.364957835 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351502983 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349218379 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354849533 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369038004 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603918687 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486355308 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367173705 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351344353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870512538 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357538415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350089235 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349928372 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382476304 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349780789 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165367062 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613659138 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354739396 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602159312 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352131983 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.382142659 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.350877791 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348656198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363424328 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.365167177 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375523378 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.548019436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.35401096 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354039157 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908427454 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111799443 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900127588 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36516917 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.352597843 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373332034 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.038330431 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352907913 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352148168 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581763262 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041688937 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353371114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796085007 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.36583026 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087843217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607819215 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590905732 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365855805 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.355097151 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606093584 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57035153 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38567874 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35237832 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358607751 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.325889364 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870864522 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352893722 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440453328 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039304723 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355801297 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361276985 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.428859455 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35889094 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738949803 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355050387 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354743037 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355189664 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38161728 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178017859 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355685103 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354923997 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976051496 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363559354 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.804480652 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354199663 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551035632 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605033033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.588930634 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.362135403 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.366575285 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614194876 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605488606 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361185031 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361734776 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906277569 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.224483883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.364553533 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355183583 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14770456 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36215116 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64005258 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.364005614 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.37013324 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367595517 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357720027 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356786128 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.356532073 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362213761 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341501738 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841711791 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.35568567 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35542285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359353157 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362330322 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612093968 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.372563957 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962769332 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587851081 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361781656 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389461687 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.364470978 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361208287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.331901153 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357424969 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358661176 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365930605 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581643892 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35823615 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.330431165 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397917108 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56892398 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358761675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365740385 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564978272 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.358947429 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.374744834 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133999903 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39151874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367200307 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360186182 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367927623 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398117039 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428452734 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55630405 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.612332117 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613059272 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740511127 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369825708 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362911165 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.375382374 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454370034 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372948997 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.372227381 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.140463736 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968109078 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123541683 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970986334 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616012757 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364251771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364051163 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36007234 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496721845 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358457729 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636338899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361734301 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.358076039 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383247318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364923351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364457805 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575993671 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637298171 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360513304 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360959443 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365236145 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.361611083 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619458037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575986078 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846745613 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913359836 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362918311 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362189342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054492951 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639146349 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361926245 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362285103 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362630007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.380594673 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.379732602 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.370911644 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3634033 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512167388 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612612069 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998522768 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614879575 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.410520924 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.880872865 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370997694 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617713425 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133541846 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559243385 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975773572 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080505926 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632392545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433072397 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560484347 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.364680242 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500682521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.368738698 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367977461 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365653219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364631027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.362872703 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614787824 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978254874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629338585 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.369330091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.369483656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399140184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.561029123 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.587760482 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104336879 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593495417 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620772137 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37380183 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364491353 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976914557 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620503538 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370174044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.371085562 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571526135 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365939167 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391582876 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.05340897 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.365501562 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914100226 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.259291992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38629156 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368254266 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087691727 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978016558 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.376003749 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858882472 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373193355 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373304162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647954973 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.372911025 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377140383 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656228734 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372380078 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373657798 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572198626 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.97974836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108971494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.390264822 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387774239 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.370039972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368328864 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443502991 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368173938 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375124694 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.752144719 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367257899 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367985086 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381562353 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.371952137 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372569131 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.372709411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368329555 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.376569322 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.356369061 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.369600654 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36893115 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497441553 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887865472 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375209549 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.047451692 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.691525917 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62413217 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372356709 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.346141655 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.373268797 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370081779 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369320713 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36913517 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363234055 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916438151 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.37416235 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.628848849 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377512821 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.579460552 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581515299 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369979248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586483469 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373961268 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398906097 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.343021384 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370756326 seconds)
  done (took 969.56407428 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.372304848 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.365107038 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.388522962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.418617639 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384956476 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.36303006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.369282931 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.383401718 seconds)
  done (took 20.292935184 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.36443003 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.370118034 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.363691033 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.370131103 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.373676283 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.845158971 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.375522438 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.371389039 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.383671258 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.364019627 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.36486197 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.978993284 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.3771087 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.362791168 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.379005053 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.371918561 seconds)
  done (took 32.265497751 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.373908955 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.508786548 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.199179259 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.384501558 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.425735762 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.387381199 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.582969115 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.365614869 seconds)
  done (took 26.477887914 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376964526 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.377874034 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.378169963 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.377855466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.378375149 seconds)
  done (took 8.138922799 seconds)
done (took 1209.802777795 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.378379391 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377887153 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.377291625 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.377882488 seconds)
  done (took 6.760474129 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.345816601 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.345760591 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.346177163 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.358289566 seconds)
  done (took 9.64612396 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.037361119 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.881686043 seconds)
  done (took 5.169124682 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.819121468 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.821242157 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.822407157 seconds)
  done (took 6.712386795 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.661127179 seconds)
  done (took 2.911438077 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.254475962 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.350720264 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.386657332 seconds)
  done (took 8.243855748 seconds)
done (took 40.69380943 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.371416789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.61387175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.517563684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370863041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.524888647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.517848904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.103395541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.378552388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.366942564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364500869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.370817247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.52539181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.151487812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.611716114 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.152540339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.611324037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.525877422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365729828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.364780596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.367400703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.106687226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.365726086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.368382257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366290335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.527083583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.510076166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365243293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.611885085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.374987996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366106199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.510508973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378409552 seconds)
  done (took 82.280860299 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377626763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.36761693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.380719428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370327767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.378079615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.377441244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.368152792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.367117237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367224508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.367238008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368719902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.376990463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36708996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.367277805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.38269173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.367446279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.382079671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367215523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382854583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.367859657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.36913746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.367601337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.367487917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.368397773 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.366469396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.382119776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383910713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368931378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366922371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.367909063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.368991934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.389980767 seconds)
  done (took 77.174070127 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.376191962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.379071194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.371024007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36892095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.384203985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.369509946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.369562054 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.369617152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.374528504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372296218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.375326097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.368683821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.385319247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.368603262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.373012231 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.36952266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.373379275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.382265074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.370102584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.37062815 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.387317828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382484717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369963205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.383591668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.373128824 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.371989179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.370270037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.370363465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389496775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.370264062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.372772639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.370561162 seconds)
  done (took 77.237896261 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.610945441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.384393452 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.387244619 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379682567 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.388667894 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38524648 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.379963962 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615051901 seconds)
  done (took 14.78724948 seconds)
done (took 252.73155064 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.391944228 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.859324093 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.409335355 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.385546695 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396908316 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.406236934 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.578564 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.404139787 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.56812147 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.381121849 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.395389658 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.382505327 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.16085339 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.516856925 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.199500375 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.321391554 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.244900766 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.380705256 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.936723725 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.599692365 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.408314719 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.376051135 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.228309807 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.258701258 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.358804573 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441328293 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.442006292 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.527203705 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.498426738 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.439871035 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.865435641 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.397450233 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.381042495 seconds)
  done (took 63.799899238 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.378495793 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.388245182 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.387922509 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.387629726 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.3883993 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.386913922 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.379147862 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.387376917 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.388945456 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.388750773 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.388470082 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.389522589 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.389792162 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.387519426 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.388999972 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.364296205 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.380313835 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.388105908 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.379406893 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.364655091 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.388392262 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.389645015 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.391457354 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.388264512 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.390221568 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.389779046 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.388785361 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.39074707 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.390374397 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.389104888 seconds)
  done (took 42.83713918 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.388736885 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.950470465 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.100385426 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.394537262 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.382313641 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385161832 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.661006447 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.393950265 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.385330617 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.386001881 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.845868666 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.398087228 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415564674 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.10743069 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.391575358 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391101155 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.391733768 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383255122 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.96609725 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398474336 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.660746324 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.393097584 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.664104321 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.393196497 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.387043884 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384166643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.388209269 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.193857094 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40332951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.850442306 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.131983823 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.662018335 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.138253456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.156706418 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.124987088 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.398110861 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.393198268 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.857209955 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.387305249 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.385049189 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.659768603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384811793 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.114130739 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059553181 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401325948 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.39401843 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.228374876 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.856405322 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.620976911 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39088065 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.148548007 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.392148792 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394347013 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.387637702 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619197525 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.388281634 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.385403477 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.256441826 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.391102229 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.66279193 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.394115518 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38602965 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.95771064 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.386643627 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.961704854 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389795179 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.396609895 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.38758342 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.115407514 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.390002588 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.072417782 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.404510609 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.394327102 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.857964771 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.960502407 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.26520739 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388761175 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971777428 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.164902556 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.679487079 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.391858834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.177383264 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.680559605 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.390889143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.397706618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396972765 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.396257194 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.460261976 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.661797338 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.013164928 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07410733 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.26296895 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.666653315 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.395975736 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388693732 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.257521625 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39639826 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.397987658 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.114579429 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075443623 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.404657343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.396580383 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.06456832 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.406657756 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.667335543 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.394678325 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157212374 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.389476563 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460281554 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.398161254 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.396197062 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.39337352 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.666879879 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.393665808 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.398416347 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.060307697 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.881702317 seconds)
  done (took 193.72238062 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.397449132 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.38432148 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.383551585 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.399383999 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.38337542 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.39209718 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.38395142 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.38420815 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.389568789 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.383000642 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.384657237 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.392782168 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.390667689 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.38537652 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.386492619 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.384222451 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.384724723 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.402959977 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.383967403 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.386358275 seconds)
  done (took 45.030502094 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.399755185 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.933279966 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.904130774 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.404457436 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.399487695 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391395687 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.44613817 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.399131177 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.399295421 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.678013465 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.560001704 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40488009 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.400459438 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.400187209 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.900286535 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.381406015 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67937959 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.935544132 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403512579 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.936204772 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.380610526 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400360194 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.389876847 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.933296376 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.69004338 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.668518012 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448802344 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.933735544 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.40018903 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.400326529 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.932296354 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.401202728 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.393203965 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921207408 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.401151211 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413756591 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401715494 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449269608 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.45087499 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.683456907 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939210026 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.677228754 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.413472374 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.567222365 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.405857139 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.375987893 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.946319414 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.405644863 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.378271678 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40283137 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.407141126 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.919665313 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.399890456 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.915984282 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.406091457 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.403097994 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.935319894 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.919769902 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.914652306 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.559161223 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.399928604 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.671073378 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.403663246 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.947620197 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404111501 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.401774985 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.402895047 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.562656489 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940554096 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.672276032 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.685046541 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.685114518 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.402518314 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.460669066 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.405830584 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.684842938 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.458670103 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.808451742 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.693271149 seconds)
  done (took 126.105472359 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.656896731 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.50994171 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.760066185 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.968965625 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.887988976 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.530170453 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504596526 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.636889795 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.40918747 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.48935441 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.021086412 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.495276047 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.153222135 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.471199921 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.505046164 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528233252 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.789169269 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.365562844 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.041427999 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.98891616 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.416181211 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.492947778 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.91038492 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.590155285 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.400034647 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.965202327 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.32809269 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.904229985 seconds)
  done (took 52.993882476 seconds)
done (took 525.745462391 seconds)
SAVING RESULT...
DONE!
