cset: moving following pidspec: 6258
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.327137841 seconds)
loading group "string"... done (took 0.538824552 seconds)
loading group "linalg"... done (took 6.859165022 seconds)
loading group "parallel"... done (took 0.146442596 seconds)
loading group "find"... done (took 1.096215825 seconds)
loading group "tuple"... done (took 1.696610969 seconds)
loading group "dates"... done (took 1.254494331 seconds)
loading group "micro"... done (took 0.209862445 seconds)
loading group "io"... done (took 0.91532703 seconds)
loading group "scalar"... done (took 35.863726609 seconds)
loading group "sparse"... done (took 11.426259065 seconds)
loading group "broadcast"... done (took 0.903718699 seconds)
loading group "union"... done (took 11.666157167 seconds)
loading group "simd"... done (took 4.250003475 seconds)
loading group "random"... done (took 8.701739866 seconds)
loading group "problem"... done (took 1.85043448 seconds)
loading group "array"... done (took 20.151021454 seconds)
loading group "misc"... done (took 1.614045457 seconds)
loading group "sort"... done (took 3.164671616 seconds)
loading group "collection"... done (took 16.573748222 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480803372 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121599012 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112619459 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117101784 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143766063 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113875406 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121689293 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082419135 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.753890835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146146758 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117932042 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409401855 seconds)
done (took 5.004218886 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17237891 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082297961 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080245069 seconds)
  done (took 1.291181203 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064652982 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119489601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065969207 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065363933 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065811554 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065206307 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064979035 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064981589 seconds)
  done (took 1.641110915 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072730517 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067900025 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067787026 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06697817 seconds)
  done (took 1.404314045 seconds)
done (took 5.71182365 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744995959 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199102004 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180685227 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393319325 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127413383 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15470403 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.63546724 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31360166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18382092 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080171316 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10299896 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314133548 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106723783 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634158426 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075308577 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089284644 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138142929 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420702743 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066459225 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081432136 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087855997 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126734077 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08618747 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073562315 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143714262 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066763475 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13322536 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079173483 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065510538 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20426284 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171698073 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651426167 seconds)
  done (took 10.09792022 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095983396 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096772722 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067872943 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12255705 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095769374 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068573921 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.06992672 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06688955 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086005683 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12707064 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088073211 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100428439 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064548142 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06845636 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083254506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203750275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080605124 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080105753 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069341108 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074009719 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106886226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077390903 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076612216 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076709541 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127353444 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179009851 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095211436 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096076679 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066016353 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079709431 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113931451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124544421 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065016512 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065121304 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123180771 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093338782 seconds)
  done (took 4.543220056 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.938825319 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138453243 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089470887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130683902 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063868436 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105685155 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064745784 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079397497 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197139869 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.330995112 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563556682 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109946091 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102589674 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066698511 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067889135 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108600062 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065248722 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.307103719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.092703425 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103162549 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079938204 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069124289 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067390784 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340246359 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066728389 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062377438 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067053006 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056840595 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121297776 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067003146 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.907961117 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123965905 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066110887 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099783477 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161408009 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089448133 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272993432 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068044142 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064517424 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148556358 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064857163 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069069703 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065063994 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082140003 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10315675 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11063116 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064739167 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06675056 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158099889 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064123786 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077716253 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.616924163 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15310081 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076873928 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063503525 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244881284 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084306671 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067482626 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064324961 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184834753 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134897664 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066433394 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065503234 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066995725 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068624371 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.347545474 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06503626 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.970600702 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066897138 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075123147 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068267234 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06890977 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072470628 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07415084 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083968379 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065594862 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074124089 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064893899 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064840278 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065833917 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083147006 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353459699 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066004222 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06777454 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064020751 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085808487 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096377105 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065847547 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06476491 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099418686 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067085297 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065127049 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063521159 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104092801 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062653489 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065617687 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083404584 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168470145 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11333995 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065343552 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.082709199 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065987218 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095949234 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073830005 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098653557 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083120286 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067208488 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.393599927 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064471463 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064585577 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067566627 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064706837 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06708876 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066031965 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078072951 seconds)
  done (took 20.53939808 seconds)
done (took 37.247182156 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.228737053 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073954926 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074598094 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077023856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074341568 seconds)
  done (took 1.74573648 seconds)
done (took 2.943451303 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118957505 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097727309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063685735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094141606 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063075562 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099128773 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097776689 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080156911 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097871811 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063416946 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094765783 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063623199 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062959991 seconds)
  done (took 2.316763027 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081466285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082155499 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069195256 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080842331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062991045 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080803739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079688713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087315806 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080163972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071108772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06307764 seconds)
  done (took 2.03286196 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081071607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082660219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068736295 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080095426 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065837963 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080337235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07972198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084300876 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080215856 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07221171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06269611 seconds)
  done (took 2.027070506 seconds)
done (took 7.564702068 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075951796 seconds)
  done (took 1.257332229 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584241764 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.059482139 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080013655 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111016482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180930949 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117305698 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272857597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085820732 seconds)
  done (took 8.851267087 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099463358 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069256347 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070187402 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06742722 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070730599 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069912399 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069699329 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067517288 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0708136 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068201706 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068130226 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068212935 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070866416 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071111492 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068609344 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067317014 seconds)
  done (took 2.389821672 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090436868 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089406909 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07230966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07368717 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071458816 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071153897 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073570847 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0727905 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069958908 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071054967 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073482439 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072352386 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070812962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063994099 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073661248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074775439 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069851068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07315071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074032756 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073976971 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073288644 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063439276 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070266072 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073000251 seconds)
  done (took 3.041964085 seconds)
done (took 16.730170947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113365103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07032862 seconds)
  done (took 1.373786412 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081162764 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081473689 seconds)
  done (took 1.360147049 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08263087 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065280279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092319522 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077874456 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065747635 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065106767 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088719396 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065084818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065233726 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065629478 seconds)
  done (took 1.93036056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068404303 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077635007 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070544372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080582492 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073638821 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063635581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072544335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066909471 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077773236 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062275741 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070880885 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081483163 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070685851 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083385366 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071686632 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068021942 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070830344 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066881758 seconds)
  done (took 2.498703956 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065403931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066336767 seconds)
  done (took 1.334325253 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067243106 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062533555 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066711978 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067020054 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06274879 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062060142 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062981152 seconds)
  done (took 1.651244471 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.368347736 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108712289 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294162835 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069695352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080967412 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247321858 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06486518 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069864718 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070454933 seconds)
  done (took 2.615620534 seconds)
done (took 13.967950288 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078002097 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084130575 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094238174 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.35727471 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090744782 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064866308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112750596 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187581982 seconds)
done (took 2.281239042 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210646775 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602740526 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383485771 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194978769 seconds)
  done (took 2.386862818 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322864718 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085376685 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057803103 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066446537 seconds)
  done (took 1.746855715 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064811708 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068236032 seconds)
  done (took 1.343447476 seconds)
done (took 6.897157154 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065845021 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065504802 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082347134 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062703415 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065374421 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062912174 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063045902 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062804865 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065473537 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065166641 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067523161 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065170689 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.065446595 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065078532 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065275543 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062418427 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062621778 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065170264 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062877987 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062502012 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062698239 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064613662 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062424412 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062422836 seconds)
  done (took 2.801429305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08250262 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066080554 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071042561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070665651 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069039422 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070095672 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070168235 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065320456 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070532254 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067258397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068591342 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069355965 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066925318 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069211689 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067273302 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069188903 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07025098 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065279695 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06717449 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069259769 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070084163 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065400695 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068752482 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070364863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068768908 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070247082 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067167863 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06559315 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069859164 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068745344 seconds)
  done (took 3.28978764 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068956358 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062622822 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063851137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069894994 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063430233 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063623707 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062923036 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062931631 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063515926 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062650948 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064401487 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062424383 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06283965 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06421414 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063860147 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066174045 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078158187 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063224712 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063100774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063447537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066163321 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062697442 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062957983 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063099994 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062747446 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062638857 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063291742 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06266421 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063575357 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063116736 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065890921 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066146716 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062916695 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06975009 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06662271 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063169261 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066539926 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062302355 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063106562 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062782377 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062428365 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062707337 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062986386 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070178513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062735416 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064097437 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063031674 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063540481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062998078 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065383067 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062502035 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062563759 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064443947 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063871958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066541782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062314161 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064165944 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062105896 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06332538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.174126341 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06255425 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062083305 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064392392 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063001945 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076300017 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068589553 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062369985 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063959137 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063293035 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06462626 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063985735 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074957133 seconds)
  done (took 5.977103114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089318396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0868675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064721573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064365887 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061098578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063073307 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066412978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063293131 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064993681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068981938 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063396598 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064288229 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06447729 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075990335 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063432773 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064297032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068646541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061639589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063160217 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066386657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063491857 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066484991 seconds)
  done (took 2.711701981 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150939268 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069073878 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103715141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072095557 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066668107 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071971518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068966172 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06927512 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069004229 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067463356 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066937037 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069068919 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066656739 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067187147 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067299945 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067015517 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06916648 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067134408 seconds)
  done (took 2.57543923 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076328264 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065873688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085249406 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06509405 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064899233 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067634373 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069674584 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073660168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067536787 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065033613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073214598 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067773061 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067729842 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06525651 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067194491 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065348921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067223245 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065086903 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072796633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069633863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069292622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073707876 seconds)
  done (took 2.751106205 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078502079 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067484226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081518314 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068335679 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061273386 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063740124 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069129291 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065284945 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068949536 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06688105 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065005693 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063516489 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068463791 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064836466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068930719 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064924606 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067121987 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064804823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066930073 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061122151 seconds)
  done (took 2.578873042 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086067772 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066682952 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067133936 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075334407 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066682235 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066599203 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074417863 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066537165 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066488904 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085697747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066476893 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066411324 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074450601 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071011069 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066132712 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073981769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073864059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073647894 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066277195 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066113353 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085751569 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066158809 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073658074 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066313092 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066509274 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066210523 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066664406 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071451575 seconds)
  done (took 3.213840618 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065843667 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065267361 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062912194 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062600465 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062649289 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062843504 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062741012 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06279182 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065314617 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062767229 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064930982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065386839 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06530003 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065423218 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064855326 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065264274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065058673 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062744196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062753627 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062785624 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064587697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065232105 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065176161 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062689011 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062653248 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064727014 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062534279 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062400988 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065055644 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062891803 seconds)
  done (took 3.152608751 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074464762 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071956272 seconds)
  done (took 1.381380331 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062613271 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078978051 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062624212 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068982225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06946632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065769306 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072728553 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068735073 seconds)
  done (took 1.781113545 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081024839 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077186725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067158526 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079708302 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075977138 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081806499 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130378029 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066265138 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071724792 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063155123 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078846745 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065050973 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071403774 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065726337 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070820448 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070984476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063231716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071389063 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067458976 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06403135 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066747637 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07376054 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067506837 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061172719 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066254124 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086558676 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075923495 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065347723 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067633418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071982079 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070814348 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05937661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065143652 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065621634 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063396126 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074548488 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079703922 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067832065 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073911917 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065804916 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075535719 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060674139 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069755266 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071333559 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074784024 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065375827 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065894966 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060303102 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063083793 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066977004 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060830457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065395036 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059826982 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074262494 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068764183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075482702 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063872685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066254233 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067760126 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068177716 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071386393 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067333176 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067457 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064797807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074756037 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069577622 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07355742 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0605719 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05958431 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063196816 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074367328 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086613808 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070923332 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06588799 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066335621 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062740712 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068280306 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066299961 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070707642 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071281009 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065270115 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070950868 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072222255 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065743569 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067774948 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073570868 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063503222 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067984166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062892487 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081282619 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064283795 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063486728 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062921518 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07528637 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068169206 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064934553 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063118014 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072027376 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059286498 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065136257 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065809418 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06509827 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07413403 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068251669 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068540695 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072267396 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071200293 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064137918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066875677 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061060383 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064812042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063064428 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070887381 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05883629 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066966982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064841367 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064498915 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198954914 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063980483 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066186274 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073687247 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071679813 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0648232 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063027994 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068603932 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066025948 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069384437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07333066 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064451851 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061004455 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061363167 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069658715 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065276069 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069445969 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070251115 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068482032 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060998438 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063608935 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071379373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074220187 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066304068 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066109353 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072084229 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06765225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064987872 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071706038 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06869423 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065117351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071901322 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067001606 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060960807 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069613566 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068129426 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064219314 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06965703 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069272993 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068743883 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066392958 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064666474 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073393848 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066838873 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064751758 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065872797 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06440855 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076221524 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067538684 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061678295 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062661754 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074655765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063625592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065034517 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06535924 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06817887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066950096 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063292148 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065661755 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06796777 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076669112 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070355772 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066619386 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07022859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076888973 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065898964 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068202787 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065253534 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066674726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066559345 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073788045 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070845821 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070299818 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067150132 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0618807 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070564933 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072248869 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064816077 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063275966 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064322729 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069034938 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070827689 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069442703 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065768022 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063454982 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066003194 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068658148 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0683724 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065289863 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064416248 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072009802 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063762337 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072246812 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066953854 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075039075 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068516741 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060734696 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068296735 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063341263 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070735028 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060595883 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063666199 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064290948 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066195006 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064013573 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066900736 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059272376 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070171441 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071336536 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064569727 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063100192 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063854044 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070126093 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065558475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067441856 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067045746 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069734832 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074026042 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063433533 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067303016 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073871185 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192831182 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060918425 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071436352 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064747774 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065110133 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064814304 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063934522 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06976098 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075107679 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07264055 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059883377 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068825917 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064803598 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065649107 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061717715 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071168955 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068678602 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067054815 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072737784 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06681308 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067069213 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070275857 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065574872 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067272843 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067585157 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068556234 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066841559 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06767131 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065385073 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06916596 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065288789 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063891529 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06807908 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065896257 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06653585 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07136743 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065294878 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065505898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068554053 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06691431 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06658347 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066664675 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065132695 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068842063 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066451559 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066286805 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068493298 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06115905 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073400179 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065756991 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072786307 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066475997 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063035117 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073607636 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068331381 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070827994 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066818018 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066778824 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067016801 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066156396 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068250891 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072568765 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06279973 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075751478 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073510502 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066572719 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068121243 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066055326 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067636342 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064831319 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066175705 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06675986 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066210737 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06525277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070461976 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067978182 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065910497 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066849165 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066040649 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065224596 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066232424 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060170173 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06430104 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064846788 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065820658 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074480094 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065498601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06500609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064054788 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066053955 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064517525 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062131743 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073215182 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074438747 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065747025 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071951498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064350235 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066611715 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075928473 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059528617 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063592557 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063068346 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063113802 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072474188 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065635208 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073950596 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064841459 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064011495 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062314043 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065133791 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06355498 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059228301 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062138525 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067467203 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063116412 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062797603 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064257704 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066249493 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064773944 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073251428 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063565798 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06474934 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064192101 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061626642 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.194992693 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065114126 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06973205 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067036811 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063811603 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063113783 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065756496 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066459468 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067983111 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066860544 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067915518 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075177725 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066436736 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06890998 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069143539 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061692315 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068415778 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065863747 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066239347 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06499601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07014349 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069324633 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066885343 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075109865 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065901204 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066902074 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0663193 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064652622 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06645144 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065948254 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065696899 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065453124 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06769757 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074195505 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064257585 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068734631 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06635874 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066530213 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072673697 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066832956 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068918861 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072647722 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066159504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067757039 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073726411 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069425534 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069546686 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067507965 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06755186 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071665172 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065283017 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072151434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066321725 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066628521 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06827293 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064358648 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06561294 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065838704 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065427359 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071554321 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066413094 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065116853 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065389085 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063793604 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066287884 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069054532 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07325304 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068016107 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068431389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060860318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062837062 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066297591 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063712212 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067676759 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067946277 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070907615 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067489945 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065944899 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064376151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073870881 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070794252 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068917898 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063500611 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068852632 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066152823 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067464556 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066270989 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065375348 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066418168 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069023612 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067066237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064528916 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071708159 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068883622 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066632817 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066870371 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066522474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065823657 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060922313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066509653 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067260612 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070260785 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067732893 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065617166 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075751357 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063637407 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066191728 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068640625 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064348518 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069237921 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060531113 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06652652 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065796537 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066080335 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060043314 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063609945 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06213824 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066547155 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063188369 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059157806 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073855341 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072246728 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066948157 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063309315 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063312622 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.191350212 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061887375 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06554509 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067643453 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06854642 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075977605 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064948521 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064711647 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06104883 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065702039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069547194 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068805712 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063687807 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061721028 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065398605 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068965006 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072575191 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064948051 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065804854 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069079139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06815584 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064065845 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069399256 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0631644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069573973 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078695517 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067016159 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066745287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072273437 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073764142 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066650014 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06131624 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066713917 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068811823 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065972115 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066748139 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067049859 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080876869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068390904 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06519545 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065221656 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068795918 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064970568 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073398527 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06756109 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066313155 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071228881 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067474085 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074854558 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068255787 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073021702 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068228551 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069108182 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064976394 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066160888 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063742136 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064609157 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068444954 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066439243 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070637513 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073633954 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065107809 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076044259 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074913335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067456245 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062440569 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065163865 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06524726 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06116728 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066723328 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063941673 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064314385 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063692837 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064446208 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067325824 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070651113 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06621809 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066196972 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065526354 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059825981 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06745636 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067504187 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065977237 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062507103 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065554143 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066220499 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069239283 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068443485 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063553717 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067427888 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066680264 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066014681 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060515143 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071897593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064935054 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067470973 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06453716 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065285389 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065983333 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06848708 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070177405 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066381478 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067373795 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068900097 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067905782 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062752022 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063227767 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06997342 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063342492 seconds)
  done (took 41.989586819 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099345186 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062353382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061551956 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061978951 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072226515 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06206432 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06106576 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062310019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062109339 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064224828 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061072689 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061524947 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069909386 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076565894 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073211386 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065768754 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061284725 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062315331 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061278339 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061995765 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070088212 seconds)
  done (took 2.724009756 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072229559 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06971805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071954351 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074605234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066268408 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069711365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071611398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069652437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074980296 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066225938 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07549644 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069668632 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066156793 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066196124 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066918133 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069648932 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074849579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066588792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069604336 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07162786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069707523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071339978 seconds)
  done (took 2.85218547 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066013717 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065094628 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066579672 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060522626 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06526096 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060384467 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068618526 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062913469 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077205323 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0642914 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064128883 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.063839431 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066666689 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060269411 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064785927 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063194443 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106982403 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068803695 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064736324 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065724127 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060497139 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066467792 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060635583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061116797 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064235401 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068397474 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065771751 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063220562 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064653472 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064071868 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065447143 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063189562 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066182721 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065406396 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063694341 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063991464 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06458634 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065120851 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060489242 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063410938 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066050937 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061039076 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065460332 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065966431 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063298263 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062680435 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066555595 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064416448 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060501216 seconds)
  done (took 4.513646908 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078999313 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107398683 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066096836 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086883107 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079379136 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074622762 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068290324 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088049688 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062601031 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063627574 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080325285 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078196464 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065180483 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069332951 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068894702 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064756295 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065669039 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06371126 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06902154 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064071283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068818522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071278159 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07895319 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077784182 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068437174 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063833562 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06401333 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068945208 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077185268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06905857 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069070356 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070246955 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079748818 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06985648 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064057982 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066841511 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079917945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064895478 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06698177 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062309232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066442738 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068387251 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070849366 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080522858 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064698141 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070325956 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064519559 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062243354 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076936477 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067186599 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072291659 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078606749 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068495289 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064831909 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068949809 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079094821 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064403879 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062697687 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067669705 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076337313 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062446134 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068194865 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077706886 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066380959 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071450838 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077846116 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069597751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068332206 seconds)
  done (took 6.271694709 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073937678 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070751927 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080294649 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078701283 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07133117 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071684989 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071463703 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071065323 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070735078 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075899285 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071197077 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091918503 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066834104 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074431898 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071383981 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071272844 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071794795 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071322071 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071748139 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071211983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070960104 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07913266 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071529389 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07863052 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096946313 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066643959 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070616637 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071549427 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078987011 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071240643 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078216976 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071188347 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071557202 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07878676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078018038 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070769783 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064097491 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070834586 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071193649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070841711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06660588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078875223 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070755456 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066489839 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070775638 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070978946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07853192 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078243535 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07421979 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076027417 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070866564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078897188 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070953098 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071365894 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078984689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103887993 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078901851 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079021935 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07100622 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07842206 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078527944 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084918276 seconds)
  done (took 5.962695998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082041628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073201768 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076061795 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06094845 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063420687 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068942243 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063780839 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06348853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073576839 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073834852 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076188455 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069126663 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071683374 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076040865 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068773469 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072357727 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068774251 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068749631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073598193 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068877698 seconds)
  done (took 2.748985151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073214438 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082421611 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06653549 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07141918 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068131663 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070377605 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067735538 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068173526 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066134497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067812204 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074821172 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075145799 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066074416 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070904447 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074514303 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070609673 seconds)
  done (took 2.461663073 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073331787 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071362665 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078508395 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065483272 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062929244 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061769131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065081229 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060422287 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061782211 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076518802 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064963613 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067336237 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064988279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063616474 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062293636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067923244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061666475 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062443008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064931166 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076892314 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075268966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063545907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065594131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06489241 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065060949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070109715 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064332277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062425254 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062232491 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065694522 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065269046 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068558419 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062259713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062921341 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063665803 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062897839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064540165 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064968182 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067522212 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064683575 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063038509 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064926087 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065219754 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065624599 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061315708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065264875 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061051756 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066825155 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062831322 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065060008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064347325 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067015843 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06509617 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070995793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067618402 seconds)
  done (took 4.94564595 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07774222 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068855479 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060871496 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063329493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068019307 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066595139 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068481255 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06652276 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066724391 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063330934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066607806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067896294 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066657311 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06869039 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066795764 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068327191 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060975052 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066667616 seconds)
  done (took 2.543524682 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070467692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065185564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072189811 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065313994 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065194993 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067684752 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061205443 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063835376 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063704447 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065226119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065060604 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067028519 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06383613 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067322229 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065021157 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064733053 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067085582 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06378026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064978039 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061084017 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067729769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06380216 seconds)
  done (took 2.774726757 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091333718 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080302643 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136063759 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077371572 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082775011 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070605929 seconds)
  done (took 1.873833144 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089413838 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07787264 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065446286 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086690435 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072362509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066270418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066084855 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066679331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075149184 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074952027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066614614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074679482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075085824 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074953757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072055807 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072107026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066746073 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066304537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065552903 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082942181 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066390151 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074735079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066424386 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065979464 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066370574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074018909 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074693497 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074906622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066178404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074977988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071522779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066198664 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074650703 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07473964 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068015437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075071495 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066569876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082624869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071879058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074304135 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068072393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072064813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074725588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071481176 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074554557 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066456878 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071226975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066590424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066372857 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084877021 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072316513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073997135 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072223442 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07526819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074838299 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084605692 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074937733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074392714 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072021661 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0775035 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074091856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07228609 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073884917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074869256 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072509277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073965395 seconds)
  done (took 6.137895717 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08100563 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085113293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067135111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075355004 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074320379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066589461 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066680715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066981093 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066713829 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066345095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106143645 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067279571 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074348155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074908768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067521876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066582267 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066611617 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074468741 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066364493 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085269261 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066512429 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074273142 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07450813 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074098067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075209432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072280234 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06658956 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066489295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066648046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066525926 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071828692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067058199 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074274566 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06634464 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074265122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066952649 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066727391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071259781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066661393 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07206126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07404465 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082328712 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06633076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066113279 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075194594 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066294389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066590161 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06597376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066518359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066082007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075050229 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074617663 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074738688 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074021267 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066827772 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066907184 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066608431 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066420473 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066917655 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07220277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074487756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066823801 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085046991 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066943247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066843861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074446979 seconds)
  done (took 6.055556378 seconds)
done (took 127.278487902 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184508534 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164963236 seconds)
  done (took 1.683688062 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067973913 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09699134 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07631616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127982302 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066060326 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099339913 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098353648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077157145 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065210231 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065424021 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065395748 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067688283 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130369007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065310687 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065848383 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068298639 seconds)
  done (took 2.649679953 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095860021 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156195926 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098353599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064551614 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095536317 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07228964 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063881553 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073986413 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07013546 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064011774 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072173372 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069437161 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064211645 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069757611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070233406 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071843175 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063838496 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071773737 seconds)
  done (took 2.757035059 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099768361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090289362 seconds)
  done (took 1.541004993 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153815721 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104508167 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142973605 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340715485 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16558325 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226728079 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125767859 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126449545 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116448663 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122630536 seconds)
  done (took 2.97304981 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096512029 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150618617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252758211 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113773544 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071453007 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094071981 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114764956 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077034546 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079675796 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07954066 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079394019 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075406482 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097288144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072362154 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072147217 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074569512 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100573741 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071231735 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072993958 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075220062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097450051 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06450191 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072018669 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071134123 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076310423 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076274042 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064831187 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064500414 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075339008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07298653 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075767644 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092255803 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076127274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105725461 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069310265 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108456674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075542559 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07292484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073350904 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072703975 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077686722 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077624845 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071622425 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07484579 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064299103 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075553822 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064094692 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064243582 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076433781 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066015177 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076915835 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075518944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105295968 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06558207 seconds)
  done (took 5.885751712 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099340437 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103586914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070358146 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110715569 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098596532 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071337107 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099766516 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091799445 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101140341 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068728979 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067285061 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068917593 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08097521 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081815721 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111208476 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102896256 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072545738 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070036842 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102401864 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101496474 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067512287 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093138433 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088291274 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100103372 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066487315 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068995798 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067115833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069267107 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075642465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077219809 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068646182 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079601427 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084035046 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077956999 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066194715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066949579 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067318922 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079029202 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078578898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077513209 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076869278 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067054124 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066679443 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068378594 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069212742 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06672467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077720861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079319106 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077746409 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068288548 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068849783 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066660636 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068708099 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07958389 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076930394 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079915288 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079119206 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067293283 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067365098 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071203162 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079540258 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078568948 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078081629 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068389726 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07794111 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067031075 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079226759 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083509865 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067091171 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06888072 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067744748 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068445624 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068634721 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07685912 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076854546 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068488667 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068261167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067226219 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07910066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077500766 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067001421 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075724041 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066511744 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067300333 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068383997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068442699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076548527 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079114106 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068543613 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066946388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068242416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066896957 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065560797 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074856326 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077889924 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076326542 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075914127 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06756015 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076616317 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076198474 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067719095 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076669423 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066183656 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067483423 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.196783558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07832792 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077658218 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078817877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069178047 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068342763 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07836927 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080774469 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068518952 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077396119 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080159106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079239986 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068001266 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081146697 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068332903 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079016215 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070099432 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079645349 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068429802 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079556055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068039008 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067236757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06853342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078412618 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0698369 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068158474 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068922886 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069408515 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078592494 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082274738 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070984089 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080762973 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07849986 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070162233 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077695716 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068169056 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078206569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068870107 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069567971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066932501 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080813817 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067785481 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067609948 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068721256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079710232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067635922 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079849254 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07789289 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06823048 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081729751 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079793241 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077214259 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079769332 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069439819 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0679917 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067663236 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069237247 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078077731 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07848148 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069389681 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068365611 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077209 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078792644 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06626703 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077687002 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078072667 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077350821 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067454665 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068705 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079393188 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079770172 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077492912 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076826888 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077162287 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067212514 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07659007 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077134088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067231793 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083004056 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067327239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082131811 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078449696 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076661884 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078552239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079828464 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079857792 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079411805 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082932852 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067480694 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06710604 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079014552 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067554144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06861403 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077857674 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067891995 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068130478 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080210276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066372359 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077044675 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065442746 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076227777 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064822793 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06773612 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080671184 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066123925 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067628506 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211489791 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069965168 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078571606 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080875723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078546381 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067808123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069229339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078986651 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078739484 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068196184 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067802835 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069825972 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077836708 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077085283 seconds)
  done (took 18.420826406 seconds)
done (took 37.267743033 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207584343 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149991096 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18115992 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117595436 seconds)
  done (took 2.10597087 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120371419 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100629389 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094652845 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064834114 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101593987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064469088 seconds)
  done (took 1.933561956 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309984281 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210280339 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181019633 seconds)
  done (took 2.082029319 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197668779 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185988552 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395132531 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253135344 seconds)
  done (took 2.524012918 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142277183 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089381243 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06645187 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089446003 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133258029 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160176466 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101158782 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12539997 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078177856 seconds)
  done (took 2.421264672 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14579891 seconds)
done (took 12.606351303 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.119074149 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098328616 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.206621393 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.213534342 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157158293 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116237992 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.105871723 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.236460533 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070544626 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.153012047 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.097754735 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074908244 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.21915831 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076833507 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099872399 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073112232 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105106064 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073621697 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192647814 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071066251 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081037185 seconds)
    (22/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.170001381 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090394859 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075173302 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135518813 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08750937 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165064442 seconds)
    (28/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150699135 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137239882 seconds)
    (30/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.150388736 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192091458 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190903724 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074292649 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070614268 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146185013 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07659402 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097382054 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080974237 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093756513 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089606286 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10493322 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071626631 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072138233 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050724436 seconds)
    (45/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086692091 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15687292 seconds)
    (47/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.159618513 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.18322001 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084740125 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192493887 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081442178 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201465831 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074672536 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072984006 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087527896 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077137189 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.178032487 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074052582 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.192686676 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.155457586 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066512152 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075479228 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09101587 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143734288 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071604106 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071437681 seconds)
    (67/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118369713 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071632477 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075477258 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108859709 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073762372 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096246462 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050023763 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.07206159 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064020741 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107925718 seconds)
    (77/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071089494 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065897569 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135361495 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076563104 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053449469 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070135379 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063756885 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069864001 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.106515669 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.223277781 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083658271 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168495883 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071357042 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151147466 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.066391999 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067403693 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191129271 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079044504 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.167425793 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072655134 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072986638 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165828554 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052018325 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150749294 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110925502 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092239342 seconds)
    (103/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075746246 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06600473 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067567269 seconds)
    (106/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050960643 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.150993391 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06576541 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072368377 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05219366 seconds)
    (111/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062736991 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150082702 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072163257 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.297056832 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067303959 seconds)
    (116/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062257182 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.173877517 seconds)
    (118/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08754908 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135109883 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053163758 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051455627 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063987384 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050776816 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174058115 seconds)
    (125/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103131719 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068799956 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172919217 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.135114283 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072902065 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.085517772 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091414196 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051281222 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071157252 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065589141 seconds)
    (135/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051923054 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07182902 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070122311 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084071118 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063874353 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091162413 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050639307 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08610496 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06467546 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073065323 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051035306 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071945413 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 0.123403626 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085593845 seconds)
    (149/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066954896 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091000871 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064090902 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071855616 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111119867 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072251432 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149456862 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.192516827 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051677686 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065307138 seconds)
    (159/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05209799 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.181686377 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050960754 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072672668 seconds)
    (163/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051409126 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064966901 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.074980651 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060071049 seconds)
    (167/309) benchmarking ("sort", Int8, false)...
    done (took 0.137635988 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050304367 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06503569 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076347278 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069704968 seconds)
    (172/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074027361 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130769409 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053483908 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05410817 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050809744 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061978532 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067896589 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051047919 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156081763 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070488325 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087510659 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051100033 seconds)
    (184/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069049716 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064262535 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051305236 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072412142 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065956075 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070671276 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.145350918 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08537301 seconds)
    (192/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106672457 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071888948 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.074159901 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065645855 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087671471 seconds)
    (197/309) benchmarking ("sort", BigInt, false)...
    done (took 0.343606794 seconds)
    (198/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069246969 seconds)
    (199/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053483556 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122258988 seconds)
    (201/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051804385 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091301833 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165326627 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065079778 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065861034 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087712974 seconds)
    (207/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051862328 seconds)
    (208/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060546671 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065917747 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069701873 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051540958 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093366614 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051873804 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064820262 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068570238 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051408 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050768603 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071925888 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066390644 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128514471 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117048885 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07384547 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071532166 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051214725 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148985362 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052399491 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073450907 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078540613 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166708915 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053829733 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070712664 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064882436 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051330309 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064199792 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08582387 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064912487 seconds)
    (237/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051078792 seconds)
    (238/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.158579513 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065150082 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052436838 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131055952 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065279791 seconds)
    (243/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060929808 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065672709 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052549303 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051208132 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091547212 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173066922 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051240285 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079016844 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090559611 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053038591 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064855998 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052297269 seconds)
    (255/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072478237 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088043584 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064640794 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052142945 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052144881 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089196503 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065569288 seconds)
    (262/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.0522219 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093494025 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064874482 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071261029 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070731566 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051852667 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06671405 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051827256 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171260161 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072159632 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065753365 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148541179 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098354866 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065965776 seconds)
    (276/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061053357 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 0.125506129 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064304429 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076946729 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050811627 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106065476 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064320905 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.155767463 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051762024 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072221803 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09635253 seconds)
    (287/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079037726 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087007428 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064924681 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063935809 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063403459 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071041254 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07198961 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137169739 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050926293 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098072083 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070554829 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066231633 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051183177 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133654138 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060207842 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067044582 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051162618 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060187569 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086441007 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070070592 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064534613 seconds)
    (308/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114704579 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050496648 seconds)
  done (took 30.190469571 seconds)
done (took 31.586185108 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081232541 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091407614 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073787875 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090996234 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079504297 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075050634 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070908542 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076752919 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07848646 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079699811 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077011843 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053875757 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072881716 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073051845 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073243163 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089590031 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076899339 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072105318 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071999216 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064729708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072579123 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065052811 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066713261 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054326091 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077053605 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070634256 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071570118 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072920445 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06531987 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065871064 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068440283 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072419151 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064965462 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076790548 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070935797 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0719038 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0735943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07513487 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066266196 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065014754 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072699112 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06506388 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071658307 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07254952 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070756747 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070206752 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071656305 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076766655 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089893486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067063114 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073196832 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074648439 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075504383 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071221116 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068450733 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072118301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069559264 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089771476 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071811821 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066877431 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072403683 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072533968 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070056039 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071429223 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071829983 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073817727 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073804278 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069973591 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073447884 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070213554 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064852936 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071509566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067801111 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06437894 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075086976 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074881912 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063634102 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070179724 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071294909 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069823972 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063875862 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066376312 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066043997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070151739 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066279584 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053864916 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068217007 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070306554 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063633616 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071668408 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070234294 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070804841 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065831228 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074171494 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063706179 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06938046 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064684641 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064451256 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065970936 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068191576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064322046 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066417282 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072947738 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065680152 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070219575 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077530118 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063987114 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070086365 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063629004 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063751512 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077947027 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073252913 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064015552 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066559276 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063415068 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071514202 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063308067 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063872283 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063780954 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063718905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06983538 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063640942 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065173812 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070385771 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074790934 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063215345 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066215358 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065315947 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063112746 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068275609 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063235249 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062959294 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200075708 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062090523 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067242604 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065343667 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071692519 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066372559 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071500652 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065991192 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073107836 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068622044 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070060942 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070680834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063884127 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058612013 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067757644 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067101052 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067688353 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065352077 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066227921 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065163377 seconds)
done (took 12.255223385 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066277228 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141104334 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098059208 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093875512 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08487536 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066071499 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075347048 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100365095 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067050085 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101315105 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086377042 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083824605 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111229976 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063870936 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065020888 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068767011 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066386424 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080579024 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099659778 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085238623 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114138961 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064433919 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093210001 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08906239 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085789857 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09080741 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066186608 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069398945 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068590838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098938564 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085552414 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069133244 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065782057 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099178289 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091234801 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08200465 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065546508 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081293551 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065969245 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065072515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066536396 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09720218 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078535846 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079482439 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068949967 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068084033 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066419394 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082172874 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087671045 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077332641 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085093203 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101489968 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067638296 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064873036 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063592417 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084525729 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064642036 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067780213 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065207188 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067126951 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065168241 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068120413 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079643855 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080922369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068711357 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079117458 seconds)
  done (took 6.721854644 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082041965 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088719359 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082228063 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08246131 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065123863 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065290214 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065450159 seconds)
  done (took 2.021498659 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06598795 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08768644 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087532412 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088352738 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082723928 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086253441 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075309845 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065508954 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079090086 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066554275 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085988778 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101053218 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066157778 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071657099 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089384788 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065742042 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089163984 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065663162 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069086072 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089010746 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067785887 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080602187 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068797303 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066461377 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079438965 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065587142 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111681013 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070080156 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067203374 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068554629 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063693775 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105770661 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079779386 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074526617 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065302831 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079828411 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079710943 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064157233 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081335404 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070544355 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078884107 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065829268 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066601552 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063500247 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069570691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075403309 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06610469 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066143111 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067979449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085296586 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065995814 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078579236 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069019496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068262814 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066794542 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069413449 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075348775 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066531726 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085860365 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067166008 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082265097 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082308059 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078984191 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081499188 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067843953 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078678481 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078882949 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067720994 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067184247 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069018451 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081300288 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063900286 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066904399 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075726923 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06709358 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087899135 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087908024 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066652615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074262772 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065775279 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065732037 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065520698 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088008824 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067858343 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065733036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069984733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069366098 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063932914 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064762469 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069182917 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06413329 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067179285 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068555457 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068903125 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068457983 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081817208 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067749643 seconds)
  done (took 8.655196124 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067666233 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067640552 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068955501 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06681197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067989115 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067181438 seconds)
  done (took 1.918261597 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091795542 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068603932 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08003917 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071662113 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103161593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085507813 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086236072 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078164452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083347718 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07812706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086158098 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088004584 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091473919 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072101598 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085542769 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071092562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086350355 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075019347 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07776854 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072483297 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085711434 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072107683 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072246142 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080872787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07495848 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071457105 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066453819 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077988485 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077344863 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078172399 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071549621 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074700213 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069793534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077334665 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085528297 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069978545 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070986386 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076361165 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071604215 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074755689 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087059256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071877612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073348186 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076601757 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077334999 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069972042 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07618161 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074999156 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085303864 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076426668 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07646973 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070918654 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074720388 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076258619 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069858487 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077155684 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076200576 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08568423 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071485645 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069703491 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068389493 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074761712 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077115168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074544989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077979251 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076413489 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069743919 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072227005 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072458125 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070802898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076098504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068539139 seconds)
  done (took 7.01967648 seconds)
done (took 27.814628508 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54306059 seconds)
  done (took 2.023144685 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60083564 seconds)
  done (took 2.107700448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.519188536 seconds)
  done (took 8.019553058 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392772328 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488808878 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.680759362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129568968 seconds)
  done (took 3.231485998 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666380435 seconds)
  done (took 2.17970733 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208352573 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193001727 seconds)
  done (took 1.923659 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372409135 seconds)
  done (took 1.876177639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.09190717 seconds)
  done (took 2.597648447 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259164655 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161756942 seconds)
  done (took 1.929610989 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456967512 seconds)
  done (took 1.965000358 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.805212819 seconds)
  done (took 6.314236816 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208480413 seconds)
  done (took 1.763247476 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23813904 seconds)
  done (took 1.74991564 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.686566124 seconds)
  done (took 3.202083337 seconds)
done (took 42.390885949 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079734968 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080654193 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080214789 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077908241 seconds)
  done (took 1.821644653 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075841557 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072069658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07631545 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072099159 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076209925 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07254488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074174832 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076371905 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071633035 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072649781 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071955137 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072281183 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074688556 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074219 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070419667 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074164162 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075870393 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071974077 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074722612 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072295159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070496139 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074436887 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074311093 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071682952 seconds)
  done (took 3.281684062 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077442202 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072198237 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074331684 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071308347 seconds)
  done (took 1.821197649 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077567193 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092073628 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088791675 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077172058 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091665566 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085237639 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068705676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068330156 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072749223 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076831524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067520847 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095486775 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087516296 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076509906 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079293672 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065453877 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068259408 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086286868 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076671624 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077549372 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069931103 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076504367 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06759485 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087363646 seconds)
  done (took 3.402072428 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077149432 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102611573 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07733387 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087176471 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089798337 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064934555 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074085845 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088881053 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122493003 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064829266 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069642938 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065139499 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071887858 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064915108 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075983753 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104371132 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107403004 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067959007 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095277793 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064871943 seconds)
  done (took 3.167759349 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072773459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068958116 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065667828 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068361186 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076605312 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072241377 seconds)
  done (took 1.955357654 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067611842 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067256814 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067034442 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066096419 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07150385 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067015239 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066016499 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067198278 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066948987 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066506822 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066064531 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065542114 seconds)
  done (took 2.332560805 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19328808 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068445731 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068782313 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065656959 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070375147 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065905597 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079131608 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067113819 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089473146 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065806379 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066380236 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06821471 seconds)
  done (took 2.497643663 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201725572 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075566655 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234399268 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13698615 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111161378 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114648148 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10306297 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112478986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142196732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101092541 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166402217 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163898655 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106594317 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136244137 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08854811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09722327 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154701889 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160823188 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103177935 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163951829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142418884 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123395225 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146048505 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100606295 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105287377 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121032806 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070324533 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079576832 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169234653 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130371445 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144855141 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110358208 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093236613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174730586 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169737532 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141012241 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133128451 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083461706 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101255599 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131344922 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198606913 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087131524 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159711328 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246059009 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081318928 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133463807 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119604745 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120166042 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1066779 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090033172 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144900401 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180978351 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138184706 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08663367 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111995933 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115188031 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115971896 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102619265 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182055353 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160696771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132813537 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07044815 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100036989 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152388518 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131419796 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109785653 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125711287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093489277 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132612457 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153673152 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117392539 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143039265 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128247748 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088627972 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118619187 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138944378 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127714885 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168922889 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124336715 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072523186 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124077597 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103151571 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081018056 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.13989757 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075157264 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172504786 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097607733 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104725412 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112057024 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107763311 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10773618 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158853814 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140850751 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243890414 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066117791 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104095379 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119721911 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146518748 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087040924 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108231762 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11614847 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077999373 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138778547 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075524311 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123838545 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074379131 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124883861 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133056466 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075754894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121468719 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100648577 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099212084 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132547631 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160450779 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089094037 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082320889 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165345898 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121827735 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103837165 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14235421 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155252946 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098298255 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101990057 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148081947 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179030881 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08956437 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161215039 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106926106 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083308688 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086484634 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122972363 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111493551 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121540128 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081784284 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118002285 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166778413 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074618645 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094888672 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132372487 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077925591 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08002433 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101872119 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099206932 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093983181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099086174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102591987 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135077453 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121284659 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102645876 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268787074 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099021652 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168957811 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088946952 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101171558 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103084987 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070071675 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137191141 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156536682 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079759236 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16354207 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123226948 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105105743 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118240113 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081893977 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138977426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078715031 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069719443 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143689833 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110380055 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109468195 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150726384 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105206198 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126535513 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119234883 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133130219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131361881 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128396177 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104905649 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087726889 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110963385 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125759301 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072377983 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090788758 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079458883 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102997748 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095024351 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082698361 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141155718 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123821506 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09960367 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111072746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096324672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146374122 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07628308 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128178189 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117811752 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093051081 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149711505 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15045217 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129691157 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097720677 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142376549 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069847839 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073144786 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087303214 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266458943 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084224709 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08421825 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117931769 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14778897 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128456951 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137566673 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111711384 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121451077 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154217591 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069401191 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116405675 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147572225 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120962705 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103818317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089641198 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098286717 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142300255 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108201983 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180825973 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114393909 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125895798 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151682385 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099584728 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079386131 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102110395 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134633541 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104289798 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143056958 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099277048 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087910055 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10901341 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073927473 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098876287 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126260571 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11880724 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13416907 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11419952 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131883238 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076594052 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116327492 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119848858 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121590366 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063532478 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118029208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159254228 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092567295 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117000975 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151198307 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078515513 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122653201 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320320795 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145177918 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08498397 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109726481 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118206482 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12754684 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120480627 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140629433 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10795025 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134380964 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109647116 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084919206 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087455607 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096188435 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104477697 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094127195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108144089 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113684925 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095218224 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131617348 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103204392 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109626322 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117912723 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096398252 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088656776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096985843 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173671321 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119593048 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170690552 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098280286 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145050084 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163431367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074198808 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078442043 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07753522 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138759516 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083429558 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130046126 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09682678 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105423069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123326543 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140829041 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094875333 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068068272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107613798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133424443 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11188749 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09764214 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103131286 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159985308 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099074369 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079047822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112139845 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103718893 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103905378 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167935041 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060409926 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241358277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076353384 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081572597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127760154 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152228636 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080486556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102452025 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118634338 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110220421 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127290672 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10073515 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09912712 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114606231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148759475 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128629695 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089909473 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111766109 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12809734 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156452167 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104390918 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095630753 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170714242 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151690931 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159591538 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088808532 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113838108 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113035616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107438191 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138312634 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083325485 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16259107 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081332877 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135198991 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103548599 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089388311 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128726024 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097875656 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105245489 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146845983 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116550514 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082261789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07739802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117518627 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119329247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105151116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074636754 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137040563 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072766643 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130345239 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166211364 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080182248 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102755015 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240279942 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080797676 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10837293 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103420393 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089769627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097778376 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173089014 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087513093 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149765266 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140604568 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113082939 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136552277 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099632392 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635844018 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077747674 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152257694 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11678911 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170444511 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097140519 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117162612 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108939537 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123080232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143848466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104830154 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17579736 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131645928 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116116749 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079745496 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102016522 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102588917 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088331573 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104738738 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113344925 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115115911 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093263142 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115403374 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121959984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081602748 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094565431 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154898371 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116199693 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142838827 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139210177 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084645765 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117098084 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136225527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079008809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12018541 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149665677 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104574865 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096612303 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079152019 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245402347 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170811926 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073107931 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161952535 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119917945 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109956103 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114077143 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11397824 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130956899 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107433708 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121175819 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093924565 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110420745 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112351544 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082336041 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076640567 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10555418 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112291048 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096865063 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098056108 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097712795 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150967456 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071324815 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095036408 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10271894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145297149 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173787711 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087408975 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082129503 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119258899 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112783093 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112944131 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121153255 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078892541 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081501589 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081351079 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076623391 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107096623 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111658198 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103311508 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110366569 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162721643 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082508134 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222627314 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094645241 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104091199 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069578081 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07820014 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095486025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096717908 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107412232 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099924171 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166842916 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092998435 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088224304 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090809069 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072295309 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081719237 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12533074 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256563909 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118813828 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097149489 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062356104 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109497266 seconds)
  done (took 58.545273507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10794775 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081841464 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096732335 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149604799 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121680814 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211371556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157317596 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198886971 seconds)
  done (took 2.759246135 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06814574 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094112855 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099786031 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082128391 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06607142 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068558993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223893097 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080990885 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066168345 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087854464 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079224305 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068827738 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415859637 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065949231 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067196271 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063103982 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067154345 seconds)
  done (took 3.391422873 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364940654 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.600960605 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372558134 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07307615 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.429081332 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089678183 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.046647983 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126443532 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07276827 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53841914 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704457267 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123536307 seconds)
  done (took 18.182483884 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075039563 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068622274 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08277165 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083189404 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071461646 seconds)
  done (took 2.01764634 seconds)
done (took 106.74801596 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079961322 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373955891 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053438204 seconds)
  done (took 2.091715535 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08247584 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085421266 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084419944 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08262732 seconds)
  done (took 1.973864235 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0745369 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076650361 seconds)
  done (took 1.783575986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223858995 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158218124 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086970937 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081264092 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.0780916 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078650259 seconds)
  done (took 1.878790352 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072695397 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074419399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072047517 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076316088 seconds)
  done (took 1.931727749 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076606481 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052908514 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055229181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05525928 seconds)
  done (took 1.875412819 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085947884 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079036016 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078041015 seconds)
  done (took 1.879786111 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100556781 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08475118 seconds)
  done (took 1.82215594 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080862908 seconds)
  done (took 1.717651503 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098992433 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113242767 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130124476 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109785298 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137513947 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10795768 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085168719 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085918697 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076562374 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08696683 seconds)
  done (took 2.668452649 seconds)
done (took 21.805894202 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077867359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.455560204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360143421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089171322 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671127483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356499956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022649897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091877733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113220473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067288556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083162082 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649657518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974118346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418126284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963057689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41807853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64888922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067709154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067285715 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067665858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007584491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066918279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067885716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067776755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647442782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370440834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068186067 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418285783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067526064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069290999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354949073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067829173 seconds)
  done (took 16.561140491 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070445366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118090534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073202888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083623985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07047186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068928695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071022515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068917735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11893291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067819459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084194377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067334735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071494066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068435265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086717998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067585929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068599168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068177288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067845263 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068011784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086421312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067714467 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068143463 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068110232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068306267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079699908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068338236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067879877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068712265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070193227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070576531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068703671 seconds)
  done (took 4.033193362 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113932566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124622391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074116935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102521423 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111895257 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070082578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143407965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092126425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126664618 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067736892 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084104165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068020743 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100867464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068969993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087442383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06865453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069293596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06848247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068170816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068505083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086942948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067772119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068391812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068733422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068208729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08097865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068272562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06845458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068631041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069987131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07131958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068980931 seconds)
  done (took 4.291053778 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072726287 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075058676 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082782739 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083658451 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070096355 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072324549 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0724465 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069684719 seconds)
  done (took 2.256025916 seconds)
done (took 28.783478409 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079546242 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069155511 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072395358 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080853285 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072873878 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077815288 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066957544 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074473898 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071836391 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072859035 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074445765 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067118919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070636604 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066908526 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07358932 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067746578 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079060007 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071801745 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078588416 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079228109 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069644343 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07269737 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073811473 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078912164 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079182269 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078622 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077303874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072840995 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069047801 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07022685 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076335308 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083505046 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068141597 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079222862 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06742024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067371339 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070863512 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067555784 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078423242 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076143677 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069037457 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075376907 seconds)
  done (took 4.722881906 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087117292 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090277909 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085263198 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061102369 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066629078 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064714219 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087951387 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059730786 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059578148 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087141341 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055896599 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059384544 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062056882 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053887279 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059084792 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056430423 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061027567 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055632755 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058558115 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059297293 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08774288 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054106481 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076710034 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062375119 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058494717 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061544384 seconds)
  done (took 3.392524623 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07428195 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083688933 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088213701 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126097287 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102207004 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076125369 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07873379 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09199651 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084474762 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066432279 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070561367 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093598439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087600208 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073506069 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067231415 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084274731 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081482505 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068518763 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073485086 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091759287 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085055092 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083980484 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092331099 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080804959 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066323961 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069258094 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070594957 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080418308 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071503925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075660264 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071153769 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070412406 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068899458 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089245028 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070706067 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068728226 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090021119 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076783955 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077224287 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067592777 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070274361 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067946684 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090596514 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125427676 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06661994 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073640738 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075014751 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076151356 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067262622 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085478591 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078009944 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066720915 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070025264 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066275555 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066873515 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079693939 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069441244 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069602573 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075749731 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069956153 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089064208 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071115574 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08213407 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06661331 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074787965 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066697598 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067854416 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066257278 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091959042 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068844882 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107589108 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068296382 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06799585 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075627089 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074667687 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073234919 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067754914 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082039993 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076914003 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070526796 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075571521 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070814631 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070425897 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086986117 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069439702 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068492418 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067977012 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073253619 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069579929 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068323768 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080097016 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066975627 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06957664 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083725533 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066500157 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068229597 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073430621 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072173336 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066385914 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077547213 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071533342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067477514 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076946396 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066947995 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070034222 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079072551 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073206504 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066214583 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071907175 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072997457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067567395 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068200555 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069677049 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068461552 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075202453 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073066718 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071090928 seconds)
  done (took 10.529754795 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160054748 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155320527 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070225461 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144535097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076056387 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078763276 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146745931 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093687287 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067726527 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06852587 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068680593 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109469027 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105297061 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115072607 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078288087 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06741773 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08313333 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113464359 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148491408 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142289388 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082856603 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076744124 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069673006 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068932486 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070519999 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07801253 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08472812 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076238885 seconds)
  done (took 4.396250806 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080891609 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097629614 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073134197 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088638069 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091155813 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06763395 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069882137 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069914647 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080335072 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078749856 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067452516 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073337611 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07454364 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071251732 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06837024 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074744602 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074420636 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069646612 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070731484 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073054859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078054323 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091446305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071487656 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066844944 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072568242 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066840185 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064059725 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083859335 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068096252 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091001043 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065640364 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07516406 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081064807 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068238185 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067303839 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067375507 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066962935 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067320356 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069418636 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066171133 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065991932 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05748105 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066256928 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078875536 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074177192 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05654421 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072331271 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072354614 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072433385 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064987412 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070115986 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070002631 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070349282 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074466688 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072136859 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072505078 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068570842 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073608084 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075379126 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067006047 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064064975 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065896147 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071977174 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065352222 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074982835 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071300334 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066123856 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066631338 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068737995 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072929386 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066726156 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070102806 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064812868 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06880748 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072180533 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068680651 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068021701 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066147847 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06653222 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067524482 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05524791 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067240792 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053471308 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070335075 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065737142 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065745477 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066753394 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071851513 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078918199 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06822826 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072942249 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067988617 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066063317 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069953705 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059884199 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070115643 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082105243 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082078289 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067249172 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065389496 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081221059 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071712236 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066180452 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055798226 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074448379 seconds)
  done (took 9.128655071 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088536366 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069522057 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083195459 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090401197 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085925116 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074979125 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076323033 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069271558 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081836223 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07359897 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07624157 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068035788 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076802884 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076490871 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069954976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076583473 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071593114 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082670263 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081614589 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068244319 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075593728 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079657883 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088572326 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079989031 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078329544 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079621753 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088526452 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071754289 seconds)
  done (took 3.891103893 seconds)
done (took 37.707054229 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.729623379 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.910357165 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.729864385 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.080294176 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.816408658 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.962257891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.905321994 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.726304757 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.880528651 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.768087546 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.994423087 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.76541612 seconds)
done (took 64.94230222 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.781645 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.87589604 seconds)
    (2/2) benchmarking "String"...
    done (took 1.997635186 seconds)
  done (took 5.54138233 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.044843751 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.311740047 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.960023613 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.726380295 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.732749899 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.960532043 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532309103 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260705883 seconds)
  done (took 30.153930992 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.819246895 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.953442989 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.391027598 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.423553252 seconds)
  done (took 15.302435115 seconds)
done (took 62.578061643 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.731201093 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.762323354 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.728005561 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.71394483 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787939573 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.736435569 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.305883226 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.783901865 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.728797513 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.718686206 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.72961563 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.163031145 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.740835493 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.208780057 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.729429742 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.735586416 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.769797895 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.250963022 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.884925544 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.740654261 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750051174 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.78736076 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.733070712 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.736495401 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.735352613 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.729753033 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.17101123 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.731857075 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.356799554 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.734329148 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.762653444 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.728208417 seconds)
  done (took 202.578222332 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.728882881 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.671321078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.722183844 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.738126417 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.128960491 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.911879146 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.84336969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.245019151 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.731163292 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.750794234 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.89088852 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.730037394 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.913688268 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.68085043 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.759825016 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.733617955 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.912627296 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.922031001 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.763816101 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.895475709 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.73399018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.744420467 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.692592828 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.888454737 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.764618044 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.753700198 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.749093755 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.918412189 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.925545696 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.87782168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.758986128 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.750046476 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952481919 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.602817688 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.735021672 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.747557603 seconds)
  done (took 167.944169778 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.11169489 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.730058464 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.73133015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730487781 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.743075421 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.729391559 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.85226527 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857130202 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.189720121 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.901791508 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.781547638 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578872979 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.729599113 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799145342 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.743879654 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.729683544 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.732058641 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.746287014 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.757103846 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73316514 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.732394516 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.857326138 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.744618074 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.052170121 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.738549865 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.731277353 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736801099 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.098864654 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731707346 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738240536 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.991274879 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.731679126 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.731533784 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642474233 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.521903136 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82433429 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73424874 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738899363 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.732040047 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.95259845 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.732277767 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.733004758 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.732532623 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.734889673 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92343028 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.732853387 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.856595256 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733995257 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247147954 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.732280725 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732072031 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.736545334 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.45547787 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.732989399 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.734653081 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.736262746 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.732906023 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732179354 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.739487293 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.53510987 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.805405664 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.734612957 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.736614901 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738908721 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.732281311 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.919154982 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.734149745 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.03572833 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.793030989 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.843308943 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.855653033 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735124887 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801917761 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827238581 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.734125317 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.733470479 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.735229955 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.734138583 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.815276053 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.732748924 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.853270713 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741839002 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.735512582 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.785158858 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.803226424 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.735316132 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650226773 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.736783408 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.734053387 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066967348 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803579309 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.73400171 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.734062194 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.733920372 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.735919532 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.734355562 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861329685 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857491289 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535755742 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.736899043 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.514148616 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.736504801 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.88156943 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.735979019 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936116759 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.736300398 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816641313 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740723319 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.736511701 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.735289308 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.766231642 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.734837432 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.796974639 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.736116786 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.107345967 seconds)
  done (took 397.072240527 seconds)
done (took 771.429299795 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.399189156 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.357608108 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.47228134 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.382207381 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.351987451 seconds)
  done (took 13.641048833 seconds)
done (took 15.317662445 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.822737519 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.827858661 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.762011384 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.824214321 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.756849866 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.82623 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.805826432 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.760708432 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.791048204 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.763159912 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79506873 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762291827 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.74810971 seconds)
  done (took 24.925563237 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97614305 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969773142 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807119023 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961097596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782554773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969532236 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90565404 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.885598183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888580849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752207699 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750883676 seconds)
  done (took 22.327881278 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.970611765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97365215 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813668597 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995851252 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787066281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.978315007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900124292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.894165945 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.890567225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752816811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751093712 seconds)
  done (took 22.387627842 seconds)
done (took 71.317412959 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.747266188 seconds)
  done (took 3.427584428 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.769306284 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.904164206 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752945294 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.74910715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748551827 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.74761179 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.748532746 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.746242766 seconds)
  done (took 15.846298756 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.746802617 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.744841441 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.74565418 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.742444175 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.74684013 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.746641063 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746976048 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.746192389 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.747715854 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.745099617 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.745649339 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.744546527 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.748384137 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.747461197 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.744463915 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.744489118 seconds)
  done (took 29.615878766 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.74633497 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.744417399 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.74381586 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.745215977 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.743852449 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.745826569 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.745671171 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.744688619 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.744958571 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.745353504 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.745120895 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.745053327 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.745871324 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.743837988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.745367468 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.745289872 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.743823386 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.745980824 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.749849557 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.746011113 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.746544704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.74512138 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.745809764 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.747314925 seconds)
  done (took 43.57378399 seconds)
done (took 94.141883604 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.637022672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.134135653 seconds)
  done (took 8.452906993 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.749802114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.7481569 seconds)
  done (took 5.215307355 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.748657896 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.749195175 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.747973183 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.747433145 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.7504494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.750106056 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.748524204 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.748826454 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.750483922 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.748264548 seconds)
  done (took 19.172076666 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.750073095 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.749341567 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.746644535 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.750083608 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.74836088 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.746458643 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.749905612 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.749939276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.7491957 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.748993349 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.749846857 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.745856501 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.749039994 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.748035178 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.748713407 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.746722345 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.746864775 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.748834237 seconds)
  done (took 33.157504411 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.750510409 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.748947726 seconds)
  done (took 5.183202889 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.746786097 seconds)
    (2/7) benchmarking "second"...
    done (took 1.746561438 seconds)
    (3/7) benchmarking "month"...
    done (took 1.74795625 seconds)
    (4/7) benchmarking "year"...
    done (took 1.747678914 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.747408572 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.748324238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.748720641 seconds)
  done (took 13.916699154 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.752234847 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.919484618 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.989488437 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.425292679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.75142834 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.753995557 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.70209491 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.753528011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.755703322 seconds)
  done (took 19.485938853 seconds)
done (took 106.263836621 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.548470041 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.746485702 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.0881345 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.787513606 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.800626788 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.086149726 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.756881881 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.963983037 seconds)
done (took 42.461646893 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.834235564 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.284291631 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.327968172 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.216322996 seconds)
  done (took 12.51334252 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.730525937 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.265395032 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.783925645 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.338951824 seconds)
  done (took 19.823824318 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.113436609 seconds)
    (2/2) benchmarking "read"...
    done (took 2.096923499 seconds)
  done (took 5.899620642 seconds)
done (took 46.756892041 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751045403 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.751559747 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.75075921 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.750024957 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.752288792 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.749740926 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.749368364 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.750523514 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.752126305 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.753234735 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.754322793 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.754187913 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.751006528 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.754151209 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75207203 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752094852 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751533041 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75302696 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.7507028 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749774361 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75057582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753022617 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.750322459 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.751502892 seconds)
  done (took 43.724915928 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.752963424 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.751557503 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.7561104 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.753323032 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.749855845 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.754849376 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.75272617 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.749700948 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.7542567 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.754302369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751375942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.750844626 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.753346148 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.749719287 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75655992 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.75179163 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.754992119 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751078092 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753752676 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.754022103 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.755465608 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751528899 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.752126935 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753285885 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.750610793 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753800746 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.754042194 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.754244908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755807376 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.751702841 seconds)
  done (took 54.277329644 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.759670599 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.763426875 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.755256836 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.754051617 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754471697 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.754848854 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.756189507 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.754647146 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755212233 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754712657 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.754490974 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.754805237 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.756915415 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.754004517 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.755991413 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.755285637 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.755917713 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.757151753 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.756677786 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.7566525 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.756061938 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.756648801 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.756436782 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.757462421 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.756479358 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.756386438 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.755593207 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.755394239 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.756953554 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.755399014 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.756819503 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756532769 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.756237112 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.75699422 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.754920788 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.756524489 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.76122737 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.76465692 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.757477924 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.757427755 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.756868532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.759306984 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.755714989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.756992634 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.759088497 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.757507361 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.757830539 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.757340696 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.757432753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.756944927 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.758047588 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.757290382 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.757425173 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.759032969 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75838379 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757907396 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757413144 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.758788814 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.759115889 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.758570204 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.758140141 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.758969016 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.757934754 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.758175253 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.756869793 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.757741979 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.759379082 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.759150078 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.757432679 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75927529 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.758310329 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.759592727 seconds)
  done (took 128.210154142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.758643396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.757341193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756080154 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756261796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755979559 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.760749463 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.756104488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758686631 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757257539 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.759181032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760520896 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756785099 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757528652 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.762010524 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759992182 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.757357971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.760171458 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757756739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.761329921 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761199896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761413944 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756857617 seconds)
  done (took 40.38277644 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759359944 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760524785 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.759756117 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759633809 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758492153 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760319796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.762541633 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.760074888 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760953918 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757702923 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759540952 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761634543 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75807491 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757311667 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757181613 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.758481874 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761663714 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758422487 seconds)
  done (took 33.366229367 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.757870375 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.75881095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.760603631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760513299 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.758599779 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.761779642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75883837 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.76123786 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.760572539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.759670222 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.763012765 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761963427 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.762929592 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75942442 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762601589 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.759959826 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.761575953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75934008 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762616152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759938878 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.761371329 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762251717 seconds)
  done (took 40.431078927 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762470771 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.763122753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.759813016 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760579334 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.759511013 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763913497 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.762875868 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.759610629 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.762961619 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.763413362 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761025509 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.761289258 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.760363614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761634465 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.760429193 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760340853 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762300409 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.763434121 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76338426 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.759408741 seconds)
  done (took 36.927837455 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.764922659 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764784073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767065127 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76365034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764314731 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.763951407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764692427 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.765533841 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.765307656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.765608535 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.765535913 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765802024 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763861935 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.766635546 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.765298291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766265197 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.765144155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766682343 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.76921744 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.765211939 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.766580314 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76589627 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.765852675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767356991 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.76561548 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.767370687 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766956864 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.766775418 seconds)
  done (took 51.13915776 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764458304 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.765364705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.762281995 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.76246988 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.76346571 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.762608705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.764251824 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.761682409 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7658157 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.762548442 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.76535564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.76536736 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765756609 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.767349366 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.766923118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.766630635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765698859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.764212187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764856668 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762732958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.767697262 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766178923 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.765523831 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763635768 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761455834 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.766433991 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763837047 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.762928426 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768298992 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.763934251 seconds)
  done (took 54.638618603 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.783820723 seconds)
    (2/2) benchmarking "in"...
    done (took 1.785881959 seconds)
  done (took 5.269838083 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.764050386 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766247888 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.766360373 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.763413601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763282467 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767811199 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767945045 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764094299 seconds)
  done (took 15.82274273 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.766481776 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.767871458 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.767959976 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.766867825 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.768570879 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.76669366 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772141207 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.767055024 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.767378549 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.767256329 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.773647046 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.775450777 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.769445896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767141726 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.76794561 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76835636 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.768029198 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.770833235 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.768758891 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.76969741 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770610217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769755772 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770315589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.766896982 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.768691002 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.777953605 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.773241688 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.76982402 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769298383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.770714006 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.767135203 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.766856891 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.769514832 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.770532535 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.767601616 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.7705398 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773685453 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7687126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.774592479 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76903575 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769132705 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.766514702 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.769340805 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.769777179 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769276596 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.771004672 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.768208958 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.766607055 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.768800057 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.771758234 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.776431542 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.768778698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.766499172 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772245823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.770382571 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774583969 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.769858487 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.774471182 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.777785004 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.779181485 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.783232316 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.777628244 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770478277 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.772448926 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779742958 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.795810146 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774543993 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.766397251 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.768051093 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.770529134 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.777133064 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781776271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.779513793 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.770353169 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771544601 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.772510199 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772149203 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77086399 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776069816 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.773270508 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771517237 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772325847 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781446956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795631372 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.770100362 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771383366 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.77271358 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.771971277 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.772436136 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.780120658 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.772108547 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.772122113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.769915355 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.770833668 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.774487917 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.773340267 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.771150053 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77363058 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.768337219 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.772747921 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77285131 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776754445 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782227478 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772198487 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773282391 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.77626605 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.771189658 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.773291651 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.779035588 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.772791585 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773768918 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.774110534 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.777245342 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.769863684 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775483034 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.781206441 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.773833973 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.77412393 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.774174493 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.774196636 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783627998 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.80026726 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.7730552 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.773715756 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.778942282 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.786239441 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776459196 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.777216171 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.774371129 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.771090556 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.770307966 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.774111007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.773946548 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.776163138 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776026698 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774849222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770790795 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.775916202 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.774718537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.774446255 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.774752598 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.775247523 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.775087102 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.775794653 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.774344476 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.775504039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.781394196 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.77401053 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.775257929 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.775053017 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.773315303 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773764594 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.776244041 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.776864479 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.775571294 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775468096 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.774546217 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.77728206 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.774367022 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.774587066 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776323792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.776444104 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779184187 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.777601237 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.777559241 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.77447808 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.771962729 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.776839642 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.77611303 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.774812654 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.775718316 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.774284332 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.778909885 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.785048073 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.776917203 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.777873092 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.776946771 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77802974 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.777049219 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777665741 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.779719966 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.784605374 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.77703217 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.78185934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.778405009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776837057 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.776745127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.776928841 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.776650473 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778550009 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.779622886 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.785449724 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78851963 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784670455 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.777690006 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.782857002 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777981485 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.78367799 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.779828066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.778304532 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.777649004 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778566973 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777063236 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779683292 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.778179681 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.778882846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.777639608 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.777933509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.776638846 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.77863713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778370023 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.778291703 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779648832 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.775622325 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778770986 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778840553 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.776794761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775659224 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.776925177 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.777460209 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.778844851 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.780419969 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.785156532 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77553742 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778810891 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779840654 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.778470357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.777982789 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.7783864 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781613342 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.778438719 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784325527 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.778176351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.780032297 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784104869 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777787529 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.777669192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.78148684 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.779159932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.777377398 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78222314 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.786761194 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.779950578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.781111321 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.780139779 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779865923 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779261105 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.784968787 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.777014026 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.779176876 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.780423581 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.781995887 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.780399708 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.782200026 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.781222529 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.780771091 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78311972 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780718669 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.782181992 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781670164 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.782969386 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.779772454 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.781117347 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783715492 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.789650846 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.785029235 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.781482295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.782843468 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.781242824 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785550907 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.782154969 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.781287526 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.780520939 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.793223533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.791480518 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786480991 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.782703446 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.780908937 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785365735 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.781545768 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.785941699 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782122141 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.781324318 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.781519862 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.78021546 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.779320597 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.783462499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.781876038 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783388884 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.782978534 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.786407587 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.783177297 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.780791868 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.784522442 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.782865575 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.782369535 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.781667316 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.783909715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.784356143 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78423838 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.782004399 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.783834952 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786944635 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783240025 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.783951865 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.78269937 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.784080699 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782345171 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.783781433 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.783805738 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.788521948 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.793208822 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.787247219 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.793286474 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.786354689 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792829885 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.785635877 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786555176 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.793283026 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.781691173 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.782402467 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.782726141 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.785368413 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789316884 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.785683435 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.784801344 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.789305829 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785379079 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.78507235 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.7843516 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.784747111 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784408908 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.785112704 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791010673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.785318751 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.788974414 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785419519 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.782027938 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.785642116 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.785943618 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.783958561 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788331112 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.786547952 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785084452 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.784640055 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784595694 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.785845601 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.786247261 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.785216335 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.783565708 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.787238474 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79155039 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.786372615 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793311547 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.787064023 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79379807 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787181544 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790837431 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.789845026 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.787843147 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.785333632 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.787442972 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.786802264 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.785743412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.786484223 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.787144701 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.788533115 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.789884553 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.789402984 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.786646969 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.788043119 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.788488481 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.786898902 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796566928 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812532594 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.789410659 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79161297 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.78473586 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787758974 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.790929273 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.787828712 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.785210026 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.790726946 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798550864 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796307973 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.788161889 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.789279322 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786750945 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789350078 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.787656327 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.7864827 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.789674031 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.787246392 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.788353469 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.789122255 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793079069 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.787783808 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.788578494 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788616446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.789645144 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.799128763 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.789920373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789241003 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789588125 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.789158924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.788413704 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78831775 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.789229931 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787719605 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790132199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.790887904 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795138628 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.796293538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.790584002 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.787725588 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.790022273 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.788917697 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.788533022 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790966452 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.791638006 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792813047 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.792386001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.79051039 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.790364313 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.78893757 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.789824121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.789498119 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789418372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792376803 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.798258586 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791017794 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.787177992 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.789889669 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790026043 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.78931137 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.790031131 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796544612 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794322343 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.801447744 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.7994353 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.795132947 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.789715953 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793257558 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798100829 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.789101099 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.791136127 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.792244313 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.791709465 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.791966872 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.793254196 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791530871 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.795563877 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.789634104 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.790464936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797288272 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.791140288 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791614046 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.792653467 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.795794428 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.791625787 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788573649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.792515513 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.790790153 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79684526 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.793540753 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794430374 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792753512 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.790557743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.793440802 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.798178227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792308487 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.792630578 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.789994702 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.79216334 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793011066 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793010567 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.79144572 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.791843896 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.791727332 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.795649571 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.79962186 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.790317871 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792832991 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.791603983 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.792298768 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794598097 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792516625 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.790747689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.790983888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.791462498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792422126 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.794099771 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.794953459 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.792906706 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.794276791 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.794843324 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795551057 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796260604 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.803477956 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.801931544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.790987283 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.791967941 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.795109194 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.794207868 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795167251 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.79659184 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794161742 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.795599162 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.794397533 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794222914 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.793859338 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.795964229 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809620559 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.794743142 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794663692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.79337085 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796555754 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.796477593 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790316929 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.795669216 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.795930389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.796429395 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803639774 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.795829262 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799062458 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793950715 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.795799125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.79726971 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.797806911 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.803839746 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.798363442 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795284009 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.797094746 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.800935394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.812973468 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796827114 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80556652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825234409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.795794275 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.795592631 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.79705777 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793534459 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.797231629 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.795878693 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.797485905 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.795221361 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794387311 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.796759478 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.797882268 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801385208 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.795884434 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794765 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.795921099 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.796231046 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.796414028 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.794130867 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.796828523 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.795764653 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.797735426 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.797875199 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.798088716 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.795804745 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808428917 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.806742394 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.795971342 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.798787909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.794092673 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.800656498 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.799200669 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808018948 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.805885206 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.797417695 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.797714319 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.796904791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798298875 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.79589545 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.796117486 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.79627946 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797311028 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.795883371 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.810796766 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806647997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.801039954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.798092585 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798331003 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.79892572 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79947154 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799717568 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7997447 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.798747993 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.799182105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804469993 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.799555558 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.799999251 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.802158733 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.808504736 seconds)
  done (took 1065.368615796 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797180452 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794655676 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795446989 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796156662 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795976878 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797154877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79603816 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795915841 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795923659 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797387005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.796408568 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79697823 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796534789 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796624991 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796278656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796724394 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796335182 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796456466 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.797156692 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796731092 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.797395329 seconds)
  done (took 39.458159532 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.800135218 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.796611741 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.79559013 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799337426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798463014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.799620585 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797540329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799662873 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.79957058 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796636779 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800115295 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800683671 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.797525817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.797982455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798504472 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799863301 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800352344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797291223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.800519653 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797486404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801027463 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797797552 seconds)
  done (took 41.306347721 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.801593977 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.803075844 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.800495852 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.79838127 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.800460021 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.798365291 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.802546563 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.801663442 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.802031853 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.803278504 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.800000783 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.802097342 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.808839627 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.806320023 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.803256159 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.801925113 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.947324993 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.803465394 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.802515853 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.803580041 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.799024722 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.806296722 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.80046053 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.800428821 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.801125531 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.803460021 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.803068549 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.803365252 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.804527729 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.803741231 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.808285819 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.801837729 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.801268601 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.804570137 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.801191857 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.804081098 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.806790406 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.803787812 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.800643526 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.803190487 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.813365252 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.824328602 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.803795765 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.808429541 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.803284537 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.804614759 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.805770622 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.815500311 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.800418733 seconds)
  done (took 90.26665438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.803782306 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.805262118 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.801335111 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.804624995 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.805576077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.804555154 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.804579495 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.804524016 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.800988053 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.799999549 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.805265274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.801467665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.802897162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.803049473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.805850142 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800246461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801915965 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801140994 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.801006984 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.802759088 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.802197434 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.80449103 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.803778124 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.801658421 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8053458 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801646892 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.801014952 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.806194756 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.801956396 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.801346621 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.804850127 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.806858668 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.804406015 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.802868167 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.802809978 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.803645843 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.805047253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.80289214 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.805117989 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.802333046 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.804355313 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.80342685 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.804685224 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.806349923 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.803170323 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.802522729 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.802020149 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.80380089 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.80210348 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.806680435 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.805111374 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.803524352 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804758656 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.803461874 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806330718 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.805617648 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.802639562 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.802565222 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.807001636 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.803268055 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.80386675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.80742703 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.803861669 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.805379682 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.805903942 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.804621579 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.80368391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.80534545 seconds)
  done (took 124.395740562 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807603993 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.808427035 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808092727 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807822378 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806869812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.807921871 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.809190636 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.808653577 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.80786901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806933011 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808092368 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.808846823 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.808967313 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.806244643 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.808531356 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.810109277 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.808590456 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807470123 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807838455 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81039874 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.808933977 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.809051232 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808919507 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.809587051 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80995541 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809335204 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809875711 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.809211096 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808833221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.809326674 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.810732328 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.808970963 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.809065976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.809268324 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.810368699 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.810159369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80953632 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810469003 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.810166348 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.809827093 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.810848935 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808477878 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811530939 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.810765301 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811003202 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810748857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810819484 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.812112753 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.810478508 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809591793 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.810322574 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81205596 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809709822 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81095307 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.812025641 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.810959473 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811714827 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810713492 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810292065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.810890541 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810343953 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.81031048 seconds)
  done (took 113.935473396 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810487551 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809291727 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.806868692 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.807072018 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810840548 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807705702 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809577009 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.809952797 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809989497 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.809933539 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81135268 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808613768 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807274676 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809975791 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80758747 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809786704 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808961406 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809400172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810596695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.80905103 seconds)
  done (took 37.927841779 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.808437564 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.811479171 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.808655887 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809796948 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.811094452 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.809120994 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.81081642 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810035536 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807730128 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811648665 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.811205941 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.812708281 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808889062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811517969 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.813486826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.809018684 seconds)
  done (took 30.709472176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.808270512 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.81213008 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.813256172 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.814228197 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.809812222 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.811639778 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.812043466 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.808752111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.811221404 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.814206535 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.813993755 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.81234661 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.812785963 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.814248329 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.810801254 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.812594051 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.810593277 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.810874315 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.813678337 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.81508573 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.812260073 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.809786889 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.81278153 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.814557607 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.810365082 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.811089228 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.810441481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.811132487 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.810700522 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.813630501 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.811511272 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.81177573 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.811251561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.811292842 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.814753509 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.810726371 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.814558499 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.813348628 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.813772123 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.815253015 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.81499603 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.811052052 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.814378899 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.814284884 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.811783344 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.815362685 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.812516646 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.812853483 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.813053081 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.812901298 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.815288544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.816125 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.81674227 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.815285623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.813549879 seconds)
  done (took 101.443336767 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814736139 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.814412228 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.812876762 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.814394366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.814731687 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.813380925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.814317149 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.811924293 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812933084 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.814937214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814739335 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81774908 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812758917 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816081003 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813815001 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817146551 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814266933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.813593581 seconds)
  done (took 34.40677018 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.812804056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815039368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.816930296 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.812348615 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.813320575 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816822146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813208943 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.816253085 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817084397 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.81487707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814186629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.815478711 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817000476 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.816386621 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813663123 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814205021 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.816928366 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817980258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.813641511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815027163 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816914321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.815804568 seconds)
  done (took 41.683658067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.816640643 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.815679751 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.83430101 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.839151044 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.838050683 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.852675697 seconds)
  done (took 12.747202916 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815594398 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817029041 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81597542 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817992926 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818717752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815498791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816440288 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815480955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818737886 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815679222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815197042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818889981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818184029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815814888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818430753 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818707873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815626568 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816748269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817019603 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819404898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815378881 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817845506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817417738 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815202675 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815693579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816196698 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818490051 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817497368 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815706728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820157488 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818484703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817722726 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817667318 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817571291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818500967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818029566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816174541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820710157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818576413 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816430971 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820008059 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820749901 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820645234 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816199009 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819067234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816109696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817579625 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817643821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81776358 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819618266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820076187 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817384627 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820165548 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819207913 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819208775 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821920373 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818862451 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81750459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820009194 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818408467 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819056663 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82122886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818127751 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82004647 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820899467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819162056 seconds)
  done (took 121.740092811 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819988258 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.820362358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819016795 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821166958 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818028571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819002317 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818169402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818717266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818646563 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816305005 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819904708 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819063514 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819170335 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817427839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818347801 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818153085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817775729 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820115378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819370439 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822039374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819106545 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819090826 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819044589 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817454524 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819525931 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819810974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819680056 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820267805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818818732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819458639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820619972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819527165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820393314 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819305163 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820758127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818985141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819997801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819456249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819498523 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821165297 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817461926 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819882448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816043288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817628156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817203509 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817883287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808035091 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808093083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808861892 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809170816 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80982616 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810421788 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805650834 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807057508 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807047754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807454568 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805947551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805535663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805728595 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807959766 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805094535 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80603446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809003099 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805816801 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802834075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805738993 seconds)
  done (took 121.575779827 seconds)
done (took 2482.84018024 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.886187565 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894397578 seconds)
  done (took 15.521165734 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.970176837 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.922378383 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.80620805 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.810651534 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.807049654 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.824410872 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.822386898 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.805483865 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.806593545 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.805885655 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.805706606 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.992349103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.801565834 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.806348373 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.804217226 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.898339536 seconds)
  done (took 51.391746195 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.809262853 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.809668287 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.821652218 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.812299228 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.810104897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.829088306 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.846317259 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.814295539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.870378009 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.822021521 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.932837007 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.822718611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.808348729 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874349797 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.823113976 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.823424494 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.897225526 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.888356613 seconds)
  done (took 34.857283612 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.890136964 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.815376558 seconds)
  done (took 10.455863319 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.809443008 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.836890021 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.810796181 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.831932652 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.826797285 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.812722225 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.817806086 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.821869868 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.812456893 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.84018295 seconds)
  done (took 69.965129359 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.814837098 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.81055124 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.809737228 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.808438896 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.800963551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.80630966 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.80879299 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.804801459 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.510530466 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.844242447 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.814188609 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.811888727 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.805420553 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.807369514 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.804539408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.830466829 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.936125844 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.803838592 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.803648247 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.810713119 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.806924759 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.860551136 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.820460166 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.806686957 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.83755937 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.503526894 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.816018813 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.812103903 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.944894959 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.802438278 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.80670411 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.807821457 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.808599374 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.202352589 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.146779946 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.807198711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.815619048 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.814879895 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.802022078 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.942293654 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.808588127 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.813367587 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.800521678 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.126472197 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.8945497 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.850322084 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.177595742 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.812167114 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.809406368 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838543739 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.811359129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808649097 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.819500953 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.327330608 seconds)
  done (took 129.456409055 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801967454 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.092115786 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953259637 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802819927 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078285234 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010639296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.80403194 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849996478 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.801885414 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00551263 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966720009 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912294109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802118137 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.799391097 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800421863 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.798047786 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961187859 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.866385282 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799469286 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.795514804 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825922221 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007149476 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.927586689 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799600848 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.819394158 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008659776 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.919157682 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.905133816 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.074299807 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.7911699 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860677321 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.795395336 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.790678293 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.792582466 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949047032 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.889630674 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884488452 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.796358249 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791274346 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.791876087 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.453695205 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988954565 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.891353124 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935071941 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047412598 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998326546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.438664113 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.791351157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.428565445 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952939163 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.006246437 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.000143218 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.916210612 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.793795299 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.153173664 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.788042549 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788600255 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.028747466 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016096736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.894523699 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792522199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788865627 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.788667602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032262957 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.791617885 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.888363935 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78970735 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787714071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889025492 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894668418 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.017402112 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002976426 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822733232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.092171952 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.254229046 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003937985 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.860913398 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029257409 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.790455813 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.78828368 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873974194 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.539020181 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94908193 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038851103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.011940182 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823858231 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.40103161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.786827754 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98174676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974434758 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.98281218 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031358928 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.941103731 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.991575461 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.788055387 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.786151407 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.014552292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924851596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.789771433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146691236 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019032445 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.343045768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.821398299 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085003194 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920697136 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.16003195 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41456636 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.786129492 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.95600738 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.825474683 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.787528545 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784352487 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.977610453 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.595340376 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.784810949 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.31060407 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.850117026 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789222302 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987757504 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790766343 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997030773 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788673656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023555129 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.769115548 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81933807 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011391236 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.029480807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.578539332 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.034781585 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032341646 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.905844202 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.008951306 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.383109388 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785245871 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060508929 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.787888785 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.786546161 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.952820547 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787332209 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.93442858 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.78664361 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014491304 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811555984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944321568 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.788420506 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02037387 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.824125114 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839638667 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.788175382 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918870896 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78789955 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.670444878 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943348078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790180288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.786491097 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.433220775 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.784912361 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934855029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.019196499 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811958901 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855814317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.315677164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.78641042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.878262732 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815473336 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.272499543 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.786963637 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.94432178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.75894897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.22863825 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.786290827 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.028336944 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.972182301 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790926331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.787708348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.529627207 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.488042962 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.787832726 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.946444244 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.491322739 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.438284251 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989867486 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787624945 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.914751019 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.793320319 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.863958732 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139550984 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.787421741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.786939564 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.786245434 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.787410344 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.789082112 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047743317 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.821206211 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.309464536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.925866625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004256945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.098717246 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.00994396 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.835873445 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791274589 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036919341 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.791571566 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.855546601 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.791081488 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.812166101 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024495184 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78944149 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024047695 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043372042 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.736515015 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.837786408 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.792193966 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790396033 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.788348644 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943286676 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883008009 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.791264204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.789270611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900026489 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.917414617 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.983653276 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.387731843 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.958228894 seconds)
  done (took 880.862180621 seconds)
done (took 1194.2487078 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.789376882 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.790197436 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.77794063 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.792377426 seconds)
  done (took 28.879969088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.797551104 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.79744223 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.798812081 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.798815394 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.797874021 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.797319144 seconds)
  done (took 12.519125848 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.833177648 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.792061401 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795622375 seconds)
  done (took 21.15262769 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.865793615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.208664863 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.909476175 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.238965755 seconds)
  done (took 9.955344803 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.798851283 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.800163234 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.799669298 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.806187825 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.80211765 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.801786159 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.799632348 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.801543123 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.804419619 seconds)
  done (took 17.947259358 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.201025448 seconds)
done (took 96.381834552 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.77039836 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.467025001 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.975458069 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.285372726 seconds)
    (5/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.784708352 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.416026458 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.9131273 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.149547447 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.927858985 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.966027513 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.68743887 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.256274199 seconds)
    (13/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.875164036 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.838213002 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.13448439 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.822646833 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.125216517 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.822856064 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.791286584 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.93172049 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.016019537 seconds)
    (22/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.094151316 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.809589035 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.80081764 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.792721857 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.845967229 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.804536269 seconds)
    (28/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.929731674 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.794152765 seconds)
    (30/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.712670517 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.092547171 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.253604724 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.89103301 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.895311969 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.985744317 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.799070794 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.182012777 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.599966832 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.847385376 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.180581623 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.789491982 seconds)
    (42/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.90998577 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.900855237 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.955225817 seconds)
    (45/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.81135286 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.307670573 seconds)
    (47/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.622578143 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.857495467 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.082595408 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.137502255 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.688478522 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.097601642 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.899705188 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.818711591 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.039401157 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.819783024 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.16631733 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.40035096 seconds)
    (59/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.970402195 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.277043849 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.859086573 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.803997364 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.797497827 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.724549203 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.289012629 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.252272675 seconds)
    (67/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.925618644 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.880209821 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.88182792 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.8692816 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.082009391 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.952804569 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.875372271 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927051413 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.036490613 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.368539529 seconds)
    (77/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.925970799 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.933565774 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.89498045 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.796890804 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.938204136 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.019576303 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.12104323 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.046620854 seconds)
    (85/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.999067229 seconds)
    (86/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.631452462 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.696072259 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.345433329 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.898862133 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.068755362 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.502846038 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.151169297 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.107460702 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.946330942 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.378938015 seconds)
    (96/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.881606822 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.081311753 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.797366173 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.934372449 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.869568139 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.121818878 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.398249355 seconds)
    (103/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.797397769 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.850864406 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.91045779 seconds)
    (106/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.895433135 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.006494418 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.134261269 seconds)
    (109/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.881037067 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.15008616 seconds)
    (111/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.968086657 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.914349293 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.000895989 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.796593248 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.846445121 seconds)
    (116/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.544107341 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.027873602 seconds)
    (118/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.880733609 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.797320493 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.786369064 seconds)
    (121/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.966139199 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.922799921 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.094471446 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80273077 seconds)
    (125/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.783075102 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.847389339 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.100157508 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.248352247 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.823443678 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.067771054 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.816813934 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.177271724 seconds)
    (133/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.827179085 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.797712394 seconds)
    (135/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.358725385 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.831850718 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.014057672 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.061940682 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.89487752 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.859152445 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.18879023 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.838718501 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.165716417 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.829475865 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.783108014 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.91297309 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 5.610060784 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.701206085 seconds)
    (149/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.932505118 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.44066049 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.046078597 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.829364013 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.902296664 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.823316533 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.905064717 seconds)
    (156/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.93885054 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.867613903 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.774409867 seconds)
    (159/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.400714757 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.062658284 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.516783043 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.824014183 seconds)
    (163/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.969536741 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.480218567 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.128076652 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.311712632 seconds)
    (167/309) benchmarking ("sort", Int8, false)...
    done (took 4.753164528 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.028053435 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.357090213 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.014358581 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.943369693 seconds)
    (172/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.889865037 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.801471561 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.700683826 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.787339683 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.607259538 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.787800693 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.912968566 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947030298 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.005566549 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.200851521 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.598221249 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.802297246 seconds)
    (184/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830107935 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.464219092 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.145025889 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.889627336 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.887556429 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.826480022 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107660321 seconds)
    (191/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.818978169 seconds)
    (192/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.081094729 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.846789584 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.044300277 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.930708168 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.047873486 seconds)
    (197/309) benchmarking ("sort", BigInt, false)...
    done (took 6.803650128 seconds)
    (198/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.86988958 seconds)
    (199/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.44605468 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.790342497 seconds)
    (201/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.437356314 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.489740898 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.909711685 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.863064097 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.079193076 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.805429675 seconds)
    (207/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.051470877 seconds)
    (208/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.978644727 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.806842333 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.991108236 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.972450006 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.4475811 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.956541048 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.902084745 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.870068937 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.90767192 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.990272124 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.831184695 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.803477137 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.987846238 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.826456134 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.573086712 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.019038164 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.101114879 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.121480286 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.789998134 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.532286786 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.493877262 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.810185351 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.868546059 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.831602551 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.966374455 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.07440899 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.846021738 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.707951728 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.218143879 seconds)
    (237/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.906485926 seconds)
    (238/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.410776356 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.110950815 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.995894698 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.799596314 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200237258 seconds)
    (243/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.00743116 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189929873 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.174405905 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.913048587 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.191285676 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.806135453 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.099442018 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.40536074 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.970607398 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.795098116 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.355095796 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.794708611 seconds)
    (255/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.905527924 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.711962963 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.911801996 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.313709246 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.409907592 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.606064614 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.814919662 seconds)
    (262/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412396325 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.793614138 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.159842576 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.835190411 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.832800174 seconds)
    (267/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.207719617 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.809115893 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.610267356 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.809877069 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.19762399 seconds)
    (272/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.764673546 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.995285604 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.960755265 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.895122204 seconds)
    (276/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.087839599 seconds)
    (277/309) benchmarking ("sort", Float32, false)...
    done (took 5.57684145 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.106233373 seconds)
    (279/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.316633277 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.417676112 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.883238884 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.184102569 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.010687805 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.752248105 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.990354785 seconds)
    (286/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.936565421 seconds)
    (287/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.325101234 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.843720201 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.103890013 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.892969625 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.945292858 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.914425305 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.532700661 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.80683536 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.019395328 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.890059208 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.848295142 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.856655347 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.700505284 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.811226585 seconds)
    (301/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.979243662 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.87789023 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.026383931 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.31905536 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.771619734 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.843347728 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.810321864 seconds)
    (308/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.827288173 seconds)
    (309/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.995324511 seconds)
  done (took 995.38269613 seconds)
done (took 997.189718771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.841702999 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835664241 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.818443892 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.840094168 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.931310582 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.853738623 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.829580137 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.821815412 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.866770411 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.868130883 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.81881113 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.852978218 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.82322902 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.820087243 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.818005346 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83380823 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.121051957 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.842140206 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.837219025 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.82826575 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.83689251 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.818765495 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.868397104 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853032733 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.822687792 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.821588976 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.824250339 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.83970078 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.932515502 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.825523505 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.822677436 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.832009785 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.120695947 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.839578339 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.816374051 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.840084435 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.830894103 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.829945197 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.824327284 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.854311159 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.251506377 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825604541 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.822947599 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.820752842 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.820780814 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.825647427 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.822549975 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.826128465 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834674221 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835503489 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.250700237 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.842712818 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.825385133 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.822160926 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.831942712 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.823045845 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.824530462 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836843162 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.841447963 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83861163 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.113280637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.847144464 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.822396475 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.839247274 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.830411752 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.286945966 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.822177557 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.825873681 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.252629892 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.83128271 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.287473611 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.836085039 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.822014089 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.837500226 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.854203944 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.123378449 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.837412574 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.821422013 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.830264529 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.822145507 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.832444703 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836276799 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.827045274 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.822969677 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837243335 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.85728145 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.833761677 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.825684655 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.831836841 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.843196144 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.831473076 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.836390362 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.827560586 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.818423437 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.832698406 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.82669748 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.82688338 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.82752046 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.828799513 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.833651634 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.250512063 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84653384 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.820550926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.822273577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.822726314 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.839434973 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.252030017 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831271409 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.846773446 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.871908262 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.82561692 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.115631508 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.849263954 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841775669 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.834501094 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.827089182 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.820550488 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.116266217 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.274953254 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.847469098 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.825994439 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.825251279 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842143346 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.825631098 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.82577496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.127172715 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.84741663 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839826463 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.947203131 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.837109309 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.857732285 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.824895301 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.829021093 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.858473679 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842119758 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.857780878 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.82785732 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8417266 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.842499432 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.822306601 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.839566096 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.836531388 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.82669241 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.830305926 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.819244574 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.859781522 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843037958 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838982477 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.846898361 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.947714794 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.823974659 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.12030745 seconds)
done (took 286.656901018 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.892014412 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.820481521 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.923624169 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.824094268 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.908304073 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.920109014 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.820900056 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.820728707 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.820631901 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.205012394 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.821964518 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.821132183 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.814742207 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.822441555 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.907351295 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.823342365 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.82046491 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.166158854 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.825002917 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.895167929 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.816701153 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.823189108 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.82373541 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.204370867 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.820411321 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.821882295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.902864216 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.824044698 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.168694705 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.824184639 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.820836759 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.170023834 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923599043 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.84332946 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.834338142 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.831216771 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.916492089 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.829050274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.914460398 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.907049279 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.93238361 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.864746606 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.823637302 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.820659283 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.827942664 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.826917707 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.823049355 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.854405415 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.825760885 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.823339127 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.169741845 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.83479734 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.824055888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.822242333 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.823136952 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.857675796 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.823500123 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.827085802 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.917236371 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.827258968 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.899194876 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.206682458 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.206726366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.825977216 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.818135532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.826139338 seconds)
  done (took 181.382777043 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.892775615 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.897726854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.895114014 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.828897785 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.874333883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.897556163 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.829193693 seconds)
  done (took 14.87267057 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.832044383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826717925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.876881749 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875692615 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.82792052 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.978206083 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.827527997 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.8384098 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.825283534 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.879730611 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.828940172 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.827518767 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.835589302 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.819928259 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.875864708 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.837696152 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.943223475 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.829229341 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.831522115 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.981285137 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835388429 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.82486256 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.882046123 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.841364669 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.828401566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.833611395 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.423136941 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827471681 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.827047801 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.827470279 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.825518914 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.871227018 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.827908962 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.823397647 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825537834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.943371327 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.827342118 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826950417 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.827488994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.822289949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.827763786 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.82843237 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.829514656 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.826487241 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.828824486 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.854402446 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.828517665 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.828099586 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.828438873 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.828502258 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.882278105 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829527279 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.827416242 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.826543806 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.885358889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835514029 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.833320366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.825852502 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.829405719 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826286732 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.983121464 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.878828201 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.830146512 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.876737813 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828837524 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.830570378 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.830766224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.829485216 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924796718 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.830209379 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877383452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.827416278 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.990061185 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.853042735 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.831133085 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.833828406 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.832554593 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831814023 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.825760471 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.837711741 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.828733186 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.831349363 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.836727529 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828127987 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.827553608 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943246455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.938817206 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.82745469 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.843332851 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.83888864 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.828585232 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.886741624 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.829995961 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.828433425 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884809819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.946726542 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.887088977 seconds)
  done (took 201.863968574 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.835433243 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.838572331 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.832288469 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.847988749 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.831483307 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.83159063 seconds)
  done (took 12.77976059 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.833241235 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.833027574 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.832645158 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.832692954 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.832514643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.832991633 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.832515659 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833818281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.834276672 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.832495878 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.831984966 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.833236588 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.832888109 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.833530649 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.832887247 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.241775829 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.832615717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829516094 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.831659909 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832989005 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.977168568 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.832946502 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832855518 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.83402709 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.83538098 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.832387963 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843485623 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.83237631 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.833210286 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.839807671 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.835868909 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.833628535 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.833290079 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.837274188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.836977384 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.834155824 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835940747 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.833132169 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829515172 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.833389935 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.83423583 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.834086743 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.833713886 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.834585936 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.83488572 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.837809638 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.83822867 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.841028213 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.835956704 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.835538125 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.837953401 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.834283168 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.834432253 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.835494254 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.836381197 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83756456 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.84096963 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.835927209 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.835104966 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.835007054 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.834893908 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.835953538 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.836625705 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.838004678 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.841470631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.836269625 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.834991104 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.839598193 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835265073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.835552866 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.835757815 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.831664431 seconds)
  done (took 135.424770835 seconds)
done (took 548.089155222 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.121357409 seconds)
  done (took 8.887662525 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.903287855 seconds)
  done (took 8.772654368 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.185626429 seconds)
  done (took 9.953029955 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.835155081 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.852807114 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.837987851 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.838637473 seconds)
  done (took 29.139708367 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.855967071 seconds)
  done (took 8.62254815 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.841516143 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.829348134 seconds)
  done (took 15.473197332 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.831066709 seconds)
  done (took 8.599113709 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.883766625 seconds)
  done (took 8.654470381 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.844202237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.847550227 seconds)
  done (took 15.472527956 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.815491872 seconds)
  done (took 8.582643771 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.567581273 seconds)
  done (took 11.344300583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832949118 seconds)
  done (took 8.612433803 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.836279123 seconds)
  done (took 8.603454871 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.823938175 seconds)
  done (took 9.591748105 seconds)
done (took 162.075901178 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.831355524 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.830049343 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831330981 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.830364357 seconds)
  done (took 29.090106959 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.869438542 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.870351386 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.870969756 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.881076008 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.873347118 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.871536065 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.862191913 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.862123522 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.881357051 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.872881236 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.872289801 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.872375337 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.870273389 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.863031411 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.872601557 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.872037496 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.88180904 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.872286283 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.863714507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.872837422 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.838378015 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.882547422 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.874065935 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.837975028 seconds)
  done (took 46.629343365 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.032880688 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.908081122 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.991982177 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.890231829 seconds)
  done (took 9.592105508 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.889294442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.891245322 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.904071098 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.941286474 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.967861708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.901267673 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.864660523 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.858890932 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.845932643 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.891232713 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.967674081 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.907777137 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.973604848 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.83937435 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043508518 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.840230138 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.838624075 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.89066269 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.94317838 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.956347324 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.840194917 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.891249816 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.896245582 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.908604224 seconds)
  done (took 47.465199573 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.837127802 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.846537277 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.844237294 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.837703286 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.837696758 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.839887892 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.846710978 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.839594178 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.85963241 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.839939955 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.838563685 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.838921513 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.841766979 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.839650595 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.838281936 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.850969161 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.853082726 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.841368998 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.842002771 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.845719684 seconds)
  done (took 38.629495443 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.833023794 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.687243717 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.185555687 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.088242053 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.833395405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.83368905 seconds)
  done (took 31.231785116 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.851610439 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.844516196 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.840945815 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.895152655 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.978165715 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.846897176 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.841068772 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.849199052 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.883915945 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906014945 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.856572772 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.865578366 seconds)
  done (took 24.23157471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.834316983 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.835694851 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.839331757 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.851993538 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.850245872 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.847602409 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.846572066 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.833053557 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.851518319 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.85729025 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.848221967 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.851674659 seconds)
  done (took 43.922012418 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926015123 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.88062841 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.885346382 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524087129 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213305472 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046034562 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36472363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174123685 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.839322624 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109450365 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.938050873 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941507018 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092693182 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200102094 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.864506184 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.301329829 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133890374 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052894291 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866305618 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555549079 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900643716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.88762599 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.613785057 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895189329 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04899698 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.965298287 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.098575654 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837685133 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976078243 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875702031 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848465577 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836983026 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111372106 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218548738 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942938583 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847977306 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455015414 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.550156355 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.829403858 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.609144607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.604880647 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966569588 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849874726 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838064861 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774434512 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.866720639 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206640735 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.844156979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.550193135 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.83914769 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849545037 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927539504 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.842180602 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.655378228 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756414982 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.840114451 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.836043338 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845799746 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408729039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.991748841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.89857244 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.806370402 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.930774533 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564209977 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235766193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.989205996 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.843224044 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844116428 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775445417 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.640482317 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897605334 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189241243 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.861231911 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489797611 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151517131 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.005759877 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782534098 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11639031 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.241059546 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.808301583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069674145 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840352305 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775732484 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.8766083 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775823339 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125582909 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878637928 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.605840022 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885088955 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176187404 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852814029 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861322173 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86551855 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.065215205 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.72873766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841167129 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.713425818 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.984385175 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863849684 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178884178 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777097236 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.846342953 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098007847 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.054415937 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775763046 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339617407 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998793586 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267548042 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.889693837 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.861616048 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885482849 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.117778929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901671868 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993095904 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895119329 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84394451 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167287572 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297851249 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.975083883 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.961475294 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967189842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.167345459 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871189418 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909300938 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846085484 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844386981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667879801 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394479273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843871059 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.845794007 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.775491649 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885758118 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.845510125 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793565425 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.463434813 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951266525 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.858043776 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06708099 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.279698578 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149575854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777987732 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193128446 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.933789926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.066015085 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.492744182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.930202001 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105282499 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.77633901 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.812775609 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886909041 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863256034 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943329855 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867838054 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.864008643 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132679589 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.849868101 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.849467561 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.649512522 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880528479 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851653832 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.850259348 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.594887617 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12775789 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86998414 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853692272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734177667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.859504974 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911490465 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851218316 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855623823 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382221225 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.573721797 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.853169758 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.426874764 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070160067 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856848445 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.572228414 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957351671 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.927548614 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129910357 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907221155 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.780623551 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.558014321 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.540036278 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847465695 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782408144 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.847636395 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855720158 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858700306 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.042477015 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126111748 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892709896 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.569588734 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.88796528 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857885848 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.851997724 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846636353 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.354972564 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005635257 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.905336855 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887836528 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990974301 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.861263062 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78297289 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.852006268 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852503682 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847939947 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.848356483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880534766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.57025108 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221625407 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108705992 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.45660944 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860835985 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.598037356 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.906166437 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.908078642 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589871592 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039058874 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.958275828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861220143 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.859547099 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.571518645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.554827286 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415430225 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167080276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163741626 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294786287 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.933815544 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874257689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184684853 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785379812 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410322604 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90973026 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197720852 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797249543 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933464607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.497922198 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200730693 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863310743 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076578016 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241241637 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.657657632 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9964052 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061212317 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885183758 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.876327367 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806750144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.375226265 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991947906 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.578678277 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057007646 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187089928 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.596767645 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.979971318 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.851527308 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542071816 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937090022 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.560465086 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.021682485 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.911712757 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853723464 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32498259 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860893881 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.076878639 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217195976 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871503199 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.967659073 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788870012 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862982646 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862956577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.854084287 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.847007118 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.730081498 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.104699296 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862714091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787611328 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.828228909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144263131 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.755652032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.85808361 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851717621 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174662498 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254277342 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018973115 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.82314374 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363867971 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859919705 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78546935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786829192 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.545657398 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852757283 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.827056436 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069584194 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.952457986 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770606452 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.800942234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929617802 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109452342 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.867449761 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133116219 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130241873 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.552747423 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878886023 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.954130367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.58528169 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.968444837 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854789453 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089711793 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607506965 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.079507123 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.896627247 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.816102377 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.853732243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066968745 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854660371 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.81973973 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089464639 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.577746376 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.970718599 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181049889 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929313516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.828906067 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903061391 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.945672351 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864021037 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934111068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86484805 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.865383334 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866343121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902208029 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833877276 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.983152385 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.869259558 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946969942 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.01126285 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.375354339 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.862090402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14165789 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219157281 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190288253 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917399126 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856666095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864021387 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793396267 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0075551 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083477776 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129141477 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.984186669 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.97219371 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880457111 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591554373 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.941694793 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092970153 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13111034 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.750573038 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230896271 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89136851 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.859289967 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867831579 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.068627214 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078368541 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169043463 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004127178 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.808562613 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.215534861 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131986121 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.85754089 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856558151 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445928082 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.979450807 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549124467 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.899998643 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831019888 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135422027 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867027688 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240280953 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880124488 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.013109115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.373358353 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.591619372 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145749927 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.849356379 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923174078 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140218722 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.25883581 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172240603 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927045196 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868933237 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.967744929 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004845435 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.73538234 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859787362 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859516849 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908543648 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.570045294 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868420733 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145372027 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176642315 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.857514693 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.742699789 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883344697 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.86905629 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083705391 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140025789 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111757536 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869355094 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859839062 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.674669492 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139666442 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919491289 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793807597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.863815638 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961972899 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109442718 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879950174 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.313578326 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.572071872 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1433409 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.860865377 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882946192 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891531802 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232907963 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189349002 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.394784331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076237969 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456154513 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.306603102 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157880546 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.865847775 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.890010048 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158788161 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.86476437 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.811893113 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896585396 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.137992379 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176066589 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.002437496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5944266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.83133482 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203084802 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425023667 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800664591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871207518 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.922958234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862476934 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.993788684 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873284858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.747676314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.895021697 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.618658274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137298102 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.868095466 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.8542154 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.612172208 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031145958 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891941849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004797055 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86763716 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565063795 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.227997318 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119451896 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.810935778 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.867208655 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.867360087 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863307852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851339371 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06211836 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.05886223 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141043308 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.840838155 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.895298269 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867395984 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.079669195 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075160752 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.823069999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005341358 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817708376 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901574208 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.768945647 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365972535 seconds)
  done (took 1662.206891095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880073449 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.917742115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.872885883 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913284602 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.898235341 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955290908 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.900325465 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896835586 seconds)
  done (took 57.036464569 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.864608215 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.06378989 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.873839718 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.866347952 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.876008162 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.866272897 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.033313294 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.874505276 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.875262202 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.877409585 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.868891131 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.864384499 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.174187087 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.888075748 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.867525524 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.854485146 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.876111583 seconds)
  done (took 74.267754654 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.8870158 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.926717902 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.895084252 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.888685098 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.816996189 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.88622245 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.652987002 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.879530748 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.867611366 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.085881748 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.496124023 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.921961136 seconds)
  done (took 90.003679872 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.877772299 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.873422289 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.874462398 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.874376161 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.873110411 seconds)
  done (took 11.177754041 seconds)
done (took 2167.273810666 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.110558668 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.090346766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.223785832 seconds)
  done (took 6.116381863 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.018460965 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.065116942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.185472814 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.208113548 seconds)
  done (took 10.282866554 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.160964471 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.237471742 seconds)
  done (took 6.202395496 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.248186234 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.873717516 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.248681815 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.872266415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.868310224 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.873283091 seconds)
  done (took 22.423471842 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.874483245 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.876724921 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.874010307 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.876398505 seconds)
  done (took 9.306901043 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.856950201 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.584020457 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.855708282 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.868021386 seconds)
  done (took 20.968120306 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.624003516 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.633178939 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.617343518 seconds)
  done (took 9.679455981 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.396120917 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.774674999 seconds)
  done (took 8.976964954 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135195542 seconds)
  done (took 3.938996262 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.007373277 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.182727169 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384970513 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.398238863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.504022464 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.555842079 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.175748789 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.102104428 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.275795161 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.300609588 seconds)
  done (took 24.693393422 seconds)
done (took 137.869855732 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.244233965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.236309584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.07432916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.243555284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.101694873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.073247834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.297720854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.22932125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710907599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.709880994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.244406221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.098195815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.028951791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.235071523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.02945368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.234931321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.094679119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.257030682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.93775813 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.096743245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.304242232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.842273139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.090180916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.85290377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.09510966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.027322457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.416951228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.237637755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.094183654 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.427207108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026312781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.251764777 seconds)
  done (took 169.650637023 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.624535889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872624859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.874099736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873501843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.189313657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873369791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.874533953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.875365691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.957726427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.937937552 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.873981686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.181888341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.877144771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.875226322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873094119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873857098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.092294234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.675683299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.8854255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.889077566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893974814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.115300784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.899856922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.198782284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.15007654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902991649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875498051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902430825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879704387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893834272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.897380787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.875275248 seconds)
  done (took 207.344180282 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.874587145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879784408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.884031109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.876465314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.886967546 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884808887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.877807616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.875170397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449313357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.442098839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.887938797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.885171226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.883772856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.875044534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.883704595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878164859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.893912559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889538618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.88268199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.886240375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89188066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.583579278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891581771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.583280501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.884158595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884102002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.876882781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885339434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.889708826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.888022767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888872235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.875734165 seconds)
  done (took 220.637617882 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.071436351 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.883169886 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.884296757 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.821750225 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.885198275 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.883003432 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.880031013 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.081095468 seconds)
  done (took 19.224701381 seconds)
done (took 618.671431327 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.32949561 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.168706756 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.056759124 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.906843296 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.141760643 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.940197472 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.90478339 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.965931545 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.628836139 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.966302127 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.538989681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.91447137 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.627077392 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.918063666 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.029870942 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.954760286 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.47428534 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.565583538 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.078935218 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.970704529 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.077518215 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833486254 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.972112118 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.655254334 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.640060793 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.872990851 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.055945737 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.479418391 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.912357258 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.068577835 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.634900056 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.270977979 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.91044692 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.899767684 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.95396131 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.935036211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.234698232 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.909059021 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.025261627 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.636735675 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961932023 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.517524566 seconds)
  done (took 103.352650113 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.875855731 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.875075356 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.873841919 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.875951933 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.876493921 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.875567852 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.8740637 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.873459631 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.874255603 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.874550658 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.873807035 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.875759907 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.875408967 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.876247485 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.874243904 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.875820958 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.875927997 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.877377654 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.874992481 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.873692452 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.874779 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.873605908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.889292495 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875766229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.876613541 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.877269791 seconds)
  done (took 50.592082079 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.886373313 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.029094389 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.106658824 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.902674282 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.887761614 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.891243342 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.904510046 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.89039838 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.891054153 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.890570357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.981281921 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891447576 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.905748531 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.106467434 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.897600724 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.88788754 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.887214728 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.886699992 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.032225583 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.900548494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.905202124 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.889716661 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.904268366 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.898309746 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.888332014 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88770208 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.890716276 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.360248976 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.893044432 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.979526042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.928287573 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.906656263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.323716439 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.123630788 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.935567627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.893934977 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.887618858 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.984675298 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.893471645 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.888041985 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.90539467 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.893103455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.108108727 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.384312335 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.898672249 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.890853761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.375317198 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.993780464 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.929482565 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901529698 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.111110917 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.902234068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.891395109 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.890397657 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.927361611 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.89991378 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.889498723 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.256397359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.896864002 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.906958479 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.891909899 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.89192258 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.040751521 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.894152855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.030118849 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.895745354 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.896335139 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.888756395 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.109410717 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.900758836 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.392210706 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.899868023 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.890998877 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.984440951 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.030719961 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.392785307 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.899427394 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044374377 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.339533052 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.909359786 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.896116381 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.352139489 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.914914045 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895961801 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.89282375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.89259162 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.892595609 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.935780672 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.906604313 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.329853372 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.396207058 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.2660165 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.912836017 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.905458795 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.891185873 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.25850105 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.896434179 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.892028516 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.10454473 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.398605101 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.901605159 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.898589076 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.379141222 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.902230592 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.909739983 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.898475176 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.114423959 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.902292552 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.935638764 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.891428725 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.897738405 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.892479205 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.908923321 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.899172599 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.892902309 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.367256427 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.99859034 seconds)
  done (took 234.236128616 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.886806463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.886100802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.886442846 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.887131633 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.88550459 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893245485 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.88588835 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.887493729 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.894696932 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.889162554 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.886338119 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.885797908 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.88800354 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.88722361 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.424653556 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.904115788 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.549181581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.894201354 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.893687088 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89433262 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.57047346 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.90481649 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.893398305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.903768371 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.893852847 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893962297 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899627233 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.932150924 seconds)
  done (took 168.702054959 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.902037044 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.080271067 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.918102258 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.937851689 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.909251232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.899493033 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.924649122 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.92185955 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.907074456 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.900207839 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.900143931 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.961975076 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.913592175 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.036090959 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931670009 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.93370737 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.009346679 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905830701 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.899484867 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.899921383 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.929825655 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.897346832 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963548403 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.031502073 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.917572748 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.017237613 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.906610837 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.902749182 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.903777647 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.020671046 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.914579185 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.962157943 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930004484 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.918946913 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.025810018 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.018742648 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.007798135 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.93082322 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.907336988 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.901113242 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.901042477 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891956476 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.020789663 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.91855993 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.90313767 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.012422845 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.919214775 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.904743524 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.911959416 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.900162798 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.916774805 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.921874456 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.969965925 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.033046596 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.932926623 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.928585258 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.928109334 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.185163362 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913724111 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003536689 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.896777561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.020530371 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.921843451 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.891787696 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.903629574 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.907737403 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.932052923 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934445173 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0102611 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.91081022 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005586692 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937539752 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911732824 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.902221592 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.905989596 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.021394888 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.02074205 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.937955805 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.941245533 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.938976862 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.902239575 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.904768714 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.894506987 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.922893138 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.909638343 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02120639 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.021814402 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.912486397 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.906891242 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.906832146 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.90637198 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.9310852 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031203791 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.937266403 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003151982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972323512 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.977785024 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.917953379 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.917904661 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.909550969 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.969804411 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.916782995 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.915949997 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.23287503 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976665348 seconds)
  done (took 206.221546791 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.387159259 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.960880044 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.963092922 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.194205149 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.326120565 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.765697927 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.951429544 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.955357173 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.979368514 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.118275774 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.011376961 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.968782602 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.942955117 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.929328805 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955210723 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.975537044 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.959132016 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.26957073 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.070208985 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.053490748 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.934437685 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.254213253 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.269614954 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.341496651 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.989910331 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.27685172 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.639080549 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.203862988 seconds)
  done (took 62.484920631 seconds)
done (took 827.399541518 seconds)
SAVING RESULT...
DONE!
