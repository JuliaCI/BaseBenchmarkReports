cset: moving following pidspec: 6967
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382893006 seconds)
loading group "string"... done (took 0.505913485 seconds)
loading group "linalg"... done (took 8.456337134 seconds)
loading group "parallel"... done (took 0.172073917 seconds)
loading group "find"... done (took 1.347258128 seconds)
loading group "tuple"... done (took 1.928161383 seconds)
loading group "dates"... done (took 1.32362991 seconds)
loading group "micro"... done (took 0.212418359 seconds)
loading group "io"... done (took 0.573645554 seconds)
loading group "scalar"... done (took 40.743479951 seconds)
loading group "sparse"... done (took 12.886570077 seconds)
loading group "broadcast"... done (took 1.027530453 seconds)
loading group "union"... done (took 14.006618007 seconds)
loading group "simd"... done (took 4.85758085 seconds)
loading group "random"... done (took 9.728524923 seconds)
loading group "problem"... done (took 2.074486254 seconds)
loading group "array"... done (took 23.282536635 seconds)
loading group "misc"... done (took 1.069573177 seconds)
loading group "sort"... done (took 3.520377205 seconds)
loading group "collection"... done (took 20.914206172 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579139425 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13439651 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146465912 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173918483 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205981343 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137132619 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154849899 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460150752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.051113165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211383018 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139833589 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521989824 seconds)
done (took 5.664515484 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223858945 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073177729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125780587 seconds)
  done (took 0.894863072 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074439075 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17146975 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091920898 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106900234 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107605077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090166391 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107421274 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10790483 seconds)
  done (took 1.481534928 seconds)
done (took 3.380595645 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.766541214 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.832898629 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499019943 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.124569601 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154012677 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129814701 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.306248067 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.156890121 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.102999796 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112343572 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174346036 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.366289924 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481368379 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.937358676 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106456106 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126442765 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079839272 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692553215 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078578801 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129599705 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494144187 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108367364 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114462255 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124096213 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203995064 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112939429 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180412991 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107304002 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675987584 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100049229 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182640444 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095407722 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159279947 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225793936 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077221496 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106380011 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676481868 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187472337 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108893265 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095741472 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677169996 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076761731 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191556621 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105648003 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107122599 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189109649 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115899531 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075616362 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09740845 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084780519 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172461856 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.461336482 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104134358 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141457964 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092917404 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699305554 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091344256 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153997198 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123952205 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108518773 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094609544 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089996899 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16949302 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096764838 seconds)
  done (took 19.555433862 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114717029 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.1379737 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091840786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136228166 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138034204 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094870963 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081898739 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092346158 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107346268 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181324658 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135341031 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144043036 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072060182 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094185254 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114972218 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232325393 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120949667 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121444897 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080301693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104817973 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122976339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112014114 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106731259 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091880033 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166343092 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204117786 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120867678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122220598 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078306961 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11467558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142404296 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161992408 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075205126 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093365614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178641838 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103445123 seconds)
  done (took 5.103932612 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193516211 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119360194 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184051423 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172756398 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148765603 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.1615055 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115591362 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261279118 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.153158283 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181635848 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12894227 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096863987 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092728864 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078053624 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091954415 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757897582 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124148425 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165099108 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120882519 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101551011 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07963563 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371047578 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100463889 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07763438 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100962597 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068257418 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18370441 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082426805 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.324653366 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.081364583 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114684184 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085492825 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130306252 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128971079 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125931294 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113306759 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101675522 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076917324 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210948476 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087288512 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092621427 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101175544 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13202498 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134532517 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097053248 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089915615 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244792376 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078948761 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114112141 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.041173389 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199143932 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129613744 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092238528 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09644574 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.340078097 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09477375 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099503822 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076179897 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095811578 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.302097068 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134167075 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079409092 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077048401 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102209159 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077596309 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406935906 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086728883 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.966592288 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093964555 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152660837 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095320252 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083761081 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100525295 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082145068 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114600758 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077496435 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093372663 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076451818 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074901124 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098473657 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11244856 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080730677 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092535278 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144110653 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115429708 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112125485 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107037276 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096469087 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075621048 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12690962 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093170693 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080244896 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135772296 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082906989 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112927941 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097646194 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140136052 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077893395 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182495598 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079293364 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123368409 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097441418 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111959927 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097264559 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117363499 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078824419 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099559196 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076641471 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095032685 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144591809 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078747826 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096524329 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081438262 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110518735 seconds)
  done (took 23.219810731 seconds)
done (took 48.575491744 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.415458941 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110718218 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110493916 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107452052 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108182978 seconds)
  done (took 1.626342595 seconds)
done (took 2.374986297 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318274134 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193574321 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084513459 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187084415 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084092077 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17448119 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176430888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097263448 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203853139 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08059943 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162905848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098452562 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100335547 seconds)
  done (took 2.737005738 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088487095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11369185 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07879835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088599496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09186619 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088203478 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105005192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116462023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104154088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083027372 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090367506 seconds)
  done (took 1.793715871 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087899118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111501808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078067309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088971779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091187187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088726836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106129625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098972723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10636875 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083236301 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093047611 seconds)
  done (took 1.782732452 seconds)
done (took 7.053057662 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.109077864 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.044253812 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119827217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166403052 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324004778 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193593342 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.631240081 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130497574 seconds)
  done (took 16.662828843 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.123039837 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09531186 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07823412 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095310797 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077772845 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093465622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078725526 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090553844 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077149078 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090772428 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07757249 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089771353 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076538177 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091278138 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078719889 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07536776 seconds)
  done (took 2.202052666 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112270851 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110556111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098952677 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083287408 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098068494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079892711 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099723291 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096720587 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078638751 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094798222 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.084768149 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098171357 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083825926 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094134732 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081474842 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101069998 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078082167 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098551637 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099182049 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08289025 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100092383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080578438 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098240061 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083338663 seconds)
  done (took 3.07335007 seconds)
done (took 22.686297437 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162281213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080863199 seconds)
  done (took 0.996062185 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096546744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113829235 seconds)
  done (took 0.971428202 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101642017 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092728765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131039397 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094288831 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094610173 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077648135 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124726111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094698315 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07757022 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093838118 seconds)
  done (took 1.742683968 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081257724 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096618716 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08489689 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114183902 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08791717 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095253677 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081286024 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097535382 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083079093 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092500071 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100252447 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096385446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100023829 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113431754 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.081316388 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099784842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086371746 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097392825 seconds)
  done (took 2.449035271 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076798057 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078478651 seconds)
  done (took 0.917659617 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079552937 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091514647 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078826202 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094884228 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075971519 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091049032 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075732619 seconds)
  done (took 1.350334384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.461502088 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.17659606 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318253062 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109455716 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128144218 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.33588174 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.128954984 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108219998 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108397228 seconds)
  done (took 2.680895289 seconds)
done (took 11.867874986 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087775437 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129225571 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.473084125 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112255501 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074453974 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153608307 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.253848399 seconds)
done (took 2.050972745 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334200577 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120211153 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085463874 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077172786 seconds)
  done (took 1.378821108 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075961095 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080736703 seconds)
  done (took 0.924783644 seconds)
done (took 3.072149008 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076015575 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073775406 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.107875064 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091522611 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074490106 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072401864 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093143856 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073785826 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09442238 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075687637 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075222202 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.09374216 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075617692 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090723837 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073540451 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090733632 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07586945 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073523775 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.21051519 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072041058 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090911225 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074173482 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071853495 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089182871 seconds)
  done (took 2.909111729 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100400606 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093298115 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080528554 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097664181 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078962296 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098540274 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080181696 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091907186 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.096625365 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076969687 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094552606 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078966841 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094318344 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078750966 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093190073 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078751871 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097383135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074906277 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093833049 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.078887656 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097066178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075300137 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09552068 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080806574 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095149339 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078562938 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093929718 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075346419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096588785 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095611263 seconds)
  done (took 3.41253823 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081252778 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07155423 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090488802 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084154617 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090193909 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077585257 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091474031 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07505693 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097365349 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075208201 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078654364 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091763331 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074100829 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096088984 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078658528 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099001484 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09243303 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092383645 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074607418 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078711643 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098766475 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07350808 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095666034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074156361 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092369352 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074749717 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074884056 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092177094 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074175853 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091717065 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.079654683 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098025517 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072412842 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103465846 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079890789 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073173921 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097326817 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071850638 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094440276 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072151452 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089550758 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072091557 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089338413 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084923035 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075810795 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09203447 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072513407 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094853726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076424221 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096658591 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07211528 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089010325 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07864528 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077930598 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095890748 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071510467 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090577737 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072028881 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094050514 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072553593 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073058424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089215825 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078957009 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090330287 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095429313 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10113023 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07219632 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0951158 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077920614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097515333 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07776789 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107642077 seconds)
  done (took 6.861595727 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077324207 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10024729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075390493 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074156185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089022854 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073225319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098053529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072904759 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091998526 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090489001 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090369698 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073995043 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092151453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077059002 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090793335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075494727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102215282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071850404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091963977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077680416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07523355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098997204 seconds)
  done (took 2.63894859 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215592398 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10107249 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136141866 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090921122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110299516 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108728818 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079094058 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098256495 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07991649 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099772662 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100003934 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079970371 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110889615 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100357607 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083179456 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10293436 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080837678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102244226 seconds)
  done (took 2.661039509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087995109 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093912296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099287281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094412416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076090399 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096281356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081786085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108949406 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077911984 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093859083 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086334392 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096008413 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076991069 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09280174 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077881667 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092796191 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07722023 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09346121 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084844743 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099900908 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099410596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085597578 seconds)
  done (took 2.754122908 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09231892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094754018 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096854181 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097962984 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074769915 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095062084 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083449115 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092720674 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087649637 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095139916 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076215564 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094481451 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083231212 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09378612 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08142541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093581286 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07785725 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093766933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07766016 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092829318 seconds)
  done (took 2.559471862 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11638491 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108452647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09016229 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121912251 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108669401 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089737791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118257968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089585934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108213319 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121078294 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090526207 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111260553 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104253663 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118072194 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111222983 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104709402 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122537359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120731113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091597211 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110507963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105014908 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11126254 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12198957 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093342466 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111122356 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092405469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111093503 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100124768 seconds)
  done (took 3.788031294 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075420311 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074922171 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091751957 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073565715 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090893778 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073727859 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072536227 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091287339 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074795086 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091366608 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075498366 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095062786 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077694261 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076360289 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096482668 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077284126 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094631612 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074985656 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074377838 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092920597 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076350015 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096187059 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077491341 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093572656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075448202 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076951927 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093820748 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074811059 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095700666 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075742212 seconds)
  done (took 3.269769254 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084159101 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106431952 seconds)
  done (took 0.980051354 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073812589 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10989415 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073941983 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07913063 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099645465 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075712281 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103667129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101717461 seconds)
  done (took 1.505197634 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100637335 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114491171 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084357954 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107575461 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095494118 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116745403 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161549598 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083957485 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10629393 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078816754 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118169057 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078236159 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106250495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083977585 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106728946 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093530178 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099240537 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088616669 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105143455 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080727815 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103314746 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095170996 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108800523 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.086212698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10038475 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089859313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11013214 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106744044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081991977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108774835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085753001 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090989126 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083447755 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103077782 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079545261 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115633449 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096984028 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103312419 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088041332 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104153816 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088723949 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095738688 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088856534 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105139094 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091330847 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103496127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086087982 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096766152 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079242088 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102044815 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077111341 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101622618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072607732 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107649884 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088110091 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117239228 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081617262 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103084605 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083000563 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101407639 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087081889 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103390425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090565093 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102204794 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089588618 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.1080974 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088171053 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096284784 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07288002 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098693065 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08821142 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123009573 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090977753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10487338 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085572169 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099353364 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084023777 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105808377 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087555986 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109323921 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084197412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105263874 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090180512 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101977519 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084663882 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106138901 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082160691 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101298187 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080850116 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118954963 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083299845 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098856798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080108473 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109773664 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084233743 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102226851 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080122504 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108372198 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072848779 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10412211 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085978101 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106435019 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091947495 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104544718 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085720811 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107334463 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090072652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104411104 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082686339 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094871407 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085579971 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100702423 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087284639 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092520001 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084701279 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102759899 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085341439 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109689704 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081187182 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103254216 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090747927 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110189834 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081719472 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094766307 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083834695 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103345245 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088942978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111133749 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081623815 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096605865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078543759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107212318 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083087689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105662588 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084472808 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104358533 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073388235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098817931 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084298223 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109418321 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083207567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103848537 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086929839 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102781011 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080122252 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107066413 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08045084 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096692346 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087516316 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100696364 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075816751 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105896281 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081585277 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098428456 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082484167 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105991652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082440901 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102203362 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079662528 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104069236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085354128 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098296667 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082882648 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080161345 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110728378 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101707213 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075443779 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075322918 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105284094 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080183812 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103409073 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078635216 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105038532 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085398366 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100189905 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082455315 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102589187 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095555763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112463842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08451389 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107292102 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090452442 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103168151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08552088 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103213751 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085177763 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105457573 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088743269 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106219848 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084561664 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104892776 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07599872 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105355718 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090274008 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100294559 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079583205 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099485187 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084421568 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110939874 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08431183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105585328 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081319112 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106143248 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090438114 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103418052 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084097211 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099476942 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084514783 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10767367 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08565847 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086375566 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111351595 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105488827 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078637088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109103316 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082809294 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108456631 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078228904 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080464529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100512407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086243236 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104961591 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083760034 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093349387 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090042872 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109592984 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084896375 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099676209 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085473971 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113561111 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083508739 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107690139 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08601468 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10750096 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098466714 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099916358 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083855802 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11173523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084445366 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093613324 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087988663 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101910336 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078807779 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102541679 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09116462 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105630613 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087404672 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106517672 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073769251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103184792 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081849705 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100777949 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078947307 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109905436 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085619189 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103315148 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094111796 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106539524 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085836455 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106139799 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084255263 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106128971 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086138273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105431425 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085614458 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102777412 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080341376 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104380443 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080149971 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080714912 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104321891 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084969822 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106069943 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0870185 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104229939 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089955172 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104737711 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086442875 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122243222 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102268747 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080822837 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105841023 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087260406 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10485175 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084622803 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097968231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090174619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103747154 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090965273 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104158336 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077102309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10477274 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083761349 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106161458 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086521215 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105693309 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083863131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084596072 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105506515 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114185827 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081587419 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111911604 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086975308 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106837532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084580529 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106330433 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083915652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100564739 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084384456 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106235461 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0857675 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103560923 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086769724 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104828686 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084500699 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083255144 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107080175 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086879783 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106626011 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073843147 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10054934 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080780918 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104959194 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089380608 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10588063 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084046649 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103233994 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086705731 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103856554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076881926 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107809183 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088783627 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106631357 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094563443 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100262894 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08507183 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115472895 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075013434 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102573761 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081206778 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101558795 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09073046 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106429085 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090879055 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106169785 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080781914 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077123556 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106659753 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083926637 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094947245 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081097489 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109460193 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083280513 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10336035 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086306426 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108749609 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087249012 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109132986 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084070537 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105230854 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085239861 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09420752 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078966569 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09835487 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083296236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10376684 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080017704 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076135467 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103383401 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085220176 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106119495 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083870357 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103191524 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090079769 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101865852 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082723314 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108266325 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072331587 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101901308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081592035 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.1022057 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078044594 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10323293 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083924754 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103564409 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087298648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100773987 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08398601 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102857742 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081593807 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106103386 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085029985 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105721316 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080886001 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105584748 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089951455 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098905523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083669657 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106079285 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083464968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107074052 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086966974 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105492674 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089498556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08527825 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106060428 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08896048 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106143482 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08671202 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107528809 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083712025 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108389916 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080710762 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112682079 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106932252 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087345403 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083706908 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101644715 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082986548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102908095 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081209552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107091642 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084407421 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097729528 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078810523 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098231284 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083246484 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107172272 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089300856 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10262595 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083305136 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096128656 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074786242 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104260969 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078598412 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100909299 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085669725 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10663582 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083575236 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099913931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081134325 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106781019 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087276525 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104368484 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079284045 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105452772 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08456048 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101988346 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080157352 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10187148 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084250351 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104852701 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081429773 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098525704 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091697217 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106873174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084257612 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101071509 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084424833 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101462343 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077154932 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104180469 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082576528 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105160721 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08319788 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103184807 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093128049 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099125926 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083705963 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10941733 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08396808 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111928394 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080465148 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107401778 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088416894 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10785365 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080584501 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102398652 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083065239 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106737462 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082313592 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080114264 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117786517 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112112588 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086959659 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104713023 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084427734 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080237835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100479171 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082217458 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108899735 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085750675 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115809245 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082682436 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10328286 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079814838 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106871255 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087754144 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109046552 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079206578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10137021 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083391731 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108651655 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09387739 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105330965 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086690657 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107507974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086975921 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103723662 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092770579 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098320476 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088065981 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119178014 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088333522 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109604969 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089684726 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113312189 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087950757 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101289709 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088074579 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107948276 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087814655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108727677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091119528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123020973 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088119212 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103292134 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085062725 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108456966 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08250166 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114665533 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088748528 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108493306 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089017793 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106308808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089495357 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11417918 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0892501 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107659775 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086978981 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105175616 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086468982 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104879023 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085818586 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109244951 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088740209 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106693228 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089454079 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102967532 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097142761 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113648744 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088508446 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099536243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082895649 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103044729 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080429496 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108369574 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080363937 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084144094 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104852387 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085766077 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109929205 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089216641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107842149 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088297235 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107392673 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076452641 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111406166 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088049033 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110881171 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078534471 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106775942 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088199153 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112285346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092202356 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105632342 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087058534 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106319602 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089127413 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10124066 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08962739 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105823942 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085492701 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102887229 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087097182 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088572003 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109066393 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084341034 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108833401 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083201569 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109876822 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107377766 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078777935 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077626605 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110240659 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083409208 seconds)
  done (took 57.371411279 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143887599 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084053292 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073862789 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097453076 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124313529 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082158475 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097157941 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082192036 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101726795 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092011437 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098391806 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077434459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120120986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126915776 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124698971 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092030927 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098016516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081538653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098624896 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082243009 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119406291 seconds)
  done (took 2.93625987 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099472672 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11316696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112148256 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09938321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110219167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11723492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095006885 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117881602 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120926998 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090224571 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121403556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116950572 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089746342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111036731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110559063 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093555825 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120769648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088311463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118316708 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114478689 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092523971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116577848 seconds)
  done (took 3.20630811 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088134575 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085604778 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11185098 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.076767177 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10706023 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076758135 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112652273 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.079352627 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111648599 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087017545 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10483243 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087198724 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112318676 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.077414348 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085239004 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100833002 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090717058 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106734543 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087661816 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.101242997 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127161903 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079739346 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.080152671 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104988872 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095252296 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108999041 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.085740976 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107869357 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08416831 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10707949 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.079641982 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10946453 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090627972 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10423789 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.084396157 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106878122 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086040158 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.080272859 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104685451 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090196821 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102095779 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086849107 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114929451 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.082611344 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101544113 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088597818 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107334499 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.077083786 seconds)
  done (took 5.41017395 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115431704 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151298538 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081212193 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142297592 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119329192 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092619235 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105484424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141973999 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076809201 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10437215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125765197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.09966722 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108982115 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091720416 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111572765 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106627043 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089310372 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102201454 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09183361 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105926033 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091320698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11047586 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121954076 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.097949643 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111428153 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085126157 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104187751 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113368199 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098143857 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113579015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113219324 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0936413 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121525184 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109396498 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085427477 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109929414 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103464152 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107791958 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088868549 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101820086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088353876 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112829672 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109987358 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103395288 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109435637 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.087262601 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108082869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079380595 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117023805 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110790584 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0968464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120381932 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11187193 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087946532 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114308096 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122958715 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086653146 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105888317 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090200815 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118375896 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.080277455 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112051108 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119994377 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088740768 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117307391 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121316201 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.088480473 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111806932 seconds)
  done (took 8.156994344 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110721646 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10880869 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10221645 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125266554 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113477287 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091631964 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11293999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112607265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091690814 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120751553 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091422544 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162824682 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.110313049 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097869898 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11424116 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11372304 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093050772 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113573737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091950123 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112918242 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091296044 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125500225 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112556475 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125176154 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105548612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111069705 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092265053 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1130264 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124897031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092169516 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126243747 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113043809 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092464131 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125337056 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12652662 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091849137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107282183 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092470198 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114064669 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113772896 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090108952 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124943594 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092238126 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110600823 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092080931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112804205 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12084057 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124880011 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09708775 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119382548 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113402262 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104846964 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115133625 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09170196 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125324382 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134548883 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125477498 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124828476 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092579285 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125040542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126660513 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134504639 seconds)
  done (took 7.738182231 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079978801 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079612793 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098385129 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077633111 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099625491 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077556324 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08059803 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103227418 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08575737 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104781739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08363584 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101802448 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080897639 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083140513 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102763237 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080956224 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1025583 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081751237 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08292033 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102441229 seconds)
  done (took 2.641309151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088264666 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120975035 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081314498 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110695958 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086267175 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112708229 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085914808 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108306565 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084232326 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108298842 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096753861 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11851441 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105528131 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091505138 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118368852 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112342303 seconds)
  done (took 2.484862224 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100577929 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122524331 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128527059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088291773 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103856456 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092614197 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108973771 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.079536462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080156967 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114476637 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089563235 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112366326 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087040943 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104556451 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084047612 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111132708 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079265052 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109485475 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086964056 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130734791 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.088881169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10963485 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087659384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108702544 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108517994 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088944539 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111850168 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081804601 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10374696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088183928 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108143727 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092117463 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102602828 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089329687 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103490983 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081984164 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086019614 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108764364 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110804662 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086518106 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081455071 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108882673 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086767334 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107578612 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07984729 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109625308 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080733558 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111433189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085558448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.1081585 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086558324 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11428472 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090332628 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116445425 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093745168 seconds)
  done (took 6.278569982 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09531421 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105506553 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086131937 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103586795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087579148 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114712742 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089100191 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108673101 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086888998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10399081 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086804546 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111236577 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086916889 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109613369 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086892111 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110108441 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080189616 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084958192 seconds)
  done (took 2.600475657 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086456621 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080760273 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110441299 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084435824 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106108465 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08562839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102775088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082189876 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103948789 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084445283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105647285 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086219656 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104698843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087705877 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083884301 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106476993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086274082 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103986397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084642397 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10157276 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08669904 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103985138 seconds)
  done (took 2.932384421 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097974557 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.134304148 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098681187 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.148703985 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111128922 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.088311285 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120560723 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089347782 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129945194 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088090077 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109800399 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088769793 seconds)
  done (took 2.166991733 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105322548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138257018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08154575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104700218 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095059753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107529464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106215663 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085971929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124092951 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125699557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089710435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125226238 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125129265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100697566 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120409857 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120464434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089316143 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111310826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084935619 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133706467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111717411 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125636579 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089500859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111543491 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090157168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123310969 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125527383 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124418397 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090194118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125547129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119792776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09035433 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125262094 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124734708 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086815921 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125002789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08949103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133897211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120347397 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123189322 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087921397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12016291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125804192 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095599017 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125792078 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111001822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097077706 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111820078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088994011 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140376877 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121235105 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123478393 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098662855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125973397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126681321 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141935465 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125149076 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123439938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098954577 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125078469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123376303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098986665 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12382048 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125817662 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120576595 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096854328 seconds)
  done (took 8.303623739 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120561317 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104191467 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085530866 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120658326 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118909047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108899781 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088950971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112312411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090360571 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108465608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1588925 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090248617 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123608399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123437613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090081269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112361407 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09054109 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123892742 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108822952 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141081409 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090157176 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124586595 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123837147 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123844707 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103897337 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12169946 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11222977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091044439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112465295 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090162104 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120249707 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089873171 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125125653 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108623704 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101678203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113262252 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111780209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097250212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111605255 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09893236 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124011975 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134989235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111985683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090459941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126170571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111756329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089918457 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109781218 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090172053 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10916957 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124454949 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104258299 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125081083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121769451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085805299 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10768521 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106743872 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086390805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106634438 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09515107 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118467524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10712121 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136143864 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086136977 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107611199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117945621 seconds)
  done (took 8.101716591 seconds)
done (took 154.438545307 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100264652 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140435604 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100368384 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170872768 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081442722 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137913976 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114660412 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117324476 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080949446 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103139074 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081543076 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107250665 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147018337 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080570881 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10283161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085273506 seconds)
  done (took 2.61778564 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177897238 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28557826 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101393253 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109679402 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087081382 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108420819 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088538878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114392209 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087598711 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.120468842 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088032119 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110421283 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.097566747 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111196028 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086965974 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109572438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.119658308 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090907776 seconds)
  done (took 2.972061486 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112718352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146798453 seconds)
  done (took 1.13795788 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116782325 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182479838 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294907451 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.396798643 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110057868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125729636 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158453955 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100868099 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.222330718 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104624012 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12629565 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109431077 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112589736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115038238 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112087116 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087439785 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136689565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089226155 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11001665 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088937731 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134379795 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109317747 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093060782 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116841322 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.190764127 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131053031 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0939373 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115653138 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093728314 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115396487 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097905591 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130237964 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129946065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17421258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12026554 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170110553 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122228713 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091698409 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115350274 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092331326 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119533276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118763417 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108226302 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113908039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093154632 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123188201 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092580789 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115468909 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.12168112 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101606159 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123721972 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.097224099 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189930128 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101086984 seconds)
  done (took 7.831710708 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790331246 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151757925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086253646 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.894298491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146084734 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100009331 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791726406 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131227757 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240216322 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.787080342 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126793464 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123609522 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207298083 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.272062332 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.124265115 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336103077 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.699303916 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100848742 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137719058 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.149353086 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093958212 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138615316 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127457747 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450835663 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087590998 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109148094 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092173905 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122176076 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160864539 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108900359 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091253951 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200634834 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270426735 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180701589 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110902893 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085416714 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107436243 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168614874 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27297867 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196653276 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173504218 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104949345 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085922575 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122046481 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130389995 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083610132 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161940737 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195806593 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174346869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090054858 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122923314 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11648797 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098534515 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182876561 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084714852 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336690889 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342112 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085887609 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118071365 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105956136 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273839572 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108372043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203254344 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135945255 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214751502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086328794 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833710994 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166551499 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084355386 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119535312 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116054558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092597891 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121079502 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16849356 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390934667 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123640083 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092111501 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107906744 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207787276 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085088794 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108704404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164404368 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110069829 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095796213 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125330721 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123485573 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170785986 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.25067625 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124546967 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096321418 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116061483 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121818864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088689414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214303802 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221153874 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158832419 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.216290044 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12342803 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16423596 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187595986 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099159436 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169570031 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117247265 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129230792 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099054864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217185071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140541004 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109399235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093093584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11751872 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.144162268 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089931446 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116864695 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170677548 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482182349 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164303895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106615299 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090194921 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119070849 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162395581 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117816227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244741997 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119711304 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168427557 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11629537 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083763135 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11793148 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16426486 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123644793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095976572 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122372805 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117498343 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249518505 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22322346 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102748028 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242245917 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178306422 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097836051 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195941825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09616321 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167039069 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119860263 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120330851 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08883387 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.828724279 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122671746 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095627472 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11455165 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.193249388 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086915296 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109210067 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086623123 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082691626 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.845785687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11177118 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084778991 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087431447 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120243529 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117214704 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093168253 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115050989 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162690088 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236641298 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122743949 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095147412 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10877532 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161858493 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087766209 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108996497 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087802508 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108766762 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09732076 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113586836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088283352 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1724018 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182519107 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198619833 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580283375 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085607107 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110058012 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231448775 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086629579 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306637017 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117297216 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204800082 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190589008 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08421717 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337407813 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168582665 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200678679 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088569468 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195853742 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084224469 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116533489 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166372336 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085639346 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117806981 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158931295 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126677644 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123681087 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.124499983 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110735021 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233118244 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.081970434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193029236 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089021076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121801708 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30793129 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087088555 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129734711 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161510598 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11407788 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087165619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.742291443 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109948556 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096347787 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120718748 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225680564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165716354 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116962843 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094106857 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123509266 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161712833 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236717618 seconds)
  done (took 43.939455606 seconds)
done (took 59.368821794 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3044265 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258106007 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2900023 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189647139 seconds)
  done (took 2.018710374 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175549052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148792528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120822228 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105792233 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149389359 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08387176 seconds)
  done (took 1.68582591 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.430414395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.380938483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.306319301 seconds)
  done (took 2.024664286 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246788643 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271778851 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321733462 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.425920399 seconds)
  done (took 2.273745091 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.201107722 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.103105257 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126671147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143068441 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175680913 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.175717816 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138080383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146994548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104208564 seconds)
  done (took 2.26618144 seconds)
done (took 11.17455107 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125185028 seconds)
    (2/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.2708901 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.199414018 seconds)
    (4/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.284568848 seconds)
    (5/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096672696 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.24883855 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.127639303 seconds)
    (8/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.22594772 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127465076 seconds)
    (10/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091679947 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.180898525 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.154380982 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.163971837 seconds)
    (14/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087465192 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122686029 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.089862836 seconds)
    (17/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.156140592 seconds)
    (18/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.218052315 seconds)
    (19/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.237004794 seconds)
    (20/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138666327 seconds)
    (21/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212354322 seconds)
    (22/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.218570707 seconds)
    (23/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173091546 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.191833211 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.209630249 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195006799 seconds)
    (27/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099085813 seconds)
    (28/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.121893649 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114335831 seconds)
    (30/286) benchmarking ("sort", Float64, false)...
    done (took 0.169122816 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.167880805 seconds)
    (32/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117671598 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182161434 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095669892 seconds)
    (35/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112941371 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.139035111 seconds)
    (37/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072595685 seconds)
    (38/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096363995 seconds)
    (39/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194301174 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122565874 seconds)
    (41/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.137864661 seconds)
    (42/286) benchmarking ("sort", Int64, true)...
    done (took 0.217613439 seconds)
    (43/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097735827 seconds)
    (44/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.190649897 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089883198 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114968655 seconds)
    (47/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11812329 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109636457 seconds)
    (49/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.106465846 seconds)
    (50/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085830123 seconds)
    (51/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117988038 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089219674 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107900623 seconds)
    (54/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113341212 seconds)
    (55/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137271211 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091949191 seconds)
    (57/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.105877508 seconds)
    (58/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191861537 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116929651 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119629507 seconds)
    (61/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092043417 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120184076 seconds)
    (63/286) benchmarking ("sort", Float64, true)...
    done (took 0.226849886 seconds)
    (64/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.206498529 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111821055 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.159765527 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109902535 seconds)
    (68/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.155267615 seconds)
    (69/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163223716 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096623799 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191567021 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.144602379 seconds)
    (73/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073372474 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120119032 seconds)
    (75/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210554492 seconds)
    (76/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.086270122 seconds)
    (77/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.185158729 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.106867698 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.135449553 seconds)
    (80/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110581736 seconds)
    (81/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184443725 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098113122 seconds)
    (83/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.121496348 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089312334 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098058504 seconds)
    (86/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101968659 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138914811 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090012601 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11372898 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.150621706 seconds)
    (91/286) benchmarking ("sort", Int8, true)...
    done (took 0.216025705 seconds)
    (92/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072547719 seconds)
    (93/286) benchmarking ("sort", BigInt, true)...
    done (took 0.244455631 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.184804928 seconds)
    (95/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08710878 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.229634069 seconds)
    (97/286) benchmarking ("sort", BigInt, false)...
    done (took 0.251518876 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089715679 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16934971 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099668019 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121800582 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.099662068 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092158464 seconds)
    (104/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.111753092 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097181104 seconds)
    (106/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118494706 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095170389 seconds)
    (108/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112621732 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090017799 seconds)
    (110/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.096601245 seconds)
    (111/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075688318 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192508056 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083066352 seconds)
    (114/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095494963 seconds)
    (115/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.182197373 seconds)
    (116/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.073864327 seconds)
    (117/286) benchmarking ("sort", Float32, true)...
    done (took 0.226781137 seconds)
    (118/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123269118 seconds)
    (119/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.153912936 seconds)
    (120/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181176781 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 0.179913408 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11916183 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07505949 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137352058 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075858704 seconds)
    (126/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.095081142 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.232859048 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089988345 seconds)
    (129/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176656366 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119935522 seconds)
    (131/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083808279 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113755845 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096059985 seconds)
    (134/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.146140326 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103557316 seconds)
    (136/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.095204118 seconds)
    (137/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071481402 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180114962 seconds)
    (139/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.147704656 seconds)
    (140/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092352086 seconds)
    (141/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133028668 seconds)
    (142/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098606339 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107849274 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092173932 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.108093276 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084841005 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110936948 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088996165 seconds)
    (149/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.100866425 seconds)
    (150/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088547674 seconds)
    (151/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.191268604 seconds)
    (152/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.146684194 seconds)
    (153/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098438174 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139931576 seconds)
    (155/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074964449 seconds)
    (156/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123503385 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09620571 seconds)
    (158/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121650983 seconds)
    (159/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071769432 seconds)
    (160/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111090295 seconds)
    (161/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092415241 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178491439 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08448702 seconds)
    (164/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105970675 seconds)
    (165/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103248492 seconds)
    (166/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122221798 seconds)
    (167/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085981292 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110230387 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113724765 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08877458 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074980225 seconds)
    (172/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177020939 seconds)
    (173/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.155436907 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09223799 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133591221 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098942399 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121053956 seconds)
    (178/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087241736 seconds)
    (179/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133234794 seconds)
    (180/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073062429 seconds)
    (181/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11646003 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089766109 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099549717 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090303386 seconds)
    (185/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160673529 seconds)
    (186/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.133315891 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.216225161 seconds)
    (188/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102623051 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111707428 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092689176 seconds)
    (191/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.157884533 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.071761349 seconds)
    (193/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120997011 seconds)
    (194/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087454428 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.101067463 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099558875 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120654019 seconds)
    (198/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091541245 seconds)
    (199/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117044741 seconds)
    (200/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073330554 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109645304 seconds)
    (202/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073563474 seconds)
    (203/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098495341 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097879657 seconds)
    (205/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096091206 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075712228 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110514599 seconds)
    (208/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.091967381 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107910647 seconds)
    (210/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089922167 seconds)
    (211/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073124555 seconds)
    (212/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.098381894 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085094298 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115162063 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073750877 seconds)
    (216/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.096021183 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079038467 seconds)
    (218/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121328405 seconds)
    (219/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.157399377 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.104112312 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.072750467 seconds)
    (222/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111071188 seconds)
    (223/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089744125 seconds)
    (224/286) benchmarking ("sort", Float32, false)...
    done (took 0.174735345 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073050709 seconds)
    (226/286) benchmarking ("sort", Int8, false)...
    done (took 0.213329935 seconds)
    (227/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073356788 seconds)
    (228/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091107277 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.112778422 seconds)
    (230/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076522746 seconds)
    (231/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.099947746 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.179073945 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085068259 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13514621 seconds)
    (235/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.159264232 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099258712 seconds)
    (237/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113559695 seconds)
    (238/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074127113 seconds)
    (239/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.244665608 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115537874 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091761807 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.203728487 seconds)
    (243/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.082577054 seconds)
    (244/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.107618457 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097290525 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123528043 seconds)
    (247/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178497377 seconds)
    (248/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076493542 seconds)
    (249/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.154528297 seconds)
    (250/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073787431 seconds)
    (251/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112881026 seconds)
    (252/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088176909 seconds)
    (253/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071721536 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.099203341 seconds)
    (255/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07283993 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098602169 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093306775 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116863661 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.11047144 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116630824 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084922399 seconds)
    (262/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155346067 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114206704 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090513528 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11004287 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146289695 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.191215668 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123220941 seconds)
    (269/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.08025155 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115910527 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090194201 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111486492 seconds)
    (273/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08989555 seconds)
    (274/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.097015313 seconds)
    (275/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.07227101 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073551018 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107634072 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073232887 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115442927 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.087021418 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170778808 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133105002 seconds)
    (283/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073593748 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07276093 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132599429 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075493532 seconds)
  done (took 36.593459805 seconds)
done (took 37.507092804 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098144496 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15041998 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095455752 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137809932 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097762865 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12514316 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117326215 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097310512 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122172496 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099091129 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.120993245 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079417763 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119138515 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095586109 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.119649268 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116127456 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121939954 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.091344268 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11132838 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086600615 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.110825852 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087857289 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112624594 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079376736 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119105628 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094341147 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114710946 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095315628 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111977008 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085498592 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110076 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.092133978 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109246586 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.098244902 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113862639 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.088027648 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119466878 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093875859 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112942076 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087840198 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116794094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087535084 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11448367 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092351955 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112644021 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086460725 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111917831 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098459458 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140995406 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088805985 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117161502 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09485538 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118595416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.091188002 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110562936 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087770386 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.112576175 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116796952 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110608716 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088977694 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116902897 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091154549 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110763755 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086758085 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111841158 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094145268 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119885795 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087191637 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118140102 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089772587 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083623144 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111378826 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086344335 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109520526 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093770927 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118935061 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.083091236 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112284273 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091538765 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11367499 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089702476 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109447821 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089342431 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112106084 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086698053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103209448 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086213858 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09026473 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110933655 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087071729 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114639331 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090987277 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113944491 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.095778349 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111372672 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088098015 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112200417 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088412062 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11355015 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086237549 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107009755 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087026321 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116278306 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085631006 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.112521595 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097898761 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109557613 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092566153 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112124916 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087063368 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124832716 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.095595359 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11257971 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089066458 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108789113 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090562499 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110247601 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085213575 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109651601 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089418575 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08873269 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113190192 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086260348 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114390146 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0985999 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108285451 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.10407473 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110797417 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087455127 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114296937 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088434099 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109271508 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088064468 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.107979062 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08648481 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109873142 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09036719 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110672048 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087779929 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087288415 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112178297 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089798108 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111896808 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088067653 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109909704 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080942798 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113128133 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086707875 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113803061 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089338886 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111683236 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084054189 seconds)
done (took 16.519473417 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095545883 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186012785 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146347005 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148938939 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.146091084 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105141878 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12365586 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14345149 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096514503 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141407226 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145238663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109197403 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150047422 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121254477 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129744696 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093809492 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119112555 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105118401 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153244767 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138464775 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119801913 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120322943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.13961169 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138135927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093372821 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139791558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121910142 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094593625 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122578989 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112980756 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135346055 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097902257 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121934116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132093023 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105157222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11889337 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105140703 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115151241 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118778903 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09460095 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133606387 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106824709 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116135359 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127477844 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094441329 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123311883 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093602039 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118619691 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095915336 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114343311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100351911 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139655116 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116850898 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09662171 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119586038 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119438207 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.097098809 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122847963 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.097189693 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122572585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119964743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097299439 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124190887 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136474205 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094427806 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121688098 seconds)
  done (took 8.854109009 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109653106 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146141116 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126390995 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101153737 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122006876 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084017039 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108629856 seconds)
  done (took 1.766944434 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085885066 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139183213 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117950673 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142859101 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13755559 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121408106 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128854307 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.086132311 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135245509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1223767 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11304531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166972395 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086547275 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122359487 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.145848737 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085826522 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144808488 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086135893 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118334748 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142468036 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090208794 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131952913 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.100694334 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112065476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106372123 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11330728 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175535891 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096767148 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10959906 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091421138 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115795827 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179120054 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107064871 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121815956 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083871813 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139647036 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133593566 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08979809 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133632766 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090642067 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132216222 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093176298 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117512886 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090725213 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117701197 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100735001 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122189283 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118998252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090988245 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140356469 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.099473882 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132855993 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087190988 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114702171 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095343797 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116860716 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100473404 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115382786 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138469592 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091783303 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137642415 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114614625 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131351849 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137085956 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105413391 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133522723 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106530451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115946964 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093341782 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120591532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137578969 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089777407 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122007179 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103127795 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119678115 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113588661 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139026992 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089829821 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124247224 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090562353 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113960021 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087050686 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127573018 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092320728 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113167376 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103046087 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123222831 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116043269 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089935557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133976844 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090281142 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122010876 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097002423 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113954077 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127495289 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114169891 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121620353 seconds)
  done (took 12.15358725 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087662753 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.088020133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117541234 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088674899 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113238786 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088421133 seconds)
  done (took 1.565385537 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116741112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115922159 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10230034 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119194676 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15444669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111895027 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136708622 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09885785 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132241925 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126729861 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111001044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138094292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.115594077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119796727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136137755 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094031712 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13718221 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091486652 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126910793 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090948891 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1301586 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094230924 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116304249 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108433053 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119989592 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119423043 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094140196 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128403074 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102812365 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122676041 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09472405 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120682403 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09481751 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121825697 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137632303 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095380618 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1147798 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0965433 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120604044 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094774174 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137723295 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091491274 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125008404 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096638953 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121961895 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119832291 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097024179 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119940647 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111027631 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12229982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097552306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119925251 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095441952 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122541769 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094991879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121800309 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09719942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136616079 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118622672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094836227 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116490986 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09517585 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122767293 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095301613 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120603875 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097230015 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120562365 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090586208 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116977095 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093388215 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121941557 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090311519 seconds)
  done (took 9.117779466 seconds)
done (took 34.424136561 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671106874 seconds)
  done (took 1.649117908 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.81994636 seconds)
  done (took 1.799568022 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.911195778 seconds)
  done (took 18.917627073 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.466530288 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.556053268 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987280831 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160601385 seconds)
  done (took 3.149210329 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962526262 seconds)
  done (took 1.960190261 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293187203 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234469631 seconds)
  done (took 1.512457008 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.813174979 seconds)
  done (took 1.809201819 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.510447775 seconds)
  done (took 2.502734845 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339615723 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196428457 seconds)
  done (took 1.537992232 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568028976 seconds)
  done (took 1.563743728 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.758084285 seconds)
  done (took 15.759306428 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238089024 seconds)
  done (took 1.248263031 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291843488 seconds)
  done (took 1.290702912 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.616769982 seconds)
  done (took 4.617441315 seconds)
done (took 60.307664276 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097319105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099984319 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126292986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097525433 seconds)
  done (took 1.416616761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100854342 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120538141 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098157331 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120210793 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102407242 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12113235 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09337948 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164111454 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120391466 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096106969 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120208019 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093799768 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121884216 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094885134 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118106969 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095899986 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124362641 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094877289 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122019462 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095317751 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117575192 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095090766 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122766856 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09228528 seconds)
  done (took 3.656014941 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097684844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091896521 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119848047 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091700171 seconds)
  done (took 1.410087652 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100706776 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133747011 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109581185 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126088728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107324413 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132253638 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116128112 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089651449 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091917488 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126096752 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091024255 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136200706 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132436344 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085182454 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128910486 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088791513 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113094359 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106754468 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12576303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101002695 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115578308 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099305292 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123638362 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.104890698 seconds)
  done (took 3.696246286 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171169329 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128286912 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141166479 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.099145033 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16518928 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142261402 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088804729 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141722458 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089044754 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128458564 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093127979 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166640337 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125538057 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092972991 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115516891 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.095695784 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125169933 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.098977513 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118286436 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105286387 seconds)
  done (took 3.444177388 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097502113 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115922663 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086570059 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088427203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124144518 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092585902 seconds)
  done (took 1.620379796 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086711611 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085399772 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111705321 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08501407 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115636009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08620849 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084788408 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112054597 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085328167 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111680076 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085006273 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10958868 seconds)
  done (took 2.175910251 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.3772553 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115369011 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11485304 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090841814 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094756926 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114210554 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128352153 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.088909571 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146391648 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088525723 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114706735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092061106 seconds)
  done (took 2.578311825 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203401027 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093455507 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258933119 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348250992 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153863466 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162596719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27870953 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161053609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180228707 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135690637 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190685948 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155203823 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151411981 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175409529 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109592759 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173289905 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171924624 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196889239 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147068586 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20153315 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160468332 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166010441 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175502587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149041493 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135686684 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127434936 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118024034 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124533837 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168476712 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165934434 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171136721 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14618813 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10899087 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222677329 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208568864 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175401144 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30310199 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130588024 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.188718334 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.178729533 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246689083 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111414547 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190084161 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152211844 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128112735 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178504519 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155106529 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179180393 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101885991 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138580313 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180411313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172349864 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175806379 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136623216 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303485679 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143189492 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144007639 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180852842 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182091957 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187633996 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165284516 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119224295 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183528874 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178645622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177473867 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143380771 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164310046 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095857005 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172509903 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190125413 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17310919 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161602851 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209879723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132730286 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134521084 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16541347 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150292915 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176581182 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158315575 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091838897 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1475687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135657388 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098460133 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184707886 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120694373 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199475377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132966677 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186063648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200321258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155241818 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129537637 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160283492 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162693007 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144538751 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.117765722 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115242272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158402942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15481878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129648615 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126910428 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140381333 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126630854 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149873813 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094009553 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1569676 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131963056 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164681711 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133739201 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126263343 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162648957 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146489016 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127153565 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166432513 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181167612 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130074498 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130824345 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191167894 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158939728 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106832195 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17060547 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182499378 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163968821 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135469864 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166081249 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190298827 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139709851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185844268 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110504362 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131229254 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.148041673 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15666509 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154974947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126854598 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127677662 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150714428 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187588664 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123772218 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106281177 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170801404 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124805876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098809138 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140064104 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132443738 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112672714 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144349702 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133805115 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15281077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129631328 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150710825 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155878989 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140627252 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188002872 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130903053 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156826131 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117298309 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118208493 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177546433 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181411615 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098746688 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222553984 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168785627 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195231086 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161526398 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129443242 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175789167 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099156059 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117823668 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162230886 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129344371 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158853155 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179126509 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219029431 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164028788 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149453421 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118727385 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163233826 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169570459 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153464629 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143786288 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159959531 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164522799 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091794446 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123134444 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124779991 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112230328 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129782288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102750985 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205323907 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161810881 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186130567 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15846975 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112159706 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177823049 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123871397 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162996579 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170904026 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136638075 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179557454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176835866 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164367544 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11214614 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171667195 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119106911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093823793 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131249736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163384465 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102148288 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132886458 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140225162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178825443 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170764598 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148225398 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198743154 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163267161 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187473935 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121241264 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134139018 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166976373 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156068663 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180819351 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105515534 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155043102 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174407991 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140244876 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186140717 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159215959 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165252477 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19441624 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15532044 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128225773 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118597668 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161649143 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138940818 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164113123 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144182639 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104870547 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151581475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132114668 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094647409 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205363614 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11265865 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175292649 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154104853 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1697925 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124125556 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140765206 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15879618 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116083888 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116221941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167339523 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183472104 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142684661 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1556804 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170302212 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099896711 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304022692 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183474525 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179608973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134156541 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139671554 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158916652 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1286421 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160047585 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174581532 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14197328 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177272252 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15584087 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140739612 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104736626 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144548535 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148114207 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119743272 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129859847 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151435696 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139923347 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180802808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140535558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127137449 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161554694 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146533881 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146509776 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111101286 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196321481 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155935994 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173026311 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153876789 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165347003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194414431 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122648591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098528146 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125209845 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176711913 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101998087 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156849189 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182647569 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222551029 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156271403 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162383639 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107408058 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118786223 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128041754 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147585588 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223425432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111967552 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131376352 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184989617 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149113423 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098835848 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159642794 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309927247 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115206625 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171264649 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115620266 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273772532 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095926551 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127832714 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155945528 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166787609 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10846539 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180150414 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162008612 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141444293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12886756 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136449424 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187574508 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232015044 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16818964 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17271057 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.111606063 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154567203 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160415298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17266836 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141796252 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141386387 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131656039 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177402821 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183662946 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1308838 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160548035 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160406041 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159136981 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171341298 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102341752 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224448723 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099742476 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162840378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13861532 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12093665 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126011252 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208720358 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104258223 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171289068 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155985029 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131301791 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095600382 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148793588 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155627415 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13829322 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098246089 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175064659 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124019555 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159906956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147338116 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12846975 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151134654 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114172239 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136594796 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140457835 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143766549 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104558973 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167978739 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178588829 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129018446 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17323008 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174980143 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160879965 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15566994 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113652063 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664316576 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097265957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177790197 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145386924 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180735128 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145749132 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164007147 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158891339 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118908478 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165185853 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146443809 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218749521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164227838 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155293738 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099049765 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143519322 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141610876 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128810788 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119628558 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162712648 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138822559 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.106164398 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156090405 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143246889 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142219098 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107754057 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179865752 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145242458 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178414277 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177004135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135916895 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16331467 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171755261 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099195444 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157084794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167629047 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140551277 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148589166 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.099769603 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132211675 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177582805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092601442 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157321761 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158671608 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158684304 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16115244 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13222504 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128445514 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140440105 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159764886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127823233 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.12318548 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155370047 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130014657 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097165812 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153066828 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156367357 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155629047 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094237289 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169467325 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177885208 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094645223 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13164066 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284835025 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155194265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187050443 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150625329 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102884643 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140703675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153897558 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151632154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157654929 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097498733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130329465 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099096497 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180525075 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151273347 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153328658 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184263035 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15762392 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197095877 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103885498 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262933342 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137948463 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151443383 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099630283 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127816309 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141148609 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104119751 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141655937 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188668303 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176442405 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150499515 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.140707456 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0960342 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125216275 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102820538 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160346736 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15267062 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155269527 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112484439 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116399155 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140482683 seconds)
  done (took 74.751847712 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145752442 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.164623102 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.154344099 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193502755 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164152442 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240379097 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203948292 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223955357 seconds)
  done (took 2.583508635 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098354297 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156118314 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137332885 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122576888 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089760753 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32973927 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136244159 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12130195 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116865008 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15918774 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090544133 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.530481746 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120767404 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.121497118 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.085057281 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.113298465 seconds)
  done (took 3.618017926 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.235431388 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538024243 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.000690985 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244620395 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.224119115 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.151088662 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.747663606 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.156606934 seconds)
  done (took 12.396305012 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11945709 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138075756 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132700542 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161141147 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116540493 seconds)
  done (took 1.772591358 seconds)
done (took 116.11579012 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093285199 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123417008 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095383299 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124041544 seconds)
  done (took 1.524528724 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105680106 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078844564 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10958451 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077272189 seconds)
  done (took 1.467189506 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41982976 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108125021 seconds)
  done (took 1.66364406 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113655804 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132545286 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103586438 seconds)
  done (took 1.451136013 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100851958 seconds)
  done (took 1.205137224 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09530117 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096574977 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139231969 seconds)
  done (took 1.4359998 seconds)
done (took 9.851397658 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110101474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.429990267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383404319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135673542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691972792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406435285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045887138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12539144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163882478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116738209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106165852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69673816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038370761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371500487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022225096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369929739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670822275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119119721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095597754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119117805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.994490447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116121046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089245699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118865042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669592464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421210857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089354608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.384058324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087914171 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12262169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375000423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116765303 seconds)
  done (took 16.896301521 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094461005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176968419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096588795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118894482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092549998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118776885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099106076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130966632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180487461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08890891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135350877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088002969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123515345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089464802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137945035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088758949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119161983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091951077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12361615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090900293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136110304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088340633 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118898082 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091882992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116044185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101396693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088419023 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130579688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11768321 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095338593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090971071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1183019 seconds)
  done (took 4.680195223 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139395804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185331969 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126223897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123805712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167339913 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090935766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201258316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15528155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182321056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122869292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112734926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117203409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123754793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117925587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109570021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11719936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.092522253 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119812219 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095856461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119559812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10912211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116780399 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090729045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119544623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089154782 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130284747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090055795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130485761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088895112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123313327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091662159 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116959057 seconds)
  done (took 5.027398559 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096709236 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125139998 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105127897 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133721676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090876741 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123593795 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097516532 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119045622 seconds)
  done (took 1.996114499 seconds)
done (took 29.704087452 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105915391 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093429431 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130799211 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10045374 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126570543 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102596068 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116747381 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099820552 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.129917972 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096726294 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132350119 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088259865 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08932821 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115794455 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101414343 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122366366 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103580458 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.126503631 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.107989664 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132611621 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089452448 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129540498 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097614718 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13799735 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108113463 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.138017415 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133288982 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09533923 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089049573 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120015516 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.108346979 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.140019527 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09150599 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134298358 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095380963 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121811954 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089208803 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.119572735 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103575443 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128262 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094032922 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128120375 seconds)
  done (took 5.813594803 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115487432 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161133199 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088597795 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118334266 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089332548 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156806132 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.151933241 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089260734 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089942584 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142198044 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.14434736 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.090084857 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118668211 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089871607 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088019202 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.120122706 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.112800408 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143024783 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.149801914 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120185288 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163260013 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.148709654 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.125067437 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142788889 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159434829 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.123858416 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.139476062 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154745283 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115556712 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117445071 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.118955648 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.150934813 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088451119 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118185784 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.128639778 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.154359563 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145937416 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158469884 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.12051966 seconds)
  done (took 6.068124607 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09846549 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103103064 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139005065 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182794513 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125729833 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.131879409 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098239805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136547733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104590243 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118029478 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090566895 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148183639 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10547449 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126850363 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089835441 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133255783 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108655861 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120612143 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09386816 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138540806 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.106791058 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131822688 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101014216 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130147089 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089238512 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127548251 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091580073 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134161445 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.093833368 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126434783 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09280345 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122890289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093136666 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13008275 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092930768 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126208159 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.111336091 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127798552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10058366 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151017372 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101521843 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123398868 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140021415 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129171406 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118803755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095951322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125704796 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098141498 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.088153952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137641344 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0997635 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118802152 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133455805 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.089762149 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097253542 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132630194 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090458335 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122413759 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.097222099 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12505913 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.108730726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12274315 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102380474 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119436809 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094852156 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118754906 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089200135 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12389399 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110887933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122209584 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128033778 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118809689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094875332 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126988433 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094687868 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129675834 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088962179 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131998882 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099681825 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12354637 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099832842 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092441317 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122003005 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1072437 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133169969 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126191942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095176587 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125720211 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093649243 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119331838 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103779684 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.120933006 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.093468981 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105364971 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119400199 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092833552 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125323799 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094521368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118670473 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101985518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124275928 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090023152 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129817543 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089992049 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122687851 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09903529 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123287204 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.08934237 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122916787 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096449804 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088698528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123187487 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094134753 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121463083 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103066459 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127090604 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092556401 seconds)
  done (took 14.348736933 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234481711 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216237872 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.193377708 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301283652 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141768253 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116491891 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213896337 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16547075 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.08982243 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16098538 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175478731 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186493401 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175122898 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186535084 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172627239 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120506537 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108872486 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171871075 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21705813 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.296676566 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.110570914 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134284295 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162838585 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160789652 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108659217 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136400131 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112710823 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.140724376 seconds)
  done (took 5.847540782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106173301 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156286018 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097840632 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145516927 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147198179 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091323676 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125832366 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.090953735 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102993251 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135163582 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121903094 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097755062 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.12581254 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099738254 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120032063 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.099172183 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130453428 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09990123 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123572103 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094506454 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133908718 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10823317 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125484435 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092428453 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136446874 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092385769 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121913537 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141824508 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.098676474 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146786173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08683771 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.129497338 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.104987846 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120278215 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092974973 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122778388 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09268449 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091636837 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122110803 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087163314 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120305953 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081906767 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122179639 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1050065 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126748139 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088701676 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12567218 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094536069 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128214447 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086413172 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092069268 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124208498 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09475343 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132088771 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093514396 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127404834 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094087847 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.123034351 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099259964 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.1236951 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088351945 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121578474 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096740022 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.125473816 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098152823 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126817278 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091297975 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122507981 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096159477 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.09686507 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122596418 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098346015 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118797026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091644964 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130739694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09863545 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125502782 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091682834 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124119419 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.08948574 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079107136 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119754473 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077408298 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12486017 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089025673 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12153674 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093186184 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125314283 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106246297 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129095305 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097559861 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120857053 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093877407 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12467126 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087615942 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125084737 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107965456 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140065592 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088500644 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118233334 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105661674 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12159699 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.08861861 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082689718 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132184007 seconds)
  done (took 12.744206727 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131502122 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169759182 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121319915 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109457985 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154467454 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162319678 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098660079 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097718704 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121903543 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108610498 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124657415 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099720081 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124190432 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104692083 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162557285 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130225183 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091680827 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105061494 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126906564 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17384031 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110359918 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159103101 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.160606832 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09362318 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126050798 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.158144897 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.133950639 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134751754 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102851934 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162475689 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135181182 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.134338199 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16329923 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126310557 seconds)
  done (took 5.569915848 seconds)
done (took 51.495644083 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.204844177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.439357335 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.200621128 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.216993201 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.224416849 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.236462619 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201576429 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.393298372 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.940925275 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.193101883 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.202426929 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.199508817 seconds)
done (took 27.789125997 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.292295386 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360825879 seconds)
    (2/2) benchmarking "String"...
    done (took 1.533068874 seconds)
  done (took 4.02724161 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.205252936 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.201710377 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445793588 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.202661854 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.202405072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.21829727 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.201067462 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.220991257 seconds)
  done (took 15.825755689 seconds)
done (took 25.485101343 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.270762849 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.404059097 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.454579477 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.21944328 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.2033872 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.201266811 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.206085633 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.245505722 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.202846962 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.203036752 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.228525071 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.474450415 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.224307779 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.595770069 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.201888228 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.212437447 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.219468724 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.438633972 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.208979685 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.190245986 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.206870872 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.191029825 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.217237993 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.240848037 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.210081525 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.214916878 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.214971187 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.203830225 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.402049653 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.211238427 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.24646146 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.202645154 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.217484612 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.206387443 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314398333 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.222698296 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.395732341 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.210427513 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.194570099 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.217071138 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.385966093 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.604957706 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.203419144 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.205794773 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.222744207 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282256521 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.19747305 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.924696959 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.20715137 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.211398733 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.230073022 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.576118304 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.218537629 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.216617988 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.210732361 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.443869125 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.232259448 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.234432276 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.236184363 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.216959953 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.205420824 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.20636384 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.252525157 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.213458208 seconds)
  done (took 143.620650094 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.20539978 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.21031033 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.209985427 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.270272462 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.209528255 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.209365112 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.206508129 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.206565148 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.209566607 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.211895152 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.210107207 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.204702149 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.210575739 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182243425 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207956477 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.230024635 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.209997344 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.207292925 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.227564298 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.206337422 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.209290361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.20992085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226442612 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.211108671 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.244205329 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.300009462 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.247461607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.232529753 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.204066872 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.206663691 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.25424163 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.27275258 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827945046 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061419877 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.21943587 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229560106 seconds)
  done (took 80.540134061 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207785441 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206554746 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206102789 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23798941 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205774809 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.760613955 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760309278 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.917834196 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.624430632 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.55503532 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471031354 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20614928 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301601532 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220712369 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206662836 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221792905 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233954053 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206986202 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205689985 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771356205 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222564523 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.265384893 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378380009 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21880345 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237336606 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603105707 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205866597 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236192828 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.724897417 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536932411 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252506124 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207560258 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205234331 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568767924 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317981818 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206586248 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238406724 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205878712 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486029034 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205273284 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205290971 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208128621 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.866768887 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205639462 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.750089988 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205500547 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.138968573 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208808449 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205111738 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.323223481 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.88814665 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.222842388 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.202843073 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203790501 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207664252 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204548555 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203697184 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234115305 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.203036499 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.255924626 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314824471 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204591594 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207235766 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234994041 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203538479 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.377701044 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204838228 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.230831941 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269844094 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.317399676 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7510455 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208853558 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300232819 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323399702 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205332923 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203935987 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205606245 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205187892 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312824878 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205384806 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.606566442 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373886513 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219567212 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.48094038 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.304103292 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204879728 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.591100994 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208894351 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203599414 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92476448 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299768404 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204440471 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204594865 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204793882 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.60428532 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.7372346 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.427311871 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214065371 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.529580453 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20891234 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.609870862 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.720451751 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876877869 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208335442 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205398388 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315223026 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.373055945 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219919441 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205073465 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.448071895 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209613003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264316611 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203941764 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599546767 seconds)
  done (took 365.240144728 seconds)
done (took 590.535376255 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.905606343 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857387939 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.985457815 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.878940211 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.853335015 seconds)
  done (took 10.616057053 seconds)
done (took 11.75123436 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386728186 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385662267 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749100006 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387526233 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237211853 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402979636 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368694346 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225507304 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.307129246 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282144907 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30482896 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255222979 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239539878 seconds)
  done (took 18.66688642 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528681862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.206848081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283261239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540601401 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244851361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.561143572 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40777024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.22238817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.40760704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221363373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224105985 seconds)
  done (took 17.984312438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539682361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.206094608 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28602585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.570985048 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246150542 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545118616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413806402 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.220349085 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41244681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221899099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217937805 seconds)
  done (took 18.016222706 seconds)
done (took 55.803520501 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248472132 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.369425616 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229157185 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219208135 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215092626 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217166895 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220624758 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215719453 seconds)
  done (took 11.073707175 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212782007 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214403987 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213233652 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213697582 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.21543597 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211825402 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215319814 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211258649 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211163532 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212548115 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213916103 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211525173 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210282753 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212685659 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213129667 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212368719 seconds)
  done (took 20.542456798 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214412114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211463232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211881587 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21293712 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211958733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213366618 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213149817 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211767619 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.212095977 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212026147 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214407279 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.213073523 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212774774 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212650632 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213022948 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.212799615 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212516261 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213285327 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218477538 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.213567519 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213454671 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212433197 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213428919 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213572065 seconds)
  done (took 30.254568974 seconds)
done (took 63.004874703 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.208765533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.22859286 seconds)
  done (took 5.575645027 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.273916399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276052879 seconds)
  done (took 3.690548882 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215361539 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.216935383 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216150725 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216173191 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215416739 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217158897 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.217451344 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216160928 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.216627903 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.215748394 seconds)
  done (took 13.30201054 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217621277 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217232488 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214694847 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216152951 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218136563 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214348694 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21820396 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215568152 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216338441 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214423848 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216652562 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214836316 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218141712 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214622229 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21689638 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215354997 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215497605 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215759101 seconds)
  done (took 23.030243982 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230270181 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238585417 seconds)
  done (took 3.609845886 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345196422 seconds)
    (2/7) benchmarking "second"...
    done (took 1.257203271 seconds)
    (3/7) benchmarking "month"...
    done (took 1.325257742 seconds)
    (4/7) benchmarking "year"...
    done (took 1.31429789 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258494551 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.236061315 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.258269431 seconds)
  done (took 10.134262069 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219637427 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.409899999 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509976533 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791658446 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.218571424 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223044386 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.085075415 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222989508 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226583298 seconds)
  done (took 14.048891417 seconds)
done (took 74.529025093 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.215484621 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.22955173 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.232983144 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.228739316 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.558901687 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.26687896 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.219076883 seconds)
done (took 16.092609281 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.209465386 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.203581864 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.204471717 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.2111874 seconds)
  done (took 9.970566778 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.213401818 seconds)
    (2/2) benchmarking "read"...
    done (took 1.530980316 seconds)
  done (took 4.887448193 seconds)
done (took 16.000480456 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219600489 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218573685 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.219695592 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.217915343 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219408376 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.217329315 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216768628 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217382165 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22102255 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.220101083 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.219225369 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219261501 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220115713 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21767601 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216841329 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217762322 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21975294 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218509284 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217671671 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217265909 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219420651 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221532262 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.218049157 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218762061 seconds)
  done (took 30.391628568 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221055168 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218513524 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220070231 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220788421 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219234698 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221190719 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22046552 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221757169 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220475441 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220953993 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217995033 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.217994799 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221257227 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218626193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221386653 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223828304 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221159975 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218421681 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220201528 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218387012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220830778 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219108421 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218792318 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223315011 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21872727 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217873018 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21952347 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217529507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221220992 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217297185 seconds)
  done (took 37.741622286 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225314846 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229208348 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219980537 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218971062 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.219716034 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220767872 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.219134176 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221012206 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220382177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222532652 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220031923 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219794835 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.219212161 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.219805289 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.2199169 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.220368634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220914398 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22326007 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22001506 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220013561 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220307489 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220276856 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.219866596 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219943334 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220430881 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.222772743 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219185732 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220958853 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221080207 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.220418776 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219963815 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220407275 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220065181 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.220739552 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225524709 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.219051676 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224699852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.226967999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221286541 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22057902 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221188858 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.221004611 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221011742 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.220482294 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219952462 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220669378 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220822243 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219753369 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221040667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.220897909 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.222765886 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.220419915 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.220718101 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.220862398 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.220416315 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220593174 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221241806 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.220743006 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224677243 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.22015892 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219591613 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219770362 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220535299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21951973 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220535187 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.221888063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223291859 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221256669 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220391211 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220154202 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221119733 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219130172 seconds)
  done (took 89.057125898 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220878458 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219133264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.220708302 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217775758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217539695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22037749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219191959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2208549 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217917849 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220676114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222061218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218386685 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218871922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220879795 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221044999 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219278261 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220800244 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21856898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222528088 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221361828 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221265976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219239602 seconds)
  done (took 27.984107593 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219547309 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224174404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218033205 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223420769 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220280633 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223158185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22036331 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222050777 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220854638 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218430871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218580242 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222501649 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220477015 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218362614 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217887693 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220444239 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221400599 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220768546 seconds)
  done (took 23.114416846 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219850354 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21902233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221925718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219897472 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219079985 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223027896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219568992 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22204584 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222041001 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.221332975 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222291753 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221647495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222670662 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218547624 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222753634 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22037066 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222024011 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222616181 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222840657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2202823 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220965408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221843622 seconds)
  done (took 28.011959627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222639786 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222514681 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221749994 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222106576 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220503013 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223474996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223235401 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221859256 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224008924 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222604002 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220659438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.224251327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223837782 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221453655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221491304 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221225769 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223894016 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222914949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224051461 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221405466 seconds)
  done (took 25.595508402 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225132303 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225501618 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225382935 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225428566 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225632511 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225402172 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2252841 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224513218 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225050425 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225304836 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225937532 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225272361 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227165834 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224984195 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225020695 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225533098 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224788002 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225041405 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226359864 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22628685 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225615344 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224793367 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226283526 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226703198 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225842382 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226091442 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227405058 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225545533 seconds)
  done (took 35.464820795 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22657445 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225890418 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223743149 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223966416 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224088226 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.224111271 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.224411397 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.224671191 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226715732 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22432366 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230000303 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226787228 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226564511 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226146086 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225846478 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.227324594 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227191515 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.225713026 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22577813 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224364209 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227353462 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227470463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.226774412 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224336775 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224878389 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226790163 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224950457 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225412743 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228922645 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224748735 seconds)
  done (took 37.923216397 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267885625 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273019842 seconds)
  done (took 3.691001309 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.226096336 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227646663 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.229533936 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226699741 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226509587 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228576889 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228655426 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226705466 seconds)
  done (took 10.970256026 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.229313817 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227907075 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.228473567 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229351118 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.229862469 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228590906 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236641474 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246707508 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230211845 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228784202 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235280876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.236106006 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.233062991 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228044946 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229069045 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23193332 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229244798 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229773141 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229635544 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.229899269 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23019754 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23287941 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232667402 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229181528 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.232122241 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24039882 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23505515 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230518325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22953051 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234683233 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229914945 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228849289 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231372103 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230973837 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231127297 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232645051 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239919097 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252858129 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238407538 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232902406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231345697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228896882 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232059928 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233554535 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233548136 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.231408017 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.232042454 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228659553 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.232274142 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233923485 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.235242421 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231164971 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229119382 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235338365 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233077294 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2381019 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.2500215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234656019 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239194115 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242300078 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.244088888 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254912034 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234312777 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232102019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242330325 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252025569 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240408306 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249098116 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230993586 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232239269 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239584271 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24506876 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256707899 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.232328944 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232684073 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233528944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23451145 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234373645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241617556 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.254386062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.23371253 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234627389 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242820372 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253437475 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233356997 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233418096 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234770048 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.233705167 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235454406 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244020057 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.251547431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.23557114 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234537779 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234890016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235600934 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234618164 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233738801 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234485564 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231538698 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235402834 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2342288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.237417762 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242568535 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234267541 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235413176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243719233 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235132012 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235464774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24163303 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235103743 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235979115 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236187876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240549031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233447859 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238950707 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242243208 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235470467 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237693615 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235358013 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236380784 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245239435 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257371919 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235629302 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236357018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.239754318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245282784 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237379699 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239574542 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236665178 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234535761 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234605423 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238038705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236589723 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236730757 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237725413 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238924824 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233950417 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.236492495 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236458249 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.237425878 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238152842 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237595411 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237348304 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239907477 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.238299367 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.239233814 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244040056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.238150815 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23810896 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237296457 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236007852 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238979382 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238843881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23795534 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238458786 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238903185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238316027 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23855985 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23862393 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239063401 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238730819 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238699069 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241323857 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238391377 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243614956 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.239573186 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237153178 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23997256 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.240030357 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238800904 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.239981323 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237041818 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242880696 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246204003 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240759175 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239731481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243283915 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239270523 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240403031 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239672286 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.243218459 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245835771 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239785328 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.24700577 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.239964863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240096068 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242667961 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240942451 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239987821 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241021574 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.242691076 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246561531 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252694772 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263560064 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241262511 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244489172 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.240649708 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243976789 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24411546 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242532015 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242920648 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240498235 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240607457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239982984 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243848349 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.240124024 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.239364604 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242822756 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242373283 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241245827 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241733738 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241239609 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242882392 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238638013 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243308907 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24244952 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241921911 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239485868 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240945086 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241994453 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243536505 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242420681 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249824298 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239693302 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244389001 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244155319 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243183741 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241933241 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243449206 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244430769 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242064519 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250781333 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258952559 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244540781 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250507741 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260093643 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243092655 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245047142 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244545367 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241637738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246468081 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249552892 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244447845 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243537142 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245465524 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244089609 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244573071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252234529 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.240215343 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.244337544 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245219407 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.24528713 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242458086 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244798002 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244953969 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244361158 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245946374 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244370617 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246305504 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244976348 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244930872 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243814942 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243943956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247829245 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250512755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25118909 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245175939 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247436367 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246112375 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248111338 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244951082 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246741557 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.244936723 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257300701 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.267996862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253046913 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.26326586 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.246301972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252804349 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.264145737 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.24777222 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246490176 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246581607 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247193012 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.245247479 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242597536 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248587833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246865243 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248186493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248705417 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248794934 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24766227 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245912062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247030235 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24623316 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247885605 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246739425 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.248763357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25063868 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249731811 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.246458268 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.24721098 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256853275 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265199933 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249031693 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.247649927 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247368615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247914513 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.24921159 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247974876 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250508217 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253474726 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251161593 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25545089 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249375744 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257029948 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.248113308 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252169486 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254647157 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246578532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.24868506 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248953907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250338633 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256240479 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26677222 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250340281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252120736 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250107068 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.249194487 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249952724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.249007352 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250143673 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.249534371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259412101 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.270660594 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253555591 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251417945 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24662863 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249785179 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250051412 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.249052633 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252556137 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250272256 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249746006 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25004543 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25008805 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250455376 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250169862 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251130588 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248222516 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.250755981 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258182752 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269928267 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254395134 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255395121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258966411 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251409583 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25816858 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26852106 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25157315 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.251237704 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.251317852 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.255400511 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.250948829 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251501501 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.251848278 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253117774 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.2535515 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252341127 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254266626 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252760719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251972344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253042923 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262176112 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272800708 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254284922 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254891895 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251131134 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.250374089 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251466676 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.24832858 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247902855 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250734733 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256856952 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255250293 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252292126 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245579069 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245901606 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.245027943 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.245600688 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247287962 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.245873841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246060014 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246776237 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.245946529 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248539947 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246024871 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.246266601 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248581106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246506123 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255707765 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.24603591 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248130894 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246987898 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.248086017 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.246646111 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24672037 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247549702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248340347 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247843693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249016212 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254117697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252067223 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.249728068 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24723928 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2460472 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.246571387 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248128551 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247572519 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247160621 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248235223 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247240649 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247529142 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249438026 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246122114 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24809921 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247215375 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249034477 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250852589 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.252982152 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247619202 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245855673 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248280376 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248115824 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.247655067 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.248702206 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255758095 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250989926 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.25737798 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.255112969 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252558764 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249624486 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251243386 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.254720746 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247759734 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248726528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248214361 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250177135 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249805999 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251746138 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249925891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257822202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.249369248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.249156491 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258388189 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271015419 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250039314 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.251142752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.252439142 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250161395 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24779209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249705698 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249840179 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257708235 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267864886 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250452686 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251884159 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250378775 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252094991 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253256981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252146799 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.252785716 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.248180151 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.250740883 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250785684 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252339398 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.248530932 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.250506944 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250503203 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254667745 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.256312368 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248800098 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253112437 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251333292 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.252873379 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252878472 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252663543 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.249989295 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249618896 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25096813 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251596064 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.252226473 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253468676 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251454604 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25383135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.252454519 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252139615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255653461 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261178892 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.258179471 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.250525713 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252109545 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.254209153 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254323047 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251774861 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253588089 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253294788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.253452722 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253133109 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253220659 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252770718 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.254545463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267616628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273480354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254173331 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253909597 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256076355 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.254742284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.251773461 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253332232 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255737309 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.256751858 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.260406456 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253205789 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261533009 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271581616 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.255064514 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257341596 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25712316 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.260472189 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.256149036 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255288894 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.255364024 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.260042774 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269019982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254463397 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264626026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280787214 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27316207 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256381254 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254983492 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255165969 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255225358 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.257782825 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255867483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.256565399 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256153616 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255756985 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.256607732 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26006235 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257677483 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258208974 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.256135199 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25555521 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258049316 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.253396734 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.256942913 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256892498 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256616078 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.256294463 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.257926344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.258290353 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269811984 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282008882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.257102342 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.256881559 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.255527125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.261339555 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259743595 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267414028 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26400757 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257278619 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257423412 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.258406712 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257371631 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257881408 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258180704 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.256669115 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258307422 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255916129 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.268953178 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281173162 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.263974619 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.257246751 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259224952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258341099 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259173636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258459891 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258267685 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.259645179 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260849036 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261097614 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.259689062 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258670999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262387753 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264541199 seconds)
  done (took 744.463139812 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25711172 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256870228 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255663283 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256347172 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256557096 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256268359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256627013 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256574434 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256436794 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256324736 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257362733 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257143871 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256918764 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258540401 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258095884 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257774799 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257260823 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257082637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257702023 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258242426 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258105359 seconds)
  done (took 27.579515361 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.260595237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.257800042 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258886584 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260979106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258433255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260615627 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260515111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260605421 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261482617 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258643374 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261404921 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261558323 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.25844476 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259420702 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258881951 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261962169 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26121602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258946276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261202462 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25986979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263050415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259771616 seconds)
  done (took 28.906917782 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2625301 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.261806194 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262364903 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.260209407 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.263496634 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.258843595 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.26257062 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.262418686 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263532505 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.263812553 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.261114107 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.263727542 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269882889 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.266267921 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.265179002 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.263102458 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262736918 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262656666 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262797148 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.26032891 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.26876948 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.260514443 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.260288616 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.261674976 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263311428 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263675831 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.26374668 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263357705 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.264348353 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.2663931 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.264326667 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263521493 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265940514 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.262933618 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.26497829 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.267184785 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.264291272 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.26165616 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.263915858 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.273502886 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.279961664 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264156209 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269831395 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.281165063 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.264592019 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.267861638 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.270568615 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.262754084 seconds)
  done (took 61.891018942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.264513006 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26445685 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261172649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.264977807 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264772385 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264500134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265540043 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264564545 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.261935038 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.262920559 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.266513593 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262277768 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26238104 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.265324656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265539745 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26359234 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264422481 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263880445 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.261833719 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.264037603 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.263447066 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.265945931 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267539422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263810683 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266459329 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262810904 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263646519 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.265878755 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.264774961 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.264723514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266366786 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266042513 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266408913 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264839338 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265125649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267604107 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.267169034 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264951757 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267344385 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264349194 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267486246 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268051268 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267905359 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.268483769 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265229144 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26570165 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265032997 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.264101561 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265300086 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267692192 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26713538 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264998297 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26825375 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266166508 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268361566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269272291 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.266375634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265427996 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267836875 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266709754 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266994163 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268360316 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26576627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269581512 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.269394351 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266420238 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266542702 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270167408 seconds)
  done (took 87.251877726 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269438466 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.269627935 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268281457 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269919688 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268883537 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.270317158 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270842014 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270452615 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269463152 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269884039 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269243925 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269131754 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268109713 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270419224 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269728323 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269217014 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268931516 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269517223 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269657039 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270358098 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.268977778 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270112988 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27059788 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270011686 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270701491 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270757151 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269855189 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269944677 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271523889 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.271910617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26994751 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.271302712 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270496484 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271263572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27231134 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.271391494 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270504945 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27226946 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271997431 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.270597799 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272443147 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27147779 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271816969 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271705188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271855296 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272624623 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273412358 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.274055107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27141524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271368879 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273016687 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272603458 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272447844 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273510856 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271886827 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.273862154 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272313709 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27302783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272529939 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273543343 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273461135 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.273757903 seconds)
  done (took 79.995357837 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272743827 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273188379 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271898725 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.273688751 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274900075 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27136759 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274864123 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.272883179 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273556175 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273537472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275306692 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271258084 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272633479 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27453248 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271480609 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272248907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272564466 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27065284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27383576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273497534 seconds)
  done (took 26.650985105 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.271577583 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274396902 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272793188 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271326801 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274749189 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.271876501 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.27398217 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274637445 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272240523 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273057267 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.275196701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275537317 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272539977 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273065325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276409673 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272430588 seconds)
  done (took 21.56798476 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273601921 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.274591918 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.274832117 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.276078977 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.272737196 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.273428711 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276100946 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27246212 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273222697 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.277678412 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.274538625 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275204293 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.274677115 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.276028005 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.274600072 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276845478 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274034837 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.272834334 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.275760079 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.275018717 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275067447 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.274594325 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276598332 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277485273 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.274649707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.275086048 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.27385728 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.27316444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.274015535 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276704759 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.274279975 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.275425981 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.275460483 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274993263 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.277487812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274534211 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276464168 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277586841 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.277179991 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276839558 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.276394563 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.275143728 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27739042 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.278049005 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.275283735 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276899053 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.27570016 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.276865948 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276156617 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.275064246 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.278036457 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.278653198 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.276859883 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278193892 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27853253 seconds)
  done (took 71.352880909 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277519365 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278757496 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.275362415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.279285357 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279384375 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.275999272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2791201 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278186095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277138094 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279373112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277482861 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28054481 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277063064 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278514478 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277220047 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279595261 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.276407508 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278175496 seconds)
  done (took 24.201050047 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277858092 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277351024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28051445 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.277629486 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.277654159 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27955039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277340138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.27941923 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278055961 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277188949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276694848 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.279746495 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280385288 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.280872644 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279226837 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276732915 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.279389067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280179338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.27799408 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277129015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278985381 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280274881 seconds)
  done (took 29.328249075 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.279106086 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.280117824 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.278443991 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.295752131 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.296453074 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.279472307 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.280368186 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.279188866 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.301715443 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.328628945 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.321882363 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.295488911 seconds)
  done (took 16.713842338 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278536107 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280310757 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278500147 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281447721 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281296157 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27911309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277738845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279112646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281018529 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279650013 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279497304 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280821064 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281118686 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27935866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280780686 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280381894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279381892 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27998729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279343737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282210791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279004204 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281724781 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28033315 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279902069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278817713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28014022 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282330451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279709971 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280395043 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282505031 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28284703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280615372 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282396563 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279791992 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282404451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283740001 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279688104 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282446199 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284015536 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281190903 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284065458 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282937225 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283263278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281085594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283468512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280976939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280398541 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280842384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281301341 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285421222 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283060695 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28159744 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284188281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284129489 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283859505 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284600625 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283974784 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28272578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283982218 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282483276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282893058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285355918 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281546149 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283219339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285827315 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282303597 seconds)
  done (took 85.784051294 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283587233 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282844392 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283606492 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283402498 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283184936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283024441 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282531365 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283127744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282162626 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283354518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286482503 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282845237 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28385019 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283587715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281937262 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284358451 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283483261 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282539684 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284542474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286748967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282713823 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283270919 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283727919 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283716407 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284128128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285842786 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284288767 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284248982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285635452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284703701 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28517293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283653658 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284234249 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283172639 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283791605 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284395328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285127931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284694599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284759978 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286945463 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283832045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287839222 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285656956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285692335 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284986623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28482597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285522796 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285529576 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284714693 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285637381 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285852244 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285755403 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285978145 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28542333 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28628732 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286443114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286677945 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28615433 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28581397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28816126 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286911975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287597501 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289487981 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286183406 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287000342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287599579 seconds)
  done (took 86.004830439 seconds)
done (took 1742.779576584 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.451860351 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405525751 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.2887074 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.302789334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288966069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.310751126 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.300018257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288621031 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.287479646 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.288042856 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.287841317 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474781642 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.342732324 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287987572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28908037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.382068228 seconds)
  done (took 26.484544761 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.3157828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295400895 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.399105988 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.3093822 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316430538 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.469017874 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.347907064 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.29455746 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.451516608 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.332895506 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.289946566 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314880557 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294789124 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.288815698 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310697055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.467706605 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.520247373 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.292579548 seconds)
  done (took 28.519562688 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.708432305 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.322467613 seconds)
  done (took 5.238864049 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.312965714 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.294677495 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295252887 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293344282 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.284801794 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.284406972 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293491891 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.289310314 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.286660469 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.4158258 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297245367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.30485748 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31307121 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295046604 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291440792 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330772193 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464807804 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293077429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290676536 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300396579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293317743 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.377218264 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.334165876 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292863904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411832494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.295567213 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30196653 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302651379 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429207832 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294081014 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295025504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295193199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297055521 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164315102 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.794547659 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.286364718 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.320987856 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303667152 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29298349 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.435662473 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297249272 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.301799229 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.288601468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.780449311 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.433485491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.403951661 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.302875595 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304269158 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298635245 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.35567769 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297844772 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298179131 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338915746 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.0865825 seconds)
  done (took 83.058768327 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.297161566 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.289851701 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464788927 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.306071333 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28908541 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290734152 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305088298 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558671662 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.304103752 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299219913 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607465472 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827544078 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306398603 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.34915804 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.14175244 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365251523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289128861 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.289928885 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306357162 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.292902779 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825000189 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291105767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.291893005 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.54031936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.32823318 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769942864 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289784761 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.296285571 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.296286928 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.290950151 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786148309 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310755213 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.357496059 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.294402591 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.543906489 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.650515787 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612121149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.29707807 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342056811 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.292636324 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.309822817 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774721988 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.629174167 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.292096648 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307498385 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771179309 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.291443332 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.291230952 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.298279984 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541907247 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292178362 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.293474887 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.292799731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293320946 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.292280954 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.370244442 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381581471 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770354351 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293022435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.294998791 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340993407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295047696 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298795801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296953592 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.293845366 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633102902 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.555017091 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298233125 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630553642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780588928 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30795989 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869740619 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.307732537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.308321045 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.304426148 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295087597 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.293208787 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767389507 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318873515 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.29430198 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616600417 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297898056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606636062 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.310821088 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310255027 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854004673 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.296623539 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.301837033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293421775 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.29490061 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294465837 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296465405 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.554621861 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.329141341 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293752041 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.294668356 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.313846276 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29947977 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.296187591 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.297108708 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86843523 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.315924874 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294820056 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295694785 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295054076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.294213391 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.295356346 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.295628566 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560355851 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294978058 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.298138757 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297713574 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295795065 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.304047927 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.531880159 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.301273951 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.586885055 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.301342184 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295770398 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.297614406 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296883957 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.299601724 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296039632 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.30426723 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.201157295 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591236182 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.314103877 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.298315287 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296001467 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297840519 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.298554169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.298802387 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.323576153 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.298255875 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049717361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331386923 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32141684 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.29665465 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.304767991 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297822596 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30085362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300929244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59773705 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.554800835 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.573910796 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302207515 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298324147 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013355727 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.360506043 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475893192 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.317101453 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.298530606 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539886519 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.578108169 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300858525 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.297881264 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.301356073 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560164064 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.299948898 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610164431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817090226 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314991638 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31093541 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037318007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.017986737 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.301194982 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.305440141 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615283037 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.317028603 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.299435805 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.299750765 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299759389 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.300136048 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320659128 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307163583 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.300147739 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.301845983 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.434390041 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489064737 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.317034014 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.310233727 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777348201 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303639765 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30294961 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.307976905 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301544358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.301047984 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367547448 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.307451831 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.326836936 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.302335065 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.303402043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.842126203 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.314758012 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.30704354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490702659 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976814427 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.31716699 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302402973 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302097463 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.183992156 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804382191 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.328400933 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.593374277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.313503795 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340633663 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301061815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320657434 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803630276 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305302213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302037076 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933436407 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.317433487 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.83355317 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.301807258 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301031712 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869355699 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318651819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.306587509 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.302806114 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314422159 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598472254 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.303264036 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.339140427 seconds)
  done (took 489.760486704 seconds)
done (took 634.267626943 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.30255473 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303192167 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.296081765 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.312294175 seconds)
  done (took 10.439268856 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313263779 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310671578 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.310982794 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309663307 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31221391 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311325393 seconds)
  done (took 9.092448959 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.304922081 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.304442481 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.310212727 seconds)
  done (took 8.145604537 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.506236981 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.325158099 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.618878615 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.32532065 seconds)
  done (took 9.001651824 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311895826 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.310779029 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.311985471 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.312686841 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.314913287 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316094664 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31389367 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313263382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.314957745 seconds)
  done (took 13.045455616 seconds)
done (took 50.94849211 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.331453452 seconds)
    (2/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.026897993 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.32373718 seconds)
    (4/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.208900217 seconds)
    (5/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.429079128 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.294415062 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.056710142 seconds)
    (8/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.300528244 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.54865554 seconds)
    (10/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355509861 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.115415919 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.704952971 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.32663325 seconds)
    (14/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.370239751 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.347541784 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334163809 seconds)
    (17/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.997333113 seconds)
    (18/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.293705538 seconds)
    (19/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.770416872 seconds)
    (20/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316622625 seconds)
    (21/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.293879632 seconds)
    (22/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.307511879 seconds)
    (23/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.292839549 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.300545417 seconds)
    (25/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.294325219 seconds)
    (26/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.295024954 seconds)
    (27/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.412436902 seconds)
    (28/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.323180696 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.306834259 seconds)
    (30/286) benchmarking ("sort", Float64, false)...
    done (took 2.308534975 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.298450825 seconds)
    (32/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393369773 seconds)
    (33/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.330766641 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.305592991 seconds)
    (35/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.566442883 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.858392468 seconds)
    (37/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.788322651 seconds)
    (38/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.308444484 seconds)
    (39/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.305077791 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.306680772 seconds)
    (41/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.097489506 seconds)
    (42/286) benchmarking ("sort", Int64, true)...
    done (took 2.324179765 seconds)
    (43/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.317464556 seconds)
    (44/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.295730855 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.349655363 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.057217632 seconds)
    (47/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.423737902 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.32306827 seconds)
    (49/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.789027132 seconds)
    (50/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432777384 seconds)
    (51/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.414096736 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.309626009 seconds)
    (53/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.027772154 seconds)
    (54/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.308224804 seconds)
    (55/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.351666551 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.419073421 seconds)
    (57/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.545754566 seconds)
    (58/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.305451344 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.695358443 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582615984 seconds)
    (61/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.336450657 seconds)
    (62/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.498928499 seconds)
    (63/286) benchmarking ("sort", Float64, true)...
    done (took 2.307817075 seconds)
    (64/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.296298678 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.32221935 seconds)
    (66/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.343409218 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.365470746 seconds)
    (68/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.309750819 seconds)
    (69/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.300202396 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.395660804 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.296195667 seconds)
    (72/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.309419154 seconds)
    (73/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.303987202 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335838551 seconds)
    (75/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.296912947 seconds)
    (76/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.338032351 seconds)
    (77/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.418208031 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.309594074 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.297493655 seconds)
    (80/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.4427015 seconds)
    (81/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.296332783 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375204157 seconds)
    (83/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.30983027 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.374611342 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.305486572 seconds)
    (86/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.321115604 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.112695842 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.632673641 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.646720352 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.31699288 seconds)
    (91/286) benchmarking ("sort", Int8, true)...
    done (took 2.356850189 seconds)
    (92/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.298672406 seconds)
    (93/286) benchmarking ("sort", BigInt, true)...
    done (took 2.310930196 seconds)
    (94/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.139963108 seconds)
    (95/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.434432542 seconds)
    (96/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.302530613 seconds)
    (97/286) benchmarking ("sort", BigInt, false)...
    done (took 2.310987214 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.741034899 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.299499476 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.311716959 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.31952976 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.301214229 seconds)
    (103/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.329832294 seconds)
    (104/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.340448451 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.513170756 seconds)
    (106/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.327582647 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.373412774 seconds)
    (108/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.347699938 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.912002671 seconds)
    (110/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.313034338 seconds)
    (111/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.303885962 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.300772572 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.300823537 seconds)
    (114/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.299986738 seconds)
    (115/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.632446052 seconds)
    (116/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.312474425 seconds)
    (117/286) benchmarking ("sort", Float32, true)...
    done (took 2.316747911 seconds)
    (118/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45636389 seconds)
    (119/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.301320167 seconds)
    (120/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.301643823 seconds)
    (121/286) benchmarking ("sort", Bool, false)...
    done (took 1.832913101 seconds)
    (122/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.338643793 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.299753365 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596640169 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.300686702 seconds)
    (126/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.885359729 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.209977118 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.049058041 seconds)
    (129/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.577928952 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.57626152 seconds)
    (131/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.321178054 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.173921723 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.446619557 seconds)
    (134/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.487144931 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.326314955 seconds)
    (136/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.647779651 seconds)
    (137/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.309280718 seconds)
    (138/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.413544439 seconds)
    (139/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.883593417 seconds)
    (140/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.398607379 seconds)
    (141/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.343467953 seconds)
    (142/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.339990255 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.037425143 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341244196 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.824691179 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.440486946 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.333328302 seconds)
    (148/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.400225635 seconds)
    (149/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.301279051 seconds)
    (150/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418160601 seconds)
    (151/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.302790801 seconds)
    (152/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.630508035 seconds)
    (153/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.323752565 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.343093289 seconds)
    (155/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.306688021 seconds)
    (156/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457416413 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.339596548 seconds)
    (158/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.400481008 seconds)
    (159/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.458824826 seconds)
    (160/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.3196448 seconds)
    (161/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.170057174 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.310128827 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.566800369 seconds)
    (164/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.329414062 seconds)
    (165/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.333447076 seconds)
    (166/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.331136073 seconds)
    (167/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.407127075 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.325816765 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.707150365 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.365082698 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.305839674 seconds)
    (172/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.313488276 seconds)
    (173/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.642473039 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352280592 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.13569695 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201146858 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.359608437 seconds)
    (178/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319572461 seconds)
    (179/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333306099 seconds)
    (180/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.1763096 seconds)
    (181/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.344554148 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.918314619 seconds)
    (183/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.304500981 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.119227299 seconds)
    (185/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.311861311 seconds)
    (186/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.32356529 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 2.323221727 seconds)
    (188/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.331261147 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.374841155 seconds)
    (190/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.317573565 seconds)
    (191/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.89150489 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.903011903 seconds)
    (193/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.348567872 seconds)
    (194/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.417811721 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.305422257 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.316624294 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.522546673 seconds)
    (198/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.318663096 seconds)
    (199/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338900842 seconds)
    (200/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.309342092 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.341340719 seconds)
    (202/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.056325116 seconds)
    (203/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.315587931 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.331370584 seconds)
    (205/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.318024394 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.306296677 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.360272056 seconds)
    (208/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.345035253 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.123932039 seconds)
    (210/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.404126094 seconds)
    (211/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.306971524 seconds)
    (212/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.306305567 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.135418552 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.332938237 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.312313151 seconds)
    (216/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.313000492 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.344005079 seconds)
    (218/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.057902933 seconds)
    (219/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.343387211 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.683206388 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136804684 seconds)
    (222/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.35445983 seconds)
    (223/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.370535981 seconds)
    (224/286) benchmarking ("sort", Float32, false)...
    done (took 2.322004146 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.317712179 seconds)
    (226/286) benchmarking ("sort", Int8, false)...
    done (took 2.321106276 seconds)
    (227/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.247992467 seconds)
    (228/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.413377352 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.318221453 seconds)
    (230/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.309893258 seconds)
    (231/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.323463797 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.419676441 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.524024026 seconds)
    (234/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.345580147 seconds)
    (235/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.363056296 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.309528797 seconds)
    (237/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.353925714 seconds)
    (238/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.308866273 seconds)
    (239/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.323428224 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.321992144 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.34787836 seconds)
    (242/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.308823111 seconds)
    (243/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.321351097 seconds)
    (244/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.01641954 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.721981387 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.732470205 seconds)
    (247/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.309602945 seconds)
    (248/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.307700156 seconds)
    (249/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.653270567 seconds)
    (250/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.31714545 seconds)
    (251/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406415951 seconds)
    (252/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.385030291 seconds)
    (253/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.466193448 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.310965765 seconds)
    (255/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.267764749 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.332236879 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.340840366 seconds)
    (258/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.363559195 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.327861988 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.41249431 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.405147059 seconds)
    (262/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.443909001 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186899447 seconds)
    (264/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.322207373 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.436195388 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.31816255 seconds)
    (267/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.312756859 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.321680403 seconds)
    (269/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.319332884 seconds)
    (270/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349656073 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.433639534 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.365960869 seconds)
    (273/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429734949 seconds)
    (274/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.312392928 seconds)
    (275/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.474514105 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.311048805 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.801599338 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.836411364 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.200915964 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346466952 seconds)
    (281/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.312130372 seconds)
    (282/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.327125056 seconds)
    (283/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.21366384 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.327795989 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.326239711 seconds)
    (286/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.312396854 seconds)
  done (took 559.506587179 seconds)
done (took 560.733556871 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360372077 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355751285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.338257515 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.360181221 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.450017658 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.516060052 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.350236575 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.340756547 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.387369671 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387453397 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.338160709 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.514886739 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.340057567 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.339682437 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.338164437 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354334876 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.343396008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34470033 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.356129378 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349366476 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.356172961 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.338237782 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.389913512 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.514395393 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.343445809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341946761 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.343327261 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360397706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.453103654 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.344284205 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34312349 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.352355592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.342396712 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.345271078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.335224248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.361596901 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.352132872 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.348687904 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343762187 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373575918 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.329844361 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.341635115 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.342761884 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.341717033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.341294345 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.345539029 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.343343982 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347791127 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355702268 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357588236 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.338573958 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.356865036 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.346077667 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.343143587 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352298877 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.343577329 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.346326189 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362104886 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.363567129 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359867213 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.339595066 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.346680263 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344941001 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360388864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350642542 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33241304 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353845013 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346394483 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.331887631 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.347583635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.332060248 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.36667759 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.344683182 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358454779 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.374686753 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.33543233 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.338130427 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.341676945 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.351022032 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.343323156 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352289256 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357537975 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.347911608 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.343487309 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359161258 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520771076 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.353222192 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.345609287 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353101663 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364000217 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.352456396 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.354160952 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.349009856 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.339452735 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355106714 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350122797 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347580474 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347207818 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349883781 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354934945 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.334193661 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364862244 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.341304014 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340508756 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344638684 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.359135581 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.334469095 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.346717657 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367018096 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392268353 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.34746317 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.346893503 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.349950609 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364073316 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.354664858 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.348837788 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341143607 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.34537861 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342966892 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.359906735 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.347643538 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.344550267 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365696648 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.34793535 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.34296066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.343754782 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347685433 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362776301 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.469105951 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.356862722 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.378791591 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.345921132 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350677802 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.378427095 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364982352 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379800221 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350448522 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366031426 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365079321 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343836517 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357503469 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358539924 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347872203 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353746106 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.342460887 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377743181 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362565303 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36214877 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.369503364 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.469071754 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.346830539 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.337673362 seconds)
done (took 223.763067519 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405728912 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.340021237 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434827505 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341071903 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442966078 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442275421 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.33921952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339949851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338784135 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.719927353 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.338707469 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339047508 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.340528832 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339081452 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424997663 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34147708 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338866518 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683964948 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342689255 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413600562 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.338191878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.338965816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343051031 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.725111543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.341653888 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.336860022 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413770381 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342770764 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.6889035 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.335266232 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.339544559 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.689427605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434310949 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360846882 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.35230305 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.348632422 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444833302 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.361569168 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423098606 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42359747 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.437393375 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.382053057 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.338006033 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.342234337 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343544583 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345254395 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342762081 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373115896 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.345461358 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34366972 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688131752 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.356060082 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344977805 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343900999 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344711559 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375216937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.346073716 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.347826359 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.441436154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348373901 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.410213479 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.730498124 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728204594 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348110404 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.345738782 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.346841845 seconds)
  done (took 105.127136433 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414587569 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423773737 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458879172 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.357145738 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399217401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463515891 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357465154 seconds)
  done (took 11.133684064 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355162681 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349871982 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398243495 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397752798 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348261955 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.56224463 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348672457 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359626416 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.348362149 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425843442 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349259363 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350562325 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354751367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.345548618 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398035788 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360575202 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463821722 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350843564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.349773924 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502038759 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348538309 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356796684 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425732645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.361893051 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351319445 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357660785 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.2705063 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3505095 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347326513 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.350606596 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349466467 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450173195 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350603889 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347294375 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348334864 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.510243486 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350097165 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348281197 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.350869643 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351377056 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.351795414 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.351280927 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351095457 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349353503 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.350833101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.375468667 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.351535126 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.350862225 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.350486597 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.351925123 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428551248 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351928273 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349940981 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350605035 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429688803 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35908137 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.351875004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350640897 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35354943 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349580433 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503186041 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400786718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.351662575 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400321445 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353402038 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352815888 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352194493 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352111219 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.444524678 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353023435 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401299184 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.350874607 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.572059518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.377749242 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355077963 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355849125 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355376796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353504069 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.349486619 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359334621 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.350652992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.354756178 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360841423 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351787489 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351606277 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.538163609 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510600849 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352510427 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.366553809 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359973927 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351498162 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.428444446 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.355092061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352214771 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406657219 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.470661303 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.43128474 seconds)
  done (took 139.857946204 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.359678899 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364159789 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357518465 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377593474 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355846888 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35533473 seconds)
  done (took 9.436654059 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.357868817 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.35592347 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355046894 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354764359 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.354711648 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356139783 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356427254 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356968222 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.357908892 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.355417749 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357392168 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356829853 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357654154 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.355600646 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.356320826 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356179701 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356817732 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354791643 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356703801 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35632855 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.35535117 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356871686 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355337118 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358926437 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360707657 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.356053883 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364019517 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357308899 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357785249 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.365300507 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375645141 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358590436 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.358362404 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362928069 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363064266 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.358711578 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361364278 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359527832 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355679388 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357649058 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359815186 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357253329 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358445036 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.359442431 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360564446 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.362613619 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.363847688 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366732698 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358684406 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.359777139 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360555874 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359117648 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.35958107 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360166333 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.361642305 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380968108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363824164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.35916988 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.359099823 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361601187 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360619354 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360258445 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360686469 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363325124 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357847084 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362359416 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361952651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363447871 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360330271 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359796962 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361546906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.359676453 seconds)
  done (took 100.157955015 seconds)
done (took 366.968449926 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.776644167 seconds)
  done (took 4.047789055 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.437849478 seconds)
  done (took 3.711282127 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.874608474 seconds)
  done (took 22.150404294 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.396977231 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.366174447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.363811689 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.363743059 seconds)
  done (took 10.760797596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.580715555 seconds)
  done (took 3.853364511 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.358691623 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.352336648 seconds)
  done (took 5.984686984 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.647427343 seconds)
  done (took 3.920107708 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.743689585 seconds)
  done (took 4.022996141 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.379451209 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.371600181 seconds)
  done (took 6.033044812 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.341084196 seconds)
  done (took 3.614022338 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.107672142 seconds)
  done (took 16.380729568 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.363854209 seconds)
  done (took 3.639545813 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.37769802 seconds)
  done (took 3.649988774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.838526391 seconds)
  done (took 6.110740682 seconds)
done (took 99.15108585 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.354625381 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.364361648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.363966093 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.363432097 seconds)
  done (took 10.718559342 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395609934 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39498146 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396824845 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405417891 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398045298 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.396019739 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386591519 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387392669 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405903565 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399208413 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396854959 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398064988 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395513417 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388523747 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.398375977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397366723 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406699109 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397312953 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387592061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398308375 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.364072247 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406823371 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.399736044 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364275644 seconds)
  done (took 34.738398443 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.860828074 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434132863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517713414 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415023453 seconds)
  done (took 7.50115769 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415398272 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417216855 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.429552298 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.46744343 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496364191 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426105984 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.389847893 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385546039 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371416698 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417734327 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.492462048 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434139586 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50081099 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363706638 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550673449 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363609688 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364913903 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41682623 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.468313629 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.481883963 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.36475898 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415982516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420280493 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433443189 seconds)
  done (took 35.562931455 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.364167296 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382211893 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365143479 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.363741341 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372808599 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.364480128 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.365145008 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365828476 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.364495318 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370693795 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.361746153 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377196698 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364076813 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363680595 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370573429 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365406209 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.370859918 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36458911 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364717568 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370542969 seconds)
  done (took 28.629478856 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.359444584 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358617796 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711445558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614899056 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.359874507 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.366727882 seconds)
  done (took 14.048540568 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43350302 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578747131 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367820913 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710446906 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.802480122 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.374501072 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366682595 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.608885054 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.92240441 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.894271424 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.430144216 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434312867 seconds)
  done (took 20.200565219 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.372027594 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.369689645 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.377345528 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385550736 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.419639788 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371365627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374297164 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.361661712 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.429928811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.425342771 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.372823065 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.421557336 seconds)
  done (took 21.961121164 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449435957 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361891812 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366825893 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373086804 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362341313 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575802838 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387519937 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066991994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385801703 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63658039 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361503841 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468557753 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618714352 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372759843 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370609939 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363236684 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597016876 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847829717 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364889797 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370314191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389352452 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364154193 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377140764 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582819906 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584818346 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362635158 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.691517039 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363879821 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643932755 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380284647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375489662 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364034611 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638588888 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017717401 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47893244 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574155709 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371617722 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381061754 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.365898212 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.372196805 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367977857 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365847819 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375754485 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364246013 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366247898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365620925 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085236876 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391641025 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.362705505 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365413548 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627692503 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464180291 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.369908926 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3646051 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417329823 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365750098 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.37138866 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461757468 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938788531 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366745822 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394921611 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.375224578 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376652118 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378085155 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990172444 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.373763907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369979158 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36987672 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366221985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380371768 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392548476 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366321002 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.392606269 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366563709 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052731086 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367857848 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368044257 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911341951 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378795087 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.37548611 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594240768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367551918 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36852422 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.366484951 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367099725 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073121989 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377509759 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.370920582 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391111775 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074111386 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599131237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393770714 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392647375 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591858715 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.355787691 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368522403 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.37905294 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370392563 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390669239 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077416707 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386517906 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.37371926 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62583599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.580878867 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377054199 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367874089 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852565593 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387557298 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.393363227 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369404193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58885794 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.956916313 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386583776 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370090266 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395724082 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370856459 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113716102 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37090021 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39894908 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369636514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635292304 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1661997 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371604968 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439116354 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37522428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37001192 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383402718 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373194145 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371668376 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.573412066 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402203122 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.388886675 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.371583843 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37097508 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.380249919 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373819037 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.373076686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596415565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372131569 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656160363 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371941517 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373116953 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372510579 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.594410287 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.370599888 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.378485552 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634540786 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375932764 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38321646 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390306396 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391456553 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47157078 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395957781 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.38644379 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635766906 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.377703808 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377491166 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373827145 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39071814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380322476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379506404 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375518404 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971131659 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352892307 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381756883 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26373385 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.390381246 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44344069 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379545319 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587188277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.388163362 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384091396 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.379732855 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.381123649 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597255731 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383955373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.37410956 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470805438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.849440687 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972694602 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387423661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.373129829 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.370649325 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.371645183 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374346792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374973593 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374572129 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586217595 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390616632 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378416117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95802881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377453824 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38793665 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.381779366 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386689834 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.380676652 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37604189 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.372231242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38386879 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39847643 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.395100141 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519850136 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.389953499 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375130973 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892612401 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381925017 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376251692 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377390568 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41194458 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376218342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212486376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635891474 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396113691 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63324269 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379181213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416642732 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375540382 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376756286 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40789394 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.397669582 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404291217 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388487815 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378588917 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399286689 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947302051 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101072804 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909545422 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395471353 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.388306508 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385907783 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093143679 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397216543 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378885076 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613208978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092663948 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397400262 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855656853 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400685574 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129082349 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644035272 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608122796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392835227 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.381152893 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645219322 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592217463 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414084549 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390921295 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387122672 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.366240158 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934772931 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411743115 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459662311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094818094 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39929497 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399354755 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.459400215 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396595292 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788885609 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399444307 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380497645 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379550653 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407348925 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185765413 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387091509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38162543 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998911683 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386416928 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.865635863 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399420639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5939035 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.40092434 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.386435851 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.384078235 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.377514171 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644839234 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639541372 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382500866 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38491202 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921742257 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.238088825 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38742654 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381214377 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125795203 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388916291 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671496679 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.383680603 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.387992723 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391673653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381832372 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380902365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.379127866 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390576563 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358129264 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869266762 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.38692363 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389902235 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386510509 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233258142 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63890256 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396059779 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963928851 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609565735 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387009462 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407562673 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386603075 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389291906 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372267934 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384238594 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619683216 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413730219 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606202029 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392965149 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.369865159 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463677229 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614100306 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382604739 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387067647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623953235 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.38086114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.402106264 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103147338 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411561498 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386937094 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38501886 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38459029 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406215681 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454282686 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598631066 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.39558295 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39424032 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792049174 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409033206 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387752217 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.39984003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478998125 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385965827 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.395103641 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160334325 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970956863 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112676776 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97484936 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652815274 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386774974 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387840197 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385622229 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534736211 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38468049 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658831133 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386420043 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.384662553 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42726452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392250829 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389548506 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60617361 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66155978 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386774131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394794732 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395854303 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387450087 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397734698 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597601588 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879344048 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936909609 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388532333 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389922989 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111955794 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679570685 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388550863 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387573461 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386824594 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.409609212 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404359633 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413127767 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387062027 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553792261 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644397006 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051155779 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.4162219 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.415809033 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.162877718 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388128683 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642592213 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385038628 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612178896 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983657464 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089511292 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652105307 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459330134 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603621209 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.395249496 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5367141 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.386493506 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389667268 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389275547 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232790269 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.385948608 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398978637 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981909046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652641587 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.392810915 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.387410423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412939915 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399851843 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613937374 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108204486 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615653434 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401063615 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397179572 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390840953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981703289 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658866779 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391819856 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396516007 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631377537 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63505673 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4159324 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.843906225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.388020543 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944911434 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.363424957 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413166907 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405202701 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.103197143 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983263967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.398259105 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886578411 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392934164 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391902315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683881165 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397212123 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391075504 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676236797 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.395686164 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398851375 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610936921 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.985226802 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151983254 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.414032568 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410713345 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.401526183 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391864074 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457875649 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392437692 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400258939 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.818869051 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411400202 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393068155 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404335289 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.393236633 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395051011 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.389647877 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393632331 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.39960147 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.380815864 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.388948537 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395165009 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489140757 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95775688 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41664885 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.107465547 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.725736193 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648994846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406475594 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.380764223 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399968224 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393438698 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394692468 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394291361 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411935308 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950896127 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.410997085 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.405096765 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399631516 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611414016 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608280683 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407649267 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613382142 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419513191 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411159819 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.381338872 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394632851 seconds)
  done (took 974.870852308 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.40976398 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.417885928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.443625461 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.491925697 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426012842 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43787593 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.465529107 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.40586541 seconds)
  done (took 20.809280345 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.409018884 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.405606238 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.400733703 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.407403911 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.397264077 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.875880717 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.415047292 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.406083073 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.406588742 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.411491836 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.398332984 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.083821311 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.4239835 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.399149179 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.394540564 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.406563918 seconds)
  done (took 32.957175371 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.323336767 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.530064449 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.234248552 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.427726001 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.443218741 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.397694322 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.626820796 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.4121898 seconds)
  done (took 26.70736884 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.408825364 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409868615 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.409452449 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.408430223 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406967252 seconds)
  done (took 8.355896562 seconds)
done (took 1238.33415351 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.403349105 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404965996 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402302103 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.404414942 seconds)
  done (took 6.927403124 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.385416241 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.385330296 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385556911 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39770867 seconds)
  done (took 9.866708964 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.101225675 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.038548094 seconds)
  done (took 5.452096346 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.395984842 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.158720163 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.133057968 seconds)
  done (took 7.998122499 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693979276 seconds)
  done (took 3.005289443 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.805728385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.765265795 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.589330982 seconds)
  done (took 6.471639922 seconds)
done (took 41.032207236 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.398180605 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.645767463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.553526862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397109408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.560749935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.554250391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.132896257 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.405627864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399593729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.424922976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399646129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.559204755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.187236248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.64632423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.188682111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.647917829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.560652775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397578654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.41446349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.39698759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.134403777 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398041465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411458303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399283709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.560545436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.54246883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.406649701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.64647749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408638161 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410199399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.542335555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404069686 seconds)
  done (took 83.446791064 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.398840141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397723966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.401535001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399598818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.399744058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.401063337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.400084255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40051813 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401224588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.399388039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399840874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.402708572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.40427652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410485934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.400468959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410405406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398585616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416147231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410746407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399317462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.400364657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411103026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39949096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.412567402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.403696674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.401576224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417953763 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.40578509 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399424524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39954525 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.400004916 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417821567 seconds)
  done (took 78.235878478 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400764379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.408854345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.40125097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412348884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.399385405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.399823805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.400910779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408608202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399576313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416352863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420081415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416885492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.40038732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401111061 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.401436563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401651256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.40079349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420945612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403628387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413396366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402830179 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404081507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.404226187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.407208631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402240983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417862149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401869207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.401987589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402543669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418586848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.403271909 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.402098239 seconds)
  done (took 78.312611845 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.603660033 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410046765 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.410384416 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.356273729 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.409169247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409949702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400305108 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.605104484 seconds)
  done (took 14.921766901 seconds)
done (took 256.229948801 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.404288109 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.403983022 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60804334 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.430097593 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.40269163 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.430891635 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42980909 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.625609962 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.399171519 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.644681713 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.423177271 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.427713536 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.407378531 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.427442175 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675536724 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.556026754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.290401954 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.384079824 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.743317553 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421164726 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.67381534 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.416145072 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.679756147 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.371894229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.42361423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.414760685 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.407673671 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273658244 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448755368 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.752173438 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.426965839 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.392168941 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509065136 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.50993956 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.623120086 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.563824629 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.413143254 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.490506922 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.627238516 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.405878658 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.404086233 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.19522798 seconds)
  done (took 84.276641002 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.412203447 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.53480972 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.412107121 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.412934594 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.413014747 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.537988508 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.511117485 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.412935259 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.412497889 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.412317425 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.410396849 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.41302023 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.412681267 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.412146175 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.412951312 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.413676934 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.411822649 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.41385779 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.416846237 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.460589642 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.542176164 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.438679058 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.409211425 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.41423104 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.519372219 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.554020417 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.413725688 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.40934461 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.457062624 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.414664646 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.417542773 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.461667624 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.416102021 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.415613008 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.538065188 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.518050668 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.415896275 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.412706426 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.555265857 seconds)
  done (took 57.693255262 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.415092641 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.657744587 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.835390321 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.42353879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.415813911 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.421575517 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.493727477 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416528977 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.420066345 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.421014714 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.571980939 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419878361 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.45047406 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.864449839 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42953221 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.416270533 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.417347362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417836198 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.672820547 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427525518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.514594348 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417871323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.494513167 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.427950396 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.439997383 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417218142 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.420944362 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.98520966 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.419860225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.571741098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.203122248 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.50039913 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.963253287 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.84731769 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.20984773 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428777456 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41803094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576262667 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.423192397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419472098 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.495583423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419452501 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.84858841 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.102224175 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444801729 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.418522789 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.009609091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.57607395 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.658245737 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429637539 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.872534508 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430925021 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.420584419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.420916421 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.66727687 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426815676 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.418940889 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.027453943 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441064503 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.495748701 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421631485 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.420018232 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.680326336 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.423429766 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.670699906 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.422201583 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42735115 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440468822 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.849083285 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434535297 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.124571805 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446298707 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42141534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.572661272 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.667269089 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040154005 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.425301399 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.686763753 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977339182 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.49606279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.425843031 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.976920862 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.500767519 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.427043126 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423129001 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423493196 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421599389 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472853852 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.495602525 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.055258343 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115366437 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.055553725 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518610557 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436200942 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422475544 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.033359208 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439308536 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422774151 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.845874583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.123523542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441789634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.429567936 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.129043008 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443980838 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501741271 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.429403185 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855746299 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.425543777 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.473524162 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.42306223 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430629328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446734901 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.501259716 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.427379802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423999605 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095162227 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.597893251 seconds)
  done (took 187.018266533 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.426076601 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.417175045 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.424094345 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.417315775 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.415373879 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425578991 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.416218491 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.418880928 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423638885 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.41518975 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.416176176 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.419387743 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.419709481 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.421149301 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.428884496 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.423924068 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.416875432 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.41844431 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.416773619 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.416962375 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.417264254 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.437740186 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.419762865 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.417766901 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.420221435 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.420209516 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.420030599 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.420583815 seconds)
  done (took 65.102520382 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.425771802 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.974222919 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.426835553 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.555407034 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.447203422 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42325255 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.551370739 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.485387898 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428451098 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424905994 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425133253 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.720985552 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429123646 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.928749607 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.614870845 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.556263312 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.927352268 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445616508 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425347334 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.425077684 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.558103067 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.438605166 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.721592946 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.9773912 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.428998931 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976344456 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418811498 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.427231785 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427450993 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.9811579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.427443904 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.723353853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.504512926 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.485536693 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.986057866 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.940490365 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.948530921 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.573080478 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.435797812 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426339069 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.427322122 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419636718 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.981133301 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.429541341 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430586881 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.978402648 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446896464 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430776006 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.433743786 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.427010345 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486015693 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.489034922 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.728884302 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.985989982 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.505534818 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.472011615 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.557160973 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.795767422 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.433270569 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.932726882 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43618436 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.992984277 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458460645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.417826224 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429195806 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434463093 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.57582372 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.559091354 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.942833002 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.44769433 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.932397324 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.594737025 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.428911999 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428885016 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.431589722 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.993882852 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.942199675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.594704747 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.562267533 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.621910943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.422943913 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430284286 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.420931089 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.505674738 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.431586446 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996576351 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.961195432 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448783577 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431603008 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432757715 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.431733824 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.605270779 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013172538 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.516454962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930764822 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.751804438 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.745987421 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.44155307 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489493676 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.448107816 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.737216629 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.441302489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490213492 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848916105 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.739168563 seconds)
  done (took 169.313170639 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.671763881 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.442891639 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547682723 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.584448671 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.03144633 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.040916075 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.431077372 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.555921771 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542440233 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.690727366 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.427795294 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.522477661 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.64303189 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.507378469 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.144382355 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.499783481 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.525988117 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.590146645 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.572098585 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.438240393 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.0710912 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.727342203 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.616699795 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.463585383 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.538834824 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.191302241 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.017087549 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.990683908 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609615442 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.435291372 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.958526506 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.432267838 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.364046096 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.090169519 seconds)
  done (took 66.256261363 seconds)
done (took 630.976776592 seconds)
SAVING RESULT...
DONE!
