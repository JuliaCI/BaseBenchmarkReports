cset: moving following pidspec: 4561
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.170793248 seconds)
loading group "string"... done (took 0.449005961 seconds)
loading group "linalg"... done (took 10.278917526 seconds)
loading group "parallel"... done (took 0.222846184 seconds)
loading group "find"... done (took 1.886826086 seconds)
loading group "tuple"... done (took 1.983114398 seconds)
loading group "dates"... done (took 1.34210635 seconds)
loading group "micro"... done (took 0.457892358 seconds)
loading group "io"... done (took 0.438088961 seconds)
loading group "scalar"... done (took 44.572521098 seconds)
loading group "sparse"... done (took 12.559383346 seconds)
loading group "broadcast"... done (took 1.037347907 seconds)
loading group "union"... done (took 10.080533107 seconds)
loading group "simd"... done (took 4.169174538 seconds)
loading group "random"... done (took 8.457250996 seconds)
loading group "problem"... done (took 2.212787901 seconds)
loading group "array"... done (took 23.947574257 seconds)
loading group "misc"... done (took 1.073361754 seconds)
loading group "sort"... done (took 3.165549742 seconds)
loading group "collection"... done (took 14.604431408 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.598015318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.110300923 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.17485184 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118009509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.23865982 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137289782 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.137680272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098950804 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.794458264 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182324422 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123759479 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.360360978 seconds)
done (took 5.969548613 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.232341773 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.081278455 seconds)
    (2/2) benchmarking "String"...
    done (took 0.145071706 seconds)
  done (took 1.090443472 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.089131582 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081119177 seconds)
  done (took 1.037398262 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.083162849 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.330738272 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082608503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.483655476 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.141098843 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.086195103 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081536483 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080867956 seconds)
  done (took 2.153078284 seconds)
done (took 5.463502572 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.391737637 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.823356015 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.459483117 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138191793 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.275048004 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.231989109 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203496537 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.213565584 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088811606 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085874002 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170665521 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.407726443 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.294607932 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.741522687 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097662753 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098396738 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134902308 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.766810384 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08329152 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132221517 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.362133859 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116002145 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105050087 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.145029862 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188524474 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10761777 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156484506 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.08259025 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681212104 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.12263163 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.207065116 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.086941986 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156635914 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.127015506 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175553386 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117497995 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681726837 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190941506 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.140920553 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.083464769 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686311412 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.101649132 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.168790075 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.0956239 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085533077 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168223175 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117083846 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083299645 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105598771 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082395272 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164092311 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.478693261 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109489656 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.183491664 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098427 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690298861 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.107335215 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.249601568 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132356414 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.109918864 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082912217 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085888955 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.145421946 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088810184 seconds)
  done (took 19.195049834 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143631554 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13533827 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084390163 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134165333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097047094 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083286153 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08246183 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.087390064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09132287 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141257422 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089272185 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151193286 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081968189 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085330338 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14666827 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201284433 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088785629 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.094316703 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085979009 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106825099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110757118 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087766747 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084855648 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082988983 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.141752199 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.213517012 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116163672 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116667121 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083492305 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099621838 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133205276 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132433389 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083626539 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0817867 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1208446 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128306965 seconds)
  done (took 4.919683744 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188107947 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10034333 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163540631 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.17594823 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.152501484 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111148971 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.132852688 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154849616 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231645108 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.676782497 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.161348505 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165924522 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130952211 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100472472 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097770583 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085133257 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083339602 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.549426296 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14183058 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109594644 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166817731 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084007185 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086372542 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.39677982 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083172322 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082351371 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083626492 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084772805 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16260538 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08273527 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.579044534 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086713099 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081279849 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145339804 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198696982 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08476246 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088097772 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134655393 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083085395 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082987594 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.084382304 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086283616 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083083985 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091540788 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117084972 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.140761138 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083394268 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090511435 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183791149 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08276903 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090362057 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.808213468 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084962162 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170727191 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149494288 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084755632 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.159864817 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102133035 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082608238 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082310041 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.154232525 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.088303325 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082715658 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082838886 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082929565 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084939739 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082891813 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.224483093 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086926684 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.101456945 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084246297 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086447477 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.351119231 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08763023 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086900423 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10285107 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08486267 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083138642 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081894633 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08357816 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083211437 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104617166 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101895635 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083255851 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144966379 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085358542 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102815083 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114453991 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084481722 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081950278 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128084715 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083476057 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086568189 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.154747289 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081002805 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103195218 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099554275 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135061866 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084802624 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172228934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085045853 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083231423 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106388994 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085047487 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127816746 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085613338 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084139658 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089299302 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087163591 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083134436 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147167061 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085521112 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086518257 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086173592 seconds)
  done (took 21.10851054 seconds)
done (took 46.095803484 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338329651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083821755 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.0834306 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084330845 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086725552 seconds)
  done (took 1.621055649 seconds)
done (took 2.540976469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.176535051 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102718542 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097052379 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.098592189 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.105435724 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.102687731 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082595323 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098411222 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120317394 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096062214 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102795728 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.083610811 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097797556 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099899673 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098745232 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085830375 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098734345 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098953356 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114860075 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.083131714 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083834602 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101698144 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082586684 seconds)
  done (took 3.259040075 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09516707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100740544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093347537 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096479265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08265532 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093870084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093205264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10072762 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095722245 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087968954 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081454706 seconds)
  done (took 1.9511391 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096782064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099291051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084524917 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09697249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08236879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09519412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094056132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098490136 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096291565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089074594 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082252177 seconds)
  done (took 1.945583699 seconds)
done (took 8.081650107 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.446523512 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.704261712 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.153058913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20588421 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.244331156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.180069401 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282596748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164849171 seconds)
  done (took 4.422907677 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.186143874 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089219246 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085436092 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085444488 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087342309 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084925405 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08881522 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085543575 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084450096 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08798577 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085139247 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103592022 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087357841 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087109253 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086827834 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089143371 seconds)
  done (took 2.485805393 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.129205064 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110688211 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088443996 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088308916 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089876633 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090481315 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091536078 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087457304 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086393473 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087745285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090925672 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105461343 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089471694 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086236172 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089579099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108073216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085764027 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08872047 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106132767 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090343087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088088574 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.086146916 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087242213 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08678738 seconds)
  done (took 3.261930602 seconds)
done (took 11.102003488 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101331571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085029922 seconds)
  done (took 1.120397735 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162107597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154966853 seconds)
  done (took 1.259889642 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089863808 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083338753 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088788594 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086800075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084224707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08322015 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086921723 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.085231267 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08347706 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083450934 seconds)
  done (took 1.799924398 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086865068 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085146346 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086776867 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150562008 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085130245 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083109394 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083763829 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083347832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083537396 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082598848 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084384206 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109709 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084097904 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091642418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084123966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084929552 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085597511 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084310332 seconds)
  done (took 2.56367888 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084025772 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083473125 seconds)
  done (took 1.11309756 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083290201 seconds)
    (2/7) benchmarking "second"...
    done (took 0.082783738 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085282699 seconds)
    (4/7) benchmarking "year"...
    done (took 0.082651723 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082327323 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082222436 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08277014 seconds)
  done (took 1.524800501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.446729684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.204394607 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.289733897 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101717418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084898037 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289941769 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083383253 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083090521 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088891874 seconds)
  done (took 2.652102321 seconds)
done (took 12.980544832 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095579386 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.161628649 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.488164428 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105010971 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084551122 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.150706777 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.201906673 seconds)
done (took 2.241980024 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.24929283 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140203184 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.109678093 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084871019 seconds)
  done (took 1.527388415 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086383126 seconds)
    (2/2) benchmarking "read"...
    done (took 0.091817686 seconds)
  done (took 1.131479538 seconds)
done (took 3.610837384 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084484752 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08307466 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.083648606 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083160768 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.083176202 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083611446 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107601833 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082825894 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082866137 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083427239 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086035318 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083207207 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082389995 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103280704 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084018083 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083443301 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082924933 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08405762 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084119553 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083559993 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082708818 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086224612 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083517322 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082720915 seconds)
  done (took 3.036898681 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083999886 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084256167 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082885296 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083129319 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083013564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.082841427 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083492638 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083332733 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085623406 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083040321 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083482293 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083273248 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082600709 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083544464 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100798252 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084448819 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083599763 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083821793 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083388575 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086127602 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0836761 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08422367 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082714111 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08434535 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082969222 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083124687 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082409874 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083158008 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082576683 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100695017 seconds)
  done (took 3.500590849 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092135499 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081406152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083986926 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086615973 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084667601 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083574583 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081063358 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083542689 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.084014818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.083549363 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083959267 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086080838 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083961541 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083767544 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.10146847 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085047411 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085912486 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.084955746 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083579858 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.084178246 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084420567 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083548638 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086295616 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084211657 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083312316 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081066324 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084227222 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082766662 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101175158 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084016528 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08435715 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084309454 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084798806 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089257889 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084277489 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083981952 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084421849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08161174 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084666147 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081115453 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081746145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.083865738 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083849218 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103612199 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08685381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084106667 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084135181 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0843823 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084091476 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085395234 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083700716 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0837414 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084705328 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08398614 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085105081 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083055826 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08319139 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098684767 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085244447 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.083960637 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084413694 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082223071 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084748533 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084230149 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.088105956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084897307 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0868192 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086160382 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084750102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086005418 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086688238 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089026752 seconds)
  done (took 7.1115726 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084298579 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084842415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08449175 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083770024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083763731 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085794291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084706781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084295084 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083349663 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08268642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083585123 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083224059 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084118493 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084067188 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100921658 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08488747 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086391403 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085317077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084522863 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083820097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08340203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084353233 seconds)
  done (took 2.836784691 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085714752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088569786 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.084856384 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086113173 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088479274 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087988113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083647103 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086093363 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083606822 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08498104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084363799 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083631617 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085619495 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08585532 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102387487 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086994671 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087258246 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087151859 seconds)
  done (took 2.528918153 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08468422 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.08428772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084063117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084074508 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084079878 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083647407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084270775 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083961292 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08401565 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086454211 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.083243904 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08358742 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083018074 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083953731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101078749 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083903837 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084062951 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08449187 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083990658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084060313 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084307413 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085765232 seconds)
  done (took 2.836703101 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086319313 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084793134 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085076167 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084652123 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084247398 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085023563 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084786109 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084576936 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088136698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083583311 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086971086 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084202236 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087804849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083806787 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102161119 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085249688 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084711403 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084763325 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0852823 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084976113 seconds)
  done (took 2.691167065 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143376251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088430069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086682382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086471651 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086452495 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086168807 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08573706 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086233524 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086180028 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086549232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086192401 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08627602 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107656639 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087098375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086800119 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086681352 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086375372 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08596052 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086081339 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086613562 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086731543 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087307106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086666792 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088676836 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086159519 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086599339 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105237154 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087497095 seconds)
  done (took 3.495036887 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084230036 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085087242 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085047305 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.084598284 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.084461317 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084284911 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087271804 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.084027368 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083934725 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084468402 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084095723 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084110766 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084136072 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084434887 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1018681 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.084099779 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085176387 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.086723698 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084610433 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084754861 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083728786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084117705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083795415 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085319194 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084272498 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08466168 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083960728 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084255612 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086369711 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102646116 seconds)
  done (took 3.551160724 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088995147 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087746615 seconds)
  done (took 1.153036427 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.085586172 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085217226 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084948123 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08586275 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084779796 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085099451 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085288354 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088075457 seconds)
  done (took 1.661638318 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.145752724 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160945944 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085709322 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091661388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161475452 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157375137 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1204607 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096610179 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08989722 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086323488 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.146026594 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085880491 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090931337 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088567793 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108071508 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092238392 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085002818 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090989683 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08733192 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086542516 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087828422 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09422636 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092440261 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.088415241 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087277428 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104612835 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091150233 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088570415 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109563187 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091132324 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088610641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086769671 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089273224 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086489481 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084604565 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160653319 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093269158 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088748251 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098787486 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086191136 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110668703 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.086445869 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089867348 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093004814 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091111691 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08616609 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086329258 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08496116 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087624191 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087765985 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085567181 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089176813 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08616727 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09121018 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115084433 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09293034 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086287097 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089067119 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087995379 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09258668 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089149785 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088966846 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091851907 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086880536 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091767607 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092327144 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089186654 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08512317 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.10702777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086015298 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094067059 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113747644 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09206701 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086800804 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087199646 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085692192 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092294954 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087175155 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088657718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087323004 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086590961 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10699563 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092498915 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088961737 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089564086 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088995909 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086162454 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089943675 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08798842 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095547795 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086695931 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084859876 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087281533 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09049519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087021309 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105534456 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087997734 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090148612 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087420883 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086502871 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086722264 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089136007 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093087172 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087689216 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088220825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090345729 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153177532 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108644922 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.095337643 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091168519 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087251452 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091096979 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090291554 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085507041 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089408793 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086761684 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086072566 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089877383 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085794481 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086579301 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091105092 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092321575 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.105957928 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085515532 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090480654 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086613017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087493356 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088011485 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086198231 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085985765 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087283447 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091961086 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089279117 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090698183 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088266971 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089128662 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.104674698 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085649611 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088320833 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091422077 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089083165 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089394063 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091214768 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090349165 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087332308 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08940194 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088710277 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087085353 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089066286 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086286779 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.103562375 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088142871 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089886051 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08711338 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090585171 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087575947 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090372177 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086632026 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08696564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087401104 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087180484 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087048338 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086881102 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086386511 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090622856 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10814862 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086701474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085994014 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088554932 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087113843 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08736491 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087354976 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089812271 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08727544 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086631267 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086660556 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.093902034 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093836759 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091656791 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107623146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089268286 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09083518 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087891362 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091340324 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087675631 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088136048 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086996692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09242405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089526704 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088109325 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089388865 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08765977 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090983462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109801463 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087594372 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086121983 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087092535 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088222208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093160316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089043733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086718669 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087393759 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090358904 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088369219 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089714367 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086556621 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087558052 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106923217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089221788 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090115297 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087760852 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090722815 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090985678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.086451493 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088320369 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086763235 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090542402 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085727678 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087044745 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088687125 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089815238 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105426992 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095426765 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.085967421 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091940024 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091939008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08988928 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087839592 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088662646 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089261308 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088828376 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09211381 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088138159 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089514312 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091242919 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087461755 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107362003 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091360833 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087487393 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.086564542 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089404553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.087450121 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.092865637 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087436039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086385799 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090250345 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087394677 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090743574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.085607074 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090370902 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106342695 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088392551 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08661372 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092354443 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090765526 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087608395 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088726295 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088150484 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087451938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091474808 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088250295 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087754768 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087866362 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09038395 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108680416 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093019989 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088427967 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086983191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087554759 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086025462 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090171609 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088627443 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090087558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090334932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087904609 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089520565 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09012783 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087328897 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08721378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107272004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088990908 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090284784 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090225706 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090466965 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090524939 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085893054 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093708865 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087533726 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092939014 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089083005 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085711061 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088493178 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089829684 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107904075 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087684037 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088166814 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089261448 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089718345 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090151848 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089877711 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088092515 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090639461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089716366 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091515019 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090210226 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091305498 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089272137 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107104345 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090401072 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089293792 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090554728 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088924751 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09079473 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09028487 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089930579 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092538694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087519994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091294121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088754211 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.088977929 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087992958 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088713206 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.108003067 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092695642 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088075876 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090985372 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08894418 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088107577 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088381722 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08733012 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089293256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090789532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088408502 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090240651 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088036092 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091248903 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109532264 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086861327 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088230199 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087370044 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088910399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093669357 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090787948 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092771217 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087430655 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088382607 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.086672711 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087762814 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08756262 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08953438 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.106205615 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091203306 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092438013 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09071085 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088724807 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092149393 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088227775 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090397469 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088215479 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087783285 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089059007 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086819688 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087379206 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087940514 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112574411 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088713796 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08881545 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.090297963 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087954409 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088916675 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088979497 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08846844 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089757653 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093103168 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088890424 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091428174 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088332222 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086495078 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109192756 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089079027 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088253488 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089023348 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090532144 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092404258 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088954583 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091304451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.090148665 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091249719 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0891163 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086069223 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087918254 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087909956 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087005518 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107913903 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088732708 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093567437 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08671712 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090561168 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088272875 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088996876 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092514594 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088379098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087772708 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089761174 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091006474 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091106645 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091227345 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109288753 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093597442 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089282148 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091870934 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090063727 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088882897 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092755244 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091897416 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088861008 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089951704 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089071668 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088839382 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09088079 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088326987 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112576125 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089239006 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088821679 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088956014 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087098276 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087660179 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089594901 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090341905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091168742 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093109677 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086866976 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087066987 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088160166 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089346003 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090427333 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112567066 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090176046 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091919493 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088650274 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088204509 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093386403 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089979939 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092044339 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089534739 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091795608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089046956 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092024992 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089507959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091210114 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11001737 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093458869 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094452466 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089567793 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090575568 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091632359 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089784599 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090946216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091378105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09052551 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.087368026 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08857271 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087980128 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093159578 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108587852 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090677153 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090350187 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.092248744 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090774656 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090414572 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089195269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090388594 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.087657457 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092193736 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091673766 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088846648 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087137937 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089231745 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089543256 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112209185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089715442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088004889 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090546055 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091898137 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088482665 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091617811 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089324936 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087528693 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087292444 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089675046 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089293881 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093013637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08959483 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108650144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088982698 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087654783 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092380422 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092171214 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090463381 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.088087867 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087717739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088956546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088737189 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090322896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08829913 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088755876 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092478883 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090322541 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107644903 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090968751 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087319215 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091069476 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091490575 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088841727 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09240746 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092142606 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093605128 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088616562 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090580746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088543124 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087876911 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091222637 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109025314 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089818451 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093279637 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092132052 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089556902 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.089063712 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090713937 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091682549 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090828722 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089232514 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088824995 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092279767 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092819182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089094214 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113234294 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091479856 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088816103 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089434097 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089623731 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093540459 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088686447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089065248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089627465 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089147065 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08815343 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091264962 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089262006 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090393251 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091924637 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112964159 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.089699487 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089687797 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089801601 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.089175903 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08987143 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.09202056 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090486965 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.088966979 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088734818 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09206162 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091242251 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091811635 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088971229 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109866227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090552087 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0913309 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092166353 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092705974 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087575214 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089118983 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089611974 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092052891 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09221969 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089554091 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092221795 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091022325 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091320422 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108231333 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092901941 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089963197 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094491251 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08934191 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090031155 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09220398 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092344604 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089906475 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088694534 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091736963 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092922348 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088931507 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090569171 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087940812 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112035571 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087745762 seconds)
  done (took 55.641751125 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104342681 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088515731 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088329534 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088045333 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08768856 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088523137 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087774548 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088591068 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088547004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08807322 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088280718 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0903568 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087946727 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088264969 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10830799 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088517785 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088792867 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087289464 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087602069 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088250388 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088215879 seconds)
  done (took 2.925129855 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089149306 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09169427 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08846847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087664602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087902184 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087594985 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087956545 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087994453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087570889 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087946342 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088047264 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087656645 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090258783 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08928247 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108188386 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089297049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088581942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08873201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088822003 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088062052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08804515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088657449 seconds)
  done (took 3.002255062 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09036511 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.091660485 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090039277 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.090229127 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08929029 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088310444 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089213565 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088436451 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090933901 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090763689 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091092135 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090203817 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090996843 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088312609 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108692339 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088004667 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090990656 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089470844 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090269201 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088370741 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090051246 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087844779 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.08882666 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092121217 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090095316 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089449752 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087609516 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089001369 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110532579 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09022322 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.08819612 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089653871 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089597141 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090344235 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092226453 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089454833 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09017344 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088283571 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.089072335 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089605051 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08844718 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089316999 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089213809 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.10952217 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.08839173 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09253349 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.091157257 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088926722 seconds)
  done (took 5.403305788 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089362126 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113518406 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088241068 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112831979 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08804328 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.088202677 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088154905 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112864724 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.090782326 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088628337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08779696 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.088138121 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110520158 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08886752 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088809774 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08833315 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088925809 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08934767 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088557277 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090591097 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089454764 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088708371 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.090060594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.088430831 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088877651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088447803 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088572181 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109890848 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.089264826 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088768396 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090872792 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089396997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.088387334 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.08867652 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088444798 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088493034 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088423499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088232352 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088730942 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.089591748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088905123 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089996718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110914928 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088840485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089705826 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116609368 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089279129 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.088734105 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089176073 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089676751 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.089837751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.089734348 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091571688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088243647 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089167537 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088547616 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109668688 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089541727 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089511473 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08907016 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089311531 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088885606 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088673043 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088259085 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091268611 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08920611 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.088846388 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08878085 seconds)
  done (took 7.384320715 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089288484 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089899873 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089360535 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089868912 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088823647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089046208 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088561156 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.090814035 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089552731 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088347456 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088794811 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088280423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088365978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088425778 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108798075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090208512 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089365364 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089347368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0922516 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088992555 seconds)
  done (took 2.854047771 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09071576 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089497838 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08997725 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088830211 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089282517 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089512931 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089130558 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089252283 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089299441 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091197462 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089001633 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089432289 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089225066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089702912 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111329143 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091540608 seconds)
  done (took 2.511841876 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091448441 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.090615762 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170494824 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089776975 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.091854005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092153713 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088981232 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.088860651 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088539983 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095865294 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088618809 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110713848 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100696424 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090341823 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089882725 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091072249 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.088963959 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.089767451 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089020138 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169808965 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.090218375 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088771864 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088779053 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114956648 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089746435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089064237 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091531287 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08884845 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092255592 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089099014 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089625861 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08936783 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08946877 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08955801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089511652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.090014575 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088703381 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.09070108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112475624 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088987022 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08946892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089749402 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08939589 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088556305 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089263262 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089274745 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088701869 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089759125 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091088439 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089546497 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088870058 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089380294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111443265 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089094407 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088956116 seconds)
  done (took 6.258988729 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090480542 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090175911 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089582688 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089241226 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092171416 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089346108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089201915 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093916032 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089660639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090206133 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089412317 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09339391 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089708424 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089358771 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110594141 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092309111 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090313772 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090514484 seconds)
  done (took 2.717632697 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090413013 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089689162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089531326 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089731498 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089765554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089826869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089986203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08942016 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091473759 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089700263 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089621993 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089771501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089587966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090525992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110227041 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090792466 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089515544 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090545047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090302764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092621726 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090087586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089883564 seconds)
  done (took 3.072788584 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101579257 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.160053152 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101127549 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.165856723 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.093114235 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091785275 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098949688 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092065425 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129005687 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.092420538 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091967009 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092321686 seconds)
  done (took 2.382132099 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090856794 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091211458 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091371955 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089886381 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0905278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089676065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090702382 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092447067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089501606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089966724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090581098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089601816 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090534479 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089441376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11080173 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090025328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090378869 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090318455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092401533 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090627584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090961581 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0903216 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089822099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090431028 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089927633 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090394566 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089737308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0899791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089632906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114317319 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090194989 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091260673 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090743749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090248146 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090362214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090789025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090204836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090319648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090192863 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090409415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092296244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090333986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090124908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11126392 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090925681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090971272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090077507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09163415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090977892 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090273559 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090344829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092293813 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089480307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090540381 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090528021 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089547357 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090193555 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089898973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111608276 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091112615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09039234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090000283 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091547246 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092671279 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09106335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090187663 seconds)
  done (took 7.138660712 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091163385 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09027118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091399165 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09088421 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090141982 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090331217 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090758643 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090331775 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093494363 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09049222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090631201 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090306558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091113462 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090025477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111124365 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090401846 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091007582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090628104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090213514 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093671486 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09073673 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090008529 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090807202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09002397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091090717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091603792 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089778761 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090450271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09066291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1115922 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093036134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090841193 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092253414 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091418906 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090414413 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090826165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091190917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090012531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090304346 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090607636 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090655758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092299616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091067237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112134372 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090969944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090810301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091265771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091539429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090682429 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090922874 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091444415 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091610701 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093722529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090489379 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09140682 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090523631 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090127817 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090630435 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112274865 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091472557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091373327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091164186 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090797171 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093710046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09080878 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091773355 seconds)
  done (took 7.175546194 seconds)
done (took 143.824771395 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.162605242 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.186456081 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.241124597 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151079589 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.140660527 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122570364 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091150291 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.091536928 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.094434243 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.110750129 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092219797 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.093148699 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.142515489 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.188950471 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091544427 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.123845415 seconds)
  done (took 3.190641867 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182134501 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.266554223 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10790671 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111177522 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096520762 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091067611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090853537 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.143075747 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094324421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.091922016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091297317 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091061037 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092123675 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092026044 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09354249 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092305291 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091704771 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091413241 seconds)
  done (took 3.091741245 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109005567 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.133264959 seconds)
  done (took 1.326324289 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114499302 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.126204395 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266012108 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12002421 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106412511 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098330256 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119845879 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122782295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.166457519 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.092108511 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.09183393 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.093884899 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108714261 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091376966 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099806276 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092870045 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112629612 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090527249 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.090693431 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090738964 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133298931 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093073833 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091484476 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091596077 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.157698936 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091588413 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092514325 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094465189 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091530421 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091828357 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090742023 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090585266 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.091147589 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113522548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09384911 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.094307487 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09379092 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092126146 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095151369 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090951209 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.0918956 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091081696 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094011629 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092813107 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091951468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.092840621 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091890215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113843212 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092599138 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09609868 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091379398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091737103 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091764026 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093910064 seconds)
  done (took 6.666795739 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.497926606 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127889554 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09415952 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.547982141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094374409 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094324481 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.477737812 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115304451 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199681909 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.515594866 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106858726 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09191628 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105003526 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.200265868 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15036639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.224697673 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.413127129 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097546114 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.117848377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105618145 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092088149 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094098818 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095071562 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.695528381 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091659918 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092546859 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091229578 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091430521 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125518603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095777355 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092167625 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.107113893 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.210491082 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.102093099 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092232399 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094173347 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092878304 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.10222071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17674649 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.104280343 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170186709 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091604421 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114169086 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092100596 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09507073 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092481177 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093841269 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.108579555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105973389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092020493 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094625624 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093408855 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091521753 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093562372 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092959427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226467819 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.248770026 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094496382 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093334403 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09508307 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177518855 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101001233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105609709 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107958764 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.10222992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093234732 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.049319079 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104366732 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093651133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091988125 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092640452 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114077262 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094947084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153745947 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.675441609 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092617591 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092898225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092970433 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166441093 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09426248 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093346416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.100920009 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091831616 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095047233 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091938339 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114922209 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.105656556 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.189220829 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093370896 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09755169 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092486921 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102591073 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092980071 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188362921 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096538263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093699208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185164722 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09295248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.117079671 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104434305 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092486832 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105591356 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093335238 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096115383 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092076777 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.095887628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102211903 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098077683 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092295387 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092900692 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104436267 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097960475 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113523267 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.106425914 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.696103869 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103821868 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094293378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099427603 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093103033 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.104507082 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092520378 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.180982906 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093758501 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10200883 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092817188 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091580572 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116022567 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.095387628 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098664298 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092900347 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091883974 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095762076 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.199267509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.101709169 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092853638 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174276064 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174861064 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092371469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108276939 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094285553 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.128749126 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096757067 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092391401 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092441486 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.048779106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09706014 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094079075 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093073808 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176570358 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093400344 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101441869 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093797224 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092338207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047182278 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097948052 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115515067 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099737611 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092206028 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093093014 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092706409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092105471 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.096909203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105949768 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092465014 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092358999 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093640479 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.10236357 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092986172 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09374644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11600489 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094988522 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094536319 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095657067 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099984545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106649788 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095033905 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095578954 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.87038095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093745615 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094137735 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.10616263 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093308952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.196042961 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116961517 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104295422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101440499 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093878966 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225729362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.102736278 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176769541 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097689208 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107128865 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093886169 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09290049 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.097235121 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093654459 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09327926 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.09545984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115128119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093754783 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153533034 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094484718 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200508066 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094667296 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.107921136 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095592656 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092692607 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.197138648 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094503481 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096505152 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093609418 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09240351 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117136372 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.900317257 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094689678 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096390362 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094766983 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095081051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.103049535 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093471464 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093446377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092393412 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095723061 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.181814711 seconds)
  done (took 40.718614439 seconds)
done (took 56.073594935 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.16252041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.137210144 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185100284 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114990524 seconds)
  done (took 1.783103283 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.182030077 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111046096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.171480813 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092311929 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.174614492 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115875407 seconds)
  done (took 1.962396259 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.123502526 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.112849569 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.10924892 seconds)
  done (took 1.452961243 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.152420226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.1469823 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416828652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.340119222 seconds)
  done (took 2.266290347 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208524361 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095067419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094497105 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.173249699 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178712514 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132593138 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097539402 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104056289 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099791368 seconds)
  done (took 2.340593241 seconds)
done (took 10.916694366 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.40466848 seconds)
    (2/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.21112844 seconds)
    (3/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.156550905 seconds)
    (4/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.176197098 seconds)
    (5/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.103902968 seconds)
    (6/240) benchmarking ("map", identity, Int8, false)...
    done (took 0.212272172 seconds)
    (7/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.319606369 seconds)
    (8/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.175067931 seconds)
    (9/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.235433304 seconds)
    (10/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099918542 seconds)
    (11/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.246266518 seconds)
    (12/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.171337749 seconds)
    (13/240) benchmarking ("map", identity, Bool, true)...
    done (took 0.155306306 seconds)
    (14/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.106892219 seconds)
    (15/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10665523 seconds)
    (16/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.254591186 seconds)
    (17/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099446417 seconds)
    (18/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.165398996 seconds)
    (19/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164961872 seconds)
    (20/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206142759 seconds)
    (21/240) benchmarking ("map", abs, Int64, true)...
    done (took 0.182370799 seconds)
    (22/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198993082 seconds)
    (23/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107175717 seconds)
    (24/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213898044 seconds)
    (25/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110383429 seconds)
    (26/240) benchmarking ("map", identity, BigInt, true)...
    done (took 0.164016091 seconds)
    (27/240) benchmarking ("map", abs, Int64, false)...
    done (took 0.118876479 seconds)
    (28/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1765945 seconds)
    (29/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21510311 seconds)
    (30/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102005844 seconds)
    (31/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.17628622 seconds)
    (32/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097543102 seconds)
    (33/240) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104399454 seconds)
    (34/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.117905715 seconds)
    (35/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.197868966 seconds)
    (36/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178754038 seconds)
    (37/240) benchmarking ("map", abs, Float32, true)...
    done (took 0.170394267 seconds)
    (38/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101336116 seconds)
    (39/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.1479528 seconds)
    (40/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.096885605 seconds)
    (41/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092987505 seconds)
    (42/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162610047 seconds)
    (43/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.126652996 seconds)
    (44/240) benchmarking ("map", identity, Float32, false)...
    done (took 0.140622786 seconds)
    (45/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.106179318 seconds)
    (46/240) benchmarking ("perf_countequals", "Int8")...
    done (took 0.103596961 seconds)
    (47/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.162966611 seconds)
    (48/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.162120633 seconds)
    (49/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.203631036 seconds)
    (50/240) benchmarking ("map", identity, Int64, false)...
    done (took 0.138171483 seconds)
    (51/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095261589 seconds)
    (52/240) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09294303 seconds)
    (53/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.099115948 seconds)
    (54/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.095594915 seconds)
    (55/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198643559 seconds)
    (56/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093646834 seconds)
    (57/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.222645457 seconds)
    (58/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.107312649 seconds)
    (59/240) benchmarking ("map", abs, Float32, false)...
    done (took 0.093142013 seconds)
    (60/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107105369 seconds)
    (61/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093596173 seconds)
    (62/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092451307 seconds)
    (63/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.201662812 seconds)
    (64/240) benchmarking ("perf_sum", Int8, true)...
    done (took 0.105540846 seconds)
    (65/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.136419377 seconds)
    (66/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112050866 seconds)
    (67/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198580794 seconds)
    (68/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.112696484 seconds)
    (69/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103793816 seconds)
    (70/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.272969383 seconds)
    (71/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092879369 seconds)
    (72/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098154417 seconds)
    (73/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.126276347 seconds)
    (74/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096349561 seconds)
    (75/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.098376873 seconds)
    (76/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.117046704 seconds)
    (77/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093755619 seconds)
    (78/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.104002995 seconds)
    (79/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.1240832 seconds)
    (80/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.121434603 seconds)
    (81/240) benchmarking ("map", abs, Bool, false)...
    done (took 0.140246054 seconds)
    (82/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100779882 seconds)
    (83/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098236966 seconds)
    (84/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.109224125 seconds)
    (85/240) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10310378 seconds)
    (86/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095991233 seconds)
    (87/240) benchmarking ("map", identity, Float32, true)...
    done (took 0.106751943 seconds)
    (88/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.193127008 seconds)
    (89/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.208166263 seconds)
    (90/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.176038338 seconds)
    (91/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093547413 seconds)
    (92/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.16709352 seconds)
    (93/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103673359 seconds)
    (94/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.165190146 seconds)
    (95/240) benchmarking ("perf_countequals", "Float32")...
    done (took 0.106259303 seconds)
    (96/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096422684 seconds)
    (97/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092365981 seconds)
    (98/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.202517981 seconds)
    (99/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100099954 seconds)
    (100/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094303086 seconds)
    (101/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136537191 seconds)
    (102/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.098574474 seconds)
    (103/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.134798858 seconds)
    (104/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156897853 seconds)
    (105/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.112757057 seconds)
    (106/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103006092 seconds)
    (107/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.106582919 seconds)
    (108/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.108740033 seconds)
    (109/240) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102429069 seconds)
    (110/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.140643418 seconds)
    (111/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.105256945 seconds)
    (112/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100723758 seconds)
    (113/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111436115 seconds)
    (114/240) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10238627 seconds)
    (115/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.223623254 seconds)
    (116/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.107446964 seconds)
    (117/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120758034 seconds)
    (118/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098101979 seconds)
    (119/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.223065554 seconds)
    (120/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.12666168 seconds)
    (121/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095172064 seconds)
    (122/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093508742 seconds)
    (123/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.140495812 seconds)
    (124/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092984734 seconds)
    (125/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125164944 seconds)
    (126/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096011134 seconds)
    (127/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097778485 seconds)
    (128/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09370969 seconds)
    (129/240) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102857445 seconds)
    (130/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093435505 seconds)
    (131/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096124475 seconds)
    (132/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095665223 seconds)
    (133/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097575237 seconds)
    (134/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093485236 seconds)
    (135/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120796695 seconds)
    (136/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09816131 seconds)
    (137/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09456039 seconds)
    (138/240) benchmarking ("map", identity, Int64, true)...
    done (took 0.107261164 seconds)
    (139/240) benchmarking ("map", abs, Bool, true)...
    done (took 0.108206828 seconds)
    (140/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105497377 seconds)
    (141/240) benchmarking ("map", identity, Float64, false)...
    done (took 0.144153892 seconds)
    (142/240) benchmarking ("perf_sum", Float32, true)...
    done (took 0.104583542 seconds)
    (143/240) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092761257 seconds)
    (144/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098767285 seconds)
    (145/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117326909 seconds)
    (146/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092717621 seconds)
    (147/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.136110482 seconds)
    (148/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093391027 seconds)
    (149/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096935554 seconds)
    (150/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093715518 seconds)
    (151/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.112786606 seconds)
    (152/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.115163512 seconds)
    (153/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095983221 seconds)
    (154/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094105573 seconds)
    (155/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.137222322 seconds)
    (156/240) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093940435 seconds)
    (157/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135692196 seconds)
    (158/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09644141 seconds)
    (159/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095276112 seconds)
    (160/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092592351 seconds)
    (161/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.093374617 seconds)
    (162/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.116063746 seconds)
    (163/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.096580149 seconds)
    (164/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09965153 seconds)
    (165/240) benchmarking ("map", abs, Int8, false)...
    done (took 0.162813457 seconds)
    (166/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.096744472 seconds)
    (167/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.12653091 seconds)
    (168/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.100759445 seconds)
    (169/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098507399 seconds)
    (170/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096224711 seconds)
    (171/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.133908646 seconds)
    (172/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096592641 seconds)
    (173/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104933771 seconds)
    (174/240) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12599526 seconds)
    (175/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09485969 seconds)
    (176/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093995613 seconds)
    (177/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.09666751 seconds)
    (178/240) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093828001 seconds)
    (179/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094161431 seconds)
    (180/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099517194 seconds)
    (181/240) benchmarking ("map", identity, Int8, true)...
    done (took 0.1067587 seconds)
    (182/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.103461338 seconds)
    (183/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09694615 seconds)
    (184/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093539191 seconds)
    (185/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.140297273 seconds)
    (186/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096777199 seconds)
    (187/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.098427755 seconds)
    (188/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095967471 seconds)
    (189/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095273149 seconds)
    (190/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.113177045 seconds)
    (191/240) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093954368 seconds)
    (192/240) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13819253 seconds)
    (193/240) benchmarking ("map", abs, Float64, false)...
    done (took 0.141623681 seconds)
    (194/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.137412968 seconds)
    (195/240) benchmarking ("map", identity, Float64, true)...
    done (took 0.107643738 seconds)
    (196/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.097760808 seconds)
    (197/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.13483756 seconds)
    (198/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093331154 seconds)
    (199/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096272779 seconds)
    (200/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.096079113 seconds)
    (201/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151499918 seconds)
    (202/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121937984 seconds)
    (203/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093617522 seconds)
    (204/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097188798 seconds)
    (205/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113406544 seconds)
    (206/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.133604419 seconds)
    (207/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093499084 seconds)
    (208/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.117512156 seconds)
    (209/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097019808 seconds)
    (210/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.113759026 seconds)
    (211/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130706086 seconds)
    (212/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111019519 seconds)
    (213/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108281271 seconds)
    (214/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.097771375 seconds)
    (215/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093926334 seconds)
    (216/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094398816 seconds)
    (217/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.094559776 seconds)
    (218/240) benchmarking ("map", identity, Bool, false)...
    done (took 0.093902461 seconds)
    (219/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.097689328 seconds)
    (220/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.096341723 seconds)
    (221/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.127655098 seconds)
    (222/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.100095308 seconds)
    (223/240) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094840594 seconds)
    (224/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093555817 seconds)
    (225/240) benchmarking ("map", abs, BigInt, true)...
    done (took 0.106871476 seconds)
    (226/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093675166 seconds)
    (227/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.093733063 seconds)
    (228/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103337932 seconds)
    (229/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093975633 seconds)
    (230/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092614916 seconds)
    (231/240) benchmarking ("map", abs, Float64, true)...
    done (took 0.107572925 seconds)
    (232/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092963132 seconds)
    (233/240) benchmarking ("map", abs, Int8, true)...
    done (took 0.132733633 seconds)
    (234/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.115264419 seconds)
    (235/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112494251 seconds)
    (236/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096425926 seconds)
    (237/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093842007 seconds)
    (238/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094173384 seconds)
    (239/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093841416 seconds)
    (240/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094604067 seconds)
  done (took 30.885698084 seconds)
done (took 32.006800961 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.109477647 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172321823 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10604221 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.175796223 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105485291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.122484304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.103387496 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.131745757 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.110038684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108714175 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104441569 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.099596225 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102676517 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1054693 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103469929 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169728884 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120576688 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101625156 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119344838 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094455402 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.094942535 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094535603 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.093869321 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.099609001 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105462083 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104451777 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099884944 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102554616 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094625667 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094547788 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093977395 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102272735 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119782912 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106602924 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.101216538 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097329948 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103386677 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103735405 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094521719 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094385662 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.105041993 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094182434 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.10166355 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100749775 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093928316 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.119304244 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097482014 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108997373 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170807512 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099821844 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.104869518 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104781238 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10140489 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093135783 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093687133 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094486813 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118789327 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173416957 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094513807 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098693324 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.106470336 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.102877064 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093853417 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094028638 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094384633 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112189593 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107133854 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120019676 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115332467 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.09450708 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.095292441 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095397043 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094107173 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.094665028 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103226564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105576217 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.094483734 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09376683 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102075454 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.102030376 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.119045435 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097269358 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094314104 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094221162 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097204858 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099658254 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093946132 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094563377 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09429577 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095011468 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097557431 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094400187 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093876415 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107094735 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094318536 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120391383 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.096006315 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094987431 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094748558 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094676638 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.094407616 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099963756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101188358 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093487899 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094349447 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105110455 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094034888 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094594231 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.118075745 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095153698 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108399382 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111966565 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.09775953 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099809724 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094349498 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.094547396 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094614805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095444554 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.09565648 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094772535 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09452903 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095496347 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122075304 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097379683 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.110641767 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.094895296 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094527841 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097266985 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094410607 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.101136908 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094659928 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094857423 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094192649 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.111480389 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096965426 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.096718689 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118548218 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098381238 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094972369 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094423911 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09471876 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093883277 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094566586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095385109 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09409292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099559456 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101990645 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097004688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095236972 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.095216431 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093719537 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.118864883 seconds)
done (took 16.845254096 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095244646 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112648813 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095380243 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171194414 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155263716 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09796271 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.09539256 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094643944 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101032769 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.118741382 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094907908 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096727983 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095224815 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.095454784 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094910898 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099586298 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096514021 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095622052 seconds)
  done (took 3.068527419 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105268879 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116218389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105630248 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105736184 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094785246 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09497928 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094380907 seconds)
  done (took 1.906211919 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095050432 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184037684 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.169436581 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.16732735 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.199190479 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.172084695 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094688817 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105605598 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095044708 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.179205721 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.210200562 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095511164 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099092619 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.171714706 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095550722 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.161709305 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094710005 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121545993 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.166639354 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095720329 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10785112 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103047927 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095257736 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177993143 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097833073 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122131214 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097280721 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098842346 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122014521 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.178042322 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.098283285 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095314235 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.173244319 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096790446 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.200558693 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100444867 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.175119306 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098177914 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09980317 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094741883 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096877366 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.183785626 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095837021 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098665644 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097330062 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184376639 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097774248 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.176494591 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095687935 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121418555 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099969861 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096992797 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096557731 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095273922 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185146592 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097414205 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.163042105 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192208759 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176956748 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.162962841 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096589172 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.202710406 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.168944997 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.096747576 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095598061 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09527313 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163094655 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093869436 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.101364276 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.186061608 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096634876 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.168089074 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167578008 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099245274 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095882953 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123296341 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096054343 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.16861824 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095442031 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098561064 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164776834 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094021244 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096160196 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095130275 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120822211 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099317264 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095075219 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094875614 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.165875864 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.164522207 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.097736892 seconds)
  done (took 12.81563484 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095568338 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095436881 seconds)
  done (took 1.414651022 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102643692 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095336712 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104828502 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095189658 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101479321 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.178761285 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.179828194 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120428405 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.102405984 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102487413 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.180128821 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.182412834 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.180149728 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121478949 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.181686953 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095376877 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.180351296 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095484252 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101428596 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098144925 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.099666265 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096027549 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122521152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.160962391 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095085991 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094943213 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095724173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101292614 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101592252 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095258384 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098119521 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095028935 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095588251 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120805041 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.181658453 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096069442 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095304808 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096469076 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095322752 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0956339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.182567808 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097737286 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121712816 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096568298 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096038175 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096343299 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096179138 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096395878 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.179906393 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096145974 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095403284 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094711906 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097658538 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095310057 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123565426 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095590483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095729486 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.182136926 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095677471 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095545465 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095186168 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095076523 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095535205 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098464058 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095051878 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122069099 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096242745 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097236213 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096364523 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095516633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095793917 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095370567 seconds)
  done (took 9.363175263 seconds)
done (took 29.744912097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.136566765 seconds)
  done (took 2.344754636 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635149467 seconds)
  done (took 1.846937751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.7102285 seconds)
  done (took 8.956505557 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.364162387 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.282630984 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.869076534 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13480651 seconds)
  done (took 2.860217552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.121348468 seconds)
  done (took 2.351334387 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234663705 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195058324 seconds)
  done (took 1.643513978 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.739972946 seconds)
  done (took 1.973487271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.318342384 seconds)
  done (took 2.536181305 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.193208679 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160686876 seconds)
  done (took 1.589169729 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527231088 seconds)
  done (took 1.762710848 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.383602469 seconds)
  done (took 9.624752473 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230372731 seconds)
  done (took 1.460697707 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.260027983 seconds)
  done (took 1.498883073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.063029164 seconds)
  done (took 3.302543743 seconds)
done (took 44.978731269 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103082393 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.107375634 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106622554 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.104415646 seconds)
  done (took 1.646416604 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102702588 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.103649996 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102107027 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.100302615 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102511582 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.101018737 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104555189 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100257804 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099715035 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099998745 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100741927 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099704489 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102228479 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123937706 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.097253609 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100947505 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101535952 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099834733 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099506284 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099908443 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.095604461 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100710622 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102107861 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104056962 seconds)
  done (took 3.686425195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103540552 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101904875 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101990117 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100806792 seconds)
  done (took 1.653624889 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104239177 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.108366908 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1068198 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104893533 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106787761 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106054719 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101811632 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096092878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098558021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.104510874 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108662079 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102274103 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131929715 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105081935 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106710583 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096654855 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.104418427 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10952594 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104072127 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103535197 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101514747 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103316107 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096081168 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099640501 seconds)
  done (took 3.755343238 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166145024 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.108119809 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.119702496 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.122637507 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.097974789 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.121931317 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.119548427 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.096476383 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.103428843 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.096061638 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.095615939 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.120747481 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.123796788 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.10570736 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095618803 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.099118107 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.096776918 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102963921 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.104845377 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.095628942 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.149550167 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.108362846 seconds)
  done (took 3.700627615 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104826213 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.101423328 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097055493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.096380455 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109454402 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102673105 seconds)
  done (took 1.864760539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102332425 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098842771 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099095097 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09671637 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.101269413 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096409293 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09682307 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097489203 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098165454 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.098286032 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.097253894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096224596 seconds)
  done (took 2.428878395 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211111186 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116409066 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122169652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097543568 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100742044 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096579584 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109756054 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099801629 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09984281 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096151718 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096319485 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097160375 seconds)
  done (took 2.595725614 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146897389 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101668888 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160204669 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.450717691 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112914108 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156421781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.389399977 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124448852 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.154363969 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111713155 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131258523 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113115466 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147820666 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140120079 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110114771 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.375586581 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152177327 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147736752 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115136355 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143457836 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124755074 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16474513 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133004288 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116941956 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139858579 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114594606 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101955593 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104139943 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11996895 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122591598 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119780471 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141877777 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107435859 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132324049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113869707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119724605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208849348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106731612 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.234659276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132336486 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145380373 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111023202 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154217037 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116789302 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106119452 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14040029 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109842872 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.129996247 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108075576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113669612 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155181673 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126672674 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.118807481 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108890827 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.434157854 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105216441 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113601161 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147025207 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139542075 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137316988 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130623764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101101195 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170425458 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130069966 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127284113 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111953376 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117969772 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096755604 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160500516 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166012938 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126644511 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156320175 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.139221055 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108070122 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125844888 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12169192 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149624884 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128221563 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12499636 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100526235 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14383913 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106184611 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104874519 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168472863 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102331781 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167658234 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108457907 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.308730152 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136175106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119069554 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116903367 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121188167 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152728559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11950795 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.140330151 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114601975 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117922301 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14750388 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102032619 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116911021 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138947902 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.101299816 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120441787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126175156 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126042476 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133778053 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122336423 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130554726 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111746211 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134050461 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113703884 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150523626 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123137282 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134266442 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10541358 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111559698 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134340951 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12976103 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108654249 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150140322 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133045498 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.139423402 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10622316 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106841643 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183471645 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110839194 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158132116 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107340275 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106451471 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.128237061 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130483498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117613272 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125349197 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105602882 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123066393 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156241642 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104037747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112324575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134660028 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129619961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103332728 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136947211 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106256886 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.115613969 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12597316 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109542365 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145854057 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128062097 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127554137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109984627 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132030536 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113956836 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105785478 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131006391 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148293482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100839495 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126583387 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132940067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103623678 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175966777 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119661942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177570569 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127030529 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105448902 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179281319 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104045096 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126343297 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105178623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121244137 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118287506 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126934709 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146311831 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.142221627 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124135328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116112656 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118916226 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156727972 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11649754 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.108067179 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127166375 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124400663 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.1012519 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096929157 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104399537 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111943099 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102603345 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109160625 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147130295 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119361999 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145087238 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125251929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108504793 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159082722 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103030335 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118619944 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125447521 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110680682 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.126035079 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13354724 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132798287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106835719 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136066086 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.104983518 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102200363 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103312751 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121286459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111319384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106848701 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106601768 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134304164 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123236377 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140964083 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152588245 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145923785 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141452176 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104795725 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143694348 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11563862 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127731407 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177078823 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105593142 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.116886897 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133627136 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109007226 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139924418 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12502038 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126399464 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156042808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129253149 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103650784 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109279502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159646317 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105145797 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112958489 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107900218 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105355572 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10923127 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109370588 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097429139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151492121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11461888 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114562888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11533003 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139801774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104668713 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107473033 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131562426 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138657974 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.12304539 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121430601 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117335397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112452894 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136934939 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120784659 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103380778 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.438406371 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127894803 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124357199 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105566979 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106042329 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157095265 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112581618 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113468116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178417381 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108327562 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129134583 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156761296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.107601098 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10621096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114610175 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115313645 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128025138 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097892592 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122877677 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140801426 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125385279 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140141475 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131144151 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125459591 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.120976704 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120671504 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109082153 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167528088 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126011122 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122643299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129318268 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112630825 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176964542 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127816964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104883748 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098629882 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177994418 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109383825 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126818581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.175407551 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152082581 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131662565 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158436841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136777808 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103150889 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126563584 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14136888 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150272502 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106535123 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107708164 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131613912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167318414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130520683 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156787962 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.411586439 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143111149 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118415669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12094051 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.432235408 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104767772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105691231 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113921511 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119113105 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103064662 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176783504 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128188723 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10950741 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114687305 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107387014 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172609639 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139045034 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10799854 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12217409 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107547094 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117422328 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111131021 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120074187 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114912588 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143119131 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117008441 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133200371 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122267268 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.103153634 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126327969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125867409 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125375129 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113620479 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110199429 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204826462 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104765546 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113955589 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104599401 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098459575 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149551752 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.150453233 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128450667 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11890227 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125764514 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106597896 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100701528 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109166674 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126193637 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108265665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.105376968 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124956717 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.132026518 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128285553 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12951441 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108938662 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12972224 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107446574 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098968731 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107321623 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10977663 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107257152 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169765922 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121580045 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099019783 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120196668 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112223607 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119381768 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112117823 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133844877 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.518984291 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105001536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132370896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12248142 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168272812 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115456624 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130295735 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127187667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143504893 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10752958 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109470636 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2088127 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110681354 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123166288 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105398411 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108774209 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142592113 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09952605 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116692494 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152920941 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113565478 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107042457 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123656244 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114413439 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133165532 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115520895 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136364217 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147705256 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126875967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17701606 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10748807 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152871309 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115461702 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10429384 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11835115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119761098 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145719091 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109458608 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106565503 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109121306 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128748255 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105047569 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12154708 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154027094 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126716648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128205634 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098735987 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126502933 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106073508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126535055 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098792889 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107813505 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15498296 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107382141 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10567227 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130625633 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111296012 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126574046 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100061451 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170002359 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134975956 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103548038 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105723868 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392542741 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150788766 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202458452 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132019713 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109169309 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13972132 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116470285 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.123078266 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13163147 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099400873 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10850688 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099212275 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.217826864 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152963718 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131115511 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149203957 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113310612 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177298653 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112152019 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277639102 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118504129 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132583726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.149586088 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103627589 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111693778 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105306269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110450638 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17357792 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129357878 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127892784 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.109865356 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099183049 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105970959 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10630158 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115494986 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11065146 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156054417 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109099098 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11961666 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108973159 seconds)
  done (took 79.80015376 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149534072 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138504629 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149927596 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219536907 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165921256 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281097669 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.254550378 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247960916 seconds)
  done (took 2.957563701 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.102113542 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.122237041 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.121209078 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123364328 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.10390276 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.30450714 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142791849 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099854217 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143465576 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126927624 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.102439134 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.460001621 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100043511 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.103184855 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126241954 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.101318547 seconds)
  done (took 3.719854869 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.471548805 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.342376095 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.572163119 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.204188033 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.426463929 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122290621 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.528430216 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.102237539 seconds)
  done (took 10.120605281 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136567545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129080345 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.215074194 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.23086077 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136133408 seconds)
  done (took 2.195144595 seconds)
done (took 121.350620628 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105621901 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.109524248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108999806 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.107444547 seconds)
  done (took 1.763734666 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155820159 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.112489746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10231158 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.102321878 seconds)
  done (took 1.823113554 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422719776 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101674875 seconds)
  done (took 1.91242271 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132384741 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.125466961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126005481 seconds)
  done (took 1.744948022 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113762773 seconds)
  done (took 1.470052325 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107062871 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.106755075 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176633234 seconds)
  done (took 1.747503216 seconds)
done (took 11.816174156 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.20765108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.944910902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410654203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153508168 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.701318124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.391916372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.403573888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100883972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110979599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101390994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101217679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681060403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.350535162 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874902263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.384748852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.873796714 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682941932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127889381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101089915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10083038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.352052236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10091488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10097245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100677275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681507802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.399928665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100893024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.875291804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10109471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12779938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386499712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10170592 seconds)
  done (took 20.575279998 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13305108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12444304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105156461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101231061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100830697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102910197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105871267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101212216 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117799448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100998121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10212646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126758119 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104915061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102645654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116719236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102774853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101149641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103045256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100928333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101826312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104189971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100968102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127217594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101682444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101293395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111415053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10133669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102176787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103964114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102407372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103507948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102039861 seconds)
  done (took 4.781800685 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144449383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138347858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107396142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133234616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130544447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104301934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.157581196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104016728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145663562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101648556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103488973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101891649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118308072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102199359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117535347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101879351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101972485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101203769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10391654 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127405537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106337883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101277644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101907059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101284159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102027527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111829073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101247203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101781781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.102107963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129703531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104303278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10256114 seconds)
  done (took 4.979935061 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.101535859 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.110250263 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134152501 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135630389 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10053688 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100602916 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100649206 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100760625 seconds)
  done (took 2.251987785 seconds)
done (took 33.949936287 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.114823686 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108937485 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.111629091 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.111483801 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.168726936 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099593966 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.111210964 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100912198 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108484381 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11476044 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128791751 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.104165741 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112853254 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104993439 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.170648991 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.110365981 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.170332476 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.200629416 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102537422 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110456994 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099946095 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.171752728 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106567526 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102309894 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.195539651 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105100656 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104503314 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104753085 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10464601 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102552399 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.170450564 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104261759 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102823817 seconds)
  done (took 5.392740735 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.175504975 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.101071291 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101696675 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100715138 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099869047 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.100451978 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.175715538 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100265653 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128384129 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100501539 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100335806 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.190771602 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.100463861 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.101515546 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.102346168 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.097232872 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099968877 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.102765326 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.205473123 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.100757749 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.102605598 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.102407441 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.099550832 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100956372 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.195669019 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.097392646 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.101244776 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.101065803 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.129801754 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.100053528 seconds)
  done (took 4.903130148 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10463175 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.120697068 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119985671 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.124805758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105037481 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101209265 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.114787877 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111550994 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.10528752 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138993275 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101515749 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.105954272 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131819089 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10246818 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.114069179 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.118385764 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.115426936 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100302802 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.11185994 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.15173689 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108922084 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110158585 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.108025085 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.106249102 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107346736 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.141743375 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124096453 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.101302014 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.101457977 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.111199768 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101395456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102673167 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.125728235 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113857635 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101481637 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106043509 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11211831 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.104830041 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137718759 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.114057335 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.104773894 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.102495474 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122675574 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.102647787 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101089663 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.10064791 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112507953 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.11504905 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.113682196 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102624386 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123581429 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128770271 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102304196 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106625806 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102730811 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102314299 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122646706 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.112242433 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106089097 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.104638685 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.102691733 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102739809 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122967134 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.113611901 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.102852497 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146829288 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.101605882 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.101673249 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105844417 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101976667 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.119129502 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101817504 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109117573 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.10361201 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123046659 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.100751193 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.102248748 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.101542613 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.130061231 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.108439738 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109800545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.112356536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.10281585 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103133617 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.103231122 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103025825 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.100704075 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103914874 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.099867679 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.101152545 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.102863198 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100282165 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130816056 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103306171 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102574359 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100530796 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106308131 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102124563 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.101811937 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.102472671 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110788599 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.124239113 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.103360311 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.110144179 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.107090751 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102614823 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.151853991 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101587087 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102587014 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.115667209 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.102733411 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.102572541 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110734219 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103598945 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.104908166 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101207197 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12926268 seconds)
  done (took 14.304084357 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.176386414 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.234121432 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.283472409 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245535977 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.188121492 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.163124974 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.256775552 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111464629 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233317213 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.109258556 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.154290872 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.234082671 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.11571516 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292501838 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106290062 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126221378 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12484354 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.101966185 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112915286 seconds)
  done (took 4.774510998 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104575095 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121673091 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.102858933 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.102225793 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103241759 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103704527 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.113915329 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.107241833 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.10195449 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.104445826 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115587547 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1166409 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.106510632 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.15149002 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.109441622 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.102475196 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10114038 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.108984741 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103605363 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124028434 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.112794298 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10670097 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10555275 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.102282097 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.101893426 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101210608 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.10107231 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130944461 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102960855 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107430931 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.108239492 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.100932157 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.107241738 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.109680673 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104568623 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10772507 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102349925 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107163594 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.212202645 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101983933 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102037115 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101902704 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105219 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102023606 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104096356 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.110315288 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.100347473 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102204597 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110815563 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101713026 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102088695 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.103292356 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.133819658 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103190353 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104262898 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.104808854 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.101464323 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.114337677 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.102649407 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102090789 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.104088501 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.110878836 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.104257383 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101909753 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103089255 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.106449783 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.136088424 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113123361 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.101681283 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102652839 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.101666759 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10823179 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101209621 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102029261 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.1014335 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107775408 seconds)
  done (took 9.675668885 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102556378 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112052976 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.11692286 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105083576 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.111221397 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.10310468 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.112945277 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.11694444 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115209185 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103230631 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115265215 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104300254 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143205263 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.112370727 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.11241856 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.111498932 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.112754823 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.105174528 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.107797341 seconds)
  done (took 3.543798985 seconds)
done (took 43.963916515 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.413981651 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.601802216 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.400945854 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.399173699 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.417040718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.41088892 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.399385138 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.400135425 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.880484215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.402849213 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.399595804 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.400200109 seconds)
done (took 30.92026595 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.449772916 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.40384748 seconds)
    (2/2) benchmarking "String"...
    done (took 1.405952325 seconds)
  done (took 4.502360686 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.405030233 seconds)
    (2/2) benchmarking "String"...
    done (took 1.403936768 seconds)
  done (took 4.203354089 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.399148955 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.411952874 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.397817518 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.573547136 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.448725027 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.397977163 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.409421295 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.398320555 seconds)
  done (took 18.431318324 seconds)
done (took 33.381850691 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.432152727 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.586668711 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.669763332 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.398395423 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.401517427 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.398764039 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.40007846 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.418949112 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.399174663 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.407982892 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.748364348 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.658321392 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.398399899 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.800803228 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.399374619 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.406494012 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.398194227 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.643283734 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.399455016 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.446151743 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.399779146 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.406772072 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.417062633 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.41885506 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.498759854 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.402202794 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.452847747 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.399568847 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.590168243 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.430159605 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.441596982 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.397189471 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.456506244 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.402326362 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.402001307 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.411344976 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.591218303 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.500249371 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.415463544 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.400118239 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.591301668 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.404251002 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.405621032 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.403108625 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.402269872 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.429664684 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.662702936 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.497056517 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.40249186 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.398928926 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.423679945 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.793722614 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.409342073 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.414653274 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.404763187 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.631472351 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.406383502 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.440333153 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.418998874 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.414394825 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.408302894 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.400714222 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.42744561 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.403057209 seconds)
  done (took 157.037368414 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.397633828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.398149236 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.39907374 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.401653245 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.399401929 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.398304252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.399473425 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.398010704 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.39863789 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.398959411 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.398829494 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.39931003 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.398500075 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.343784414 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.398335991 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.419026624 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.400763787 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.398178081 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.399100323 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.398133212 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.404734352 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.398195266 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.398135922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.398980756 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.42357708 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.450729392 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.417876092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.402092807 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.39919803 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.39803584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.422021917 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.402728617 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.911614733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.251482001 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.405466202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.416271053 seconds)
  done (took 87.240109027 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.397642959 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.397722227 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.397747596 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.398247831 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.423953485 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.398624107 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87024997 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871053355 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.369425363 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.531938241 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.81778544 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.466721079 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570187704 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.398866301 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.483582471 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.409947589 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.399099102 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.441147235 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.425272176 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.397666627 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.397752283 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862514661 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.410555077 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.629007281 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.554887424 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.397413042 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424202682 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.830830231 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.398521124 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42380212 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.778576548 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.424911025 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399020289 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659020957 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.373744535 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.398331365 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.503352069 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.399279816 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.423948078 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.397413074 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.667874858 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.399894689 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.398341284 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.401024625 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955740785 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.398569783 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870797119 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.399418717 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.28618725 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.398392507 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.398527611 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.569532044 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.411396212 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.883270206 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.39834988 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.397678443 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.400553463 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.397503539 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397825043 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.423975176 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.560227465 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.55129068 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.398896541 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.402504305 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424410529 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.399059788 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.398128735 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.770879831 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.462511919 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.173796514 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862205359 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.398162507 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.519547354 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.487332074 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.514810969 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.398349451 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.397519201 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.397774557 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.397996135 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.502027004 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.397970219 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.75668352 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.555642246 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.399112878 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.473466208 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.490134843 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.398305055 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650821879 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.399184002 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.397756168 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.011528882 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.486630589 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.397934958 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.39844514 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.398827365 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.75839787 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871505819 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.554892923 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.399090581 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.555734697 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.410918748 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.39790597 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.754733113 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.854804275 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.958626131 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.399346258 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.504070966 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.555795111 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.399369737 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.397995664 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.460604586 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.39860723 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.452841481 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.398196693 seconds)
  done (took 386.722236583 seconds)
done (took 632.394168868 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.398536249 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.405565875 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.403517611 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.408420462 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.408193293 seconds)
  done (took 13.417909427 seconds)
done (took 14.811488282 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615184041 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.614088938 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.460080644 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.429189731 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.520158971 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.569375583 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.435575219 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.614741969 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.614675604 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.573113035 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.425508664 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.443764022 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.517048113 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.51692969 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.614814875 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.468283129 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.612902751 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.614876416 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.518945497 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.468670168 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.443021899 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.614965596 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.424334984 seconds)
  done (took 36.532997609 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.759864309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.806073481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.452237211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.756438398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.435901015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.75006147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.633506984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.629145122 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.618878445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.49359127 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.417888737 seconds)
  done (took 19.15689117 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.699674184 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.70847021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.455231352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.717589678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.438564916 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.708282618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.602305836 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.598310507 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.595108192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.429012041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.419611573 seconds)
  done (took 18.774971809 seconds)
done (took 75.867871718 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.431173436 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.483248072 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.414076039 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.41454459 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.413662107 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.413123324 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.415729659 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.414235875 seconds)
  done (took 12.801273994 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.41366946 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.413074723 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.412963347 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.412773538 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.413082224 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.412842415 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.413574616 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.413340106 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.413728725 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.412938728 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.413370471 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.413632985 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.413321343 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.413177104 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.413682761 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.413884307 seconds)
  done (took 24.015730127 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.415310583 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.413498974 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.412999294 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.413723301 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.412876783 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.41349591 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.416325523 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.413555486 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.413150075 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.413361347 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.414384436 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.413729899 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.413923096 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.413518833 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.413010195 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.417162141 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.412885501 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.413298555 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.417224051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.413171117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.412667816 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.412755547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.413305954 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.413102178 seconds)
  done (took 35.336619227 seconds)
done (took 73.555718641 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.410014102 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.411558433 seconds)
  done (took 6.223545964 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.805870312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.862342218 seconds)
  done (took 5.070861911 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.413729981 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.412765389 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.41429576 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.413740518 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.413170251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.412908676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.41379097 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.41268325 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.412592205 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.41484213 seconds)
  done (took 15.536801748 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.412776646 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.412774955 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.413007633 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.41291885 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.41313 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.412742046 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.412848799 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.413378088 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.413565646 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.412731372 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.413058753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.412795636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.413274115 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.413384676 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.413329355 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.413545952 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.412761579 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.413387994 seconds)
  done (took 26.838334022 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.428951562 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.436590653 seconds)
  done (took 4.268167953 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.548285543 seconds)
    (2/7) benchmarking "second"...
    done (took 1.4573619 seconds)
    (3/7) benchmarking "month"...
    done (took 1.521399608 seconds)
    (4/7) benchmarking "year"...
    done (took 1.511738158 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.457598638 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.445811001 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.457843718 seconds)
  done (took 11.802752339 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.415963406 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.668048949 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.810572086 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.151177255 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.415423436 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.417155748 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.235596587 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.418030759 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.419567799 seconds)
  done (took 16.354685912 seconds)
done (took 87.497670904 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.413055843 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.411372872 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.411330771 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.413999313 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.775919746 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.430158594 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.410026372 seconds)
done (took 17.668666571 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.414836 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.412522397 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.422067451 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.407877032 seconds)
  done (took 11.059562863 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.382679309 seconds)
    (2/2) benchmarking "read"...
    done (took 1.736578273 seconds)
  done (took 5.521738496 seconds)
done (took 17.983979449 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.413178722 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.413027051 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.413511299 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.413720938 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.413068715 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.412943412 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.413555032 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.413109462 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.412920848 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.413744817 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.413405813 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.414751345 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413200998 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.413540463 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412889348 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.413270486 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413361375 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.413040683 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413350846 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414048056 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413396498 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.41307079 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.413085726 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.413116661 seconds)
  done (took 35.323441842 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.413062142 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.413623796 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.414383561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.413806748 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.413705189 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.413844562 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.413508685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.413835636 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.413822187 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.413433131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413970289 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.41382151 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.413034318 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.414198542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413673914 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.414278455 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.413716496 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415224952 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413834143 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.413512151 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.413168405 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.412970387 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.413904972 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.412655202 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.413849466 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413430641 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.413425601 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.413526098 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.413272977 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.413425824 seconds)
  done (took 43.813370711 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.41729402 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.417951566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.413095335 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.413388396 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.41351928 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.413060922 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.413546752 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.413785649 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.414354683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.41378334 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.413009958 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.413738683 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.413402247 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.413813567 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.413113795 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.413268648 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.413256487 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.413891564 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.41608257 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.413742003 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.413656597 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.413907068 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.413345191 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.413727585 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.413484923 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.413229317 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.413806024 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.413821652 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.413483176 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.413475093 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.414548696 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.414026843 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.414430334 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.413600476 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.413950187 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.413783862 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.417968162 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.418614098 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.414482642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.413917018 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.414084755 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.414005512 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.414388493 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.413619857 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.414081518 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.415129639 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.414399846 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.415143515 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.415975443 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.413737778 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.414323455 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.413968958 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.414213116 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.413587118 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.413936398 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.413738802 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.413880768 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.414146731 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.414045663 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.413579909 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.413517361 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.413619408 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.413770177 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.413396891 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.413944482 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.413315087 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.413489517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.413349339 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.413477002 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.413838099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.413338654 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.413846392 seconds)
  done (took 103.219122651 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.413472308 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413548611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.413639244 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.413472185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413989953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.41344376 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.413785056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.415472476 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413313455 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.414397456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413479043 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.413983513 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413904466 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.413727425 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.413430861 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.413705884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.413830239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.414103759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.413162771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.414495253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.413479942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.414204234 seconds)
  done (took 32.507293609 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.413679297 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.4144519 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.413880059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.414740107 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.414919067 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.414735891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.41364111 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.414541313 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413380628 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.414385519 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413874552 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414233923 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.415153381 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413718371 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.413959293 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.417226428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413888711 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.415844135 seconds)
  done (took 26.8638599 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.414413918 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.413992041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.414005364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.413772313 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.413791783 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.413632991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413492578 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.414186468 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.413974348 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.414675328 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.413955874 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413396257 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.414364506 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413868013 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413536466 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.413831176 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.414119696 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413909423 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.414089397 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413790137 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.413978537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.413225432 seconds)
  done (took 32.510052579 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.413705969 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.413852814 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.413665508 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.413613168 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.413476199 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.41356847 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.415873434 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.413630486 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.414981606 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.413537208 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.414482926 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.413535323 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.415103918 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.413962658 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.413636913 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.413982625 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.413531968 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.413696922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413640843 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.413223665 seconds)
  done (took 29.682076422 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414134332 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414614507 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.414247355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414367964 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.414760949 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.414642727 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.414803643 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.414745283 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.414116291 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.415720032 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.414529764 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.414671268 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.414562683 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414527749 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.414238835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.414535327 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.41664232 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.414554634 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.414516411 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.414250349 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.415945677 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414978465 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.414609238 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.415214134 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.414961327 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.414958455 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415086145 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41484341 seconds)
  done (took 41.01838739 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.414207852 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.414575368 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.413888675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.414384278 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.414457005 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.413957392 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.414296088 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.414911237 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.414013599 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.413964298 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.414337798 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.414397737 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.413783901 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.413959322 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.414698412 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.413925581 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413835572 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.414149563 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.414362376 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415670103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.414154093 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414261028 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.414569217 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.414051605 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41415778 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.414598031 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414634145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.41393402 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.414098899 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.413694262 seconds)
  done (took 43.832678565 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.470936969 seconds)
    (2/2) benchmarking "in"...
    done (took 1.478836916 seconds)
  done (took 4.353087035 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.413992848 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.414249747 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.413778365 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.414399988 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.414423104 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.413912553 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.41414507 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.414078958 seconds)
  done (took 12.716443808 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.416385729 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.415317531 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.414410641 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.413823186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.413923529 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.414749534 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.423045066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.418804823 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.416273317 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.417313014 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.417765217 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.418382177 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.418318903 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.416425292 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.416076826 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.419975605 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.416051583 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.413896596 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.414219001 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.414505278 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414670066 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.417926968 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.419907788 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.417905538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.415335403 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.424025543 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.423728739 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.417828666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415556741 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.42011795 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.417385712 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.415478822 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.414094245 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.414292526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.413805938 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.414218973 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.424860793 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.420824185 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.42327885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.417804768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.417453831 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.41408906 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.41610619 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.417880413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.417622316 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.416799182 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.414278221 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.414155776 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.414501635 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.418080428 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.417988493 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.4142871 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.414838281 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.420104573 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.418780449 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.424425789 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.420090092 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.41714081 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.419385341 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.42200362 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.432369034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.426036303 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.420711964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.416558921 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.423376843 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.426009793 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.424323549 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.419679105 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.415148298 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.414520272 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.425804665 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.43739322 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.432628881 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.416210832 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.414336072 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.413995056 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.415473386 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.415242657 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.423420484 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.422992148 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.416429977 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.414513905 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.423597548 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.425022664 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.415651351 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.415248899 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.414187943 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.414551142 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.415203065 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.423335461 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.420408578 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.4144784 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.415316865 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.415784639 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.417916599 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.415227749 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.415582207 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.417668569 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.415514901 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.414880359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.414939227 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420131345 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.420264769 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.416338342 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.41487506 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.424518894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.418237349 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.415394853 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.424280728 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.41910673 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.414953805 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.416990888 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.421118993 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.415898064 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.418222399 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.419349447 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.416197729 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.417152434 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.416024341 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.414565097 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.4236414 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.428650166 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.416720328 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.414397674 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.419208457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.420292388 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.414688253 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.418016359 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.416556499 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.414251279 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.414123426 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.419581409 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.416272001 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.41637163 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.415339016 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.416522241 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.415770888 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.414226754 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.415082048 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.41667723 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.418657962 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.417274101 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.417717994 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.420158737 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.416017022 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.416951906 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.425852278 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.419767655 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.417363833 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.418488401 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.416435619 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.414267593 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.416651974 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.415594997 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.41544502 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.415106079 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.415265738 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.415500055 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414699223 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.414589626 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.414628845 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.415909262 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.420934947 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.415849861 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.420069774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.417125976 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.415637006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.415179588 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.414533956 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.415956629 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.415539244 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.414292946 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.419632242 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.418109951 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.415230386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.414435795 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.418671565 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.416503836 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415312932 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.415452452 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.418250198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.419278574 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.416994862 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.422697509 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.419201138 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.414174495 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.41471212 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.415509211 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.415885725 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.415183868 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.418439413 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.419282719 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.432950734 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.436026831 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.415857118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.414986654 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.414723068 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.414667297 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.419434044 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.417085513 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.414872377 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.414831519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.414812493 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.41630975 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.416745401 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.416000196 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.414399552 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.415190439 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.415755671 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.414872444 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.414597073 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.416391951 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.418479384 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.415846176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414641322 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.415903439 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.415119466 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.415941749 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.414225018 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.416166601 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.415881792 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.414696538 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.423229487 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.420098812 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.417191583 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.420008921 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.418626359 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.415402021 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.4152677 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.419272089 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.418508137 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.42436113 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.421550677 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.417284402 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.425074533 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.420685006 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.416450271 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.418902409 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.41730127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.415291585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.418078522 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.419935579 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.415795782 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.414895757 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.415189946 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.41541718 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.416620082 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.422239036 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.419114029 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.415396572 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.41562614 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.416408041 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.416210368 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.416791978 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.420633022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.417476242 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.419779114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.417024663 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.414644662 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.417928 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.415904547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.414855756 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.414585894 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.418064016 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.41904627 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.42066462 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.419749927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.418420171 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.416205841 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.415179083 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.416233423 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.415658124 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.417586515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.43462607 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.432479087 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.430514072 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.429968447 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.41622648 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.422107591 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.419601472 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.4164173 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.416211024 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.417413943 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.416957645 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.41834002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.415976985 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.417883392 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.415578048 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.41947049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.418528758 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.4157586 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.414216829 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.415384348 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.415927658 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.414694681 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.414735838 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.415200297 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.415279369 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.418199875 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.418844296 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.417738428 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.416384925 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.424172133 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.421914767 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.418168849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.417859529 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.416268179 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.415423261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.417549393 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.416305433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.41837723 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.418447752 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.417808957 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.421159175 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.416892182 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.425006665 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.419026618 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.417634251 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.418620267 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.414878717 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.415254471 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.41702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.415661014 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.423777064 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.419664391 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.417500304 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.416661931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.414398044 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.414960156 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.414747009 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.414538481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.414661107 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.414619098 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.424953568 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.421565207 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.416014883 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.418510587 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.417369053 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.41470371 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.414919052 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.414656306 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.421618521 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.41685727 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.417124606 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.418698434 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.418940679 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.415522513 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.415235098 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.41495093 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.415463465 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.415093671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.424076493 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.422312587 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41676725 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.414126309 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.424576821 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.418753791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.424010519 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.419488433 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.416384047 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.416008583 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.414943831 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.416839809 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.416004078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.418079793 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.41673833 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.414881587 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.416569218 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.414449277 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.417595713 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.418070615 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.417457917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.41602224 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.425237717 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.425604271 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.415538787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.417768097 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.41505643 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.415914065 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.415900584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.415630883 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.415090748 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.418962725 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.422948867 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.418714799 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.415960807 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.416159701 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.417319819 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416151084 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.414635877 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.415613321 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.415379695 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.416000319 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.416204421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.416400422 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.420904428 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.417773178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.417186902 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.418272863 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.416342792 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.423500716 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.419471745 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.416608241 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416326324 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.416102042 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.41673953 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.419306738 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.416283716 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.417864008 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.416497207 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.415498892 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.419289629 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.418151676 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.419480268 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.420172467 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.416118334 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.41625885 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.417418396 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415551771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.41475769 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41480828 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.417013978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.416687064 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.416204492 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.415430944 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.415784518 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.416469611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.41636364 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.418214969 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.419965888 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.41696566 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.416150924 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.414607614 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414611876 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.416036922 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.417238035 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.425068169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.425459426 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.422033521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.4194819 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.415897386 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.415395338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.420574325 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.420064984 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.417861037 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.418108595 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.416548954 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.418579717 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.417792124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.418603518 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.416173888 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.423764387 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.421245598 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.416818448 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.427103837 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.42344513 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.417605805 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.415226583 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.417143232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.417639015 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.415916716 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.415060337 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.415465047 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.425439498 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.423069228 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.416986572 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.418189066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.420829047 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.415476696 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.415583057 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414663652 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.417483928 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.417259428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.416932163 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.417574487 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414844413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.415209049 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.415119504 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.416651492 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.419014015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.419027728 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.415774827 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.418591432 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.419101721 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.417804207 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.416808299 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.415222102 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.414940036 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.414845658 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.416556527 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.416153707 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.416469206 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.419737583 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.41771539 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.416122011 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.416307977 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.415141095 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.418584431 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.4235989 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.419964843 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.415226485 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.415594329 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.418034316 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.420998517 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.418390815 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.414808964 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.416640131 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.41885303 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.416495323 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.415047913 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.415587066 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.419290964 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.429299125 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.421078758 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.416752125 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.417657947 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42286222 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.418051803 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.414773206 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.415498707 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.418107569 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.421002266 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.418698615 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.415140621 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.424311957 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.421540496 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.41731216 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.416546015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.421138365 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.419611948 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.420797435 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.417824589 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.415222177 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.420115488 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.429332853 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.418844155 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.424952487 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.434724628 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.422645732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.418846394 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.416984768 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.415103882 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.416262613 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.417679587 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.416988943 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.41508097 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.415156622 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.41513088 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.416031482 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.419494431 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.420387086 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.423884881 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.419565408 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.416053869 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.41817527 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.416177067 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.415311033 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.416962752 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.41526775 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.417797432 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.41513236 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.41751788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.435624048 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.434937654 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.417140972 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.415241251 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.415083196 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.420107718 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.421660657 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.422160952 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.41827871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.415114134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.41478159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.41829184 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.417502723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.416495836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.416720613 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.417007518 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.416844082 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.416749097 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.429753063 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.427112229 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.421524926 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.420021165 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.416187976 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.415503308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.418696089 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.417024187 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.416327875 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.420892153 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.419874966 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.417129717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.416376529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.415626544 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.418604985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.418712417 seconds)
  done (took 846.522961437 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.418341369 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.415497611 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415501599 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.415745613 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.416639248 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415551748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.415121654 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.415708983 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.418412507 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.417929318 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.415432866 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.415924473 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.416998776 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.418166266 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416961344 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.416637403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.41482035 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.415492141 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.415157692 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.415605627 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.417269141 seconds)
  done (took 31.149502417 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.415230469 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.41522016 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.41568545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.417426599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.415694907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.415386004 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.416010838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.415635692 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.415540624 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415509921 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.415734405 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.415594889 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.415616565 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.415976985 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415749326 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415719235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.415670903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.416188498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.415521501 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.416087677 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415307363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.416200441 seconds)
  done (took 32.552401897 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.415840179 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.415481068 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.416264 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.416614187 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.416170463 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.415417457 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.416330112 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.415172616 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.415493203 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.416721397 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.416673129 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.419399229 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.420194091 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.419568689 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.418368951 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.41796504 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.416588132 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.415862082 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.416094604 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.415591481 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.424346185 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.41976036 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.416188743 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.415793749 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.416440172 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.415669345 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.416075418 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.415653735 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.415743418 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.416067675 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.415855185 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.416073741 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.420364815 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.418685844 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.41684796 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.416656607 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.415878126 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.416309646 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.415577701 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.424896348 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.426565639 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.41567322 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.434199261 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.427910687 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.416033096 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.41923445 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.41934081 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.415923005 seconds)
  done (took 69.466816149 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.415966719 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.41584247 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.415745985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.415937975 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.416107154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.41591777 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.415694072 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.416331641 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.416266487 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.415656507 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.416288819 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.416148996 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415941491 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.41585311 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.416071487 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.416050915 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.416298042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.416176818 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.415881871 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.415708551 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.415939464 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.416194094 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.416167588 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.416399941 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.415865764 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.418073523 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415987887 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.41598801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.416048646 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.416234457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.415754464 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.415737828 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.416684904 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.416075049 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.416547897 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.416016903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.416693555 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.415349623 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.416170327 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.415695239 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.415545329 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.416651761 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.416118551 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.416506832 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.416214592 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.41607266 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.41674387 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.415838675 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.417587857 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.415799764 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.416562252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.416543192 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.41633 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.417006864 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.416494365 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.418254628 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.416810912 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.416183939 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.416433128 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.41609521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.416397598 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.416187041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.416803382 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.416141012 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.41563326 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.416707968 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.416267732 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.416029789 seconds)
  done (took 97.711534512 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416154146 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.416058517 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.415984658 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.416393446 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.416225577 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.416650486 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.415866438 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.415976775 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.417128417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.415975309 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417293029 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.416232146 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417218161 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417064439 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.416548706 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.417988761 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.416181014 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.415964686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.418286059 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.41635859 seconds)
  done (took 29.73801847 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.415786711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.416238553 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.415898325 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.416821867 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.416103826 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.416019551 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.416268711 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416534059 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416147911 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416102284 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.41664536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.416825874 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415749895 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416766581 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.416486692 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416888864 seconds)
  done (took 24.067196095 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.416902118 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.417503095 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.41599785 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.416420241 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.416791907 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.416182569 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.416650829 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.416140197 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.416870618 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.4168992 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.416587753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.417406261 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.418151738 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.416690701 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.416311123 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.417246666 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.416789962 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.416488914 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.41789059 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.416349224 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.418110872 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.41665038 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.417440277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.41601411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.416298941 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.416639148 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.415972459 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.417307435 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.416107799 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.416068451 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.416481879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.416539104 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.416323042 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.416148467 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.416058318 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.416566748 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.416062409 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.416087103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.416163185 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.416712157 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.416465127 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.417424731 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.416462299 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.417504655 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.416520678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.41606689 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.416605247 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.416875067 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.416265659 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.41685243 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.415928692 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.416334735 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.416716589 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.416394712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.416245987 seconds)
  done (took 79.322210265 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.416677752 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.415949024 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.416274758 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.416323574 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.416411924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.416152314 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.416615124 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.417256715 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.416357038 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.416559047 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416486267 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.41730632 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.416514534 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.41641778 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.416241068 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.41634801 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.415755225 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416755967 seconds)
  done (took 26.902917839 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.41828195 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.416892876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.416389457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.416129716 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.416487163 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.41688506 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.417731481 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.4162538 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416857576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.416836231 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416993702 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.41684456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417162428 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.416952593 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.416787913 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.416718987 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.416745975 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.416758652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.416201284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.416027725 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.417225242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41640498 seconds)
  done (took 32.575998872 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.416290078 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.416221077 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.416390885 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.425957777 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.418718666 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.416839197 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.417221887 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.416380747 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.429685649 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.436253504 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.431039274 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.419736781 seconds)
  done (took 18.466733734 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416111381 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416227571 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416282527 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416440102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416862273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416304303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41701442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416242403 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416654437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418007639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416806456 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416602605 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416222377 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417027024 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416299712 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416515892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416680257 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416624246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41636167 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417770773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416289598 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416418391 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416242474 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416473071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416404937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416137572 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416298648 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419343913 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417395547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416167894 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416934478 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416753409 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417417556 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417834195 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417325369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416767239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416813404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417548312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416266455 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417171266 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416371425 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41750773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416971814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416932528 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4168381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417421217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417169882 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417088456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417156301 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417851651 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416786926 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417519901 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416354354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417207131 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416789237 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417887564 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418348011 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416880876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418719759 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417683473 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4165843 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416769057 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417011025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418261985 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41638523 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416891493 seconds)
  done (took 94.926825447 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417071609 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41650731 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417096786 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417486457 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416854436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416550474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41686951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416679996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416785422 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416705239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416432184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416628843 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416414029 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417104785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416653562 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416633216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416240226 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416541718 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416927283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417153983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416753807 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416909214 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418944228 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416924023 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417906609 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416582188 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41626477 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416844288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416697194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416400468 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416719812 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416900074 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416727931 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416788709 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416813739 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416600662 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416584309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417796496 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416946131 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417006338 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416955053 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416872673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41745083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416808471 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418563708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417059998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41753516 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416856765 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417545025 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417128158 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417834901 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418428275 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417567677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41908342 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416941761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416970458 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416713109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417131178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416885265 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416874386 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416799539 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41667695 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417638043 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416938662 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416510247 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417140258 seconds)
  done (took 94.931981478 seconds)
done (took 1885.577963537 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.578282241 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.80289075 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.454456785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.427712396 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.448518432 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.428873602 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.946819131 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.60383941 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.893638249 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.105377984 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.764376754 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.537762745 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.441484135 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.458918628 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.817276778 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.416492213 seconds)
  done (took 35.533253856 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.44214506 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.425924256 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.516527642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.421396588 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.44207295 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.578251732 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.468136865 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.427196985 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.413634682 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.445396729 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.413132673 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.442449712 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.420898079 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.386014921 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.765020818 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.579867782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.638462035 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.41606953 seconds)
  done (took 32.049503455 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782784678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.667166605 seconds)
  done (took 5.855521735 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.436774197 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.42149237 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.42326732 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.418802574 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.411906896 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.411920487 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.417864556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.421267123 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.420798004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.522952652 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.421948081 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.430696536 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.421972222 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.420328655 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.418222973 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.460565558 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.561357124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.418665971 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.41697652 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.425540812 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.419446826 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.534279187 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.456362904 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.418427428 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.52254743 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.41933952 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.421307275 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.427349413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.551583919 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.418573239 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417711671 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.422767522 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.420111335 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.212791818 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.898271116 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.413007172 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.428550217 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.430794047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.417824709 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.586820371 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.420644491 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.4273593 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.419725641 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.869358582 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.538586966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.535217006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.412557496 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.421999879 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.420749961 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.490623587 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.420528808 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.421937879 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.45769656 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.250054618 seconds)
  done (took 89.857068406 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.488013357 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.411349793 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609248526 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.41872294 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.411440682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.418807976 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.412791003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.648525609 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.476031272 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.410884986 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.688503511 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.914047843 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.417531834 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.483075596 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.467360916 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.468798732 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.411357014 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.411935844 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.412751047 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.419926243 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901219397 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412386235 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.411077424 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.617566177 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.447688607 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937536681 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.412246092 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.412024866 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.416427273 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.412681878 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898923826 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.419394119 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.488957078 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.410969737 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.669172652 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.766701364 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.743254903 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.416406615 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.446159769 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.414336061 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.418697203 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.926174008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.766115854 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.412024413 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.412346663 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.927206227 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413402745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.422928244 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.421454766 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.680316897 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.411557272 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.412232844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.41256501 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.412509508 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.411285408 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.485363399 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.489308287 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938918481 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412454637 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.411479243 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.441995856 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.41170858 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.412008479 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.418894184 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.416192809 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.765595459 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.324278682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.415248292 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.764044928 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8830223 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.419996039 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952367994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.412073354 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.432298633 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.574199737 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411304129 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.411424269 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939550846 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.424259895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411510142 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.741476364 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.418332879 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.684417863 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.417524404 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.411318181 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.919733239 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.425189508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.474720959 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.412180388 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.413137755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.412173374 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421034385 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.671079378 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.463984597 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.411302759 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.411518704 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.47683707 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.412423699 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.412917206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.412503298 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951083244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.412895078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.411335896 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414314801 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422551512 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.412501344 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.414009639 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413061778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.706955923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.411987765 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.417412166 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.417123701 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411560989 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.420247081 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.617402593 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.416659689 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.682090326 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.415914287 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415130206 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.414064153 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.411510325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.428174127 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411170629 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.419984459 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.411509867 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.746966685 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.412527833 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.414296663 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415110435 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41147317 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424096093 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413208116 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.471102894 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.416683831 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112387161 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.461482169 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.434366093 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.412053984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.413200676 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411801127 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.425457398 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.416545751 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782740323 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.673667648 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.321293324 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.414926363 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.412494208 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.18734944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.492095114 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612587396 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414662447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411438057 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.717545848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.335788411 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.415322958 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.411439654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.412723905 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.687878412 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412486591 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784327297 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911453661 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.41366051 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.414144212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.176721511 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.412992231 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.41361776 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.411674852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.681421939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.413507534 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.411585369 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.4111603 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.411975413 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413791837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.415634723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.422219127 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.411409312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.411718532 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.95926346 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.620288141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.413466994 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.420876028 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.939644031 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424449802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411984392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.4145076 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.417375572 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.411893808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.467297918 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.419017774 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.482355402 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.41362198 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.419148558 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.958070052 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413701854 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.412714256 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.619113168 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028522789 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.413336942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.412287685 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.412661018 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.472082878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969839725 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.480953582 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.678895091 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.419129951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.447900997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.412056457 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432707994 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967442853 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.413542999 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411746088 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.112192243 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.413178414 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.218029428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.411494619 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.414518266 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023673089 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.414414306 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.413344812 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.411325192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.420505179 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.718745153 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.414017128 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.479052034 seconds)
  done (took 520.967334752 seconds)
done (took 685.668566125 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.411979825 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.412732142 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.413611199 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.414913949 seconds)
  done (took 11.060302842 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.418612708 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.418307905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.417893254 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.417682043 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.418795847 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.420345715 seconds)
  done (took 9.920008412 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.413304583 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.412797424 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.413887548 seconds)
  done (took 8.647338093 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.587813499 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.413262274 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.7230055 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.414359195 seconds)
  done (took 9.546038377 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.417566884 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.41782654 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.417678605 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.418597959 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.418534483 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.419277702 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.419152149 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.419282842 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.418750172 seconds)
  done (took 14.172261705 seconds)
done (took 54.753461175 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.412189149 seconds)
    (2/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.425668705 seconds)
    (3/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.433223247 seconds)
    (4/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.427634662 seconds)
    (5/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.428326807 seconds)
    (6/240) benchmarking ("map", identity, Int8, false)...
    done (took 2.413139345 seconds)
    (7/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.414026141 seconds)
    (8/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.417066407 seconds)
    (9/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.415029604 seconds)
    (10/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.413940189 seconds)
    (11/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.414650607 seconds)
    (12/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.420873355 seconds)
    (13/240) benchmarking ("map", identity, Bool, true)...
    done (took 2.413321126 seconds)
    (14/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.428527267 seconds)
    (15/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.42254063 seconds)
    (16/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.419983489 seconds)
    (17/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.525343418 seconds)
    (18/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.421778333 seconds)
    (19/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.414192842 seconds)
    (20/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.423962163 seconds)
    (21/240) benchmarking ("map", abs, Int64, true)...
    done (took 2.413791393 seconds)
    (22/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.421162188 seconds)
    (23/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.414945633 seconds)
    (24/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.413687281 seconds)
    (25/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.414530131 seconds)
    (26/240) benchmarking ("map", identity, BigInt, true)...
    done (took 2.414430521 seconds)
    (27/240) benchmarking ("map", abs, Int64, false)...
    done (took 2.413634929 seconds)
    (28/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.416204451 seconds)
    (29/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.414169422 seconds)
    (30/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.413905926 seconds)
    (31/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.415722266 seconds)
    (32/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.523646052 seconds)
    (33/240) benchmarking ("perf_sum", Bool, true)...
    done (took 2.412751136 seconds)
    (34/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.414467433 seconds)
    (35/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.425501572 seconds)
    (36/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.414266198 seconds)
    (37/240) benchmarking ("map", abs, Float32, true)...
    done (took 2.420096072 seconds)
    (38/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.420208643 seconds)
    (39/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.414533532 seconds)
    (40/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.415725909 seconds)
    (41/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.420437188 seconds)
    (42/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.415492841 seconds)
    (43/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.416613594 seconds)
    (44/240) benchmarking ("map", identity, Float32, false)...
    done (took 2.414458904 seconds)
    (45/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.422441625 seconds)
    (46/240) benchmarking ("perf_countequals", "Int8")...
    done (took 2.265992701 seconds)
    (47/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.413120477 seconds)
    (48/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.415626645 seconds)
    (49/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.417793045 seconds)
    (50/240) benchmarking ("map", identity, Int64, false)...
    done (took 2.41325578 seconds)
    (51/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.416754223 seconds)
    (52/240) benchmarking ("perf_sum", Bool, false)...
    done (took 2.425261959 seconds)
    (53/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.417510286 seconds)
    (54/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.418652342 seconds)
    (55/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.421385545 seconds)
    (56/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.418929445 seconds)
    (57/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.414820574 seconds)
    (58/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.414692807 seconds)
    (59/240) benchmarking ("map", abs, Float32, false)...
    done (took 2.421711343 seconds)
    (60/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.414471839 seconds)
    (61/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.432536758 seconds)
    (62/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.523763312 seconds)
    (63/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.414978582 seconds)
    (64/240) benchmarking ("perf_sum", Int8, true)...
    done (took 2.415493297 seconds)
    (65/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.41530933 seconds)
    (66/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.438203294 seconds)
    (67/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.416385723 seconds)
    (68/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.416160946 seconds)
    (69/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.423306047 seconds)
    (70/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.41842064 seconds)
    (71/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.415524654 seconds)
    (72/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.539887326 seconds)
    (73/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.414566079 seconds)
    (74/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.41851661 seconds)
    (75/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.417441247 seconds)
    (76/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.417005457 seconds)
    (77/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.411587465 seconds)
    (78/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.426774243 seconds)
    (79/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.52517575 seconds)
    (80/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.422879322 seconds)
    (81/240) benchmarking ("map", abs, Bool, false)...
    done (took 2.415402532 seconds)
    (82/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.425125157 seconds)
    (83/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.50742268 seconds)
    (84/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.423750843 seconds)
    (85/240) benchmarking ("perf_sum", Float64, false)...
    done (took 2.42516338 seconds)
    (86/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.418000782 seconds)
    (87/240) benchmarking ("map", identity, Float32, true)...
    done (took 2.419755388 seconds)
    (88/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.414555109 seconds)
    (89/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.415466345 seconds)
    (90/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.415980121 seconds)
    (91/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.414455328 seconds)
    (92/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.422662368 seconds)
    (93/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.414003123 seconds)
    (94/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.420693829 seconds)
    (95/240) benchmarking ("perf_countequals", "Float32")...
    done (took 2.3228265 seconds)
    (96/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.413643719 seconds)
    (97/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.539127854 seconds)
    (98/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.422011023 seconds)
    (99/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.413534252 seconds)
    (100/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.415508575 seconds)
    (101/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.416515315 seconds)
    (102/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.499697483 seconds)
    (103/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.41341181 seconds)
    (104/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.415150562 seconds)
    (105/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.417129489 seconds)
    (106/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.416767328 seconds)
    (107/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.415437519 seconds)
    (108/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.413005661 seconds)
    (109/240) benchmarking ("perf_countequals", "Int64")...
    done (took 2.24860201 seconds)
    (110/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.4128565 seconds)
    (111/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.414342086 seconds)
    (112/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.425605659 seconds)
    (113/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.435970917 seconds)
    (114/240) benchmarking ("perf_countequals", "Bool")...
    done (took 2.26875454 seconds)
    (115/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.412409725 seconds)
    (116/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.414550022 seconds)
    (117/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.431046561 seconds)
    (118/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.424386991 seconds)
    (119/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.422079236 seconds)
    (120/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.416285879 seconds)
    (121/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.414541013 seconds)
    (122/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.415351581 seconds)
    (123/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.431269418 seconds)
    (124/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.413354381 seconds)
    (125/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.508745227 seconds)
    (126/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.413234675 seconds)
    (127/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.423396179 seconds)
    (128/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.418374469 seconds)
    (129/240) benchmarking ("perf_sum", Int64, true)...
    done (took 2.421269124 seconds)
    (130/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.414684545 seconds)
    (131/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.417495626 seconds)
    (132/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.427372499 seconds)
    (133/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.498741007 seconds)
    (134/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.419880809 seconds)
    (135/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.414954419 seconds)
    (136/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.417142282 seconds)
    (137/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.421413361 seconds)
    (138/240) benchmarking ("map", identity, Int64, true)...
    done (took 2.414200912 seconds)
    (139/240) benchmarking ("map", abs, Bool, true)...
    done (took 2.414863742 seconds)
    (140/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.429979485 seconds)
    (141/240) benchmarking ("map", identity, Float64, false)...
    done (took 2.41565024 seconds)
    (142/240) benchmarking ("perf_sum", Float32, true)...
    done (took 2.414789544 seconds)
    (143/240) benchmarking ("perf_sum", Float32, false)...
    done (took 2.415373503 seconds)
    (144/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.415448371 seconds)
    (145/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.527196625 seconds)
    (146/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.497120523 seconds)
    (147/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.412980332 seconds)
    (148/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.418526446 seconds)
    (149/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.415613009 seconds)
    (150/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.418703755 seconds)
    (151/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.414419318 seconds)
    (152/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.413341644 seconds)
    (153/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.424724438 seconds)
    (154/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.431330218 seconds)
    (155/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.424392614 seconds)
    (156/240) benchmarking ("perf_sum", Float64, true)...
    done (took 2.414052963 seconds)
    (157/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.421703014 seconds)
    (158/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.41511513 seconds)
    (159/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.415512095 seconds)
    (160/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.507423737 seconds)
    (161/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.412782909 seconds)
    (162/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.415537765 seconds)
    (163/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.415871423 seconds)
    (164/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.415349949 seconds)
    (165/240) benchmarking ("map", abs, Int8, false)...
    done (took 2.41680598 seconds)
    (166/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.41486233 seconds)
    (167/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.424450675 seconds)
    (168/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.414641664 seconds)
    (169/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.417181457 seconds)
    (170/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.42307965 seconds)
    (171/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.414969429 seconds)
    (172/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.428864322 seconds)
    (173/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.413710944 seconds)
    (174/240) benchmarking ("perf_countequals", "Float64")...
    done (took 2.308435329 seconds)
    (175/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.412540681 seconds)
    (176/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.421814692 seconds)
    (177/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.425775073 seconds)
    (178/240) benchmarking ("perf_sum", Int64, false)...
    done (took 2.416525723 seconds)
    (179/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.414749675 seconds)
    (180/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.451496975 seconds)
    (181/240) benchmarking ("map", identity, Int8, true)...
    done (took 2.4165857 seconds)
    (182/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.415037528 seconds)
    (183/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.417514086 seconds)
    (184/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.419791599 seconds)
    (185/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.420337365 seconds)
    (186/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.421504104 seconds)
    (187/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.416904359 seconds)
    (188/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.417672649 seconds)
    (189/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.433538213 seconds)
    (190/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.414405785 seconds)
    (191/240) benchmarking ("perf_sum", Int8, false)...
    done (took 2.416795826 seconds)
    (192/240) benchmarking ("map", abs, BigInt, false)...
    done (took 2.416119866 seconds)
    (193/240) benchmarking ("map", abs, Float64, false)...
    done (took 2.427840371 seconds)
    (194/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.417155297 seconds)
    (195/240) benchmarking ("map", identity, Float64, true)...
    done (took 2.427612651 seconds)
    (196/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.426873365 seconds)
    (197/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.415578536 seconds)
    (198/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.419791548 seconds)
    (199/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415684442 seconds)
    (200/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.415374404 seconds)
    (201/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.421001554 seconds)
    (202/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.415798948 seconds)
    (203/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.418646557 seconds)
    (204/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.429489984 seconds)
    (205/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.41480917 seconds)
    (206/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.4189511 seconds)
    (207/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.508181257 seconds)
    (208/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.41366549 seconds)
    (209/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.415383896 seconds)
    (210/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.415699726 seconds)
    (211/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.415702702 seconds)
    (212/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.42572249 seconds)
    (213/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.418153103 seconds)
    (214/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.420202181 seconds)
    (215/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.424397083 seconds)
    (216/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.420240888 seconds)
    (217/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.428853695 seconds)
    (218/240) benchmarking ("map", identity, Bool, false)...
    done (took 2.414360044 seconds)
    (219/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.413604132 seconds)
    (220/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.424750764 seconds)
    (221/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.415238682 seconds)
    (222/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.415335727 seconds)
    (223/240) benchmarking ("map", identity, BigInt, false)...
    done (took 2.415946065 seconds)
    (224/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.413310883 seconds)
    (225/240) benchmarking ("map", abs, BigInt, true)...
    done (took 2.415857215 seconds)
    (226/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.420804935 seconds)
    (227/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.415882971 seconds)
    (228/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.415725686 seconds)
    (229/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.413231009 seconds)
    (230/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.500146003 seconds)
    (231/240) benchmarking ("map", abs, Float64, true)...
    done (took 2.413348097 seconds)
    (232/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.530124017 seconds)
    (233/240) benchmarking ("map", abs, Int8, true)...
    done (took 2.419040417 seconds)
    (234/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.434939154 seconds)
    (235/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.42281985 seconds)
    (236/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.414149216 seconds)
    (237/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.416062072 seconds)
    (238/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.423285185 seconds)
    (239/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.413050661 seconds)
    (240/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.414755413 seconds)
  done (took 566.766505318 seconds)
done (took 568.173472278 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.433480995 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441685649 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.422198143 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.422597136 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.438021678 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.416077712 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.442261724 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.427105713 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.429708074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423392191 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.422403881 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.080623585 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.425617996 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.424533749 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.42203529 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423397174 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.422552979 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.427631967 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.422800311 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.435675134 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.421702032 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.422537812 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.423261947 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.088476659 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.426913357 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.427769637 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.427698575 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.429040684 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.438623255 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.427213021 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.428045757 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.437943648 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.421885009 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.422417998 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.420460799 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.428874544 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.437775123 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.434633729 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.426487988 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.430285649 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.41358528 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.424430148 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.42571117 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.423758637 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.423983197 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.429388831 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.425485744 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.432898437 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426274439 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.423841541 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.418259389 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.426033598 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.427478097 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.42386137 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.440130215 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.42482958 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.432563313 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430592321 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.438611906 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43138903 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.414355005 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.430627926 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.427332444 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.421683254 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.431532906 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.414153621 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.421995028 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.429658968 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.414049528 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.430783573 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.417221191 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.433667383 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.426658111 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.424255596 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.429704215 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.413392736 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.421478127 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.422053839 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.4335614 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.422713503 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.435442737 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423657214 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.427931254 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.42411409 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424088222 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.416341341 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.442643172 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.425850379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.434928855 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.437424956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.431947724 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.437965919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.426957442 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.420909873 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.435157867 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.432763171 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.427467971 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.42754427 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.42778499 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.439886043 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.413405653 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431999912 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.420494898 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.420325741 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.422594952 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.424698275 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.420585728 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.425937548 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.434044904 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.432440516 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.425914948 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.420113512 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.429357633 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443112145 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.435948648 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.427234645 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.421267721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.414200614 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.416340231 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.425869905 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.424986462 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.423356375 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442397629 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.426582398 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.41994231 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.416906058 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.428026941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424826283 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.436592718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.441236371 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.431239748 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.423173952 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.427433465 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.414652724 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445754485 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.431050275 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.427484496 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431617665 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.422800563 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.421340036 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.440545566 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.440806908 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.425104717 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.433283573 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.420691019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.414366828 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427267186 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424418799 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.423608321 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.437270899 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.421643594 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.414664166 seconds)
done (took 239.656861587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.41938828 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.41951474 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.553125099 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.419872514 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.563472415 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.419855267 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.42022473 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.428641815 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.420268424 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.419692131 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.553294399 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.420188163 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.554010011 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.563175074 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.55374259 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.420320396 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.419662801 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.41969456 seconds)
  done (took 30.797388067 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.496390564 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.493248769 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.528249138 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.421459687 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.47195264 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.530050363 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.421905583 seconds)
  done (took 11.772278399 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.427079927 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419782275 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.483179991 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48307237 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.420071848 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.608976878 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.432587362 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.420329013 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.483448266 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.420987362 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.419735453 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.428914896 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.415103906 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.482432695 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.432901909 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.53815102 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.423561844 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.419924853 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.612029844 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.419446968 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.42927612 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.477593764 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.433240247 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.420808909 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.428742954 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420165454 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.419990386 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.420083574 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.496701972 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420159751 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.41591376 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420018572 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.420209984 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.419501502 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.420078439 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.42099067 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.420680051 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.420474148 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.419905326 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.419572793 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.41990949 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.444177433 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.419580343 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.420066295 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.420676582 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.420610509 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.477886767 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.419975436 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.420472753 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.420470326 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.483812693 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.429103505 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.420016043 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.419960878 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421505765 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.420053038 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.595968048 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.483857093 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.419950696 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.483741933 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420194366 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420645253 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.419719261 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.420649698 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492383453 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.420500279 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.48319752 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.420083818 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.61304491 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.444569745 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42077245 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.425206604 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.424768584 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.42174717 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.428697469 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.420464256 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.42315105 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.427779589 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.419626747 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.419620381 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.613612009 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.420214047 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.438911838 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.4288828 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.420471263 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.48189144 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.420509569 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.420236997 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506714502 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.538916413 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.483532678 seconds)
  done (took 136.991279124 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.438755628 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.424772378 seconds)
  done (took 4.272668929 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.424431399 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.422130932 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.42066268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.420443722 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.420825444 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.419919878 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.41971261 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.422113051 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421133502 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.420087403 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.419899615 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.421188037 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.419750306 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.419960969 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.419986113 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.420060274 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.419776595 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.42030868 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.419768556 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420272574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.028528823 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.420497366 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.422839512 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.420497152 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.420701921 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.420646992 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.446465566 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.420974923 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.420314703 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.431200967 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422281245 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.420021857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.420803835 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.424630344 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.421699086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.420449003 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420795338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.421409135 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.420394822 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.420194649 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.421314833 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.421189574 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.420143265 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.421582053 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.4226315 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.421604494 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.42268381 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.446199909 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.420911817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.422114619 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.421709531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.420175209 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.419662036 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.42333613 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.423125367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424211603 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.42254106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.420034693 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.420729362 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.420880207 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.420526831 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.42008243 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.42255857 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.420819088 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.420615411 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.421125381 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.42145382 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.421037806 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420812484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.419593411 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.421750998 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.419993892 seconds)
  done (took 104.396981548 seconds)
done (took 289.640772964 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.291540653 seconds)
  done (took 4.700394298 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.764207245 seconds)
  done (took 4.174482773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.687807432 seconds)
  done (took 11.101460004 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.437391542 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.437606044 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.421315428 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.422789326 seconds)
  done (took 11.128617795 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.123587269 seconds)
  done (took 4.532856015 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.414421869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.425746605 seconds)
  done (took 6.251200991 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.68494187 seconds)
  done (took 4.09413232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.679908094 seconds)
  done (took 4.092135046 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.415984382 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.434950744 seconds)
  done (took 6.269984933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.414300148 seconds)
  done (took 3.823861048 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.926727425 seconds)
  done (took 10.337537272 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.417026038 seconds)
  done (took 3.828777975 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.464170039 seconds)
  done (took 3.87389975 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.270839159 seconds)
  done (took 4.68037019 seconds)
done (took 84.29943799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.414913587 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.414234412 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.414304681 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.414557982 seconds)
  done (took 11.067019985 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.487456443 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.480122116 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.495500381 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.473817721 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.47883239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.47947379 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.446265456 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.461437433 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.481906723 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.476122614 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.482219445 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.472186202 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.489000948 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.461372966 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.476113793 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.49108249 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.47731356 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.4863717 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.446502216 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.474214686 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.421509938 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.478770507 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.472688302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.422728855 seconds)
  done (took 36.722790676 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.838540367 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.493174414 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.602596848 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.47297126 seconds)
  done (took 7.816337639 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.514282894 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.523578908 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.525016125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.566832996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.598098404 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.523906827 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.447440066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.441855966 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.428124435 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.525213524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.599743305 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.419886445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.698002363 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.420300012 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.712281876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.41998385 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.420495043 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.515734373 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.563312008 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.585666704 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.420185964 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.511652662 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.517601023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420184912 seconds)
  done (took 37.729665157 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.427845489 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.437034689 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.421444674 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.421552324 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.421835298 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.422279184 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.435967517 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.422557059 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.427826182 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.420528356 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.420472195 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.421545642 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.434806704 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.421151422 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.421253289 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.427973379 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.424235801 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.427993061 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.422418969 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.421567897 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.430956778 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.427673414 seconds)
  done (took 32.770540796 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.414977291 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.414022871 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.76505406 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.670087928 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.414600246 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.415312136 seconds)
  done (took 14.503204375 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.476570906 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.502400534 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.421993996 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.706456593 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.76962192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.422904226 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.421851411 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.531843256 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.767184847 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846174403 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.455367395 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.465025224 seconds)
  done (took 20.197223807 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.423213707 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.416325996 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.425549659 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.431359504 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.464393541 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.424400393 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.427398778 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.414562591 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.464876167 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.46872658 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.424754155 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.465535941 seconds)
  done (took 22.661983614 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173376468 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30538908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430161156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610376849 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41584969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430020335 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.595725952 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.872732957 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.420549522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690773187 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4147045 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055513349 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415859489 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41628177 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417103715 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.414914373 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431961503 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165401006 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415876535 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422185976 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417331013 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436404437 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414697853 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603095715 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432584599 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41617259 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.676604339 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414571249 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665047799 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636691419 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638551495 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417408479 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690223282 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796920263 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554668689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6000016 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431616391 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41825103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.470942081 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.416238519 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418012459 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417703431 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635572469 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416743891 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414645185 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414958557 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884486262 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.422825408 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.414665768 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416070632 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642383521 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05892584 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.421173826 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414858529 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630631699 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415204889 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.419911952 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616706621 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41774198 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415992868 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423720876 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.415529863 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428692914 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426347369 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039673048 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.422642343 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.419745862 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422056386 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434669579 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425227201 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439072746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429670894 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.435916893 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414522671 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122627006 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42970042 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418221259 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124742765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415291788 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.416231194 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418677378 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41653604 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414892917 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.414797015 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415014958 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225354858 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423007754 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.418229245 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432559696 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872808937 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601687265 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287438426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.429757377 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41945779 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.419970572 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417661572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.414314099 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431350895 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439165543 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882019727 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415910887 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.421427478 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415066389 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.626287852 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414816563 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417470565 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884156067 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417605495 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.439576929 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42278184 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.593897917 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.940024028 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64153668 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419885722 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445293582 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414949111 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284560526 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415330333 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.421348256 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426468732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677328839 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.41710555 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416516415 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536153376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427515562 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416729807 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423060495 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419107344 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416578536 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.667107047 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417300149 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637396267 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.416459837 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415635432 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.418730403 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415513268 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.418394942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425322295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428895734 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689010599 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414544725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427567034 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415917266 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.429220381 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.416926437 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.421946248 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415661939 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41826946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414887436 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640306846 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442939777 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558082312 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442034883 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.424081336 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41619712 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.421890641 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.420764338 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423734156 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418144752 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43984061 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.424070981 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437639358 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940864011 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393742419 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424779356 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303977254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.430893233 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536258298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423510173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595819958 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.417363497 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425970548 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.424611677 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.41881175 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41566889 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638804317 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.422933467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590413618 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871753518 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.941566091 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867943875 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.416955334 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.415444331 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.41556558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415729401 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415602228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415428625 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598319382 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648791408 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416419386 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949488328 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418879393 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426203992 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.423372065 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641007692 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.424567159 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416439494 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.418755256 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414760181 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418400018 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64187565 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696166823 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.430454397 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415112602 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933884812 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423361951 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416895568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414841547 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445329004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424860454 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936072981 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418463627 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43779765 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643844822 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417045601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433909661 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414971752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414771168 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428743702 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.416549928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424565082 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.598631721 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42689518 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418601564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417833147 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117000614 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89755792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431259197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.427212555 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415681695 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882990269 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43053314 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416372989 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627708693 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874080774 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416300978 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873068318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42313109 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063931826 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641292114 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420489916 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426628502 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.429720872 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643945862 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627205203 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446630297 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414865752 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416790946 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.421601643 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964234526 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415607218 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595572181 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872913574 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415929237 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454446196 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.529640776 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417353691 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769529543 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415647719 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415279915 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421435882 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415268934 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965693438 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425614993 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416343287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030197872 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427141668 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.882291223 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415977095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600177401 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642310757 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.710895062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.418672581 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.421334086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.431391627 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64557296 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43209911 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426137616 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897426288 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.258801779 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.422419974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418510501 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299359127 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416260522 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66539154 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.416771215 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.421927476 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429555519 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416403747 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415303472 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.415495682 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421813218 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385522657 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029063987 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.420185205 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42333908 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420310351 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428937054 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418198538 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.432632327 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.937366453 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42672497 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42525229 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444736583 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420523594 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417612344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.438762361 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416529048 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434253268 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62023067 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427435189 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434078896 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.424560683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.600642148 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626466776 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415146015 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415637554 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634273493 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.417198508 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.416351087 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131989428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432052851 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427868906 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418681012 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418752973 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434947316 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539097336 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597201629 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.642054303 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643361779 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769022496 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416364034 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418187086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.200514582 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180411037 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426084065 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425052191 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.415340498 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943401735 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120373899 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952578496 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647645798 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421148915 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418373437 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417203039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728557393 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415156128 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692086908 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417752882 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.420916187 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439146099 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41557591 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427619876 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62540723 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689886549 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415094132 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415573535 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416812949 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.415646356 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641529998 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627460117 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167071499 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131918861 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41704779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415327719 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885738518 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691950988 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415522906 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416456901 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415223757 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.418247393 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422699215 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424318822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421717165 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703700198 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639092875 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802814998 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635242283 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.296238755 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.29182807 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426708765 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431532671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417278215 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595969355 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936697194 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067009781 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421753022 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540999299 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601282075 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.416786191 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728220882 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.420993633 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415591973 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415962432 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430506497 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.417072123 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.634814766 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952717912 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418532455 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.423254051 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.420960423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417279464 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.595723633 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423592232 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23247 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42868096 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64231231 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424567348 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417131836 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940617888 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64323475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417146975 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.421401546 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628443527 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418562223 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453588261 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.288692626 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.415338014 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286269222 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.626633239 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291034915 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42457937 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.072623414 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947067767 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427909083 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030755981 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417235854 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425222071 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692133096 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.423403361 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415678046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704434973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421040117 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415467595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603145907 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.934958662 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064905508 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.420245782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422856426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.41922879 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415525267 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591858839 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416271791 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440673897 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.859165003 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416809199 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424170931 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017187968 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423447492 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416033478 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.417202795 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41604949 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.424926879 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.480809741 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.426524461 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41940646 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618506457 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934441835 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446791693 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.039582145 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.751016288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419635091 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417840871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.420933387 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.425913991 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415701904 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415311773 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416228629 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438037001 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284372817 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.416481559 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.636986521 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42241692 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625772149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626003609 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427586652 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599169403 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419856148 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435007325 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.420149883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418837707 seconds)
  done (took 1040.906887815 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.439385922 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.457307523 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.444928604 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.505697488 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.455079252 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.55462667 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.493724299 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.559535966 seconds)
  done (took 21.321035103 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418603084 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.425501641 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.419892163 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.426436741 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.420845018 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.677784775 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.429344062 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.426861173 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.432494235 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.42215811 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.416601412 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.821686442 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.427729907 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.42127712 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.426598586 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.426883174 seconds)
  done (took 32.86162332 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.269020182 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.567048517 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.82042636 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.423750489 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.422898031 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.424277889 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.69843951 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.423815794 seconds)
  done (took 24.461100457 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.432539451 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.43335609 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433405708 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438980324 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433466182 seconds)
  done (took 8.582184055 seconds)
done (took 1313.012661029 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42168361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422029987 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422227738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42368268 seconds)
  done (took 7.099904816 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.415640414 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.418029868 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.416739719 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.838098707 seconds)
  done (took 10.49881084 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.763168249 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.917326496 seconds)
  done (took 5.091393259 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.416466852 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.415480314 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.416944306 seconds)
  done (took 8.66005602 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.828614749 seconds)
  done (took 3.240931349 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.90082488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.867908344 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581060544 seconds)
  done (took 6.761303092 seconds)
done (took 42.762854786 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.415556646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.193937149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.573045589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415113325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.576358218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.572553961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.667437753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415084542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415497381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421770795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415560725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.577760685 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.654335801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.194673604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.653925152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.191602415 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.57690791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419305568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415265368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.42553002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.667956847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418043367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41549716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417402613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.577412998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.56235387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419129018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.192092072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414975756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415259296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.562867944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415448146 seconds)
  done (took 84.081287303 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.415413057 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.425125065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41563707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415290996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41530759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415585265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415069248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414996529 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415141094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416236079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415579069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41578814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418475808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416005776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.416981637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.415420169 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416389128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416357492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415780597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416176428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417413043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422135538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424293697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.422813005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419570742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41602244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415706476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415463435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415891175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415834263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417383732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415384899 seconds)
  done (took 78.75677685 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416034114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420341164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.41758598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418220963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.424809883 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.4167805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416992791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416125976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421860251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415978661 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416071515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.415857537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415371581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415421212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.415612763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.415536302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41605972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416146313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415615653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.416080719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420716386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416099421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416158894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416079697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.416468887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417844594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415500996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.416356218 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416238566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415692094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415404698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415404864 seconds)
  done (took 78.752433316 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.647511514 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.422099481 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.423511495 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.416273794 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423557053 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421583632 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416466537 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.650450113 seconds)
  done (took 15.232470452 seconds)
done (took 258.233913645 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.420152886 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.934506205 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444108498 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.421095902 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446144858 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446315418 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.590827211 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445398137 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.574838308 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.417715325 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444934676 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.416339546 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.202803275 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.533321671 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.350693635 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.417183384 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.28736108 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.417335924 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.00038738 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598938574 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.444134243 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.416287759 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.345143255 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.287346227 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.424073929 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.428202309 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.426938696 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.538967839 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.511086674 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.429074081 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.936779627 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.417393121 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.420330805 seconds)
  done (took 65.248137637 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.421308664 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.421378326 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.422276472 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.422039021 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.421973257 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.421910584 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.4219925 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.421599187 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.42440523 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.422244423 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.421616785 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.422026742 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.421355577 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.421775611 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.421891852 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.421599595 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.421577926 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.426126168 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.421637412 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.421915022 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.421116126 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.425617641 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.421335136 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.421260673 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.421404731 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.422049522 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.421831052 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.421806323 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.421788733 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.421863151 seconds)
  done (took 44.07610639 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421962559 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.126865013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.41677395 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.427369143 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.777220794 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.728789685 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.303664121 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.639144524 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.429389349 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.509449216 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.417610929 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423793649 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.421877196 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.122254527 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.455417374 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.065429608 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.495590166 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.789737756 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.577812695 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.416935154 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.563662037 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.547745998 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.426078715 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.431526755 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.457902774 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.428920344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.868701485 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.429100175 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.428884547 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.430939705 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.427680728 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.726138641 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.418982614 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.417961017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.868724203 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.423551284 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.040960291 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.423527859 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.618898657 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.4304972 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.423164007 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.429114131 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.427159739 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.430533983 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.854600298 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.422983424 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.455768369 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.726607143 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.425783965 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.418500021 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.42464665 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.855539185 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.427534902 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.428983214 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.427833337 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.853169895 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.428372724 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.30238339 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.727020072 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.428075969 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.429163048 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.417161807 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.417314306 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.496051208 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.42459968 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.430612888 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.426457392 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.428299995 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.435117134 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.847656355 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.419508755 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.417759169 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.635491901 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.42301295 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.421447147 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.423821016 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.428633459 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.432263611 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.423070926 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.422324208 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.520651067 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.543696477 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.734800119 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.739288183 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.429390022 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.550771431 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.426417731 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.723439655 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.421276647 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.4264048 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.424719191 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.421260208 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260314197 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.421950591 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.423334926 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422514739 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.568786064 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.857262041 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.431368541 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.430241669 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.577687793 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.417038704 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.417257993 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.726496984 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.422679993 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.415985779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.43199135 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.55170509 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.422136421 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.432921293 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.426619411 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.425975025 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.640496136 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.7299143 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.428883322 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.417135735 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.760383795 seconds)
  done (took 205.534495637 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.424219482 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.415873777 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.418559257 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.416403025 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.41660338 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422757676 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.417268434 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.416226159 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.417114287 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.416799528 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.41578537 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.417171061 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.416631769 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.418372912 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.418060855 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.416916047 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.41618942 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.421344908 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.418086161 seconds)
  done (took 45.352879419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.422525798 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.840133785 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.423287178 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42296072 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.466962666 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424051759 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.416977332 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.555509302 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.423257766 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.422811241 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.422540044 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.41635229 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.427711356 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.863474174 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.423169779 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.863607299 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.422530946 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.422435669 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.421569909 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.863154377 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.41715069 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.72897084 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.470364805 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.863698624 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.423054295 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.424464706 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.422546942 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.862957365 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.422606415 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.869773809 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424226107 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.422155612 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.468099167 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.469568588 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.417013733 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.723467094 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44976282 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.530470428 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.422143966 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.424696246 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.863991918 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.42423289 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424619109 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42753217 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.840257675 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.842804115 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.422718474 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422220437 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.863441365 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.841882441 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.839155399 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553056278 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.422979065 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.421335113 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.719099272 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.422423602 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.865181823 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.426529848 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422778038 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.423543095 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.422832527 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.426521426 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.555963361 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.864868278 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.7263881 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.426036432 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.417702209 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.418054978 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.423259648 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.470847985 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.423816201 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.416532365 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.42375254 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.468883389 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.740038058 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.41944599 seconds)
  done (took 126.372135083 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519316247 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.853036456 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.416710401 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.416608036 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.529907753 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.519652566 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.630481925 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.486831043 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.477157528 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.520185628 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.541459284 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.839995174 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.427838666 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.497062634 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 2.001165531 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.643115188 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.276992347 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.418365712 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.558964197 seconds)
  done (took 35.98692066 seconds)
done (took 523.981790484 seconds)
SAVING RESULT...
DONE!
