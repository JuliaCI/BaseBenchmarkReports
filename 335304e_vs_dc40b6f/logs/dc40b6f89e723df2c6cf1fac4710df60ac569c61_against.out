cset: moving following pidspec: 17380
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.242915189 seconds)
loading group "string"... done (took 0.479716846 seconds)
loading group "linalg"... done (took 7.732038837 seconds)
loading group "parallel"... done (took 0.175714903 seconds)
loading group "find"... done (took 1.197839234 seconds)
loading group "tuple"... done (took 1.892671312 seconds)
loading group "dates"... done (took 1.281939526 seconds)
loading group "micro"... done (took 0.239301214 seconds)
loading group "io"... done (took 0.729421903 seconds)
loading group "scalar"... done (took 41.620089469 seconds)
loading group "sparse"... done (took 12.84249205 seconds)
loading group "broadcast"... done (took 1.04097806 seconds)
loading group "union"... done (took 14.159030987 seconds)
loading group "simd"... done (took 4.845650194 seconds)
loading group "random"... done (took 9.741160369 seconds)
loading group "problem"... done (took 1.999211167 seconds)
loading group "array"... done (took 22.765267521 seconds)
loading group "misc"... done (took 1.492721918 seconds)
loading group "sort"... done (took 3.658975682 seconds)
loading group "collection"... done (took 19.514106041 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.459558845 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140947539 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146557725 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132863591 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20593336 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140631876 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155433388 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.110414029 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.043986866 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178236198 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140203389 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.490398024 seconds)
done (took 5.14855301 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250764957 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080506379 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092864643 seconds)
  done (took 0.926253284 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089596038 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141722122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090129483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073451508 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073020478 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090440235 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073144278 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090373256 seconds)
  done (took 1.384934354 seconds)
done (took 3.413139265 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724388264 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278438334 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202414902 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509383336 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176095962 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21129264 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673825124 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365012548 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.247093684 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100150085 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129178817 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.442630371 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111839516 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694926829 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08676789 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124140174 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.171741941 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461868183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.09137741 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088396792 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113970938 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150661391 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088763878 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098834166 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167850505 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.092078058 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.185354107 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102708503 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075725695 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.263503503 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202015678 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701970848 seconds)
  done (took 10.923730388 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111710549 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135276519 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074848316 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151782008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134567373 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078372153 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098111268 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075336345 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121429456 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177498431 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112680047 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13972265 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089604044 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077937891 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114798465 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227138058 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120322132 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116827906 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080097098 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102231988 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118416238 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109434092 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087990898 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105632787 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164354177 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201636895 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105381392 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121142867 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076137281 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108219083 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140498257 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155627656 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073878252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074304326 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174167821 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12040223 seconds)
  done (took 5.040577967 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186917523 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098679971 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168049815 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160066686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142745717 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151466663 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109694868 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257325958 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.128523459 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.124552799 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160052245 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142745277 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111952402 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076166887 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098932725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075644845 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.686976846 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16087793 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109383996 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11264973 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09561739 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081967867 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38270736 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080525496 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071413991 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096623889 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066812045 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155435533 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095542526 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168061915 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095442049 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098263544 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12873188 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193929707 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108996211 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131372836 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09424891 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073371979 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175977426 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07939232 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09020817 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073975936 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121884259 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129326917 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116140658 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089495378 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075181285 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22310093 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.074277221 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087976828 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121009419 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.014651833 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178218385 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093601717 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073557921 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337851945 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113194968 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074089644 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091781499 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278137592 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125739565 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092163338 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075296787 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075791864 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094857932 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388746954 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076570894 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.718619628 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094011597 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085201155 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094694245 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075474639 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100135337 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081862198 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111960656 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074302126 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095347349 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076798054 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090984852 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076908693 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110849977 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081773459 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091828466 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144267458 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.092160776 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095030322 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122689836 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077588647 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092066736 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123890723 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078387743 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073882945 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132504081 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074800914 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112031224 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092741995 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137950416 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.074979024 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074456731 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.19797298 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07498237 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122584127 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081006823 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124672759 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106479008 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07615004 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098375376 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073413311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090690593 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144320855 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077813739 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095726742 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.075163113 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105984729 seconds)
  done (took 22.23690845 seconds)
done (took 38.952837062 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.35096556 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108814023 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107723714 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107254407 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10423439 seconds)
  done (took 1.604712795 seconds)
done (took 2.404175549 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.309721489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16954893 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092246999 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165748416 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070952562 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189253327 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156564942 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.090648653 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200477034 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072724053 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160329906 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089881553 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073498067 seconds)
  done (took 2.66977816 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090163242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110474232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078342526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089646806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090215227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089324713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106464681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096206635 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107107276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080116296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070960157 seconds)
  done (took 1.803825292 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089814206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090883357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098661745 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088489201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091385869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08928189 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106557481 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097011943 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111017446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083033696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072749533 seconds)
  done (took 1.815910143 seconds)
done (took 7.080349529 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094627427 seconds)
  done (took 0.889103055 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.057709428 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.716077031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120388361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165611826 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324347271 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211649722 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.599686621 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131653135 seconds)
  done (took 16.316944269 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.124196531 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099520112 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077930698 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097236182 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075254035 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098026592 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076536047 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096368511 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077604203 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078934022 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096562398 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076373586 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09382584 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076234754 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09628616 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076898784 seconds)
  done (took 2.272350436 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112627638 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112913706 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10261425 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084831957 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100035261 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0801686 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102296662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081465221 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097538627 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080275496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103096925 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083261058 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101910541 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077854952 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101522227 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084836363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09726257 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08224635 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102392639 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100526407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086247206 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098529849 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083189344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102767413 seconds)
  done (took 3.162833041 seconds)
done (took 23.446429585 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162651168 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080654732 seconds)
  done (took 1.045402754 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097035374 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114895268 seconds)
  done (took 1.022086873 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103711484 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094837525 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132176347 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09496189 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096366796 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077538361 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127359512 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095525326 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078556293 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078132137 seconds)
  done (took 1.788709443 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082137785 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080632666 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104676821 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115411557 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088568265 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098323271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082097281 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098725052 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082970831 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094968868 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086026912 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112203614 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082807448 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115379885 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10033551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083047476 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10556747 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081031757 seconds)
  done (took 2.50492125 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077710208 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07867708 seconds)
  done (took 0.96552038 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080856389 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074876266 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097818592 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096431889 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076396148 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074520607 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093879438 seconds)
  done (took 1.403936709 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.455039482 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140301453 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268382223 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081520632 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119761181 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.328806158 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.094271716 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081657157 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100004905 seconds)
  done (took 2.517676084 seconds)
done (took 12.054523525 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089189486 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096822225 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126638329 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468408172 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.115599778 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074393827 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158007107 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258603664 seconds)
done (took 2.198396731 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144708678 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336852117 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12326282 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07021149 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094402771 seconds)
  done (took 1.437708635 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075800553 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077685478 seconds)
  done (took 0.9687155 seconds)
done (took 3.365127022 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076035273 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074869794 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091133356 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105921449 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096987744 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077506375 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.094201823 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072761301 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074491252 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096088312 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075021354 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092632816 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075892075 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072054166 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091578412 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075202369 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090214986 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073280861 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072395361 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091841408 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074830104 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093246807 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073650916 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072086411 seconds)
  done (took 2.833831614 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103269204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094901563 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081563755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099372525 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079990153 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099788002 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081258262 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093860934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080861512 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096423303 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079187865 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097837574 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077698032 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098346575 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078053257 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098194954 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080714429 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095402958 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077611519 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097985495 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081335827 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094828921 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078871583 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099986416 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078646484 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098350843 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076972845 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094764215 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081540744 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097950156 seconds)
  done (took 3.495261727 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08090544 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071864473 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092413323 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07988155 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091529119 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07878849 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072022166 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091890411 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077283264 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091902554 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078685796 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071911264 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091282427 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077242546 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096058169 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076934267 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.213638447 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073444443 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.072218991 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096296731 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075245589 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091014851 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076278375 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07195255 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092551651 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072645211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091146418 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073849716 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073003834 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091421525 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075487604 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09541044 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074240285 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07878713 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095055422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072762385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095319545 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073363124 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077110517 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091399105 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072800999 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090360877 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073944021 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079084929 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095711278 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074739054 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091944097 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078413408 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075902589 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100098479 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072689071 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091209585 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079242056 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095558617 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077873208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071737158 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092450191 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072473972 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095980126 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073934164 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071807523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09156199 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07495192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091862153 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089964004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078631738 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09251083 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078506207 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096075696 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075496637 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095912678 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088521263 seconds)
  done (took 6.915805144 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078891782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101588399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076105934 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075968886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090646266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07308116 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099021097 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074301007 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093273408 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092205684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092350584 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075514217 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074769904 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097020762 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073570457 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094039439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083405954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090588794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074215812 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095582338 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075369037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097465262 seconds)
  done (took 2.704155105 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220362471 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102816705 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139145573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092615774 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113624869 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111578735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080885868 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10196659 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081663359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102889563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085353836 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09982148 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111641073 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084658655 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102004942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085463296 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100913667 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085291454 seconds)
  done (took 2.72556294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089747074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094920018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101252599 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095198844 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077270944 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096866452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083594761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110452571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079258217 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094791585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087538873 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09746234 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078713616 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094105257 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079398459 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076647914 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098388276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076123674 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105745481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101055093 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083533081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104511588 seconds)
  done (took 2.834305503 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094194273 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096816619 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09732414 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09971056 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075929787 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096301879 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086156086 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097274526 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087940925 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099102205 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079525805 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098213582 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086801808 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095616587 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083475761 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09470618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079122186 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075622069 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097543911 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07516669 seconds)
  done (took 2.623038952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117211515 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109191425 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090163752 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120970189 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090473407 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109946902 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120475233 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091661295 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109690907 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103336262 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110110403 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090810872 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120959669 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1161631 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091087942 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120703729 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119453938 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103673685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110200043 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091773198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122422818 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090534824 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121061947 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109083708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091107047 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10879473 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091786104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118043611 seconds)
  done (took 3.8219367 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077274736 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075491843 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092939851 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074620079 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072996165 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093096969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074437827 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094715072 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078064722 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074319287 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.097933619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078513827 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100155981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078277949 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07733848 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098544231 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078390368 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095730318 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076637483 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074971881 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097991514 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076604643 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09473459 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074954173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073876369 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096455193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075012342 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095683398 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079571206 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075578892 seconds)
  done (took 3.335947455 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085813213 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100680648 seconds)
  done (took 1.020720184 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075718832 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111238645 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075498986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080158414 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105041788 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078801411 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109823907 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083852825 seconds)
  done (took 1.551415256 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095072192 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114528391 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084001323 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108111242 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095216311 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112254495 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137331591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102752864 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082085614 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094748562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092923051 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095448855 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08235116 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095884501 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0832201 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08241933 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097102544 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086548991 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103966807 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079538537 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10189752 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08891929 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098129303 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085090543 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097956842 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088471528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106134887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08966284 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098687933 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0906765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.100689938 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071874115 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080485418 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102608832 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078887103 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112907364 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08989416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099683049 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085432193 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10337177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087053958 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095111604 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08284643 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101638773 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088612118 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100740579 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084185717 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075441559 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095057445 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079703751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094762414 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077070139 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089419371 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086449676 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081087042 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110899155 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078524638 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098497457 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080053536 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099705605 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083546428 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098812367 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080043513 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099882637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085276675 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.081043048 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105026923 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074673185 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091233326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078751694 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10488916 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100180117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105877584 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082595579 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102953154 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07832689 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099199238 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084291251 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103870717 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086073682 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101385008 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084757428 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104588638 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077443841 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098255055 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084675585 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078681925 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100218235 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07498471 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113074477 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080730176 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097449631 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07504961 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105354639 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081055934 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080693092 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094119912 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084086424 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090568612 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083274839 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103067123 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0774711 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105921148 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083032321 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102696854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085877774 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106544476 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077565119 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079225584 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094066691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083734638 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099232302 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084125823 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090030624 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080719553 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.078153132 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102879187 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084706638 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098896743 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081512206 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104936233 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.084026955 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098759762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074171477 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099365967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082374338 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105741329 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086611734 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098738855 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077022984 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075810941 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102467558 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081887207 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102192838 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083769458 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100663335 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071842778 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097879208 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083195292 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105081302 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078619728 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.077781589 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.102219559 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077721059 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101172374 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084329299 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098477206 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07679675 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08089991 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099298942 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075571686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10703377 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079265099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099453584 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08095129 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106893793 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079260753 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102128317 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079993782 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100300788 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084888025 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075878234 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097053241 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079562436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107251391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079827542 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095762583 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075066033 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101916257 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.075555621 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080358691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096185051 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07996231 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102880176 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07945799 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099069373 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079227594 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11092961 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091832181 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101834753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084425701 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.105685937 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082809641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078575043 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101691837 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083138199 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102785328 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084945844 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102761012 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08278845 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099397264 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074145721 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101479564 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086567934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.075595402 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098959124 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07604081 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101224137 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085302297 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101020166 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084170452 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098131011 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079388564 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086967029 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100490682 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081394525 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096700269 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081556355 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106050766 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.083661286 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103886348 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088438011 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099573248 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076682146 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105783292 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079867695 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082978418 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09696957 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.074443012 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09561463 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084360156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099313976 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.081611067 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071086023 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105871328 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084642477 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097384503 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076938112 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101255676 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087074651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098407683 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081170571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099215419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08470862 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110605398 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07765511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080434801 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108085354 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082531545 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091769312 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084008886 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100788791 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077311655 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100289774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081672183 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079679077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10513691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082025171 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091314536 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08005668 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099308572 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076506386 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075583448 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105708088 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080730077 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100547567 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087562759 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104317217 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082879594 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102601494 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082222712 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104083657 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084159259 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101109388 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083320961 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.099716241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077872953 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.079664038 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.097025598 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078676055 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102247652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083025651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097258131 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08369803 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10021089 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078888458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.079135037 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10463236 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078529474 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098783555 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077270403 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100517476 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079037935 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.077160116 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100788344 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076054087 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106090849 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082020772 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106613569 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.078137257 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094535973 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08401032 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079945184 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10465519 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084008897 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104923724 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078565571 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102501094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.081064693 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107835172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.076053667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107921112 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085008174 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097272773 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.081813057 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.077192587 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099573315 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076206831 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100425081 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083858572 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097115204 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082786122 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102226816 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081877271 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077474539 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099872968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083918318 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097472968 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084391659 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.09150264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077493026 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07665309 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104297628 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084435974 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104032549 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080222446 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108442748 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084566725 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099611573 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07508035 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.084848074 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105651388 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082469647 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107574788 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076565047 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100667373 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087925156 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092237444 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081360428 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098969113 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.076420463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085090182 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104547093 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086018086 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098540245 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077542624 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094571772 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085419759 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100764565 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073362742 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078225612 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102526395 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080703794 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100138805 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083768858 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099952663 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08549869 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105403392 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082670772 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079229781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103339667 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075250363 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096685272 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077322422 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.100709884 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085027974 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07503623 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096910752 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082107171 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100344707 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.078444303 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100752655 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080836381 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084406129 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103031229 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081240106 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109326082 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072180464 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101839893 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082064517 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101982395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077089466 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101067364 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082891495 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083258907 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106562269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081188937 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098697489 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082155826 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099141424 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082149009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102332866 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082893276 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096355296 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085616787 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105430203 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081153529 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080102113 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098714046 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078414503 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10300275 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084078354 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100415017 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086477036 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099920322 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.080823939 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084042393 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103838742 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080767026 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104504512 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.079964675 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104839214 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.077287047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107181182 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.078337032 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103027876 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.080612267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.076013282 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102591238 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081690922 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100985816 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084366088 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103448307 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07795952 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076037059 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099915056 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07890838 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108455149 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085588699 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101282535 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08097106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096795916 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075879554 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103223419 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.076574643 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.078467144 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10164464 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084128505 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101001878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07889874 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101215375 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087492661 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103974449 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08397196 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075639908 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10506636 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083840427 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101181361 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078825905 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099146372 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084620441 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104409026 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080092271 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096471283 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088379858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101502444 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085957954 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079087254 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098800202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0778882 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097099925 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085044894 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100396657 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085997176 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100389845 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083080899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107192529 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078860755 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077439339 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108912176 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081581175 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106525464 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076412013 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.099343145 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084757061 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104040254 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077503151 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077984578 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097105416 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.080998086 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097995204 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078094782 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108641427 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087257786 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10078102 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083047934 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100061801 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078614186 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076170051 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098187029 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083706553 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100040444 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088930393 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09673068 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078021751 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076228659 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103193423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081050146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10208347 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075656083 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097155869 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077691529 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080295151 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106996925 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080176395 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104573832 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082307086 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101902316 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080383116 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108535355 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075006053 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103440243 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091277057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.1040778 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080179807 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.104374806 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089104303 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083344586 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099110942 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083661041 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101810054 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078715666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104917556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084894081 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113937254 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081826496 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098032829 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082024485 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10163413 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079033712 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085237288 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106260314 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083898233 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10426063 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080142247 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106806981 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081322598 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105006793 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081794388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101251811 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081793278 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077727463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101714292 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.077163725 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106213411 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085325054 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102861129 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085746807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076494042 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11064768 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.106274033 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083597818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07509271 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099472563 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078281258 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097372909 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085060144 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.075918476 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101795849 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080032257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102641056 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079000883 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105399347 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082376827 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104735706 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084005102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072112563 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101004074 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080461238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099723727 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077569217 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102815975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085402102 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.084341033 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109987356 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.077780415 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.100872138 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080430966 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099946427 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078081981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105147846 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081895097 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.079890729 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100065464 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082653952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105306611 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08335759 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105172984 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086191679 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10161808 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088024971 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106342633 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076760907 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074392781 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107483394 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079345451 seconds)
  done (took 54.839879539 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122282594 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105746446 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073359685 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095776874 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120793803 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079498411 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073813867 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099676341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078033336 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108991084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074094762 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094613306 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115090991 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10175483 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119969674 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109441066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073860484 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099000789 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074545032 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097917006 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094968455 seconds)
  done (took 2.899535832 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100818413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113643541 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090179825 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117661347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105866518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091605468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111330761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112222311 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095117438 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107409919 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11724143 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092174287 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108435486 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107172228 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087652454 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111061407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09560168 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107047383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113525427 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089938879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111072341 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109873143 seconds)
  done (took 3.180908461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088657256 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.080792434 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104066562 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073218462 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102164156 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074518924 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107306186 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077478577 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086013391 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.098654339 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076678737 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.097919369 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083367381 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073332084 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.099614672 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075851295 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150564055 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108472631 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082316602 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104810402 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076280123 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10086208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.07790481 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076637504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.098543882 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091979683 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10565333 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082616055 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102512419 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.077826194 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081299455 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.098211019 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.079385972 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.099248136 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.07768745 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.076258155 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103951959 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081783132 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.097892377 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080427949 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.098706252 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.07923189 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082872723 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101582908 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080058693 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097093037 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081465481 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081714842 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.095430393 seconds)
  done (took 5.294960653 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114435408 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131316116 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103991753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144779605 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118516048 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091684211 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104897285 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142159913 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078692152 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080072717 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121950889 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118074835 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08151732 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110106932 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105896126 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083641768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104878392 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0788467 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109242286 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078357144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109767137 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085758982 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117633058 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114831018 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08751213 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102488966 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077744479 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110574225 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112753547 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089254482 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109423254 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089828791 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118400589 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104664721 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078408617 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104905529 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.09981042 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104652974 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085340971 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098202183 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084194428 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109617171 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.085639925 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121112245 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104318467 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083981566 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104270848 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075712272 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114620446 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08454126 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113971564 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116401734 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087321694 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104740051 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086931875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118837898 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103688107 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081893897 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107109236 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092749498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098121807 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086491309 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117314388 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105104561 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092151542 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116638168 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083729613 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109835605 seconds)
  done (took 7.927290197 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11122625 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109531551 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098435039 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121548314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109767976 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087908616 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109376731 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087212715 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109728994 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115311328 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088863321 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156133533 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083761968 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116185046 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108963483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088788081 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110193186 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088588998 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109812012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087503358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109030013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120733145 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088722338 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121187114 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121560314 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085257157 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109239624 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088777441 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120492391 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108541667 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101128399 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109827255 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08742434 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121183941 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122227389 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.087428638 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105258081 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086898042 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110809175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107334539 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086694555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120413921 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088132686 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106703308 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08777642 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110564199 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120864706 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.101226936 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116025176 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116032716 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087709899 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121237454 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08679618 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11061189 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120952803 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128730235 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099763337 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121086769 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109442969 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099031567 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120946867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129138168 seconds)
  done (took 7.498953919 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112320592 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117406023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1218849 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075105163 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09882515 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087672355 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097802873 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078119647 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114852797 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093576125 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118061102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10728513 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091922144 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118083185 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08603109 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113537747 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10878251 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086962615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116211623 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107195561 seconds)
  done (took 2.949038355 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088207005 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120997984 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080051829 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108073843 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082194645 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108553462 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081212972 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103472023 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080639503 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103069981 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092846224 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11455394 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079765421 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110222985 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113367515 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.08755335 seconds)
  done (took 2.45488884 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100112981 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122253669 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102359882 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107798439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076668991 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106015933 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081634451 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097726272 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075945161 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.117697922 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085461673 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107780813 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082974407 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099732308 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081449262 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107830478 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076204997 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082483418 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105027268 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102132884 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107391485 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.080887053 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106082254 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080583121 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105283217 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084302183 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109420409 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077010652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100652452 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082119128 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10506442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087078793 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098750545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083842075 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100723468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077203987 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104133584 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0831043 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106118784 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083262715 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076928868 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104160509 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08173967 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103784814 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075558201 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104726566 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075262731 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107383268 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081551682 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10361002 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082983078 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1084103 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087143119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112269259 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090430617 seconds)
  done (took 6.085361289 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097672115 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105235903 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076180826 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07744843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10641745 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082496745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107388369 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08279033 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103711203 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078050644 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104166997 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085433113 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103211005 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085638229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103240785 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085870806 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074056413 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104244087 seconds)
  done (took 2.572912197 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087253182 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079765648 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110371397 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079568904 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101971541 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082426967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097930322 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079232856 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077563136 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102743101 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079901219 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104828823 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0779296 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.1040821 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080654311 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100695328 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083372826 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077826124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102014335 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075557971 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104407316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07944822 seconds)
  done (took 2.879847976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117250848 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121459932 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08797437 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.204015675 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121584285 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.106387105 seconds)
  done (took 1.670887285 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106763468 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140930961 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081353088 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105267312 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093019553 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107891881 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084395308 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108083886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12015456 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097842057 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107715566 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120777672 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100121026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118872413 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115910283 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093837623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108102137 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084180523 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103672747 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129625813 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084919157 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121794828 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106561787 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086653914 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1070831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096447836 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121455453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121948617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084601901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122074917 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116295172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08541674 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122572762 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120382788 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083249689 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121749959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084699368 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129826887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117323494 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1192832 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08360435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116856054 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098381524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115120111 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121178616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084940782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114809795 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106823981 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086384556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137328046 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116251223 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096345374 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117295039 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121478007 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119713017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13555479 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099331416 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119406615 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116776105 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098950098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118755555 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116822457 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095514035 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121221085 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116278082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118149452 seconds)
  done (took 8.094311461 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120691094 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10534406 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08495686 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121257702 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119564816 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085293058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107719713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084089296 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108108547 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081707483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153723581 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109287405 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119689404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097308362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108254553 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084179298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108365545 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119599723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082248758 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136693836 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107652743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095776896 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120267364 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119028911 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121094612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094122118 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107969486 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085215526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108825099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084505102 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115959315 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108109251 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096886579 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10481728 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117750427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086234472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107481476 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09358588 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108389134 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093925182 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119196295 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130694479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106293416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08620054 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120849189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086412209 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109026375 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081860351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108018272 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081945858 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121497845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120607632 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122077888 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096446053 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109620826 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107399986 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086376219 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107907865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08652796 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116265857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11892831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087632648 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135721612 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107992864 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086201202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119842341 seconds)
  done (took 7.895891616 seconds)
done (took 150.92407863 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097198339 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135018728 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094393507 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163612553 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082039018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113098317 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136901392 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094782388 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103377807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080832673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102365361 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084620838 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146038678 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.104258924 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080011105 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105992958 seconds)
  done (took 2.645416451 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176116382 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.290510677 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100145871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101012038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086584862 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079901922 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.102655737 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088739752 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.1051823 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080815453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080824046 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10498208 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080134038 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103661933 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082250314 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102467389 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081519227 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080323851 seconds)
  done (took 2.850106671 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10890948 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151107302 seconds)
  done (took 1.186997452 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116391896 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172714336 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268957154 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150660247 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132020844 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09600094 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152890923 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123271444 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203514985 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126463761 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103431149 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11154283 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135754812 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09162532 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111585688 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088002645 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138276013 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087465447 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111807552 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.089117922 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135533541 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080303244 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115044537 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087619653 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184655968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12516062 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102374762 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081785148 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08824282 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113137548 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087226832 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117718532 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124686901 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.147412997 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092317071 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169713871 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.089422799 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107088311 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090627644 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.087464374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114814885 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114261216 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095444977 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110084465 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.080763582 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109651782 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0814899 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079877567 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112518768 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.088225634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112908768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086829144 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.383571063 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.090238659 seconds)
  done (took 7.421479135 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800510602 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152925309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086838203 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.866926985 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13661773 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122708949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.757575985 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131332902 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22676861 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.799044874 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100269213 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120301138 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222258611 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.230520343 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.948782848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290648374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672830032 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123447685 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111031954 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145211387 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115569914 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132535726 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103670489 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422622462 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108385116 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084382356 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113858896 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094098794 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153598757 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109365948 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087984819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193813221 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240711873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176621761 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108902678 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084049004 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106473865 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.161510809 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260455304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191272475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17349211 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081444 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107557651 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093813903 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127046158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102754547 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158628178 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166613657 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.163825974 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110231023 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09623202 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116406818 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09345378 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.17623623 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084793937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311462754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289812062 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108135486 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113844235 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101983383 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258763971 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084248006 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221960495 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132048472 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187023051 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10683139 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753508913 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159321017 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107043385 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090815366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114370326 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088400933 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117536162 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161704873 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402284543 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096423795 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111361798 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083124632 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226856331 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085023802 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106200929 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.15693294 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085776161 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115962656 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096952047 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119864042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163560333 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.225516114 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119823511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113626683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090713383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11813534 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087028725 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206993469 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216010111 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15335255 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20436976 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118704012 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157280014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159872515 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118454896 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.163597705 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114192967 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101317486 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119131812 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211999444 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.113901495 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10791557 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089074399 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115412401 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139597652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087924199 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11557141 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162714432 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454629368 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159190548 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.105413017 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088896446 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118024861 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157307255 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091267854 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257923103 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115683022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161100745 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090953885 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.105350728 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.091851624 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156951692 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120525941 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115911339 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095770228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11613415 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230214166 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215555354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097186544 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239078112 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175343033 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094074932 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.164912278 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116648991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163433938 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116122038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095663816 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109987759 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747533031 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120855461 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090812065 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113159749 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181496658 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085222715 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10875185 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085698339 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081728739 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773032378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109685055 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084581289 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084988343 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116356771 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091760027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115102257 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088942025 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180510392 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202556991 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117814617 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114361138 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085909173 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155754666 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109523671 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086475703 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084959469 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109525254 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092249079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112204813 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086142425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187233572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15412066 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193640547 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.594849272 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084815219 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.109251478 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223983333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086619991 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289610112 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092215108 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223694649 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160706926 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105366789 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288890472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183448475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.157546833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111512299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167111277 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081856636 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115135748 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156722572 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106885925 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092855776 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154898926 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122391377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095554556 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.979754607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108364836 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221890532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083114918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163368709 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110484832 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093969187 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292472239 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107248784 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102543392 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155688584 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112815824 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086123713 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.871163692 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08720343 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118196548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092640089 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221711994 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159375828 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11581154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092109223 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119093559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156852968 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204058217 seconds)
  done (took 42.215134777 seconds)
done (took 57.240577247 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259064299 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212744332 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270221087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167122786 seconds)
  done (took 1.958428915 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173335285 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142461975 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.079053042 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149188036 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103627821 seconds)
  done (took 1.717057109 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36868576 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272661895 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214057271 seconds)
  done (took 1.805460602 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244951935 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240647544 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347325402 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392501668 seconds)
  done (took 2.276357613 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200610479 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097293949 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120859407 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111683851 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166068037 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203716476 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138387978 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146980807 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104472105 seconds)
  done (took 2.28832254 seconds)
done (took 11.001846882 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.140848396 seconds)
    (2/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.280934356 seconds)
    (3/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.256558786 seconds)
    (4/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.230369253 seconds)
    (5/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.136855019 seconds)
    (6/286) benchmarking ("sort", Float64, true)...
    done (took 0.234166931 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100867401 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.18449183 seconds)
    (9/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.234782713 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120356833 seconds)
    (11/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216590931 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.088384554 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117582997 seconds)
    (14/286) benchmarking ("sort", Int8, false)...
    done (took 0.206449817 seconds)
    (15/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.233167069 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.207209061 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.166789404 seconds)
    (18/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138812717 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.148268326 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1546209 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092590264 seconds)
    (22/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.225017571 seconds)
    (23/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.238165761 seconds)
    (24/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.235759685 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.172192474 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096491156 seconds)
    (27/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.109712786 seconds)
    (28/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07175906 seconds)
    (29/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083955578 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.227695039 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.183011598 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.090946984 seconds)
    (33/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106964129 seconds)
    (34/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.08892495 seconds)
    (35/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126917751 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096364784 seconds)
    (37/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123162299 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.108562181 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13126428 seconds)
    (40/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.199820046 seconds)
    (41/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088675835 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.191579787 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071611248 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104868151 seconds)
    (45/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236313211 seconds)
    (46/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069527994 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087929677 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140128707 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087695235 seconds)
    (50/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.162823149 seconds)
    (51/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.152273512 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072756715 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08780543 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.116812616 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.215232648 seconds)
    (56/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.181579352 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112442725 seconds)
    (58/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069889884 seconds)
    (59/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.186502414 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078140038 seconds)
    (61/286) benchmarking ("sort", Float32, false)...
    done (took 0.176046209 seconds)
    (62/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.113507643 seconds)
    (63/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078901627 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086821748 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125546387 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100380624 seconds)
    (67/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.104780853 seconds)
    (68/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196864749 seconds)
    (69/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090702965 seconds)
    (70/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171897419 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072428792 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071666283 seconds)
    (73/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.116395577 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080784925 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.183417973 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.187949524 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.081953769 seconds)
    (78/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.186425779 seconds)
    (79/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175651295 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108834848 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104477119 seconds)
    (82/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093775328 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087896034 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.180543939 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123391579 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150290134 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113395865 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.216650998 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095210069 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.094605852 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090407676 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136745845 seconds)
    (93/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238785008 seconds)
    (94/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141585465 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.135793714 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105767947 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130654126 seconds)
    (98/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08001086 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193158102 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.100399148 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141648775 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122234607 seconds)
    (103/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.125362589 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.178163729 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114488786 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109231422 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124870848 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081800245 seconds)
    (109/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.155243582 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 0.184554015 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.092656414 seconds)
    (112/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.152522316 seconds)
    (113/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094340956 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113304709 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108089521 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12248732 seconds)
    (117/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071198689 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.086470065 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114846938 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091186157 seconds)
    (121/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.187104689 seconds)
    (122/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118010822 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09415421 seconds)
    (124/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084265911 seconds)
    (125/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122319145 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161046684 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.095215438 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084043816 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107906304 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089650069 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188534219 seconds)
    (132/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091913164 seconds)
    (133/286) benchmarking ("sort", Int8, true)...
    done (took 0.225978906 seconds)
    (134/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096791106 seconds)
    (135/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09408624 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113742503 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084300421 seconds)
    (138/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072151722 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108050019 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089412397 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105254907 seconds)
    (142/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086206729 seconds)
    (143/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.211395946 seconds)
    (144/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079887111 seconds)
    (145/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.117730834 seconds)
    (146/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161165416 seconds)
    (147/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.110983573 seconds)
    (148/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093922325 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115229123 seconds)
    (150/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080406757 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134836113 seconds)
    (152/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.084088932 seconds)
    (153/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088467229 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106388276 seconds)
    (155/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18924426 seconds)
    (156/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223122067 seconds)
    (157/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088903115 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090693796 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108127647 seconds)
    (160/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069859083 seconds)
    (161/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.101556528 seconds)
    (162/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.125518061 seconds)
    (163/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094605891 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088053039 seconds)
    (165/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069551198 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.177720725 seconds)
    (167/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.106427277 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.167090174 seconds)
    (169/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.109357281 seconds)
    (170/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072792577 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.116732608 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07682704 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.177972233 seconds)
    (174/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.165151203 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 0.176293391 seconds)
    (176/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.159910993 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071470783 seconds)
    (178/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162521198 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.085638499 seconds)
    (180/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129772162 seconds)
    (181/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.073994393 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081793291 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.226606058 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.105443446 seconds)
    (185/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082588625 seconds)
    (186/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110392771 seconds)
    (187/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.138066271 seconds)
    (188/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078282425 seconds)
    (189/286) benchmarking ("sort", Float32, true)...
    done (took 0.23487631 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.108426901 seconds)
    (191/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.083272982 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172403411 seconds)
    (193/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069617697 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.107362797 seconds)
    (195/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085122319 seconds)
    (196/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068742287 seconds)
    (197/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095440098 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091293616 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116149956 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090152039 seconds)
    (201/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069305656 seconds)
    (202/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.095690935 seconds)
    (203/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070902975 seconds)
    (204/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069346025 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107472764 seconds)
    (206/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078642912 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132382824 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.080259331 seconds)
    (209/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.094623649 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082492127 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09176296 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114480637 seconds)
    (213/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.083255931 seconds)
    (214/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.105836144 seconds)
    (215/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134027796 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.104321218 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072180861 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109324005 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.108953567 seconds)
    (220/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.069740851 seconds)
    (221/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09629157 seconds)
    (222/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164358876 seconds)
    (223/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113166694 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.084700596 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095561935 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106588954 seconds)
    (227/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08216004 seconds)
    (228/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.096973257 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107669468 seconds)
    (230/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.097778938 seconds)
    (231/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073392254 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108712831 seconds)
    (233/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071560553 seconds)
    (234/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081897649 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107341742 seconds)
    (236/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092732243 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131407304 seconds)
    (238/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084168722 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112453651 seconds)
    (240/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08555877 seconds)
    (241/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087974688 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107427478 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090219602 seconds)
    (244/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.10712388 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160556219 seconds)
    (246/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106941796 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081903168 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105500918 seconds)
    (249/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085174176 seconds)
    (250/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.080870955 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09806107 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.070533776 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072619653 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110928175 seconds)
    (255/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083202027 seconds)
    (256/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.108259646 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08251292 seconds)
    (258/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072215034 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.096595796 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108561063 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.098558678 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082479228 seconds)
    (263/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084162592 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119259896 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073103846 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.105729631 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070480336 seconds)
    (268/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074488616 seconds)
    (269/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.096392092 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080600383 seconds)
    (271/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179866547 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167843413 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09124958 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106206275 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.071593593 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080307958 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.105465179 seconds)
    (278/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.081617469 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080962504 seconds)
    (280/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137490838 seconds)
    (281/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080031657 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.107872202 seconds)
    (283/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.071195884 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.104436356 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082736782 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186014467 seconds)
  done (took 35.497188225 seconds)
done (took 36.461432686 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096771069 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147463538 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092661193 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134502885 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095923955 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120568376 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091058758 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093302384 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.120382254 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095713686 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.119282615 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072350236 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118631741 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092774001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117453221 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113501758 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119831647 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089265691 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109905491 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.083404025 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085047456 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.108190586 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083632327 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.096022748 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095177648 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089568952 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.113991096 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093387708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.107548914 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082083874 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08107592 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115546386 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081641929 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121113347 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090729323 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.110994912 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095057624 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090715792 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110014545 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082552137 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115577635 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08241118 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11249485 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090929958 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083066095 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10633257 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085992374 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121118805 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114424439 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111545344 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091595179 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091555315 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118928994 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088626379 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.106718728 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085917921 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.105958438 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114551879 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109887686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088035639 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089764733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115702137 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080807263 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110569733 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086235526 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116150515 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09444139 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080860635 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117609763 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087526499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106635419 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087107873 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080247946 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.108178451 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091537239 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11823937 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082036258 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.083199722 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114852676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086931723 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.107812037 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084885085 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107969966 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.085664707 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084053576 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097838863 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081410899 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087142275 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10742344 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085583672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114254049 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08907169 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107243801 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094729716 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081167719 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.106920519 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082092039 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105888791 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085701634 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080733368 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10785529 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085657306 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114617808 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084765823 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083800385 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119882989 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082330432 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.113348465 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082537037 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.081107017 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123720399 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092060511 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.107466512 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088021729 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080606479 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.111089156 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081579954 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106650388 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.083023741 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081166879 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110515492 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082069654 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110534862 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.084291182 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098137513 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108321326 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080780685 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109934971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082427359 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086867997 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108248168 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081855297 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109361796 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081006293 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084099149 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108533303 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083846471 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109814994 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086274774 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082927516 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112156665 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086163581 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109148115 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082325009 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080887052 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.103123821 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088054759 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110051502 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084235631 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082014949 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108956699 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08221159 seconds)
done (took 15.84034632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08438235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180965571 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144812477 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.116809611 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129779569 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08202148 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118486527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113173101 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110645707 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138214941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10550811 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127467753 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121539388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.107311078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082744549 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086106847 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110641704 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.096885664 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147340793 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127733968 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118088088 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.107258441 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.114339144 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13274273 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091986119 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135469323 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082923286 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11273164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086015206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124407408 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103430316 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111254433 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.084089118 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129677875 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100038286 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114722353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083183997 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088664591 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108203122 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082767497 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132555372 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103812614 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114320282 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087788287 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11364394 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085513363 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108931518 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092388226 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119095216 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087626011 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122605226 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113520557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111646039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092677111 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123998049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093641993 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117477476 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.085806857 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082649812 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.111255612 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081938138 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110606298 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098290371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.134887066 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.085805911 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118287857 seconds)
  done (took 8.183370976 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099568478 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137047004 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100413156 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125604223 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083033213 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082395141 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110100924 seconds)
  done (took 1.753627629 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084971501 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10824066 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135318234 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108605107 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132223577 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.135574732 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089930169 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08254981 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130656771 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084658232 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13476691 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124280748 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110970996 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090924858 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138405352 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083038416 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137416726 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083552457 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.111891606 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110814986 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111406205 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10238771 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.111465362 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.08524818 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101524269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110875205 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156764445 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090276225 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.080835468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113618336 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0817047 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149445408 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10112486 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118354071 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083482588 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128560784 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.101992046 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10697571 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.101060799 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11373013 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.102792114 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084003051 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111697777 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08195706 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.113844053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098289943 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08641924 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.111202649 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087165061 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13414091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08709125 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127518048 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085151986 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.08685102 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112445682 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087132608 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12236015 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085234557 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13556727 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082490634 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132111655 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10468435 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127058197 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.104704786 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111214672 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103587723 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10036236 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113702299 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086110166 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113674613 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104357208 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.106990711 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087753626 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09720562 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11213458 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110042754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137369269 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085254387 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12103593 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084606527 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110109481 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085643885 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135723358 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089207909 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083179876 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114715481 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087813665 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107178077 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085003384 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088938653 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108792742 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085755904 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111800871 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086709921 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086422079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130314516 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085021747 seconds)
  done (took 11.242408132 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088065078 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086176235 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115491668 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086748335 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112066716 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087288474 seconds)
  done (took 1.610415884 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114085021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111874209 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098725957 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116718745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124996772 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134128688 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109699611 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12109857 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100758015 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.123056499 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109201053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137230896 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139424723 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.091264008 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134161658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090278893 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108582134 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117501003 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094471075 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117414974 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101250237 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117958603 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090716083 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131011142 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094247595 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116505853 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090069343 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.122577663 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.09586775 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120479071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089626452 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121387603 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090882993 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120141525 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109517557 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116683782 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08854741 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122270151 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091818015 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120959706 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111555629 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116386323 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.09600539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12184033 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093345733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117381196 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096250364 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116773278 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109806151 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12281365 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09653873 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115093702 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094067412 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121304367 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091110826 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119499749 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09657592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136433693 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09006261 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116457331 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088606476 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120121431 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095067553 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119809628 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095639786 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122726757 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090688184 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114960796 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091598282 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089064188 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123156659 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086720673 seconds)
  done (took 8.899649177 seconds)
done (took 32.706385298 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69332235 seconds)
  done (took 1.719363189 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.812173852 seconds)
  done (took 1.839883395 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.355165647 seconds)
  done (took 18.411587315 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.471936857 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.569339599 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.953163045 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161294007 seconds)
  done (took 3.185915948 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964507251 seconds)
  done (took 2.019606166 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284282242 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23343653 seconds)
  done (took 1.554864658 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790679578 seconds)
  done (took 1.839513622 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.447575796 seconds)
  done (took 2.489186413 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32394237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155088143 seconds)
  done (took 1.532378532 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554522294 seconds)
  done (took 1.605548437 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.142815852 seconds)
  done (took 16.19289507 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240693975 seconds)
  done (took 1.298780114 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289750928 seconds)
  done (took 1.337080005 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.604370598 seconds)
  done (took 4.654440106 seconds)
done (took 60.721601236 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096572294 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096406396 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124364844 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094798431 seconds)
  done (took 1.457478592 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100418843 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.090657448 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.125969153 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089666116 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127892536 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090349222 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121533503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164386885 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091492769 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091058802 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117602771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090902873 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120547171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094229845 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115691973 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094421518 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12603803 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090764073 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121666247 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092650604 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114025667 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095334057 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120287859 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091195443 seconds)
  done (took 3.637735146 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096703526 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088646743 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118320466 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088960902 seconds)
  done (took 1.452584222 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096258865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100529113 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.128022509 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094159589 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128362663 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099816315 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114837758 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086828852 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.115928468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095990375 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11128615 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110096762 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127035291 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095013845 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122625107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089511263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085782085 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.129014809 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094692213 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122520958 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087821897 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120408177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086365382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129180006 seconds)
  done (took 3.633556483 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.164815158 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123133986 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.10700272 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.11699533 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129050259 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137612029 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08235973 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137425486 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082623747 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126320155 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087479218 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162860604 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095991446 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109738114 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083869284 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082994161 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122937908 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095479027 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.113943907 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095980614 seconds)
  done (took 3.3163619 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095185512 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087266846 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111656918 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086569382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120914454 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091537636 seconds)
  done (took 1.658226294 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094094611 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084359481 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116064795 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086823468 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115557068 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085393196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083217546 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11258647 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085742146 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109559369 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087998824 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083314244 seconds)
  done (took 2.210100298 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.541869712 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115934374 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112927756 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.085600197 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093556054 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11181405 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100625936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.112518857 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111899331 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.110012208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085730892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086511345 seconds)
  done (took 2.735456809 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204827241 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097677475 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258667381 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344941338 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157454644 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16254095 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273869763 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164364276 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18141242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134031935 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191491887 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127813953 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150567601 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175298392 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136632396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125772847 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170550917 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221609782 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119963082 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200091846 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160232481 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16454634 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17689462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149965064 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134073837 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129796527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118746239 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097855633 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17000948 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166938231 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196636122 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119812018 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138292296 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19590057 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230460463 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176290254 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278689742 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105426449 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177742045 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165537886 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221040328 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138760089 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192014611 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153389741 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099663951 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206080465 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126835814 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177583298 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129438994 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138516734 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179275517 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172242386 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176636156 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10660923 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32260303 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120830588 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145285859 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178841345 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181806431 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186989606 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165729774 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117387324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179825415 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180752319 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176368649 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114305669 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16281156 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124322122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171645037 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191614161 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174238637 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159864789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208256226 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106530062 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161383802 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16592408 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150771418 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173416379 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130160093 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118954779 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146349768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109126301 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12691189 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.161388792 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121290547 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199797735 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133551851 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168364756 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199274605 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127704874 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158755779 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160810424 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163093563 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144163065 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086650381 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143254013 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147906504 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124957669 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13069587 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154303848 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13890519 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098697742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149307272 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092008883 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157481547 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.12450468 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132329417 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162309915 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12330887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161010756 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119104686 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149769161 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165801117 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181091064 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13009565 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102271776 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190000026 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155806664 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131698682 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170045806 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180314364 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125597637 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135977064 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164788834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189264529 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139627333 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184116649 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10976844 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132030516 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137798413 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155104719 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126525299 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155376029 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127489241 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123979418 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213712213 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.095383002 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133416745 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171310687 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098556704 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126745719 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112053551 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134201672 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104547925 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139618429 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134310467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151191486 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129778606 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151461898 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15192368 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140574973 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188550176 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129321672 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12225487 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146105188 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089549388 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174583324 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18035974 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128411927 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192859879 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165608901 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193777395 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162306709 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12985664 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175165266 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0981031 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117008141 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161760087 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157460903 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130972351 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178367519 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217310441 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166411878 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121084295 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14643765 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159671655 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160858169 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15340433 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107132519 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159003955 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155967932 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.090531675 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122600299 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124489238 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113484366 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128306976 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10160408 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176339827 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159677682 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210853073 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131182366 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140377504 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178324061 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124349149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160330922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167692436 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108842437 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180082289 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177328863 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164085133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140971687 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17119092 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088719159 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120476373 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.104071703 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161551513 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131182787 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104179169 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140955142 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17833285 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170533529 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146976815 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19769093 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164230257 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187788896 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118392914 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.137450753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164474009 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155681492 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.14816782 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131811504 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147532926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17358011 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11197114 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184479949 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15847914 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164711118 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219644151 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.120587646 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129526888 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118275302 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16142931 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138692765 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163181424 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142497716 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106737903 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149102335 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.096100381 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124253716 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16884236 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141185929 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17570623 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14135322 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166263056 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097468945 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14105849 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156143703 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116001412 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113025323 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163625465 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182121997 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112493678 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156038071 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168437803 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12896675 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306744803 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187318984 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179920416 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133545261 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112424585 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158876035 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157218309 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159804974 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176064686 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115227665 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175198081 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155272253 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133636237 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104738643 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144425076 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147192187 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109223363 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130391707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150773752 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105469244 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174190842 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14044152 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156824644 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162219842 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117134642 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142315918 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139190428 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197007393 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125923431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201300513 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.119572125 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161995119 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1935829 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122635834 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097979694 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126341699 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175607986 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102503959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157324625 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.181484964 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222417006 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130936855 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163356378 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137304904 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.086899077 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156992947 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146593421 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194126473 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140957562 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104370091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210582685 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114022024 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127985455 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130782541 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304444065 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115797429 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170904426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111289618 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271367654 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096049241 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128369169 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128579672 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166442339 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136509352 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.146462084 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160086717 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142407287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157503112 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106159989 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211352421 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202251523 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166095893 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169320737 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.099854717 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15590948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159936607 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173114855 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141219854 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105939247 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16044042 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179149522 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183597012 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131564905 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160328772 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131235258 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156738667 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165700465 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132675029 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195647133 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127827151 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161217103 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110342778 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122100288 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153415392 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182294923 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104432565 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16899228 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155255256 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128884112 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097127069 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149234066 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155203998 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109877116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12453023 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16862717 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092751291 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160890116 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17698538 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099587623 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152585143 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144205056 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135430551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112640918 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144621827 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132950752 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136694677 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180170553 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128974508 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172089684 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171970296 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159055815 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157417434 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115243257 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665444649 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097876502 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178684927 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14456406 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180901594 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146261783 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163973897 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128794741 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147948134 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165148953 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147405133 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226633095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133255272 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155073991 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130674526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142464806 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112607478 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130153724 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147387133 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13195003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139069433 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134885321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153177751 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115125903 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.130438547 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107287026 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179690321 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145324253 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172777082 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176755687 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105928355 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16394214 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165303708 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129037818 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157600056 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16865306 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11032084 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148523971 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130754562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103582603 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176531413 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121900643 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12806301 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158431559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161079155 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160653246 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13154559 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127769985 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140880843 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158593045 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127201892 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.123120284 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156580006 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129406238 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.097219664 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15241775 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151304063 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.11860125 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12511675 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135195915 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177729492 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120679745 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101283389 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279813386 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155841365 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187248276 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.142461855 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102192432 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142288805 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144161922 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148443326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129220582 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127353697 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101252003 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128601183 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160654184 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112974474 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15591746 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182208117 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154540549 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196190765 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103562509 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274331189 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136849531 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151237215 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092867033 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127792435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11350546 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132345374 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13952845 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186785738 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179277399 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.11617238 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132735284 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095964446 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122899818 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102527103 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160493529 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152147471 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15490543 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112354873 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113294444 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113120407 seconds)
  done (took 73.584507916 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159155435 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133048267 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146610739 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200899292 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166124644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251655079 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208916453 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.235889386 seconds)
  done (took 2.654116483 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090089468 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141222739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.124377254 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133144713 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.114910738 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088900406 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.325920534 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.12999416 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086596565 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.145501684 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.132025873 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.116282286 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.479274449 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116262618 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087152682 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.11131103 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114512134 seconds)
  done (took 3.679279096 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.254358845 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483511323 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.116070074 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19415523 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180103755 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092307921 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722682586 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093785361 seconds)
  done (took 12.287877093 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119898445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.111731676 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160843807 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158487292 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11738382 seconds)
  done (took 1.832430558 seconds)
done (took 115.184863485 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094661003 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094981967 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122683526 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097332276 seconds)
  done (took 1.552520462 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102149627 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073677139 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104574487 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077794191 seconds)
  done (took 1.516287587 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189848797 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166121084 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399830314 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074950061 seconds)
  done (took 1.659003524 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110667576 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127363318 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102429381 seconds)
  done (took 1.502728193 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.102033373 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097075834 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126847863 seconds)
  done (took 1.4836421 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100669219 seconds)
  done (took 1.25267211 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107686182 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134935087 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108734462 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133598353 seconds)
  done (took 1.643285949 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094367952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09425412 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.13663407 seconds)
  done (took 1.4789138 seconds)
done (took 13.603995647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103613072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420917204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386244215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13453828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695105248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406099836 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999734528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144158735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165416896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088903749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133175057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670788696 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.016507329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341390964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975578128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.36825869 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668805164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117432025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087617291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115678214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984030012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086739334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117524371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086753026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69807404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392566895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117567379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.338531463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115162254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097189757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373713821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118643104 seconds)
  done (took 16.714269358 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095305468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175045233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099484124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118747446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096515621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089044962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121169021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088604892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180802938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116814265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106622252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086800848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122537413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088322243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137551803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087569947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118148473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088454187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115192637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090050421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106725306 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117606648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087702318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117173691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089218135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129198632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089488998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087677534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117953344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094994265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120638395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089307363 seconds)
  done (took 4.629044943 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141632662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185058261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098942193 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152453867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170126052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090479218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196839939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143857406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1535849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118583394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104593478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118489533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121776368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119419334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108740436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118528865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089199728 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116681531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089007638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115659245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109247324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087604281 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118489733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088221657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118150074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102736923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117911857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089132846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115550851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098574664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091133871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118738918 seconds)
  done (took 4.977304859 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093703275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093562864 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133254918 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104422442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119471518 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091966651 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120385961 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091283418 seconds)
  done (took 2.012676777 seconds)
done (took 29.491729637 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107057576 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094139393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131780745 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100971786 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128902305 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101292532 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115670866 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100818277 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100016351 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127500776 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103101005 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117135338 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090100461 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115492445 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102907654 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093612135 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132042518 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097202975 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132848747 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101655591 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119615192 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.10073455 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097193875 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132829502 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101722634 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133018785 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103894078 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124710509 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088776198 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120104292 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101730127 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138157878 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090778348 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131383105 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093991107 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092043802 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.11936543 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092613398 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130629345 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100022197 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123766794 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100571716 seconds)
  done (took 5.790404512 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114548703 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145436008 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111502443 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08334144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12041962 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083187033 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143554156 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082117587 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113800564 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113170324 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106188948 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08084068 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081360491 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105781398 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079447856 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077434336 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.113429451 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078179408 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107030112 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08116674 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082209176 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.104560516 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082450136 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080935497 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107544537 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083926415 seconds)
  done (took 3.739900558 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096825292 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101657582 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13970083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169693529 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12321094 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125549505 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097838876 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103620876 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135185028 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087390016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120407321 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.117399772 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135868244 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09770903 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120083753 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104014431 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.101167523 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120691746 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092961481 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139082783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105445196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128293289 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103151282 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129368309 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089370962 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089331878 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123073522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099400217 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125324477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097245468 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122549886 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093051259 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089241267 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130473861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094266205 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119634461 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107753533 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126838683 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097352812 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.087917823 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126187851 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.089856732 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140653129 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126917762 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118819334 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094945544 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121945375 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097699511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118327352 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108409748 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097314681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118980351 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09079831 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118576281 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090724039 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102954518 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121274186 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089404211 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131752949 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09435696 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.130263272 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.094060821 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102263198 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119432694 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0945905 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119337212 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089123177 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086041323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141337991 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094033299 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158432478 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088157385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119484254 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095960443 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125061152 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096147383 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11759346 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104027852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098044186 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122552159 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100220982 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120977073 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091327331 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136021618 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091715441 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.089087756 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.119223596 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09414464 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12016011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090153163 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130834307 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.089529738 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090827903 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.132246026 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.08804222 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119185916 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095503406 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.091377098 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118749431 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10030819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124460527 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.087959455 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129197199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089146916 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120107226 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099683948 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092769452 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118500339 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092684794 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125119997 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088858929 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121217011 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092423421 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.090146654 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.12849776 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09536547 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120949236 seconds)
  done (took 13.993825624 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225813083 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213373595 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185163112 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260052412 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132317326 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114608677 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209667204 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156391991 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090164928 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15661811 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166292682 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181023831 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168197999 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187207859 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170409643 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088690573 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138041708 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13382151 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212743898 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288154183 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108191936 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128306712 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.157163254 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126138186 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133331284 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097299514 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137157994 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100957916 seconds)
  done (took 5.652122072 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105723247 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15166166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095252633 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141452174 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116724483 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120274493 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093402557 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119783685 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103528134 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133087435 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088896745 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123477589 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097591865 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097252443 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121138493 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098156936 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129043834 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090457722 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121263235 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095017596 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098797236 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.138161742 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091729157 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119124368 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097131285 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119317332 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090146985 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142017404 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088100342 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143225123 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086523148 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128888902 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102820576 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119951853 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.08997126 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090280371 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121998847 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090632429 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120840692 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088323048 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.08787045 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111772042 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088001902 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134008053 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095109086 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113661418 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095097594 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123380703 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091258613 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086196744 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122497964 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093132838 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120635275 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098726256 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090886154 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120875401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092471667 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118382684 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096388323 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090439254 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.119160308 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088331445 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123002232 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094086944 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12770388 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09530713 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086980461 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121907954 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.094267786 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125811485 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092450699 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094217061 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118790996 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091534853 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121702869 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09520438 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091062879 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119065325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088084718 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120238701 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079102831 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088664826 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.108136282 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091933144 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117039981 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.089234748 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09031678 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126131635 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.132950287 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.092949061 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097246282 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121645449 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088949698 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121570265 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087812152 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092465589 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136380567 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138343246 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090555678 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086813512 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134599622 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091213858 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118674648 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080632734 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097462783 seconds)
  done (took 12.389992625 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129386269 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149841309 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091385898 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138702772 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123365208 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156732107 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095112405 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127666598 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090826484 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138480027 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090684399 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097228395 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121090809 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103454351 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155533821 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098991099 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122772508 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104008681 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124330055 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136713024 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139136982 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.10729088 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137642587 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089660485 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125787393 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106335117 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159330114 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103690223 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134075771 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.109335684 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133895817 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.128474078 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140731937 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093560709 seconds)
  done (took 5.309742091 seconds)
done (took 48.046696164 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.278978014 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.51250975 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.258003609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.177491327 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.306109864 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.257109524 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.285656657 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.256503173 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.697511146 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.255037087 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.493946751 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.879643741 seconds)
done (took 59.847843733 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.360708187 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.414893043 seconds)
    (2/2) benchmarking "String"...
    done (took 1.55053322 seconds)
  done (took 4.153287794 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.812502331 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.233440929 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.525039027 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.259807272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.262935709 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.555630276 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.098924987 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.713880709 seconds)
  done (took 28.836593327 seconds)
done (took 43.351283038 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.274082598 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.323294606 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.290584109 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.243112913 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.374795268 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.279662512 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.62958819 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.287591256 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.279155328 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.249115923 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.280824262 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.260623024 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.278270368 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.62420811 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.274144173 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.263641124 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.308086511 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.784883684 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.676474314 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.273332082 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.2669738 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.295829776 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.296259677 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.26798803 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.297558408 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.260888806 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263610563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.294067896 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.942481689 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.266149557 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.289035122 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.81934873 seconds)
  done (took 193.003435303 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.261044468 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.302368234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.398232813 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.306590035 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.756169928 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.464161915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.405413408 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.838631152 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.283449222 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.269494226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.494260344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.265307826 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.571160977 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.241970291 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.287886128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.339000395 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.592428199 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.615702776 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.300692282 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.420818037 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.263031555 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.478502245 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.390110341 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.487721292 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.274832965 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.302629802 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.303775753 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.266616774 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.461389779 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.520858095 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.291068613 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.304094371 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.913480711 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.124711148 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.285499221 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.304445537 seconds)
  done (took 152.577399137 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.262750799 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.263514704 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264065753 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.299195521 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.263003929 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.853353851 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857680266 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.790686663 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.685016754 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.265728823 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.72974241 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537139439 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.263640782 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358966885 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.277929905 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.268049505 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.280449458 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.289563717 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267536 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263950521 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860769829 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.279566869 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.478859231 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.443190858 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.281648214 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297242544 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.659898494 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.264387173 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298094988 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.601464652 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.31718045 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264608374 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.675255751 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.614075709 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381831102 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2670208 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298272648 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.266337024 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.552819955 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270239286 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.266155793 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.265431135 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.269008956 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.977771482 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.269223431 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.854143954 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.269887014 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.239349807 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.26654329 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266271088 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.265698959 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.463963264 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.024681381 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.268837476 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.266134512 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.269405876 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266324138 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.265886907 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.299853479 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.472568486 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.365138467 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.267856224 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272085908 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299310595 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265578168 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.325080582 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265390827 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.267751813 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.318074052 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.372482836 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854620324 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.265440359 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361336613 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384656908 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.263780458 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.262077861 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.263151961 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.262713625 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.374836991 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262527714 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.68536955 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.441485689 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.282408505 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.6978192 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.366846763 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.261591928 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.689092901 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.264856001 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.260877244 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023427874 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357653533 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.260322193 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.260186817 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2609084 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.679226985 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831637176 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.541327893 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.262107654 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.259566142 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.621564202 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.263679706 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.684347171 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.814520411 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.939211459 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.262639255 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371685101 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.434856818 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.277746962 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257220847 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.657789664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.262074603 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.313583425 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.261869363 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.656489313 seconds)
  done (took 373.059279067 seconds)
done (took 719.828410074 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.898958617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.891002363 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.000697435 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.880287217 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.841909392 seconds)
  done (took 10.69962191 seconds)
done (took 11.885859481 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452634895 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.452960747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324317432 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457244393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293712438 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.47316514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434209438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.283977256 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366229237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342885658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.364495877 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314187943 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294771463 seconds)
  done (took 19.041362076 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.578680438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.595714176 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.331365299 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.608134571 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.308302524 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.644583003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.472494192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.507127239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493148074 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28309182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278819793 seconds)
  done (took 17.290347411 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.591672702 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.60152351 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.333867204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.601740702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309240219 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.598549322 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.481924369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.491766381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.489569738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284510029 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.279054792 seconds)
  done (took 17.251866821 seconds)
done (took 54.769822699 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.282066283 seconds)
  done (took 2.471078214 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.301870026 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.476454521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.287618536 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.272072311 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.267023278 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.267311665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.273194693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.267630796 seconds)
  done (took 11.603096607 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.275606196 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.274920555 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.273870751 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.273808404 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.271794412 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.274148274 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.272042329 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.275629764 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.272294134 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.275131675 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.272140528 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.272723775 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.271969727 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.27133286 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.274736816 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.272851685 seconds)
  done (took 21.565699177 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.274753573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.272813975 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.271861745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.272884919 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27239745 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.272926763 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.274979497 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.271971129 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.272256265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.273117216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.273341174 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.274539582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.274936052 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.272780651 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27259288 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.274019525 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.273672868 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.273326907 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.278177914 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.272956871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.275227176 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.273057178 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.275039398 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.274432613 seconds)
  done (took 31.761789904 seconds)
done (took 68.5905133 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.711119668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.124206998 seconds)
  done (took 8.026303115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.334182435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.336537838 seconds)
  done (took 3.863011418 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.278384411 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.27604249 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.27823768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.277268203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.276487641 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.278481697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.277063467 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.27817736 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.277392301 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.276895835 seconds)
  done (took 13.9653698 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.277152342 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.278025162 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.275253063 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.277857305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278124843 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.275452485 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.277613954 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.278300574 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.277420676 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.274947389 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.277736007 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.274748704 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.277462385 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.274360579 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.278323312 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.278994928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.27972416 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.275393107 seconds)
  done (took 24.180332556 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.291006312 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.298513246 seconds)
  done (took 3.782712322 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.405331899 seconds)
    (2/7) benchmarking "second"...
    done (took 1.318179596 seconds)
    (3/7) benchmarking "month"...
    done (took 1.386018387 seconds)
    (4/7) benchmarking "year"...
    done (took 1.832178478 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.316179912 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.296869626 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.318011525 seconds)
  done (took 11.065716181 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.280159689 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.460256713 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.56412606 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.852216452 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.280535993 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.283209728 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.135087308 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.283267946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286625676 seconds)
  done (took 14.618960595 seconds)
done (took 80.69374278 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.287904759 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.264869259 seconds)
  (3/8) benchmarking "parseint"...
  done (took 4.356142218 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.290669258 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.284576168 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.564198261 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.319374639 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.392949526 seconds)
done (took 38.954969072 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.269426289 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.265558512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.032911469 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.273597385 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.395317468 seconds)
  done (took 19.162678189 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.31899478 seconds)
    (2/2) benchmarking "read"...
    done (took 1.609757418 seconds)
  done (took 5.123894234 seconds)
done (took 31.751460987 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280194039 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.280763123 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.276999605 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.278289672 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.28052515 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.280941097 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.277850423 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.277967157 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.281182688 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.280484556 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.279384459 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.280660252 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280180744 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27838753 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277735061 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281238155 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.278893574 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.279082034 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279053186 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278814108 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.28168182 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281456806 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.278599872 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.279360276 seconds)
  done (took 31.906048755 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.2832775 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.280313863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.281297805 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.28151729 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.27987052 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.281699382 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.282510061 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.279210619 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282283664 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.282575855 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279781743 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.280588617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.282038958 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280443107 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283009729 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.280609568 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.282447343 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279612507 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283774047 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.280656087 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.283075885 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281055615 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.286402828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283167505 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.281888167 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281687524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.284390654 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.282668347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283000068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.281463993 seconds)
  done (took 39.654025221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.2885566 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.291234801 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.285030981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.28305829 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.283917667 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.28447877 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.284508283 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.284007842 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.283796234 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.284664298 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.283754922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.284604448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.284530314 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.284087349 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.283321917 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.285126156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.285183639 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.28504833 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.284921506 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.28420489 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.284718476 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.285896157 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.285214272 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.284688867 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.284101043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.285364342 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.285278355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.285175922 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.285089436 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.285517652 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.285102788 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.285536996 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.285980386 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.285448802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.285184061 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.285936886 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.290106955 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.293799658 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.286391271 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.286653217 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.286348582 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.286852652 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.286033436 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.287099739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.285905794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.286459226 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.286165065 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.285763559 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.286691927 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.28709413 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.286511872 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.286198991 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.285827361 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.286392851 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.287335852 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.287016631 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.285893584 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.286532764 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.286151809 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.286075731 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.287403485 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.286253946 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.288424682 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.28655857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.289720629 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.287689089 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.287279212 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.287225401 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.288605706 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.288019506 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.288139299 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.287279738 seconds)
  done (took 93.800602759 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.288688978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287404712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.285013521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285130178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285299541 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287379008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285389424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289143688 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286058311 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287645985 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289455786 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287034545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285149394 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288545088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288896541 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286107113 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288027812 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286017368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.288738081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289193934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288610316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286320323 seconds)
  done (took 29.521739586 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289232533 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290092866 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.28582938 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28961039 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2875101 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291133189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288964163 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291002723 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289302794 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286348251 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286494733 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289818934 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288226877 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287264159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287370245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2886879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289516407 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288724965 seconds)
  done (took 24.39979446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.288433119 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.287301797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.291198679 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287942534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.2870895 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291327825 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288192375 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.290386846 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.290355757 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.288382748 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.290963943 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291190452 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.290841754 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288428558 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291593453 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288656985 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.29042009 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288320258 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290685488 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289236245 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288562241 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291099074 seconds)
  done (took 29.575812061 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292594737 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290775488 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.288505009 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288737562 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289771953 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291635966 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.291093593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.288477278 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.293115281 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.291110431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289886504 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292304085 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.290731908 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29082687 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.289699735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289272088 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292573828 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291141986 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293478921 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289603376 seconds)
  done (took 27.021726269 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287819773 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285789243 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286388728 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286345736 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286106441 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286399787 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286236677 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285701055 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286241575 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28700857 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286061567 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285944219 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287647805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287012742 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286694567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287397834 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287571555 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287206153 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287378815 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287085608 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286995784 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287660091 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286621528 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287078261 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287473707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286474813 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28754559 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287850238 seconds)
  done (took 37.238975077 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295481389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29444652 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.292584001 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.291986619 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.292167193 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.292192371 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.292778657 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.292791115 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296167902 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293143089 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.295181458 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.296224023 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294787918 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.295057143 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295701036 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.295901747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296018408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.293584504 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292641575 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293274613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.296545064 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295328202 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.296281851 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292631109 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293166429 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.296394308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293174518 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294660868 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296002451 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293425231 seconds)
  done (took 40.040313271 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.341536065 seconds)
    (2/2) benchmarking "in"...
    done (took 1.340562776 seconds)
  done (took 3.892407141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.293772214 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296201448 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.296511275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294646952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.295397857 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.297056896 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.297932447 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295395921 seconds)
  done (took 11.577128069 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.291949568 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.296714084 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.298236839 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.297296445 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.291642091 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.292572005 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.299060713 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.317672785 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.293094974 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.293539003 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.30022469 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.301504674 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.295806652 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294311535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.29362384 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295105285 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.299084108 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.29006557 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.291447613 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.29972023 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290382886 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295294853 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.296300966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.296590217 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.295513355 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.304103637 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297739149 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.300670828 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294044959 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.296771522 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.293954446 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.296865102 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.292175238 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.291186713 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.299499147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.29129393 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.30354341 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317998199 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.301487245 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291399716 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300485535 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.297302569 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.295637149 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295827701 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296924961 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.29195929 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.30007181 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.296959516 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.29416502 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.299837058 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.305330438 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.295657253 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.29834406 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298022976 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.296927452 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302091209 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.313784934 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.29938165 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.305754519 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.306543546 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.309808121 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.304995586 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29849154 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.292957038 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306608179 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.320182831 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303125593 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.318703471 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.29882139 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.302665068 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.303802866 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309509914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.321923798 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.294973213 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295259748 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.30168744 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298695933 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301982726 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304008905 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.319662047 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.294580851 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295545087 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.308489921 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321154979 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.297486493 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.294671735 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.295351256 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.295828002 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.300170929 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307836063 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.315534271 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.303243806 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.298616066 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.299059818 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.299018023 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.296210643 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.297465418 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298809094 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.301957 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.30331716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295959157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302597206 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.307359072 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296754341 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295936005 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.305704797 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.303676253 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299656823 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.304703441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.303580348 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296451026 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.301586388 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.305262282 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.301996646 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303431032 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.307189521 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.296851668 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.300979358 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.296244918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.305081986 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309903033 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.326346739 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.306049909 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.304432984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.305752074 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.308983066 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297251746 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.303323416 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.306245243 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.30310541 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.303438395 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.301679476 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.306797426 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.301158945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297814962 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302781391 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.303549232 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.306391014 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.298525057 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.302887779 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.301545806 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.301434217 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.302311763 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.303327936 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.299488905 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.302899194 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.308246328 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.301703863 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.303564678 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.302830289 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.305362785 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307835979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.303780025 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.298524665 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.302957566 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299047709 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302779676 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.299673506 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308679122 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308995963 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309224809 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.304526468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308020732 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.300639338 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.307093702 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.30325987 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.306647451 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.30795181 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.308399364 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.302698607 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.308770507 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.302301017 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.306389609 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.308685627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.309048517 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.300466902 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.30783704 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301304065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300743921 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300924785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.308024777 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.312081519 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.300852259 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.312500778 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.300795849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301646365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.310042332 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.303919514 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.304072382 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301902697 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.307644955 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.316837748 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.316524975 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.329498075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.305686486 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.313820182 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.306271775 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.305709711 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.308428326 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.302287157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.310685845 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303113683 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305088297 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302545843 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.30659339 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.301410826 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.305890359 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.311742844 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.311828059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.302675785 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312404162 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.305899875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307421721 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.309184678 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310970286 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303219262 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.306912658 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.308604627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.305743376 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.305973409 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.312316468 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.302354402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.313062181 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.309471847 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308483888 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307994794 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.307322485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.305734621 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.314817542 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310629589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.307385388 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.314052496 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.325620942 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.307439363 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312787712 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.32737843 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.306888657 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.309794458 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.312875578 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.311302272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.31112463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.321571075 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.312975323 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.305646714 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.304624464 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308457183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315816706 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.315184174 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.310906009 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308497821 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.313579929 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.309973668 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.310923567 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.308846621 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.309288112 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.308971119 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309695322 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314096834 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.314960243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.309927324 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.305014332 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.306289775 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.306700778 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.312707505 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.315128918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.313773008 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.308820757 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.31110522 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.310975364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.317752734 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30909332 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.30645892 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.309495793 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321359698 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.332184166 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317464754 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.310872821 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.315463352 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315661576 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.311729056 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.314580199 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311097141 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311084592 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.311005555 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.310262257 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.312876973 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310402162 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.316124537 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312056749 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.312605009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.320154215 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.31701602 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.311450426 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.309091589 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.309271952 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.316387419 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.311116465 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.317213186 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.315460008 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.312806366 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.310823622 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.310985829 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.31883349 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.331712076 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.312164789 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.312124824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.312671962 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.31141957 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.313024554 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.310051395 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.31601411 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.317723134 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.315869507 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.322033837 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.313894752 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322448898 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.310462903 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.317306075 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.316560456 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.316242661 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.311500504 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.313206526 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.310866512 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319984592 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.329609467 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.315475767 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.316048615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310716317 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.311358111 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.318880676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.310140088 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.32003008 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.310869099 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321392841 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.337572312 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.316882241 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.314938249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.315676258 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.312108353 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.319121578 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312799039 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316795337 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.311445357 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.31514776 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.316177078 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.31620263 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.321243526 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.312494666 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.320569562 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.317216772 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.31979893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321347423 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.336707317 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316031477 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.320471262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.321146327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312231772 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322603517 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.331997631 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315727107 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.312374812 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.320821276 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.316599728 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.315392863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.315962014 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.312528011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.317722537 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.324721609 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.312928132 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.317459611 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.315377971 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.313556201 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.316741714 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326404929 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.336521103 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.319273465 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.325926462 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.318837657 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.318967366 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.318167856 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.31326764 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315602122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.320665953 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.327397076 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330274621 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.31749908 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.313382746 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31780594 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314485317 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.323092128 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.323042062 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.314779484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.32327966 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.318009682 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.313875168 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319970554 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.322122661 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.318477749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319123412 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.31972284 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.328165974 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.314836068 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.318781325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315853445 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.325273029 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.317774135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.318877946 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.316026591 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31880982 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324331646 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.320765395 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325098183 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.325606151 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.320752157 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.318494182 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.315443947 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.31911362 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.318973836 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316370572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.31575828 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316289227 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.321013076 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.31715113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.319978618 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.319175928 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.324230677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.318732683 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325000676 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32279342 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.326619461 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321583494 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.321024436 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.324842687 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325822906 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318489978 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.320275427 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.326768156 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324006758 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.332130985 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.329535726 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.321064154 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.321109536 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323461027 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.329394174 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.319784074 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.320989623 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.317977576 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.321427668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.321661241 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.324581906 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.318593951 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.327945247 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.3200644 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.321534216 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.32864124 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.34431114 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.319587509 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.323962959 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.325865961 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.322422373 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.32480583 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.327972463 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.324513955 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327892167 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.342151868 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318885113 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323059397 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.322906572 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.32371925 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323518174 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328145572 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.324055162 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.324462275 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.322713995 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319149664 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328633184 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.325792191 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.321982346 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.323480055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.327207915 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.332219817 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.324921358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325116284 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.323492248 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.323708794 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320702476 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328840251 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.32607809 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.326211992 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.322487945 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320636525 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.324564663 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.325611926 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.323116798 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.325269059 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.330272605 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.320604167 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327911204 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.334579857 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.336931578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.326692134 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.323450852 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.324952095 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.326921035 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.321568896 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.320070829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32487635 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.325543686 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.329913701 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32182021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.329952983 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.328073683 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.340576167 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.353937039 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325387655 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.324530296 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329492041 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.332026978 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.327634439 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.332189767 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.325878756 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.329872868 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.330392992 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.323427355 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332439179 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346066652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.329270738 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.334973611 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.330529817 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.333855774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.328186641 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323150398 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.324657419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.332098297 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.342761238 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332995352 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338233743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355791029 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.346254536 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.327828813 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.32415481 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326639763 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.324190465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.328603601 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.324880053 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.333160008 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332738644 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.324136548 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.329490367 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332908656 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.328436509 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.334175032 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.332524027 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.328021771 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.32934044 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.330293888 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.324816402 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.333268222 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.325419938 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325038078 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.325073873 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.328224946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.339404243 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354311252 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.333321966 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.325968395 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.3303133 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.33116409 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.331468159 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33979839 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.341607991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.326185714 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.326127899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.329346581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.325237469 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.333781368 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.32874251 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.329108506 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329105223 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.33035092 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.341442167 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335041807 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.332826874 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.328651367 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.326935022 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.334739132 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330147486 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325855656 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326572464 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.330946133 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.331989799 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331080912 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.33503264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.335111743 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.332098901 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.343137807 seconds)
  done (took 784.729069022 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333988314 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333449206 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332876515 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332967844 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333048796 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333286287 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332708042 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.33280244 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.333220675 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.333278276 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.333332046 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333135088 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.333108988 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.333908083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333469909 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.333898416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33405093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334307944 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333989403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333966368 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334941587 seconds)
  done (took 29.250764543 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3375148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.334386675 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334940945 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.33780208 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335259672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.337812871 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.335468126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337551089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337410373 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334945132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336933467 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337406243 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.335746769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.334392083 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335686616 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338040319 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.3382503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335311011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.33749598 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334685591 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337185774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.33626973 seconds)
  done (took 30.649502376 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.329951232 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.329633473 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.332917612 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.335278121 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.338933335 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.33508251 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.329652852 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.339146821 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.338956151 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.334182078 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.332661906 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.334682223 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.341927974 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.342934079 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.334826548 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.338848419 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.48335683 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.331426375 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.330853094 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.330798797 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.336851191 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.338480107 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.335811993 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.336942203 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.333646653 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.33134611 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.340530234 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.33905995 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.330985377 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.335918224 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.336152996 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.340632133 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.334450337 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.33651835 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.334666983 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.33799627 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.344282856 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.332067777 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.338720902 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.340144448 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.345363915 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.362500899 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.333152602 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.341991853 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.341023666 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.341388545 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339898181 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.341517526 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.33929948 seconds)
  done (took 66.916689179 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.341564758 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.341264474 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.33925614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.341158099 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.340973019 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.341907161 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.341469386 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.341374632 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.33959223 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.33803184 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.341652146 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.339270414 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338264407 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.342361805 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.342229317 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.339211855 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.339429145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.339030386 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.339487841 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.339954544 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.340625503 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.34140759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.341896906 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.340539632 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342750948 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.340590134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.339643182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.34347801 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.340758314 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.340455263 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.342925305 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342861542 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.343211368 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.341016701 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.341280322 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.343568463 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.343278993 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.340660995 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.343867599 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.340696469 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.343240049 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.344329612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.343334261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.343678357 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.341405912 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.342491128 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.34160044 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.341769922 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.34199631 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.34424189 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.34483772 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.342520619 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343629037 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.342233777 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343663612 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.344119284 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.341769323 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.342008589 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.344647621 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342945401 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.341683826 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.344742606 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.343227487 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.344227644 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.345267544 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.343401507 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.343396246 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.345506309 seconds)
  done (took 92.509734482 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.337112166 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.33741149 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337784248 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337567512 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337479778 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.338130884 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337170405 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.337909896 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.336797529 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337019201 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337844644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.346334473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.33764892 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.347089221 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.338553691 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338585789 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.338332665 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338383027 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.337786524 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338200721 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.338256825 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.337787649 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.337841851 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.337964334 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338465497 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.33911555 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33860371 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.338755543 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337949798 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338772581 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339699021 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.339560502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.338439926 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.339719672 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.33932884 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.338958372 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339235901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339363305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.339192893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.339434297 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.33923814 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.340917463 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.339961922 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.339720877 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339852536 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.340458159 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.340194204 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.340906573 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.349624018 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339573129 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.340470642 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340885127 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339650194 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.341105247 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.341242659 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.349234899 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340150849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340570235 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341150575 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341357238 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340987976 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.348299443 seconds)
  done (took 84.322877364 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349557095 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349586454 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.347417481 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.346379516 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.34925332 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349422719 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349402934 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.349700204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351394336 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.349528824 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350637038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348458457 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349313277 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350810886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.347889696 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350076343 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349494598 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.350907024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350677044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348904932 seconds)
  done (took 28.247954238 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.349199856 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351752947 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.348604551 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347538513 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.351019738 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348916999 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.351321357 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351447964 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348839267 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351831166 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352409386 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352282661 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349211074 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348779233 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.352040949 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.350716903 seconds)
  done (took 22.86616923 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.34907796 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.351473982 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.343645038 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.343083724 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.349779493 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.349408801 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.350907865 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.349331692 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.349949903 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.351641306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.352565428 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.352850757 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.352580121 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.344841077 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.350274024 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.352853019 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.349344904 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.349451944 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.352599626 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.344440003 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.351625799 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.35013238 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.352547179 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.354219036 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.35062582 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.350776971 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.352060319 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350951211 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.350264282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.354157456 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.351430213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.351817433 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.351292364 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.351699464 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.345068326 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.351342838 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353450416 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.354083415 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.355127612 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.354176379 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.352750481 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.351942886 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.35425261 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.354045262 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.352190018 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.35527574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.352887272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.353145818 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.353516426 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.352364687 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.356733261 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.347948919 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.35456629 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.355737361 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.355282461 seconds)
  done (took 75.593549631 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355072254 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.355718488 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.352539591 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354911044 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.355395234 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.352643299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355261912 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.354999548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353428781 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.355566281 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353951663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.356416647 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354574458 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356329987 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.354197995 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355948165 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354128239 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352392367 seconds)
  done (took 25.64761863 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.354483113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.354141843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.356980421 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.353554779 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.354436261 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356515401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353785765 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.356955845 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356917299 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354467566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353946546 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.356598225 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356736506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.357695047 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355165344 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355241846 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.358377191 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357086531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354631547 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354596846 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357576271 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35760082 seconds)
  done (took 31.093190515 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.352690451 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.351949282 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.352436214 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.369227443 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.371385857 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.375541073 seconds)
  done (took 9.440795597 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364943227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356587186 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354698594 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359271847 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357665669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356067273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356370621 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356937956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359025361 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355979928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355557693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358026943 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358426702 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358137044 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359309398 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359266944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357725552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357497517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357817287 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359551967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357712161 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359813369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35655133 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357432131 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357001131 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356967485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359895959 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357276243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356839033 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360151322 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359701612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35784616 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360592269 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35880888 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361761323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362170509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359055011 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360578907 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360382839 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357986521 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.360262266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359425445 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360416018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357723172 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360159021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358098379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35814537 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359228802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358387181 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361318412 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360931219 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358732079 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361660627 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361152397 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360952828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362451653 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359215331 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358096149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3617994 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359257439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359620816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361552775 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359837989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359089417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361456824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359529993 seconds)
  done (took 90.988554766 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360076991 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358966119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359879069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361249948 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35846054 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360089568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360541731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359072211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360159307 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359848684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361855117 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35985843 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360711861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359978673 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361053109 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35946696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36035286 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362205736 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360847787 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362913209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359943068 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360490495 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361016107 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361144603 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361279277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36373678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362038058 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361741439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361121792 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3621908 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363184265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362523293 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361570872 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361018608 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362845216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361704434 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362874669 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363164782 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36214057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365466666 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361283095 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364289239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362390494 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362193645 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362251204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361993191 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361985469 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361911669 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36285713 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362403402 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363555071 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362761325 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362975771 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36178869 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362522843 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362194332 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363596463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362924663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362454372 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365723147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362368827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364219699 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366911451 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363296274 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363649217 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364212715 seconds)
  done (took 91.160631438 seconds)
done (took 1833.241160778 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.522050267 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.477904361 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.359449078 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.395552532 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.360377879 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.381403839 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.378805773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.359849611 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.360254342 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.360484107 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.36006624 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.547047891 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.353839618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.361141144 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.361090738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.453623725 seconds)
  done (took 43.668502105 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.389315609 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.366555579 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.48776834 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.382558076 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.388790364 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.565974395 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42159249 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.366186554 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.548742428 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.407252018 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.021546356 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.387830049 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.363899135 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.543313729 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.384715886 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.564823398 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.629427293 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.03083782 seconds)
  done (took 31.526407358 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.848249986 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.39823796 seconds)
  done (took 9.523703099 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.386288654 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.364846521 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366407381 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.363233894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.35618736 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.357388544 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.364654278 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.359338912 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.305633335 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.504837933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.368126734 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.374627343 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.385824161 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.366400497 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.36859407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.404439797 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.520933073 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.369964517 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.3670568 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.37092493 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.365587617 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.490460164 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.410222509 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.369546347 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.499837112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.31151314 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.375129194 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.372859838 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490936892 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.369601285 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.366462535 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.367084167 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.367655911 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.282432391 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.826737533 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.369725936 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.392622515 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.3758271 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.36890391 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.558292217 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.367632687 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.374201396 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.360871863 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.807048914 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.517124996 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.490293543 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.684265199 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.368593842 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.368694958 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.430997573 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.369005991 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.368335575 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.410184607 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.160722376 seconds)
  done (took 114.320111874 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.406591553 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.753397299 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52971659 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.380630274 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.121536631 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.162860682 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.379585025 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.670440436 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.360508471 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.362864283 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.649133622 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893655902 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.379928469 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.429655 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.809519337 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.401487546 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.364103393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.2679136 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.379347786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.367310117 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872740524 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.370675453 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.363127522 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.522140787 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.40211025 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838468126 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.855687805 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.827098323 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.382038456 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.36224609 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853057377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.384041743 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.399901643 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.363639891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.635702771 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.743772825 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.716359955 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.363546576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.39495598 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.365604695 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.398645666 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833824673 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.726952669 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.363928771 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.363810946 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852745585 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.363893368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.365235856 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.369575642 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.575728304 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.079005448 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.367304696 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.865216388 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.366168965 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.630642715 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.424088565 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.382328487 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.871213664 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.365457033 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.535036936 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.40385223 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.364512656 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.370604654 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.366067223 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.36658488 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.732474234 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.494796686 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.367626005 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.728741137 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848470954 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.383481305 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.914732498 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.163356195 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.379190595 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.462357105 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.365974506 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.070352743 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.87840048 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.373843298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365892677 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.717968158 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.37000202 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.659473186 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.384006144 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.384088436 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887018309 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.375603868 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.413521122 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.3665417 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.366080721 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.159156561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.381704744 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.644204962 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.399880402 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.366932365 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.367105389 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.413591991 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.366365224 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.365332779 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.36789263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91398239 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.386277111 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.506556949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.389651526 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.367585619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.372859964 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.369270894 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.368263666 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.595904325 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.816646752 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.375009088 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368746014 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.366996732 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.370170952 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.531982072 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.370896551 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.695174507 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.369642277 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.368032105 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.372001206 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.164045428 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394304099 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.369127415 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.371863038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.277661666 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.582333882 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.390010933 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.369462952 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.369434436 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.388435789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.671236142 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.389370294 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.3990081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.368924961 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097677423 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.417156669 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.378465926 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.736121572 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.376624289 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303785291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.392697217 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.369299425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.663113423 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.648080312 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.432686445 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.381181139 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.370333093 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071639547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.395379969 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509251163 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.390571682 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.348375389 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568066208 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.509317814 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.371704405 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.989750058 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.371523866 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594162813 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.371154483 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697149496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8837874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.39080276 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.375009875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103595334 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.127694456 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.01940489 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.374000986 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.662926868 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.39085437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.850584934 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.373226503 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.376075859 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.991299928 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.376764751 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.383814703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.37135452 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.372362176 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.529822976 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547652469 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.63819588 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.37922426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844362932 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.415028079 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.386026557 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.38274325 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.375222762 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.721759837 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.430266784 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.374233959 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.4078288 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.373414392 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.377253998 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.863080141 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.191451794 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.373415564 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526038606 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031320991 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.392952904 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.373606181 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.973335731 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.856854869 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905408617 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.386805836 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.703638142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.380730526 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.414432836 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.110785867 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.463596896 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866184443 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.377016535 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.373527352 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990516249 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.392069392 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725045459 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.373906002 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.37569076 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953045883 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.392212731 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.377750711 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.682125444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.394841711 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.633258822 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.374896793 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.377371907 seconds)
  done (took 1120.383928966 seconds)
done (took 1320.696109263 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.374190276 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.380163315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.364413403 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.381829287 seconds)
  done (took 26.793697257 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.384339399 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.383823551 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.381363869 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.382628064 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.380556479 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.383446229 seconds)
  done (took 9.591478998 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.504340919 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.383276743 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.384620663 seconds)
  done (took 19.566897787 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.603490963 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.743783649 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.740479351 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.731190357 seconds)
  done (took 11.116026356 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.381407009 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.381533725 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.381746396 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.383020229 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.385049295 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.386904948 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.384264769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.382010963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.386510235 seconds)
  done (took 13.746915057 seconds)
done (took 82.108074206 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.279041199 seconds)
    (2/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.361911049 seconds)
    (3/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.379765769 seconds)
    (4/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263511089 seconds)
    (5/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.393089794 seconds)
    (6/286) benchmarking ("sort", Float64, true)...
    done (took 6.390755234 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.639033774 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.822877236 seconds)
    (9/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.534968935 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.445915051 seconds)
    (11/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.202193766 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.430833563 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.465104011 seconds)
    (14/286) benchmarking ("sort", Int8, false)...
    done (took 4.412193522 seconds)
    (15/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.597044981 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.365659735 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.41304945 seconds)
    (18/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.364362532 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.385218066 seconds)
    (20/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.770152112 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.38093742 seconds)
    (22/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.213848023 seconds)
    (23/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.364508112 seconds)
    (24/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.365239478 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.939305003 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.792084135 seconds)
    (27/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.03389991 seconds)
    (28/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.364126373 seconds)
    (29/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.455182898 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.380342335 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.634489404 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.513899087 seconds)
    (33/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.190522177 seconds)
    (34/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.411689749 seconds)
    (35/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.883007535 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.391262876 seconds)
    (37/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.48285414 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.027417783 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.794669551 seconds)
    (40/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.391077586 seconds)
    (41/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.484411008 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.364869753 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.365280703 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.099103983 seconds)
    (45/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.382048425 seconds)
    (46/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.780156392 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.364621664 seconds)
    (48/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.839975235 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.498233143 seconds)
    (50/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.233995015 seconds)
    (51/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.059923999 seconds)
    (52/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.370722947 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.644674897 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.413500176 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.365725468 seconds)
    (56/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.574057647 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.867605961 seconds)
    (58/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.369289307 seconds)
    (59/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.443237651 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.445026366 seconds)
    (61/286) benchmarking ("sort", Float32, false)...
    done (took 5.410267033 seconds)
    (62/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.39372401 seconds)
    (63/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.783188815 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.193071077 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.947152506 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.698177543 seconds)
    (67/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.765548387 seconds)
    (68/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.923700053 seconds)
    (69/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.648591953 seconds)
    (70/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.384965266 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.391610402 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.386822213 seconds)
    (73/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485717591 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.806259266 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.669307152 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.631201009 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.64386083 seconds)
    (78/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.634678424 seconds)
    (79/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.63363365 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.1521912 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.748563686 seconds)
    (82/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.491858138 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.285794649 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.40721744 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.934442735 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.351707381 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.405156893 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.266925549 seconds)
    (89/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.44175432 seconds)
    (90/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.172063787 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.415497945 seconds)
    (92/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.986461655 seconds)
    (93/286) benchmarking ("sort", BigInt, true)...
    done (took 6.391177175 seconds)
    (94/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.368350324 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.384752018 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.396762127 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.601933823 seconds)
    (98/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.049707863 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.384925495 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.369568292 seconds)
    (101/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.657846879 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.119428071 seconds)
    (103/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.596800546 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.450647447 seconds)
    (105/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.443879913 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.425066762 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.119787609 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.420021165 seconds)
    (109/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.087051943 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 1.913825454 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.414088175 seconds)
    (112/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.067939714 seconds)
    (113/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.403533852 seconds)
    (114/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.649245801 seconds)
    (115/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.395569558 seconds)
    (116/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.839938618 seconds)
    (117/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.370746359 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.2011773 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.65160194 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.068923392 seconds)
    (121/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.99114311 seconds)
    (122/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.422697863 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.386042437 seconds)
    (124/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.494851884 seconds)
    (125/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.515176227 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.487808295 seconds)
    (127/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.38628368 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.468874696 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.31224958 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.500533732 seconds)
    (131/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.370300064 seconds)
    (132/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.46035894 seconds)
    (133/286) benchmarking ("sort", Int8, true)...
    done (took 6.386497264 seconds)
    (134/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.398181363 seconds)
    (135/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.507885595 seconds)
    (136/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.475349872 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.386056534 seconds)
    (138/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.40890899 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.228420127 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.418928745 seconds)
    (141/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.93740347 seconds)
    (142/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.488819512 seconds)
    (143/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.384737254 seconds)
    (144/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.315671103 seconds)
    (145/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.468935661 seconds)
    (146/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.492560759 seconds)
    (147/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.060172445 seconds)
    (148/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.20568201 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.435272087 seconds)
    (150/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.782530776 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.386856856 seconds)
    (152/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.440437811 seconds)
    (153/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.418682054 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.211155165 seconds)
    (155/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.492803124 seconds)
    (156/286) benchmarking ("sort", BigInt, false)...
    done (took 6.387722435 seconds)
    (157/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.42033651 seconds)
    (158/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.477367347 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.096115295 seconds)
    (160/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.976657844 seconds)
    (161/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.78469961 seconds)
    (162/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.241555916 seconds)
    (163/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.375994961 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.421433398 seconds)
    (165/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.474701975 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.680488975 seconds)
    (167/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.408944012 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.375546692 seconds)
    (169/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.481405221 seconds)
    (170/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.886225738 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.434788257 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.373323126 seconds)
    (173/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.375167805 seconds)
    (174/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.373537068 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 5.746101181 seconds)
    (176/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.774257259 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.373791632 seconds)
    (178/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.39133181 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.477888136 seconds)
    (180/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.410028952 seconds)
    (181/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.372748849 seconds)
    (182/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.397019442 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 5.447699523 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.469743642 seconds)
    (185/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.400234738 seconds)
    (186/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.46099306 seconds)
    (187/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.787492871 seconds)
    (188/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.87500376 seconds)
    (189/286) benchmarking ("sort", Float32, true)...
    done (took 6.39509713 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.395539774 seconds)
    (191/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.403947939 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.373158152 seconds)
    (193/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.591687311 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.421741353 seconds)
    (195/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.895241002 seconds)
    (196/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.925102478 seconds)
    (197/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.126203203 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.502949834 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.421301607 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.6180974 seconds)
    (201/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.933232077 seconds)
    (202/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.375143679 seconds)
    (203/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.833767317 seconds)
    (204/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.636360661 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.401340356 seconds)
    (206/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.788987284 seconds)
    (207/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.269616146 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.446085649 seconds)
    (209/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.375706334 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.397219993 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.391950757 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.463834423 seconds)
    (213/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.503672129 seconds)
    (214/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.374572882 seconds)
    (215/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.048230056 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.458821253 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.405559663 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.017523264 seconds)
    (219/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.462675873 seconds)
    (220/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.069391765 seconds)
    (221/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.396709035 seconds)
    (222/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.376665129 seconds)
    (223/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.444883401 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.397685453 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.395027438 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.414264042 seconds)
    (227/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.504031756 seconds)
    (228/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.3771384 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.473957081 seconds)
    (230/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.471236343 seconds)
    (231/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.396920127 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.415194928 seconds)
    (233/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.424198724 seconds)
    (234/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.402928524 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.619335795 seconds)
    (236/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.421344532 seconds)
    (237/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.079823209 seconds)
    (238/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.517590139 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.425561351 seconds)
    (240/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.462172927 seconds)
    (241/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.425788641 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.372653037 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.786478255 seconds)
    (244/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.483591062 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.499519136 seconds)
    (246/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.921934312 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.817553614 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.337696209 seconds)
    (249/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.560109881 seconds)
    (250/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.61836913 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.464708348 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.831061467 seconds)
    (253/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.385046639 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.394316299 seconds)
    (255/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.550048329 seconds)
    (256/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.430898032 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.075612531 seconds)
    (258/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.925804978 seconds)
    (259/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.068827011 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.266520691 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.397975387 seconds)
    (262/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.346058434 seconds)
    (263/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.435802461 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.485370901 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.378941015 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.480162015 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.280668883 seconds)
    (268/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.379447183 seconds)
    (269/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.228677202 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.534453832 seconds)
    (271/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.378692032 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.389193033 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.227542043 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.192466498 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.177667538 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.483480738 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.442870706 seconds)
    (278/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.523992829 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.76284598 seconds)
    (280/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.020409983 seconds)
    (281/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.526632248 seconds)
    (282/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.395986267 seconds)
    (283/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.714447396 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.428633699 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.014366761 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.418779136 seconds)
  done (took 964.313460466 seconds)
done (took 965.610132326 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.42591705 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422705728 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.404249858 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.42672464 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.51643008 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.580461507 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.414364216 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.406292684 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.452464932 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.454199661 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.402059735 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.580272566 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.40534647 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.40568056 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.404002123 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.419287575 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.561315632 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.411936568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.421717282 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.414152431 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.421799548 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.403253827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.454388805 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.581031622 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.408805629 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.407564 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.408179992 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.425413653 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.517522538 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.409797735 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.408422908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.416924591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.562354783 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.410166238 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.400672667 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.425374857 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.416875157 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.416544265 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.408927474 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.438217345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.953444958 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.406515792 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.408193154 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.407361806 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.406360269 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.413515688 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.408681009 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.41816335 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424265256 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422490885 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.009153745 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.429231033 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.410535054 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.408123554 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.418466791 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.407566991 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.411084922 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425978813 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.427969849 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.426230405 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.547529397 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.418852269 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.41017667 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.425674512 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.417152458 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.055595433 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.410260602 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.412132351 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.981596918 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.418860012 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.986942338 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.419299362 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.410015297 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.423037873 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.440300127 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.573892466 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.40918488 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.408923201 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.416257655 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.408038992 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.418613977 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423793107 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.414170487 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.408997348 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427379349 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.585535694 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.419434629 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.409411006 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.418476376 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.428734819 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.419061547 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.421728873 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.413991326 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.404553756 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.418914955 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.413982635 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.413059691 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.412554723 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.415826826 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.421460529 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.025406001 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435839443 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.407816866 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.407610086 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.410695822 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.424534831 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.025820168 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.418542858 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.433672788 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.457968195 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.413018284 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.566459103 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.420624802 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429154811 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.420691576 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.413688642 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.406596772 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.566779374 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.015137556 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.434199263 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.413781564 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.410802792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431571101 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.413302587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.408334031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.56642057 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.420608619 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427954461 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.535557988 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.423757347 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.443946505 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.411366444 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.415171181 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.443758727 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43095269 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.443988239 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.415298429 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430218084 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.428482606 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.409303736 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.424437938 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.423431544 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.415155436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.41985524 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.406759328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.443754039 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428798286 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428304241 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.434910074 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.538334244 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.410592497 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.527600057 seconds)
done (took 239.900604551 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.477444748 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.406770236 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.507242932 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.418938797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.515395587 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.52579112 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.417517577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.416933509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.415733142 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.79425355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.417427679 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.417023634 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.413915033 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.417567766 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.496834786 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.420061809 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.41738657 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.763680238 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.410888874 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.486897656 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.41500487 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.421119811 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.420806221 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.811561095 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.412865778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.414574298 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.494076887 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.420762017 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.766630145 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.410037913 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.414112863 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.770965001 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.515044416 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.438397028 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.431382533 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.428650546 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.525067671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.441103799 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.505661279 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.49896164 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.520946894 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.452272644 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.413596892 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.41337726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.423552516 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.415255463 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.420469816 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.448931098 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.416113144 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.419746383 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.761815054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.431446681 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.429392828 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.420180791 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.421085929 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.43538118 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.4224303 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.41483638 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.50843593 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.415850957 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.491502797 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.804891243 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.805625446 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.421930158 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.41767162 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.422672982 seconds)
  done (took 154.208466649 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.485813509 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.491701842 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.534586985 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.420205286 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.469470394 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.54124379 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.420300786 seconds)
  done (took 11.69056396 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.42507873 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425504897 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.468952533 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.469767581 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.416191002 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.597098472 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424927929 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.431049442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.423120066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.471106762 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.41701577 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.425778289 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.431163708 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.420159191 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.467735689 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.430894531 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.533995262 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.419308916 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.416619723 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.571152174 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422344618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.43111363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.471596626 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.430858049 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.417745036 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.426340464 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.240345123 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418197482 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423699745 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.425276684 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422454514 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.494584737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426985486 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.418639831 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423322732 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.536438148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.420363407 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423626122 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.42588822 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.418256602 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.426668137 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.425586696 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.426632784 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.424734606 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.425908336 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.445101054 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.427314553 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.427130887 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.426372314 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.428575679 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.472731782 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428711289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.424494207 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.425008556 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.476046899 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.435118562 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.419932756 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.426439208 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.427858442 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425154539 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.575327841 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.471600353 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.428586202 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.470751839 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428332652 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428688685 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.42763755 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.427940589 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.477157468 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.428657222 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470605888 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.426513126 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.602946802 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.446891226 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43018993 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.427091632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.426605551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420549082 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.416693959 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.429583954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.426065961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.425185809 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.430334072 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.427081098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426670073 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.589689758 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529556741 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.427932585 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.437649223 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.431469785 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.427204509 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.477899009 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.430384827 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.427308229 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4775314 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.540907507 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.476688688 seconds)
  done (took 162.45313436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.429984171 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.43363989 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.428847811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.447680599 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.425475469 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.424883691 seconds)
  done (took 9.923033716 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.427541314 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.431384913 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.430792554 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.431143995 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.421283071 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.422099904 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.422628575 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.427185948 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.424985094 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.431223378 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.422358514 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.42437065 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.423920665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.423426309 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.423857491 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.431590889 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.423050547 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.429077455 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.431436539 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422054286 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.52954201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.423988478 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.423710529 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.428173794 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.426666687 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.432039745 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.436950451 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.431450283 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.431667466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.431216296 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.426079527 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.423440759 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.428828166 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.433868238 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.428410044 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.428685676 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436247512 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.424785194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.430403444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.423959099 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.42470918 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.424516911 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.433463592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.425123419 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.42951915 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.433155842 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.429066787 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.435992995 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.424080097 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.426123674 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.42542785 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.43436333 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.425357075 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.424858223 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.429601569 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.451856787 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.428913696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.424663732 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.425394763 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.431001534 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.435608745 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.424782334 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.431671662 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.430593853 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.431564223 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.428006407 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.430998238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.429321844 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.426884641 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.434895357 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.426838546 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.432565487 seconds)
  done (took 105.292342417 seconds)
done (took 444.890279398 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.458299274 seconds)
  done (took 7.795659226 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.907038787 seconds)
  done (took 8.244650936 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.595265286 seconds)
  done (took 23.937182069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.469949598 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.505230045 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.439616999 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.429037793 seconds)
  done (took 27.180260923 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.634929625 seconds)
  done (took 7.970460357 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.42561148 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.456415508 seconds)
  done (took 14.217713131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.838285822 seconds)
  done (took 8.173957068 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.528654532 seconds)
  done (took 7.872842745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.42688082 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.474139179 seconds)
  done (took 14.248892801 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.406572332 seconds)
  done (took 7.742797699 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.306754049 seconds)
  done (took 17.645659953 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.435177712 seconds)
  done (took 7.774890833 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.489740051 seconds)
  done (took 7.827224115 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.097287061 seconds)
  done (took 10.435808279 seconds)
done (took 172.405232083 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.423517749 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.430256698 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.430319333 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.430535512 seconds)
  done (took 27.052001209 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.46999911 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.470430819 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.470713114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.479184844 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.472109659 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.470113967 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.462639311 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.461843528 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.480625143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.472653843 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.47111934 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.471948245 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.47080199 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.462193262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.472780711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.471966356 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.481058962 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.471695665 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.463376475 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.473826605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.438002142 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.48141367 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.474259175 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.438599244 seconds)
  done (took 36.592371928 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.955220258 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.506366568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.586944902 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.486995351 seconds)
  done (took 7.874972969 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.490235093 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.492593956 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.504400397 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.54214724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.567155299 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.507690869 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.465941856 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.459166549 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.445696551 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.491766737 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.568550741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.50776202 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.57986308 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.4373913 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.62454698 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.437825923 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.43792564 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.490153146 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.541699046 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.561529138 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.439218205 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.490529882 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.498228043 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.506728965 seconds)
  done (took 37.429251136 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.438358615 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.45538409 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.437444065 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.437315165 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.447136951 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.438424044 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.43911238 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.438781692 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.438703084 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.44493591 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.436812719 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.451216437 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.438593248 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.438580883 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.444995142 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.439708902 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.444726898 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.438539482 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.438268684 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.445115409 seconds)
  done (took 30.173474514 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.426941203 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.282714216 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.780088559 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.684980844 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.42970849 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.433047921 seconds)
  done (took 28.378597083 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.513718927 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.654763958 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.436085305 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.830593593 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.905986996 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.438460042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.436236638 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.697693844 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.068440747 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.063249712 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.506249124 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.510427563 seconds)
  done (took 21.405266795 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.441108301 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.43001833 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.447264682 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.445797796 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.495437784 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.440174365 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.442859646 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.429212668 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.501817799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.50109444 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.440884399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.498444221 seconds)
  done (took 38.857630893 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52372607 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484365902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.442877811 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449283499 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181811437 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647335387 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472698291 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182523904 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.438676808 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709819475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43760233 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526661615 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693763904 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436826914 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458109919 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.530151036 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663829104 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967522277 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43878117 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.812417028 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462914168 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443585192 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.90336452 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.703314607 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654207053 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419675153 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.789343171 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.215148646 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75368042 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45305378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447449278 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438016246 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71283562 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126246941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554304626 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682522215 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438197772 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993590675 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.428140665 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.80811905 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441087028 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462111399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448940007 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439311785 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.372842917 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446305995 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191344338 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.443257892 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.151995431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440725867 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736179306 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535630713 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.442239858 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.012879161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485632004 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446993342 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.444393579 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532495552 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008833798 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.071339814 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447746807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.378995543 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452222918 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.821386192 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10889639 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.447051129 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.444077801 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44399358 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375001783 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.816185626 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45798028 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586005765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.466075846 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093613937 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182208008 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444850571 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373272693 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034139492 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449313708 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.377608841 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670365092 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21914632 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380131641 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.383351603 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.37760742 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203864707 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448546648 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.085266752 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456893652 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187461845 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708891226 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465279099 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466400743 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.667609958 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.320183604 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442680567 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.44687722 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56755567 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464397992 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191354199 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397126026 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.445957189 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700144837 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.654135107 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446361106 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.529547801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971342909 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473932437 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.457228527 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445029622 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.695959511 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.078988454 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460085112 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106892688 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460422983 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.220809982 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242323936 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451933491 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451974606 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453192487 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737430967 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.283030567 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327054544 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512754677 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449200689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443444098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975158306 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296060137 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.329077917 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.67327249 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486547701 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.458904607 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.436194793 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403109551 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.451305905 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452059523 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.231664064 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.669549154 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462487546 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721596046 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380564042 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595126134 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456663262 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.669526343 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.787725195 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.458086001 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70755008 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449158321 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448433603 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465387545 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465428733 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545929343 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46841425 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.447548211 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.710385335 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.450437731 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.450010809 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.841855876 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.225336614 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450313707 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.453531095 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447126722 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087079445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42407106 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448473375 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340703738 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.460967202 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514755788 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452203109 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694431535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.856958669 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445190717 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.46109712 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.445050053 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670300483 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457693435 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.837170522 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528170204 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.972845754 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100376519 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461807528 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.381832418 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.157278924 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.139533219 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446822178 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636930552 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447241432 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692364182 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467150565 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445264095 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089070847 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449561458 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.846538748 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.453958409 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45965901 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.451930538 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446631904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.868659098 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121101009 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456783305 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.46519238 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591946288 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.461252331 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.38261495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.96548583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4543804 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449063855 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.223854998 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482851153 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.846227896 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307351764 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708595816 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463718209 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748829123 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.940139632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.482614145 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.459714197 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448975118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478079609 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.458411725 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483529628 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.459258071 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.848355074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89025515 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0145041 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242924811 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030080852 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.79007337 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.459290472 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.339136183 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199909429 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403851072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110730427 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708431005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200877814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427080378 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979366895 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.799739652 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296079644 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748470679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689220743 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.788035837 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.451652174 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757502134 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.671632012 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486150709 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.45070681 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388492864 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.730063704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058930783 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.473985798 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53245368 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202754596 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470583949 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.230907633 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.500308657 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.206638443 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890148047 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.018752641 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.847798673 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461801031 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459601012 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323342275 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454492107 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982606446 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13225367 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.454747162 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.984138823 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410152269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.701064619 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.470286135 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.448283178 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.191728308 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.453792609 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.713073132 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751956686 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397001529 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452389748 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060642335 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.321044319 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.458515756 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45404244 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25162906 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453507991 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775452671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.478186188 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.923504262 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465078811 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.388669134 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387256385 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.148466465 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460114956 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429044459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984085995 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.448522644 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483403944 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476345678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310339224 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.712585956 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.468856805 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092216797 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681397258 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452926055 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506093353 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.457964783 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455034836 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.433985889 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.338079975 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691614837 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465791622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.679582589 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.478112608 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.353747682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.455917791 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668008388 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.353963034 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.461505656 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733081344 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.173345494 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.46757189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231973252 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48222003 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455679077 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.490952098 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453981157 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479299779 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52491973 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70425622 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.474427418 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467197592 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895490303 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476821529 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458549586 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.470051581 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55153647 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.153040837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.927978032 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.235977933 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102391022 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245842354 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102668569 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765078784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466960895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460177245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393656526 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60840018 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988401043 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732607299 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586869532 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.467349349 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487965169 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457920792 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463614876 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67711782 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732486938 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333895939 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460268571 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127717462 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.618918581 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46915931 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.670585749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993877135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056368691 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572297797 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474019742 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218394831 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733285253 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.55186858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45987543 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057367403 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.479114983 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.231824932 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.465181376 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47606604 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608275089 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758074164 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164895921 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.489932282 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.61597243 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.234830258 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.885222767 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.718790204 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.013186287 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.710993781 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113677992 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232048305 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727428932 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530583376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711271637 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.585482468 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.609637357 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.460213928 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.361963982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461232254 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311205193 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.172390075 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.471091342 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112643009 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728249057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.465453993 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.462467725 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486204918 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.472422165 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686502102 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235173688 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.686815494 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471768767 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467599176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035615931 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11170335 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772005245 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407320834 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.466725794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739493708 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.706076367 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488608788 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.916151389 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.173463674 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067876556 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.43774475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485647751 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479091977 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256299364 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115943544 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.948653901 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005042019 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.124083186 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464226078 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742628149 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.46871432 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.467133131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748207115 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.46801767 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.476015576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721745877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.114532916 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331723947 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.490662864 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.057089731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.40233236 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.692592755 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545293644 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401278859 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475097571 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.911686515 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.485071928 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.592491379 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476292954 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.462315433 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471140906 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.22929063 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753292225 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.47121185 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.482037475 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.460543951 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.470782064 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56554166 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080967804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491033052 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.141645681 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.816905027 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.724282944 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482516947 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.448962251 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.468788643 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466091453 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189703684 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4437486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.461575894 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096651882 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.48174787 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.484298531 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471577013 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.6825937 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679345899 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.46734838 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719746693 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476674301 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488850063 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.365509898 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.23812075 seconds)
  done (took 1726.569871445 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464731613 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.499760115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.500908289 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.476088122 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.491963918 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496850424 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.490061424 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.525650647 seconds)
  done (took 53.319413679 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.478775597 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.620965384 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.49715858 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.474825251 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.472485127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.466946781 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.989378195 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.503193039 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.472496021 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.472523318 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.471431534 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.469721185 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.16979671 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.480174526 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.463202561 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.45549784 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.4716964 seconds)
  done (took 67.810297703 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.983166645 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.48237196 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.857774025 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.549960977 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.475446373 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.473831404 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.960328956 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.498845986 seconds)
  done (took 55.656866078 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.474187139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.474345336 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.475447709 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.47467192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.475097316 seconds)
  done (took 8.747746008 seconds)
done (took 2141.206650516 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.474536724 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.476905416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.474133662 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.477748055 seconds)
  done (took 7.278644382 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.448556412 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.197897765 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.454412036 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.474299535 seconds)
  done (took 18.950664633 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.469243385 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.488819639 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.279524801 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.16982839 seconds)
  done (took 5.826164547 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.213273894 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.237705451 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.220117066 seconds)
  done (took 8.048304961 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.473301947 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.481022523 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.482529854 seconds)
  done (took 20.814028254 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.788257242 seconds)
  done (took 3.167124474 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.614916917 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.675064752 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.847137439 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.818062963 seconds)
  done (took 8.333363916 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.876437557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.836635551 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.658145332 seconds)
  done (took 6.749576179 seconds)
done (took 93.500981852 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.659069832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.49405536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.677363766 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.632473777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.701053347 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.679752301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.739920656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.59308841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.145981593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.130409398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.634514211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.701780364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.686355653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.496398015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.68369075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.492200213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.699415467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.716835523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.324025035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.467888102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.763764244 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.272222855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.465016437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.29501634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.700047748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.632297316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.851786158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.491880455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.470062146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.896586095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.632189424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.478211841 seconds)
  done (took 199.684713942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.474800835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.47064953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.470015239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.470069361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.470737235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.470632479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.472650716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.489799856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.48905221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.483710478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.469561357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.470090086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.471011108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.489678401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.49279461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.485375564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.470495633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.489297215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.471438443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.479218367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.472523622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.470864656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.507193427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.472651426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.485677787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472811711 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.47796432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.471466671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.472111914 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.471347275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.494862486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471724896 seconds)
  done (took 208.674574374 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.471754257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.471997122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.473180394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.472920076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.494320206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.472147211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.473076652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.489975704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.472486922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.481087503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.472026457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.473334964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.472436989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.484894157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.474643751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.471871599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.478955399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.479211284 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.475563276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.47400679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.495852789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.485907458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.472143499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.472824999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.49916494 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472921607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.487017734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.473466277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.493714692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.473471493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.482646784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.501623985 seconds)
  done (took 208.723164095 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.683135065 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.485999633 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.486333499 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.422023251 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.488459503 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.487002251 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.484255463 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.685519266 seconds)
  done (took 15.607816099 seconds)
done (took 634.068247501 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.98826851 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.690604906 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.699444626 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.508094388 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.4066296 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.531297441 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.506987481 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.694843101 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.481284774 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.709850568 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.848850025 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.500316625 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.003431832 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.505140517 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.777825018 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.612430781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.443032065 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.556477939 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.840068171 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.148948617 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.791028671 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.066338647 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.696863539 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.465215396 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.022036 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.051739699 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.273246085 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.433207976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.508280038 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.851811325 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.38169027 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.633629493 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.559115642 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.552563143 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.615518788 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.614287882 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.569964222 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.576705382 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.69573324 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.833484974 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.167198907 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.295528428 seconds)
  done (took 100.494878769 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.469708062 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.470778063 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.46929077 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.469285457 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.471650525 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.470217461 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.470111885 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.469240255 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.470378287 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.469883612 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.471113362 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.471664898 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.470893958 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.471654182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.470507879 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.47190737 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.470666979 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.472379148 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.47015117 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.469049873 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.4709934 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.472178938 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.471269975 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.470759493 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.471225219 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.47090599 seconds)
  done (took 39.626386189 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.492070095 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.747351027 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.931468963 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.49642658 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.486088253 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.491007864 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.575544741 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.497717825 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.490695478 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.490479237 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.651347428 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.497846786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.521940064 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.955804904 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.489404017 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.49282201 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.493307995 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.487237249 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.754394657 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.494745119 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.597094473 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.494978861 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.575935911 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.497922613 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.511694023 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.488129932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.492355057 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.06527629 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.499005813 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.648616706 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.389800666 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.5796767 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.040423146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.940327771 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.392746155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.503698194 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.495006463 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.654153059 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.490276073 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.488729949 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.57680537 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.490344677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.939653743 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.179852628 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.510432892 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.494598736 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.086989541 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.66056128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.773102604 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.507621987 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.969550048 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.494084453 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.496532074 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.490375015 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.77304942 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.504958431 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.488119379 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.126742079 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.522421346 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.578292583 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.499109087 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.490090235 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.766539547 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.497956059 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.756619971 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.497216273 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.497936834 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.511984669 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.950862228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.498677608 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.211885214 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.520179006 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.496653691 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.655531753 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.763922717 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.131903447 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.503061951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.77318581 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.067899227 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.58615045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.503626874 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.059835336 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.589278964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.502892538 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.499071282 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.498905256 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.496918888 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.543399259 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.575200809 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.155141247 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.209611556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.16678626 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.607973067 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.507686649 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.492441942 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.138134785 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.527235523 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.497833082 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.950471297 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.215913038 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.513471787 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.501446882 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.21004389 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.516310678 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.582198918 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.500295478 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.951601182 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.496008672 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.545396856 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.499198532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.500141285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.519436389 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.580805473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.497830536 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.498688819 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.175027455 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.684006485 seconds)
  done (took 196.627964017 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.499036889 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.487471534 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.499087508 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.487330375 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.486908772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.495534315 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.487082326 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.488129685 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.494502003 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.489356447 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.489132197 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.489604033 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.491222002 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.504703063 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.49915392 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.495661931 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.105606462 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.488222667 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.487698888 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.487853263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.312726472 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.496905802 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.488744996 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.509841456 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.490887601 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.488251302 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.50424016 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.491560282 seconds)
  done (took 156.633270635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.502605857 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.121802614 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.494653173 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.643178415 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.526633982 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.498840133 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.641448576 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.560046344 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.497590739 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.499938119 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.49897118 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.832611406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.503979661 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.075771566 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.714432068 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.648662218 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.068085497 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.522427854 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.501830459 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.500474965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.644706351 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.50580799 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.833092824 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.124727533 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.503782314 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.124456404 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.484701392 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.503517075 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.497362958 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.127805015 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.501438893 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.845373241 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.584932796 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.564750082 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.128632915 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072184287 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.096045171 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.669579218 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.497752213 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.500482944 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.501713292 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.484416368 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.127481735 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.505455957 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.498165841 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.122254211 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.524821523 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.504372474 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.509047226 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.50195716 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.564847677 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.564849764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.84026238 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.134720735 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.590394696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.516630733 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.646538697 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.897778556 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.505202392 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.072268024 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.485212104 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.140590847 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.528060257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.485770108 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.504771944 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.50921899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.673217778 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.658045318 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.080664247 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.519977757 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072661731 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.695206636 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.510544182 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.50469396 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.507585445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.134526555 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076163445 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.696207345 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.658727964 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.726380374 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.493319051 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.499233609 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.487808938 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.587788056 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.513197696 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.14075686 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.09591902 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.526965078 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.507466033 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.507768731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.507886863 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.702305196 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.14512818 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.590735129 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.108537447 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.868956368 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.843731629 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.509122238 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.572726321 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.527420918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.844780534 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.509716667 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.570672776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.960298746 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.852891935 seconds)
  done (took 179.324773211 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.772400861 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.773921985 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.600867958 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.657292033 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.133252831 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.096675686 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.870931956 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.665347291 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.629911182 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.783407196 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.754499257 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.595302091 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.734042381 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.58242433 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.288725108 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.582460744 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.603683227 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.668436884 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.653511633 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.57597533 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.185763877 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.804652031 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.712756931 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.536625736 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.60441832 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.356048974 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.120031677 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.047471559 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.693472257 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.893954737 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.067444705 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669069295 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.540719968 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.251348436 seconds)
  done (took 71.912196365 seconds)
done (took 746.003851031 seconds)
SAVING RESULT...
DONE!
