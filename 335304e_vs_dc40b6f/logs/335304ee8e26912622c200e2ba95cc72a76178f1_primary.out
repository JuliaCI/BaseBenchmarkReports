cset: moving following pidspec: 27389
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.293847327 seconds)
loading group "string"... done (took 0.47765496 seconds)
loading group "linalg"... done (took 7.627538382 seconds)
loading group "parallel"... done (took 0.169331262 seconds)
loading group "find"... done (took 1.162975622 seconds)
loading group "tuple"... done (took 2.08384887 seconds)
loading group "dates"... done (took 1.316460586 seconds)
loading group "micro"... done (took 0.243914448 seconds)
loading group "io"... done (took 0.653944253 seconds)
loading group "scalar"... done (took 40.470843813 seconds)
loading group "sparse"... done (took 12.533750497 seconds)
loading group "broadcast"... done (took 1.027687365 seconds)
loading group "union"... done (took 13.900285724 seconds)
loading group "simd"... done (took 4.766799924 seconds)
loading group "random"... done (took 9.580797346 seconds)
loading group "problem"... done (took 1.96260482 seconds)
loading group "array"... done (took 22.243620695 seconds)
loading group "misc"... done (took 1.414945297 seconds)
loading group "sort"... done (took 3.585367408 seconds)
loading group "collection"... done (took 19.129996111 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.44995407 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136551265 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140869113 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131343701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196391647 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134968316 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152977015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.105759798 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.95449125 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177221537 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137630324 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486291294 seconds)
done (took 4.93612486 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.212923759 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079915387 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092116491 seconds)
  done (took 0.851565426 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086336954 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.139378737 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.087757769 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073161865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071764335 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.087993305 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071572791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.087812471 seconds)
  done (took 1.299983073 seconds)
done (took 3.141513693 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.713944054 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.262259059 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19917716 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504146868 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.170976059 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.202362824 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665286177 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336162447 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.235737935 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09882226 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12625922 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391813796 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112765755 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678319114 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083420387 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120518036 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.166312757 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438472024 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08795126 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088637953 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111451204 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14777989 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108520228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081410702 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175214657 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076089096 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181099545 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102452017 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074669836 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.279534147 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.195203104 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679473307 seconds)
  done (took 10.613003303 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111499616 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132006656 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07389547 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151261596 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134675364 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076617412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09475006 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074548715 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.117679699 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17303797 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112392783 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135090788 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08742063 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076916386 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.111266169 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.22430115 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115392813 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.113559112 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078253412 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083925449 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13110567 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107935282 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086911101 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101516411 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.161915838 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198556029 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105017635 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119253727 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074506832 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.104696168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137776578 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151521552 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073661217 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073422579 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170333555 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119754957 seconds)
  done (took 4.88904904 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.183216721 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097201119 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164652836 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.157356257 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13790354 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.149477957 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106528929 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250966921 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176223524 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158595074 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139320283 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109439188 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075154594 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094494014 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073813744 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.609683805 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160948936 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128098149 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092585185 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093627488 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080420438 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366798459 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095921101 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072020332 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093439863 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066877497 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158338208 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076103337 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187192373 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.094884264 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095115119 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110317657 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200117329 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107485327 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129494669 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09112022 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071950441 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172130457 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07897555 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.091621891 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099898435 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128892061 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130155795 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.087655284 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074234012 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201812344 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087890091 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090375977 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.992610527 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17370031 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118349939 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.089829237 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326281126 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092384577 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090465507 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072275944 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272987338 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108243844 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095897764 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073074567 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091619134 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076294996 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37819352 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08911583 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.748707225 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076934052 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084479396 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091068507 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088926217 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081111343 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079632061 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088895119 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091400571 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090672152 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07485626 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089413461 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072767621 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074173527 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11012115 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095930491 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074074683 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152793233 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07448157 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092417692 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121047342 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092461041 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073874591 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122409744 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.101970407 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069084878 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093605246 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073299603 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.129124634 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073607539 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109430064 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091349521 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134726296 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076650252 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176073665 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073389333 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119023581 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078193939 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087788891 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121938356 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086667259 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092066806 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079805628 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072189797 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.089359489 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141516902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089889142 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076363037 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073290082 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103175053 seconds)
  done (took 21.839134112 seconds)
done (took 38.021371947 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338759972 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102917697 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103560153 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103562678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101614792 seconds)
  done (took 1.499865818 seconds)
done (took 2.228487107 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.273325913 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16524921 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07148702 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.178191891 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071176583 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168013202 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153010894 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105419071 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.175345831 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070602731 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.172868866 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070856794 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070896504 seconds)
  done (took 2.495717356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089541631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108449032 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076994564 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088113771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086780827 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088332926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103746877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094363415 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103692973 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079546595 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070348809 seconds)
  done (took 1.713707985 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088500364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091051743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093158134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087688145 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086654218 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087209869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103762808 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093350211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104055722 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07978492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069994244 seconds)
  done (took 1.714145172 seconds)
done (took 6.63965599 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08798821 seconds)
  done (took 0.810550311 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.981074713 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.980900722 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098278517 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15808961 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299978252 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205418309 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.573116162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125418094 seconds)
  done (took 15.357374315 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.12353988 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095630903 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074193566 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09450378 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074773153 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09538775 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078364699 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090900006 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076521451 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075170313 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090712413 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074434635 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093877704 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076971916 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092373484 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077198999 seconds)
  done (took 2.176102796 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110702392 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110158679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098788212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083510184 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096960404 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078640673 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099538748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081248144 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09385675 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078611402 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100592897 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083148527 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098258717 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077484973 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097770376 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085339734 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094738271 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081367541 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09762235 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098527533 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083594999 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095316264 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081462522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099159536 seconds)
  done (took 3.040060481 seconds)
done (took 22.114664679 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145732595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079242531 seconds)
  done (took 0.957996322 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094899748 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112654318 seconds)
  done (took 0.947366417 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100547945 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092099089 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128198492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091642853 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092799179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076113651 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123553998 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.077819566 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092402029 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076606327 seconds)
  done (took 1.692183194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080108416 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08035018 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099399834 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.112925015 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086024637 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09425431 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081469148 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096572623 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08169891 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091362317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08363696 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108594069 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.082990219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.110170474 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097551926 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082206931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101787984 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080215142 seconds)
  done (took 2.391128697 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076270918 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077449566 seconds)
  done (took 0.894024662 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078083075 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074789658 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094153206 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094606051 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074798954 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073827782 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.090198695 seconds)
  done (took 1.322255749 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470639623 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136275832 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257484509 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079437344 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.114799915 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.320939874 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074181979 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.096194425 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07933918 seconds)
  done (took 2.408119893 seconds)
done (took 11.351537597 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086230233 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095844689 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.123489642 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45491266 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111061472 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073856624 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.152444288 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252690906 seconds)
done (took 2.100035428 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.140124783 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325534743 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117785676 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068370514 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088630271 seconds)
  done (took 1.34678062 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073576025 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077276102 seconds)
  done (took 0.89377321 seconds)
done (took 3.12579286 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073970318 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073583444 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088597893 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074422028 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.071039056 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088200931 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122484742 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074005185 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07378683 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.091434559 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.07361646 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091430344 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071622299 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071482329 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091240865 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07132655 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088350488 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071283004 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073748996 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090287719 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070888577 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090540693 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071026358 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071328258 seconds)
  done (took 2.705294696 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102451624 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092763837 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079681187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097283702 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078036442 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09658743 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080200963 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09065727 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080696745 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092542578 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077858708 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095679273 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.076577947 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095288952 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076891549 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094815486 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080075355 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091099452 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076499729 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095554212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079988862 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091958238 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07794209 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096316058 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078266864 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094116103 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077022817 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091177079 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080029316 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095065059 seconds)
  done (took 3.364207446 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078466121 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071049268 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088758683 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078008064 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089158753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076081403 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071549039 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088698265 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072232622 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088998981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073140154 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071921483 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087975539 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072575531 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090509879 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075265135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101290104 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072002676 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071689049 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090526027 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074730795 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088554837 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07494614 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071644681 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088381187 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070869764 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088791294 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071440844 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072855243 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088180835 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074253066 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092108348 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071473681 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077548172 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092735015 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070882584 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.092470035 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071473803 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.180537492 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087951551 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071562518 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08855688 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072086473 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078971827 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091384017 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073360013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089247355 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072861275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072728301 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091110932 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071450783 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088688786 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074061283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090195263 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075472832 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071496082 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089824618 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072047076 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.090095404 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07168201 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071702651 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08950637 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074519636 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08958734 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087718112 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.079004145 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088837123 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073849261 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093494252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073951517 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.074036006 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103012543 seconds)
  done (took 6.659205693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076544019 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099507832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074068931 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074245324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087882197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072784203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096053303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072435485 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091034086 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089708018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089766112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074357202 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073777525 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092883431 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073893303 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090964432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082345537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087226065 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072276248 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092815682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073541685 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095819072 seconds)
  done (took 2.58965045 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204704255 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098901822 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.134069011 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089218037 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108880494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089035947 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095997931 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080724223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095978594 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081625847 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097805428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096356165 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0919457 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099254464 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082117218 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099896143 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079965277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099852468 seconds)
  done (took 2.580933624 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087496255 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092288298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095874468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092570765 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075057841 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09561686 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080866649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107557274 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077802614 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092252356 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084329377 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094830961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077811065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09215304 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077567349 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075103984 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094999891 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075652061 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101446728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098061794 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080915307 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101487479 seconds)
  done (took 2.708980389 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090150102 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094456526 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094471351 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09590552 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073258701 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093435959 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082830504 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091366122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083657825 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077049912 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091958915 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076480087 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09776356 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075801422 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097189783 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075847859 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094032386 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075295078 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093750383 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.073921602 seconds)
  done (took 2.487413955 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114081682 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106200879 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089226962 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117469848 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090013845 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106835951 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1172624 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089533799 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106797039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102624717 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10669037 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08990016 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117841544 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113061019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090068019 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118256591 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099244721 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116604894 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108850109 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089469121 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120051743 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090295425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116576657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09079984 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106540566 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090234062 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10674184 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11277039 seconds)
  done (took 3.686421622 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075445873 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074581637 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089946431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072687054 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073305679 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089075923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072981058 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.08988289 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075152109 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073739855 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091184806 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075403217 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09260718 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074774222 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075167135 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091907359 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07519713 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089850376 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074677378 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072379538 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092534766 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074356854 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09175268 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072967402 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073528445 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092107673 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072813469 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089788654 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075207226 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073245698 seconds)
  done (took 3.169618572 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082816055 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098017923 seconds)
  done (took 0.947392187 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072938111 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10903422 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07251674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0791263 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098044256 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075849776 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.101929043 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080806284 seconds)
  done (took 1.453104016 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.092442012 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110808318 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08037419 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104016721 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093527448 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109658432 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134419423 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098027073 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081791593 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090633473 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091140193 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092056959 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08039096 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075495572 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.098849282 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081944916 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09405356 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085766848 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100098498 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077678961 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09832196 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086613963 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095099221 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083715257 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077219104 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103858793 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084997231 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10459427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080083524 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10251619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.081419802 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087262666 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079895243 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097976637 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076741275 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110802546 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088483162 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098784109 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.084083127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081936056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102506937 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075108092 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098347635 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.082071395 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103613109 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0807567 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098077977 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074173381 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090749106 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078489804 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074720182 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093800664 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070566916 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100311981 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.079561465 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106535187 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078189011 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095273219 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.078180901 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078981089 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.099362721 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.078145141 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095470595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079617403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10012531 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079909424 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100981032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074111755 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070114588 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094394914 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083767902 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115073833 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.084642981 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098480317 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081551293 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094668749 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07938342 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099080083 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082701551 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.102646215 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081012992 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100262823 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083827959 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094153544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078984021 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082926046 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095218471 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07921055 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091091435 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091636834 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096640203 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07682244 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090902546 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08553585 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.079514888 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097600293 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.073870076 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10079852 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070384816 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098418132 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081326799 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093997855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.085101007 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098649618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081570464 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083804022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.103399915 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076186429 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096572993 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072565153 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098893546 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078738371 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.100841753 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070306605 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07888221 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09455364 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081719119 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.100642751 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078000388 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097666183 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084438159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.100770182 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078147188 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07289574 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09553991 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08083088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101994221 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083019057 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096273452 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074164809 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09152571 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080381261 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097397055 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08030644 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081340387 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09644756 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070706018 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094470369 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081445554 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101701909 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.075913498 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093496836 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081325541 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076592154 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095948519 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082589132 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095781684 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074962866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098832515 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078408764 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07474014 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102158854 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079316557 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09624944 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.079814482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102866993 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.078843551 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09871693 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078834071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098865888 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08122705 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074921706 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09438984 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07832363 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103042218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079199261 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09215785 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.072782968 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100340125 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.073764762 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080505787 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092470231 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078884408 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098376112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07750954 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097969149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077335202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09101634 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105771112 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082330044 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.099770902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086297649 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09752378 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078234533 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097925709 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082058633 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099063182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083678037 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099040961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081407928 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07895305 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09104932 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081745498 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101783232 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.075800307 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095155193 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075088216 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097921144 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083502309 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081015923 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098758319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078365138 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094733891 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085722307 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096914262 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.079590402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.092954173 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080204857 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085890486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099734355 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081951043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.103382298 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079806081 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093109839 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084444019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096199036 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082420677 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093278763 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.073644884 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.075961253 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099560679 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078936572 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097305045 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070596068 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101705356 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084670686 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07670678 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.093241639 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080798817 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103620645 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077852834 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097666454 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080099191 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100639138 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091032865 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.093952837 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079304496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.103123764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081351457 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07043777 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100626614 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.078999727 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093227547 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079104466 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0957941 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07936191 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083273354 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100231475 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070885002 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.096559659 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078900475 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.093082288 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075113265 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101087539 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080526489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07833027 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103075265 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0817465 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098724236 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080548873 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098431615 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082359282 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099820875 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079558837 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099853007 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.078513448 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.075490301 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097420945 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.075460532 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095397762 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079105173 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099419222 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.077208306 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08206073 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097481214 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076918183 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.098688539 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.082401959 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095624276 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.077566896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.094044142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07956159 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077550188 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.095213577 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0788932 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092626976 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083922852 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098330378 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085572153 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.094434939 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073095595 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082280821 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097062933 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082340883 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100643719 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082303183 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.095826373 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080476212 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.079415017 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103717811 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.075527941 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.103896727 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08318747 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095819202 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080238888 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09497414 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078806237 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094187103 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07810715 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08209747 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095424164 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079762757 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099916021 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0807193 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094784274 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079488509 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082634622 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095244675 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082961613 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089620853 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.076251629 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.094029467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081441154 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102611052 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081706596 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080257725 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097529787 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082782182 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098361443 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073992765 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103665228 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08353145 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099638253 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085798413 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083267265 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.096720353 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086449923 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088953925 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079164483 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09511989 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.074659172 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102887652 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081786287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08503839 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094801902 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076146582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091662848 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082480437 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096646085 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07151302 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077649944 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097434402 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079007959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097321856 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081783682 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097949303 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082479263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102456065 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.079583759 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.078590771 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099365085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074456472 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.093223093 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.075530179 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.098206157 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.082075172 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074254846 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092700227 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080185583 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.096803666 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.077619844 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081000057 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096294468 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084312832 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098919428 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080155619 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103582501 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07220614 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.097532879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080853204 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098206449 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076304883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080467347 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098077369 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083398752 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.102769523 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.080846898 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095129153 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081131475 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096570999 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080483915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080390137 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099666682 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076087597 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100741492 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085553066 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096104244 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.079266217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095100235 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.077775792 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081553941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100981778 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080126878 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102464599 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081068568 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097786843 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083630257 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099508773 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080560912 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082813455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096342629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083675306 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094493181 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.085923161 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095715151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.082403537 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.096999456 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.074876547 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080569851 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09913611 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080871278 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100507251 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08236329 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.094243667 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076162203 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078585862 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097039656 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085052898 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103945388 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079815213 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098613689 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075982768 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09213399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082914237 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.074042668 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.096569131 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08032442 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101102596 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079335425 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096808826 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080478502 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.102856859 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084456603 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.100899361 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075112395 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.081603045 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100867897 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.079833825 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095977332 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07727205 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100576055 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.082739544 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096992723 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.076748193 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103817761 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.081044078 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082002345 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.097285237 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078129372 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094939596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.075717986 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101273604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.080170706 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101702601 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080036909 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080686364 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104910563 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077046683 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095533077 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086516154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099543682 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.084180853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.093963254 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078166744 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082188839 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101228105 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076184664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.09479477 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.075135354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097645102 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077034074 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.075925159 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107026834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.085398818 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09771302 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080402406 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098200075 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076150524 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09452013 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07654011 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082696897 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09705554 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.086689218 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095663382 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077387992 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09415164 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081225139 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098653015 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08082581 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075205637 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094049266 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076625876 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098570039 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.084821326 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098465909 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08090745 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080145037 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.098445402 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078784494 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105159876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.074774575 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.100399422 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088318057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100272033 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07819815 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.102283721 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086338919 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100245049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076330843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082289982 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.098693482 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078449578 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100916561 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084182665 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111474654 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080740981 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095439771 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080472597 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098620663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.077209159 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.084529073 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101493432 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083124982 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101071938 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.079275197 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102700269 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080891563 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101847414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.079792889 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.098061892 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08070629 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07803143 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09793288 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.076200405 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101525063 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.082914403 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098944952 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084818723 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076354924 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106104612 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.085606172 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100798169 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074289203 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095736906 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077330476 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076059357 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101314307 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.075962959 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097781024 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.079532895 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098527423 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.077606232 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08268024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.098151606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083148698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10071627 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072158081 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097384613 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080226109 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077973902 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093027622 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.081645094 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102177686 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.083534168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104864258 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07789819 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09957381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.079554626 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077773033 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.094182129 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.083947701 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09944388 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.079952313 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094914903 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081444543 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.082816935 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100537932 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083145042 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10174827 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.080369519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104633716 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085509649 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.093725195 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075309095 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10219899 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.078798986 seconds)
  done (took 53.378538656 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12178438 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101758071 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073359974 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092581249 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117524716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078205292 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074010699 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095476372 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077485858 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105638497 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073654485 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091671594 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093509943 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118981842 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114768129 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105621418 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073004071 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095783939 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073093836 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077168329 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111907533 seconds)
  done (took 2.782082849 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099055139 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109024531 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089683047 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112114822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10241785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090229915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10754214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108926989 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094102216 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103161483 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112790827 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090516664 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102919506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085075157 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103467072 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106009906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09355223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101913563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092038014 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108005817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105319089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089710302 seconds)
  done (took 3.021659382 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086197894 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081204357 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100802442 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.072740187 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09940103 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.073564203 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105047057 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.075444497 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085555197 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.095325044 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076918057 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.095533371 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.081851923 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073160204 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.096063619 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.075685758 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.146809588 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10449133 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081282468 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101662153 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076441449 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.079250228 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.094961166 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076723053 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.095454027 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090534958 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101255219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082445385 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08066113 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.095188887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081481905 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.094477114 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.079317529 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.097170172 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.076900702 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.076279342 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100810034 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081659982 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.095402336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079413386 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078362076 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096057279 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083243357 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.09829619 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079520502 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.094413484 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.079770948 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081312012 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.092039722 seconds)
  done (took 5.144550109 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109351928 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.148301163 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099970501 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139200974 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095138894 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110398393 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08177756 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118464831 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095214875 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080725414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.117722355 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114185696 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082296232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106283997 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085079645 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100299017 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083551213 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096618104 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086951891 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097353586 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.086884706 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104222216 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113873018 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.093845425 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105035463 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081003914 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097321773 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086856342 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111786517 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10700132 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087770309 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107223786 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115219052 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.080667833 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09663907 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084704038 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115949378 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.082607603 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102688876 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07678139 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10312784 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087685491 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104452242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.116731674 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082405913 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10302064 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082385973 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076010307 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11199071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103534363 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091043599 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114547625 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104723462 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082425696 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105954651 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09542759 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100888762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080145865 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104941328 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092063456 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095345314 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085983662 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113599597 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10347508 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090021761 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113384173 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103365997 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087079454 seconds)
  done (took 7.675011296 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110309086 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105991115 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096785498 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116572358 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105351037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086893309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105175386 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087058688 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105912229 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093157305 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10553013 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.152266428 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084303072 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109605717 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087340662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106384861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.086974023 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106241914 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086270029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105301898 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.085881395 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117253478 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106283031 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096792256 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118365973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102696712 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087176908 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105047149 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097415738 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10523925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118734438 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087234922 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10521063 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097259915 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118288494 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105882457 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080963914 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105482262 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.086659662 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106277469 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084465919 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116612088 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104969545 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084847119 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105839648 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087344606 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116603298 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118348009 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091981799 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112139172 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08658518 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116293359 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105896612 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086674644 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117134784 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.123855837 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097309032 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116457876 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086242819 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116796397 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116391689 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123203452 seconds)
  done (took 7.221039675 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109692078 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11155747 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118799945 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.07473327 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076124713 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107088257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076544032 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.096727719 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110647649 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092075313 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113761031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087351744 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109769901 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113756147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086962607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109771403 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10518429 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087743369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111388809 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08664629 seconds)
  done (took 2.812087886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087462012 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118365503 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079979329 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106164233 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082398568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105799422 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081594618 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100986521 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080484816 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101494447 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091683432 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110475499 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080564052 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105742894 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09117671 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105578238 seconds)
  done (took 2.360674778 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099628588 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119388125 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102546401 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105113629 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077034221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103578864 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081811497 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094241785 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075131837 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114371478 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085589139 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103988428 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082366503 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096703625 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080092992 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084229577 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095544507 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082887646 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101060533 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102879012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104257301 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083407603 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10242411 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081054206 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102158899 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084821501 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105873045 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076592982 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097001308 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082320635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101616854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087206877 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.094840721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084526438 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097234626 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077052008 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100327772 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082676154 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104272881 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08234742 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07693917 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101037058 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081331647 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.099600372 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075434261 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101372421 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075357003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105224342 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081461661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101096973 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082096297 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08595768 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105904659 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109111606 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088788828 seconds)
  done (took 5.924146995 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094484554 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102135044 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07449483 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076822897 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102513166 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081415555 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102877649 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0827714 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100375442 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077483585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100648828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08463481 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080839142 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102652993 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081212318 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103657268 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074919927 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100151993 seconds)
  done (took 2.46457006 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08504946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078768783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107457504 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079168077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099560632 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082497085 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095041317 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07823662 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077357666 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099084664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079431921 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101225551 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078618674 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101246942 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079385418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099253155 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082254364 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077650412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098606735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074827567 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100561663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077745742 seconds)
  done (took 2.767069263 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.115489934 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.117920298 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.087077141 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.202913461 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.118771099 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.105164847 seconds)
  done (took 1.584874303 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104426429 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134478705 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080398534 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101432944 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091789052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10420456 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084589976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103484375 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095249234 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116996124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104188391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095184092 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115548593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113718332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092057031 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111502619 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083394648 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103914015 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079670999 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124205824 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104005913 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09527616 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104439124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103405129 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084332194 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113964271 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095631146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116674252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103469482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095755477 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111396202 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084202617 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115471162 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115859926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083081216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115334024 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083760017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124128138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111435834 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114467783 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082026501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110159341 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096441936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111024648 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115508819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084771785 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109835165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084638575 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104104772 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129995395 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092173854 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114328825 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111617535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096353907 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115645987 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129258083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116656786 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094265558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11137074 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117281729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095162682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111367063 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11345181 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096543846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111291646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114296852 seconds)
  done (took 7.72749369 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118624791 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101094134 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084529539 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116577028 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115293589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085069753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104029731 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084774265 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103574364 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080939409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147825978 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10406869 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094697075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116068666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104137422 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085171951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103885884 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094375589 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101467942 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130621128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084523274 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115013985 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114164098 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095340503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116691395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111003181 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084301706 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104250327 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084927642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104305554 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109988485 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085178547 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114911984 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08170483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114706591 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083650507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104836068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10986146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084740651 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111349626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094548622 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124619936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104002451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08438481 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117204191 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104077802 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084595921 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101017694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084895767 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101823377 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097506045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11719551 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11775956 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114274271 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085368592 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104355855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085439212 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103792676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084968387 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111077991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094123626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104571347 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130852243 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08496059 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10412556 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114675883 seconds)
  done (took 7.592032691 seconds)
done (took 145.554671131 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.095938037 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13300088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094208087 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160545203 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080294463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113646798 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132107188 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09483088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.099608031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080445041 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.099946853 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081892693 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144138187 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101776599 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.079965121 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.101857867 seconds)
  done (took 2.536416536 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17316693 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283373245 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097606259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098413997 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.084382056 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080106065 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.099556055 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088235585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100717302 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080271083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079378357 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101399467 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07930263 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100367128 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081431016 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099400869 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080158744 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080376486 seconds)
  done (took 2.738165472 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107815891 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.136372592 seconds)
  done (took 1.098073983 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115037947 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169739761 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265452365 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.147359066 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.128569931 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094482467 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148905634 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.119141184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19781924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.121330293 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102252807 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.106865326 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112623686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109818747 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088267369 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.106932811 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133616814 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.087691494 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108432259 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088300989 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131343172 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079789453 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.109348764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087915543 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180765464 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121552693 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.080269678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099941688 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088426563 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.10823869 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086416689 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113768885 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120911718 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.141998226 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092859979 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.144549633 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108461705 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086060878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.107793938 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086213348 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110153416 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090110665 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.11443348 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087492829 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.099771432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.087238547 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10131789 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07961621 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.087122539 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109105566 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106717493 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086854496 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.142200864 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107896348 seconds)
  done (took 6.986183517 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.803200635 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14527297 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085508563 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.873989674 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13402386 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11911282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.769938696 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131182695 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223133926 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.782825662 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124089019 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.115482143 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197942004 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219991453 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951085476 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.30102378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.891769416 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09463467 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137308768 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.142116677 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08917736 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130293389 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123399438 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421139027 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085140694 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106001464 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089451951 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113569867 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149694524 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084294229 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108151714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167402345 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232748751 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192061798 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086052172 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.082924409 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105310357 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.155463155 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25546371 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184286353 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169205915 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079533167 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106331495 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092440232 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123893071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101222669 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15314004 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.161057474 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.160402435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085548828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114423109 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111886787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092959553 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150925642 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10314959 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282251074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300711439 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103904476 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091400514 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119076469 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23096467 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105123315 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19100384 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131758121 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202868894 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083723144 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782268103 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155179511 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.082992991 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110623863 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090050536 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10912771 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.090883073 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157432908 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381947729 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116151662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087375891 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103573023 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202688211 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084092971 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104683329 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.152085908 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084422859 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111684267 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115153088 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094658678 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.157287881 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215577938 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116504098 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110791706 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088886127 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115151491 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085360525 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.201271373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209304364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.149777831 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.199911433 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113479765 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.153375396 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154206081 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111566901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.159035884 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090053198 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118260845 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093328615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.205259584 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132468053 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083611847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108310349 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088925499 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135958359 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107394157 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09030832 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156143212 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.468424583 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.154236434 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.080943501 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086302986 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112038348 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.151408546 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110109055 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225602564 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113286104 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157073659 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089192638 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102167355 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089398379 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.172166637 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094832286 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111896295 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093473194 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112078404 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218863884 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205105121 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095880469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229852379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.149862134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112139779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160628625 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111043681 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1583983 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092455365 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113666888 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083857713 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77940808 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114420153 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091281212 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107372091 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154618186 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104792374 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084383674 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104796248 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081486888 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76184505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087347135 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081574897 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10569406 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08987201 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112483308 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089207039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109901709 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.150663918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217204916 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092834604 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111910943 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084134928 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.150215332 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107032795 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08421859 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10654923 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08474434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112513474 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087343276 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106450097 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.159632749 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149955032 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.20841731 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566504759 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083789292 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106416869 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214114093 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084792192 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.273347576 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090653986 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.216388674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154753658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08070249 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.298838809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157801921 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178009313 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107089206 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160792018 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081805866 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109191965 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.151980583 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084053222 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110967688 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.150197287 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096338388 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11679982 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.912726828 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085458618 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.215680393 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102597457 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.158279911 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085641166 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114280501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259463598 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106127116 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099090528 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172949848 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087617771 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105186632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70804153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084757514 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116334124 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09054583 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21072939 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.154145384 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112381747 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090303581 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116662516 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.153068056 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19780595 seconds)
  done (took 41.235009583 seconds)
done (took 55.44193769 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254370236 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208484597 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260510974 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162872424 seconds)
  done (took 1.857009022 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172979649 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12075614 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139481839 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078466417 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150811535 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099968112 seconds)
  done (took 1.636713476 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361565537 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267637683 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211030943 seconds)
  done (took 1.717849735 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.239914245 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234791438 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.339901371 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.384168429 seconds)
  done (took 2.17552663 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19676725 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095744768 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117790895 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109781526 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163438832 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.19977381 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.134841249 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.143664411 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103670597 seconds)
  done (took 2.194991988 seconds)
done (took 10.466829468 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.240862616 seconds)
    (2/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.167462771 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095169325 seconds)
    (4/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.181725853 seconds)
    (5/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.248112929 seconds)
    (6/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179134733 seconds)
    (7/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.2418154 seconds)
    (8/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.244218736 seconds)
    (9/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081673439 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122810618 seconds)
    (11/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.183527293 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144401702 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.093882185 seconds)
    (14/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107456735 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.087050754 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115292664 seconds)
    (17/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.123523718 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.225048889 seconds)
    (19/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.150030612 seconds)
    (20/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.133488538 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.142661583 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181643206 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.130898794 seconds)
    (24/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.088900919 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128537916 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087885435 seconds)
    (27/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184715041 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091016854 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167382449 seconds)
    (30/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.225954803 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095426892 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106902767 seconds)
    (33/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095340874 seconds)
    (34/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093499795 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.22343397 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.094799303 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112787552 seconds)
    (38/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.160739111 seconds)
    (39/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.114024912 seconds)
    (40/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090352507 seconds)
    (41/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227989478 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115643757 seconds)
    (43/286) benchmarking ("sort", Float64, true)...
    done (took 0.230228826 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088339507 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113558256 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079291141 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087585985 seconds)
    (48/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.182961415 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079838516 seconds)
    (50/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.214511051 seconds)
    (51/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168595131 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.108947898 seconds)
    (53/286) benchmarking ("sort", Float32, false)...
    done (took 0.149839467 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126785555 seconds)
    (55/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089816169 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193490475 seconds)
    (57/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.103471271 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.106186798 seconds)
    (59/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111400095 seconds)
    (60/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.136546439 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100804294 seconds)
    (62/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.200254891 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12947785 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121817481 seconds)
    (65/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183712794 seconds)
    (66/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.184258712 seconds)
    (67/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180622022 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092265252 seconds)
    (69/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.206520769 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10783831 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106957188 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109115919 seconds)
    (73/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159846072 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.132310988 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.230792691 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194741214 seconds)
    (77/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068712089 seconds)
    (78/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.188459764 seconds)
    (79/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089129733 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102000197 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08079013 seconds)
    (82/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179049144 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.080020493 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101566355 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.184132806 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117542313 seconds)
    (87/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088247239 seconds)
    (88/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108854249 seconds)
    (89/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088696706 seconds)
    (90/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12033267 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082001298 seconds)
    (92/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.144026896 seconds)
    (93/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106604003 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.182986268 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.082049577 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103518473 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.200592937 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096175832 seconds)
    (99/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068570032 seconds)
    (100/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17441363 seconds)
    (101/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1714093 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087003987 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.107331386 seconds)
    (104/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.169651673 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111058029 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.080618827 seconds)
    (107/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.155827823 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094314049 seconds)
    (109/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102232847 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080821273 seconds)
    (111/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092921845 seconds)
    (112/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112773332 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.071072351 seconds)
    (114/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168781194 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092904913 seconds)
    (116/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.160844373 seconds)
    (117/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091061609 seconds)
    (118/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100938281 seconds)
    (119/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108689006 seconds)
    (120/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090722616 seconds)
    (121/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091327769 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.181338148 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.090205222 seconds)
    (124/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234220963 seconds)
    (125/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.103425992 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088375189 seconds)
    (127/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.160798566 seconds)
    (128/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172069739 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.086905411 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.1255348 seconds)
    (131/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.1369047 seconds)
    (132/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.182245988 seconds)
    (133/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069801964 seconds)
    (134/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104068926 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069063536 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.158269139 seconds)
    (137/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083423323 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.088779143 seconds)
    (139/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100582513 seconds)
    (140/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082647457 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09660187 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08028296 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.087014939 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115183065 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083227842 seconds)
    (146/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098694681 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108992745 seconds)
    (148/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195328039 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070653832 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.092285875 seconds)
    (151/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082998183 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.112283336 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071976261 seconds)
    (154/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149319289 seconds)
    (155/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070312608 seconds)
    (156/286) benchmarking ("sort", Int8, false)...
    done (took 0.189125007 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.185834607 seconds)
    (158/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.068964761 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069776717 seconds)
    (160/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185647969 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.104982395 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.16560068 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182474766 seconds)
    (164/286) benchmarking ("sort", Float64, false)...
    done (took 0.172504518 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07336395 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10901453 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070544363 seconds)
    (168/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082084542 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121950045 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090716048 seconds)
    (171/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09116501 seconds)
    (172/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234501144 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087438589 seconds)
    (174/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086779542 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105024054 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09253847 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.127079743 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083400242 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094380666 seconds)
    (180/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073430189 seconds)
    (181/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084981963 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090689459 seconds)
    (183/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070621861 seconds)
    (184/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.083227836 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.221792631 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.101549983 seconds)
    (187/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071419595 seconds)
    (188/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082382392 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103340616 seconds)
    (190/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087279648 seconds)
    (191/286) benchmarking ("sort", BigInt, false)...
    done (took 0.217413326 seconds)
    (192/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093012628 seconds)
    (193/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080988851 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.081089507 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114635084 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088554171 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104546933 seconds)
    (198/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070040324 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089838931 seconds)
    (200/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091104239 seconds)
    (201/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08512422 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102103257 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072875007 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080589997 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101316451 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071435986 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103027736 seconds)
    (208/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.137324082 seconds)
    (209/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078935556 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.102647534 seconds)
    (211/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0779476 seconds)
    (212/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108463867 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.084381609 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081729333 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162689267 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186067175 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072183716 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173329541 seconds)
    (219/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069595643 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092212685 seconds)
    (221/286) benchmarking ("sort", Int8, true)...
    done (took 0.199066369 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104599057 seconds)
    (223/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.126256301 seconds)
    (224/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12059142 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13000949 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10769199 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07123517 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.094370738 seconds)
    (229/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069712098 seconds)
    (230/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.101955345 seconds)
    (231/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090897549 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121200021 seconds)
    (233/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069064111 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.10662385 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103065735 seconds)
    (236/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069853885 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103008561 seconds)
    (238/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086035824 seconds)
    (239/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081527432 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174799297 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119408083 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087827371 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103579131 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085973993 seconds)
    (245/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.106850946 seconds)
    (246/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.094098672 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069337133 seconds)
    (248/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.093458086 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081111655 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.08925348 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13024962 seconds)
    (252/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070332605 seconds)
    (253/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099913958 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.082191126 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070847771 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.102998549 seconds)
    (257/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070738371 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102990934 seconds)
    (259/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079031983 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069214723 seconds)
    (261/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091687012 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084903605 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.114378586 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.080213536 seconds)
    (265/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.07758157 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.101159695 seconds)
    (267/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.080611809 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069000453 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172707805 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.111442008 seconds)
    (271/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070435216 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087940493 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104143951 seconds)
    (274/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072765864 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078985752 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103060083 seconds)
    (277/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.082964946 seconds)
    (278/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.09112028 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081459903 seconds)
    (280/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069638981 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.101943641 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081838874 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082265317 seconds)
    (284/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091536834 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07061808 seconds)
    (286/286) benchmarking ("sort", Float32, true)...
    done (took 0.230622815 seconds)
  done (took 34.698224169 seconds)
done (took 35.588721118 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096882375 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144342343 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09157662 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.131450398 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.093739565 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117744381 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090171605 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093216416 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.116549019 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095808955 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.115949785 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071544018 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114384958 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092909174 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.114477275 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11251352 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116951899 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088851378 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.107083865 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080393141 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084689548 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.103811986 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083419536 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093217759 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.092807126 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.088823917 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.109581611 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092498649 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.103611719 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081341234 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079838924 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.111493851 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.080736412 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116769446 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088348151 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.106918252 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093199009 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090387421 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.105539566 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081570011 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.113763425 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081646449 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.109979577 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089343388 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082315349 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.102562547 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085291354 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.117675891 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11359374 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10875918 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090525008 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091133512 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.114059006 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088023466 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.102711597 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085364026 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.102735805 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113396192 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.107297159 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086997914 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089181308 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.111497831 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.08058129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.107064263 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085392511 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113938897 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092640312 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080162578 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113853741 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086556069 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.103625107 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085365969 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.079910932 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.103904129 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091011052 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.114357242 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080768861 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082184909 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11100196 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087021277 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103004455 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084713381 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105336006 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.082961803 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084204974 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094180778 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080534272 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087699961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.103294653 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.084884768 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.110222949 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089244035 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.104663009 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092471181 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08119745 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.103102068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081897921 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103657744 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083259713 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080256757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.103789798 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084582865 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.112206708 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083483436 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082844592 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115512189 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081792904 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.109959737 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080698638 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.081413596 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.119799712 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092012219 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.103759037 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087462968 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.079252668 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.105815778 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081152725 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103852876 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081271524 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081167132 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.105995092 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082032953 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106491101 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.084053149 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094671811 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.104123122 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080653367 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106165572 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081860011 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086005748 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10450732 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081988402 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.105726841 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079821694 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084165943 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.104820662 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083724955 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106932076 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085499537 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082268181 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.108328924 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086315774 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.105754719 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082160779 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079823542 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098458058 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087390672 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106271461 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.082907636 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081166339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106161474 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08239521 seconds)
done (took 15.4765072 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084519152 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178314595 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.139177002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115227518 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.124648962 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082235254 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115001351 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113668378 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.106900066 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13600136 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.104648699 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.12331483 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120947476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.102664758 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082290259 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084962573 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.105977936 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097242296 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144383579 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124639733 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116399873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102866277 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111461463 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.128726288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090538735 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.122670585 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083925602 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.108568078 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086419391 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130443348 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102335775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.1078977 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082260476 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125826257 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099978726 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089319988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104611988 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089200974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104709386 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082102447 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.126628028 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104124931 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110299353 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088448051 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.107369033 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08460457 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.082827856 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113479303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091865897 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108581542 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096477412 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133098034 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.107425131 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092252796 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080006011 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115534423 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.090899715 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107617796 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082809356 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106811731 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082265938 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.101458138 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12076099 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129165655 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086148486 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.114291382 seconds)
  done (took 7.960774335 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102291819 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133164838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100766706 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122093906 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082178792 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08158478 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.105298192 seconds)
  done (took 1.675009336 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084191393 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108165763 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130920507 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108152858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.128298296 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131878917 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087744652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082239044 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.125574183 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084145832 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130232332 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122972337 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.107233781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090926459 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.133328124 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083706587 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133746556 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082878754 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.10819021 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109446661 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108604216 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102066265 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110796906 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083158892 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10041156 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106700378 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154599357 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088270758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081002608 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.10967345 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081568615 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144734749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100542878 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114751322 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083248632 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124978802 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102108335 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10359592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099645715 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.111177187 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101079588 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083405142 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.107953806 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081334203 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.110512487 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096836103 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086204209 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107436177 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085825901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129671679 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084293047 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123922318 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083677069 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086495772 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.108272738 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086463968 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.116113932 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08421655 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129578854 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081771696 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.126447519 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102804005 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.123525473 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102998997 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084474647 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.123817605 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101630588 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.10970211 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085135866 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.109533512 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103649326 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.080128387 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.109156556 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097583751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107846342 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109934211 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.132820042 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084977784 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117592118 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084183417 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.083353796 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107748089 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109435538 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11134476 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083315531 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110752157 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086903504 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107182158 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084576636 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087451995 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106633337 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085420585 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.112627428 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085592765 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088091505 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129851629 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.086270925 seconds)
  done (took 10.97891416 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086174135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085241992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109852483 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085007322 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107185983 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085361915 seconds)
  done (took 1.523248586 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112003563 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.108067351 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0971733 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.110783616 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.12407016 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129950421 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106800961 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115585177 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100189875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.118077214 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109076706 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.132164261 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112838551 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11203072 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10720491 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.111073602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107893683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112958664 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094577787 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112743686 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100149322 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.112520353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089599906 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.125906943 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093234179 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.111784263 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089280093 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11827088 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094760192 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11676328 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089333814 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117019415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089352312 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114723016 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108619858 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112226662 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08804692 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118873028 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08978127 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.092559108 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.133636268 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088586212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.118635217 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095055871 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.116688644 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112465321 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09583111 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.088913765 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130808223 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09415947 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118100821 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087170727 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1165663 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094900492 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113309463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092911133 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118259563 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108113164 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.112690991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089075557 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.109222495 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093286305 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117537404 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092993706 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116267842 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094536165 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112986335 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090201915 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112717122 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.088991346 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118847206 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08625261 seconds)
  done (took 8.632793269 seconds)
done (took 31.715932755 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669898032 seconds)
  done (took 1.628260704 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.787419836 seconds)
  done (took 1.747939773 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.614448402 seconds)
  done (took 16.602605071 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.450762664 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.538012909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.942292259 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157766884 seconds)
  done (took 3.042399749 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.919693701 seconds)
  done (took 1.89301773 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.277381945 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228310909 seconds)
  done (took 1.466972792 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.749779929 seconds)
  done (took 1.718468397 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.420588202 seconds)
  done (took 2.381813921 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319933914 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153565243 seconds)
  done (took 1.45403515 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.554783544 seconds)
  done (took 1.531991369 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.77431797 seconds)
  done (took 10.751542623 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235643292 seconds)
  done (took 1.220979476 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285036447 seconds)
  done (took 1.257660909 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.269434871 seconds)
  done (took 4.242954067 seconds)
done (took 51.90806711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096192683 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096450725 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119663571 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094011621 seconds)
  done (took 1.378974363 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102703448 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088890298 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121914035 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.088854005 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122856935 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089266711 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.116305934 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099661606 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11309582 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.090790654 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.113635753 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088838929 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.116082254 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091779623 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.1103472 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093513421 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121012197 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089917225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093219519 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.113802679 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087915044 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.11570457 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093691476 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.112295972 seconds)
  done (took 3.460325063 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099222594 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089807538 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114249018 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088260462 seconds)
  done (took 1.374049198 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099484701 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099787132 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.123636429 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09363028 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.124745347 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099475165 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11013098 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086783692 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.112584569 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094219841 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084393332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.130771243 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.124509545 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094070694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095194032 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107223223 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085451454 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.124882997 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094503183 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.119234112 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087906113 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.117030063 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085283585 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.100645968 seconds)
  done (took 3.483347739 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168664585 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120817992 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107321506 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.114077578 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.12940412 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.133882321 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082557344 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13354826 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08202845 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.122310212 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086576778 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.152862737 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096080573 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.106874442 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.082424736 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.081502232 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119615539 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094789973 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.109557891 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096299493 seconds)
  done (took 3.210811054 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.094086596 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086487982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106853601 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085081887 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117182922 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090695395 seconds)
  done (took 1.56870448 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093058954 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083643357 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111595007 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085671952 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1127559 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083371965 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082011913 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108255414 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083935871 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106223006 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085451446 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082325464 seconds)
  done (took 2.104395949 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498934445 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085085079 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.108861986 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106390302 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093107608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082291669 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.123766073 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084680005 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13486342 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08287743 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.108821228 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086189111 seconds)
  done (took 2.587904669 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202765243 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093388378 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252872325 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338628552 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152989436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159321806 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266840705 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166176284 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177401745 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108623769 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210532115 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126482329 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147601694 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170261793 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109330732 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.149791517 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167444782 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19170637 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142556687 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19575936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156104744 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16165994 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172694609 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146820183 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106682553 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150909201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114377533 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098700948 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166279945 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16210122 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167197004 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142800951 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133656364 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192657941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19918194 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169883086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271943166 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127459302 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167359707 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135735394 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244330114 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109703792 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213373414 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123617916 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125152878 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175949012 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149863435 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.171741472 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100936427 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135702279 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175774679 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169689033 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172367369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131209612 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288839352 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14428798 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114635912 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173626098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177566179 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182479458 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160176839 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.114186373 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177511515 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173110474 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172100774 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113155059 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159585643 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119765284 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166605617 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187408357 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170067513 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157126534 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.17666186 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129550796 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156156048 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163484414 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120548133 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171533765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155680533 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115152453 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118569622 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131873216 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09645794 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187955138 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117851313 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195802794 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104208282 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167018948 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19456673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15195073 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155438422 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15723386 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158810544 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115569063 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111422137 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139915994 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119835119 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149860138 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126669823 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124658359 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137330403 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121561018 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11957456 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.11736916 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15172326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096498287 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158945203 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157499643 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094370946 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159243343 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144089712 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.118095768 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161214893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176603297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127797512 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126255881 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185678695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125462189 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.128470294 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168761268 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178709959 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150212007 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106568227 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159724815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187736677 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137023418 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181047738 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135354408 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103357728 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135245186 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15262971 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150373998 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126385271 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123918995 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146048216 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183001912 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092792268 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130927675 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169275798 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09579998 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123687872 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109195761 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128963277 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.129809603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110168585 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129854813 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148058765 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126810423 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146890083 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148230025 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135760648 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182008129 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100291268 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.144806401 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142250602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088384182 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.167925084 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175623768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124204234 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189415722 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158015166 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186533941 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15535953 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125214746 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144229767 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123679334 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087917805 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156602761 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154896622 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156795968 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.173415275 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183533115 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156395045 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146470996 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141709168 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156192849 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130697154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14913501 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.131781316 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15482592 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125797732 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.116856984 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091823046 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122089 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135125652 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09941695 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127261155 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173783124 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156094629 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178354168 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154026995 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109112072 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174261319 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120626913 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157832596 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164592835 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106468448 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.175735562 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172965008 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15980735 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137553534 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166072612 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.087607185 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117859585 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101180533 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156488046 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126745939 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102513287 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137293303 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174841935 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164848956 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142748166 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19129232 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157402163 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183618 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.088469815 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162305208 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160209922 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150485987 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.145731157 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126617562 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.118703714 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169829205 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136722595 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180931619 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154178664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161076022 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186197961 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.144978783 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098997158 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144035126 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158096768 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134563829 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131890606 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139596797 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13035651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117717841 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.122031865 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119719684 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165065294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111915413 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167850115 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141584502 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161598679 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093803032 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136205439 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154532504 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139587597 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083156704 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158759987 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176106248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137550732 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150172705 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163534225 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098917617 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.301080024 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182805463 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175052636 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131486371 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135814438 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129448444 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153487545 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154897651 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172613103 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140962364 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171163729 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12526849 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.129814042 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103410695 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141291414 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144762423 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107820196 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.12795903 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145650114 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104190273 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167271501 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135903718 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152012769 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157590342 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117381387 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139516256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13620852 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191802769 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124304583 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169741228 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.144630098 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.155788827 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189724812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091889029 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123591846 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.121285237 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14481216 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127447131 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152717261 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.175920778 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187375805 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152363724 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159255261 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105851638 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.113871393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15235245 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115337174 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21527281 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1121458 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.12907508 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177110992 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138804729 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098046667 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157889099 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275332549 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140757979 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16649507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082196387 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268941535 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120602869 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100946942 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154415571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163855563 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103713437 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.168132109 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157513012 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110933214 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154144799 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132287488 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179675744 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19703649 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161485092 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164831259 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.126877406 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125170011 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153883969 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168214476 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138718289 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.103752777 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156267585 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175543389 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179133327 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127712893 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15388764 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126788325 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1522201 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161077373 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128654832 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189839392 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125274055 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129584144 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133825462 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118273887 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124777438 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202029108 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104749215 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163841159 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152026833 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099703369 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121618668 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144734035 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1504211 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109278144 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.120569455 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165437493 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0917044 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156600485 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172605621 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097517358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1481939 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138655103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103157641 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138054479 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138273802 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103241851 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.156036856 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175025691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096505762 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167214218 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166153546 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155721103 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152014672 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13829678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635223797 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122776039 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173060067 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112931913 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175734832 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142808223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159110791 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152740391 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11549283 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159805601 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143295853 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223957729 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157676536 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150374491 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099575064 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139125909 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109482508 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125492679 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145209244 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154096157 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110247109 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130567944 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148441696 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111326633 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.127837489 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105810949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175778814 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141073049 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167622422 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17282811 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105325014 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158152742 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161372944 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125167085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154131625 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1659463 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109483785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143705921 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.125076324 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101514978 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173579724 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117778686 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126669552 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154071 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154080279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155111088 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.100627791 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152563699 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13733311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155296755 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097778812 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145717837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151582427 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098292305 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122075927 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147767124 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119949865 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.143242489 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119959089 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.131698082 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175307951 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09066244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128594284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272725395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152805581 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183894563 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109422977 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130160409 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136986237 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113568776 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146731977 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15426465 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.09629941 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127521744 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097222817 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158914589 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138422334 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123636252 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175291066 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149990485 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190305859 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131216651 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.271214625 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106534877 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149687533 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090299887 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124025269 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135849938 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102162911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137323258 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181809491 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174526671 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.139047307 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102462539 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120598669 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092791176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098987848 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154924687 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146391019 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152298506 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135304387 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083479073 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136965033 seconds)
  done (took 71.60494371 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141559598 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.126107232 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.140945516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.194117942 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160542669 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245918094 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202361096 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.229956164 seconds)
  done (took 2.507802507 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.087552516 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.135706425 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.121780951 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.128765638 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.108855286 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.08685327 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.315709135 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.127430624 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.084969654 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.138706009 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.126219199 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.110825682 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.504790164 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084375196 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11333886 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105305615 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.085590152 seconds)
  done (took 3.529274657 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.018988455 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.445456049 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.62104856 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.181546902 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167734136 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.089769972 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.652233785 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090053414 seconds)
  done (took 11.341337691 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.122818207 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112014252 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.156031475 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155980759 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115761793 seconds)
  done (took 1.745780309 seconds)
done (took 110.872850791 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09740096 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.093727528 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.117808285 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095132348 seconds)
  done (took 1.469548325 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.103254494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07202838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102894201 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076101183 seconds)
  done (took 1.431157113 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18472677 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.1611808 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395965314 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073369787 seconds)
  done (took 1.571168284 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110878124 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12447857 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099099456 seconds)
  done (took 1.419148421 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.102638308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095960189 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.122572716 seconds)
  done (took 1.398678565 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105099789 seconds)
  done (took 1.179156441 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106926763 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.131935133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106775473 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.129661915 seconds)
  done (took 1.556019386 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097959608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094068685 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.132464534 seconds)
  done (took 1.401819611 seconds)
done (took 12.850459736 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103123663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.410660485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385046326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129636009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690453794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.401752897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.016924051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139050195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160592863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087316989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103557587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692969999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975385338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.360812286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962705647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.359692752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67038789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112824873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086684421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086079698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033130965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086024919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112883551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085952327 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.694394795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.390887148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11243978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333894538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085982082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120645144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372888756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113577704 seconds)
  done (took 16.548226573 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100001448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170082229 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09723065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114284718 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094618879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088278948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.116840018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087287389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174693216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112354049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104516577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085937092 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117574093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087161915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133429101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086333113 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113707259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086933427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087254789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113667529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105059037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11335089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086663222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113165634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087086581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.125794573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087782179 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086206737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113339856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094968234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115775188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088212758 seconds)
  done (took 4.471230512 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1437418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179142223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097578906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147681915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164331973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088702484 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.191270349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139419108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150670708 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113829241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102889343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114762794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119853155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114681076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.105940644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113654374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.087662747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113087121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087131882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087165543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133185187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087105987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11377561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086384447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113294918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101134851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113438851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087264433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086566267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123992076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.095259567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11434348 seconds)
  done (took 4.810186218 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092506632 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091642285 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.128404507 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102721014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11476199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091237876 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.117057044 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089754889 seconds)
  done (took 1.914748384 seconds)
done (took 28.822027386 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111044603 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092509625 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127294297 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099453967 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.123818361 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099601063 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.112169088 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099149657 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098802936 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123041944 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102371354 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112368719 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088272693 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112350438 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100791223 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091316963 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.127368756 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09617105 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.128354805 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100225736 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.115900581 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098822027 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096496664 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.127712561 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10117085 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.129005434 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103109877 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120875333 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087435718 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115439291 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.099919042 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.134525025 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.089043965 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.129539867 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092441999 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.090254048 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115696278 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090627896 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.12727617 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098539332 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.119575368 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099092761 seconds)
  done (took 5.609204572 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.118197145 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.142106108 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108907251 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081980588 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115663611 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081568283 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139957379 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080047885 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109348042 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111210783 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.101862597 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07828673 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079398879 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100958603 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07819597 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076157787 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108032473 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077221131 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.103634216 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078787826 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080906362 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.100900569 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080752884 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080029067 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10320417 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082790888 seconds)
  done (took 3.597912185 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100224648 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101109408 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134911719 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.166349679 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12101325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.122536958 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096384275 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103929076 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.131046815 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085519142 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.117548054 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.113628283 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131546824 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.093428631 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.11706297 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10220152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099941435 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.115342622 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091256026 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134088404 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102055644 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.124289414 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10529932 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.124529054 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0867703 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088043757 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.118187599 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.09607297 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121143096 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095788769 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118868991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090497805 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.088051373 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.124829054 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.091583665 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.114588179 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105228358 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123478284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095428846 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.115010066 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096598722 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088865878 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137145232 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124663507 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114045118 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093153544 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11817833 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095431376 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114845921 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10488666 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122586811 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087955622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089327924 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115500897 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088733367 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129573041 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089087324 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.087827147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126153073 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09207685 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.126447511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.091708816 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1284574 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.088020862 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.092620053 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116063517 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087439252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.112177865 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109801996 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119375382 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.126565881 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115180016 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088664894 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.094821436 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122298158 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092509064 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115248207 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101760272 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123786856 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090784672 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125080164 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089550322 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.08921997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133895544 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.089098994 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.115910408 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088908312 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.092529878 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116807155 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.087784596 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128430156 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086245726 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117767901 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101513871 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.086630221 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116150811 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09260235 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.119372369 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086667967 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126833563 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093009672 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114209452 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097268984 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.086560292 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117632249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096102829 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.120122855 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087063165 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.118784768 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.093921048 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087504324 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119723249 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.08983051 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117146344 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.096788049 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.121165619 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090843988 seconds)
  done (took 13.611169436 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230860416 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.208941075 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180721647 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.257386539 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128874684 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114047082 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.204289238 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15222016 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088604634 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.153123117 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16332144 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.177379808 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.163724409 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.174512494 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.135512098 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11465467 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.105392234 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.160168159 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.206911511 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28101797 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107665972 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.123390309 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.125238059 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15245216 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.128383624 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.096273971 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.131964345 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.099066493 seconds)
  done (took 5.47417652 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110721452 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147907819 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09375451 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.136195508 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113942527 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11510738 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09195513 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11665538 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101173312 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.129553495 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087332198 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.093426426 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.122416719 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.096147325 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.117321214 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096305906 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.125067066 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.088743571 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.118287405 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092567088 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.097286432 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132833299 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.090853631 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117136296 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096721066 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115048729 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088574721 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137040536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.087123655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1378015 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.084797423 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.125313877 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101340532 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115900791 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087245733 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089311228 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.118954924 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089623292 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.11702189 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086130799 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.08592892 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.107901557 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086256072 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129848382 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094472212 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110601198 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094064391 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.120303372 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089288196 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.084864846 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119249018 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092095663 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118311023 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096431273 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.089364184 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118160459 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.091256526 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115304887 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094389782 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089012152 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115498353 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086277686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.11945691 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092107384 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.124711574 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.092507216 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.08542844 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.117755075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.091623836 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122862349 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090544232 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.093356346 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.11336644 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090171578 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.118427462 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.093404685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091012182 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.114490372 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087539647 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116732155 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077341884 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087696131 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.10407126 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090538529 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114188911 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087050503 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.089403212 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123605792 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.10298431 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.119765643 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.095825745 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117216454 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087085093 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119178978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086108077 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.090536911 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.131858813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135693836 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089007107 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085002206 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130873019 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090472347 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11483867 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078452393 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096767678 seconds)
  done (took 12.061762235 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131688111 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.146504524 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090125861 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13292262 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121427212 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.151313264 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.094126188 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124367958 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090291417 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.135220551 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088711086 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.096461312 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.11634856 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102024878 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15024207 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098177206 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11818203 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.102798795 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.120824585 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.133591261 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134874794 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107109323 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134650946 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088264853 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121643788 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.104345863 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.152873452 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102451691 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.129192379 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107443763 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.130096604 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125815819 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.135695651 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.092500315 seconds)
  done (took 5.138487403 seconds)
done (took 46.587648802 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.201053099 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410318328 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.177559886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.013572467 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.24343136 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.206044024 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19352706 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.180926625 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.709262648 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.180962192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450525291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.696561899 seconds)
done (took 59.774083157 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.185668199 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338842457 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48983299 seconds)
  done (took 3.953226983 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.715365411 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.058429908 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.43772713 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180211068 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.181810966 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487705107 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.706300463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.451912697 seconds)
  done (took 27.61249641 seconds)
done (took 41.57854687 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19458596 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.228316333 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21858859 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178855274 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.284526091 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.200286804 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.429757306 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.346644666 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.192157908 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17636477 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.179745663 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.178632794 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.188304446 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.363244061 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189200835 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.18119611 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.237575882 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.918276924 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.554349959 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.184856318 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202840545 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.191822339 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.188540491 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.184985089 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.238287089 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.179113065 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179936176 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.200172162 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.271386868 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.184837108 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.270024013 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.577132542 seconds)
  done (took 189.605297316 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18102236 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.180571722 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.267566695 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.215739991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.647122553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383502368 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333114384 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.737255073 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.197834474 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.20924195 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.41106772 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.183608066 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.480186162 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.149303194 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211179684 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.249558395 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.518986121 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.481790488 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213717971 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.316868162 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.190930285 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.507622133 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.518578902 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.373040056 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.230490593 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.28492451 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.201511253 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.188493348 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.37714165 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.459231914 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.191887888 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.215628603 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.730102465 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.03615437 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.208672721 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.221392404 seconds)
  done (took 149.616100584 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182411627 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1838205 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183894691 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.213218111 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184169437 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.684130374 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.686295468 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.741896631 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.660019543 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.379235043 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.39067518 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.180878799 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276573178 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.196765395 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.185558689 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.200505806 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.213421994 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182292663 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18572264 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.692118472 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.198334093 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.325855053 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.347890458 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192793505 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213739212 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.581822928 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182037701 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213201924 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.506397582 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221675356 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181525432 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.513129115 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.207814164 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293469321 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.184369643 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215807428 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.18758259 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.462584137 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182005463 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185656184 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.186932964 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812366548 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18774748 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.693919886 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185598244 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.095517024 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.182983945 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187504635 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.38216574 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.796724924 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.187806759 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.186168561 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189666321 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186388998 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187532349 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.215780944 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.578419016 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.284868069 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188565773 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19156015 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2157039 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.187455574 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.312861558 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187839247 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.642070248 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.244373167 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.405134644 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.69529434 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187920596 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283342806 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302889602 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.184462812 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189516915 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190251798 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187819521 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189634605 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295990105 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186268615 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.576911325 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.349598014 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199193406 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.388496325 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283622892 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.187249826 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541178715 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.191289548 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189199041 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891996792 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.187744401 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190059031 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282140787 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185673498 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.189305683 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190567141 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.57284159 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.694666411 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.401985751 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191514644 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.724127358 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.189535285 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.586219643 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.695331919 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188638284 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.789748977 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.187749556 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298935567 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.352727272 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.199259833 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189606822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.3954187 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19117631 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.249474004 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189774153 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.582553364 seconds)
  done (took 362.611918735 seconds)
done (took 702.947205538 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.800947982 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.790100041 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.896297163 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.781793852 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.749084354 seconds)
  done (took 10.13711573 seconds)
done (took 11.254137523 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367740361 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.364119239 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244224897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.368344155 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218240386 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.384066467 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.34199946 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.211399405 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.287036576 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.266167785 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.286518897 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240666483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224678314 seconds)
  done (took 17.923926654 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520692723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510319599 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257358243 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.518654121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231457622 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518743328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41821223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403590549 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389423397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207872629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20800457 seconds)
  done (took 16.303601782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516050952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510554368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261081063 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511689512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235072611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519235789 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405033102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410471486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395433362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210113169 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206979239 seconds)
  done (took 16.302767008 seconds)
done (took 51.651295827 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.201670721 seconds)
  done (took 2.320814924 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.234459432 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.397981322 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218442066 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.207319701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20326429 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206375332 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210478048 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206994575 seconds)
  done (took 11.007542521 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202634734 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203552977 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.200426929 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203247403 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202529304 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201344751 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.201744988 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201040174 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198209159 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201063921 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.199345924 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200003599 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20449775 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.201830832 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201493242 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.200493685 seconds)
  done (took 20.34542796 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.203243477 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198492186 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.199287021 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202321809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.202154886 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.201451968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202308236 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200156957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198252186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199878421 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201285547 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202208388 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.19845024 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.200307684 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.201008734 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200018947 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.200398224 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200432459 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204806331 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201457367 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.202927583 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201529119 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.201125478 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203182414 seconds)
  done (took 29.951038108 seconds)
done (took 64.748387581 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.781370983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.691816531 seconds)
  done (took 6.594587093 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.261105534 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.264297402 seconds)
  done (took 3.648786467 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204434743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202687449 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.202388186 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204478184 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20418517 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.20434275 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203533578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.203878521 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204757839 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.20283836 seconds)
  done (took 13.160500077 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.203391537 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203262991 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.198483208 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203874374 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.202804696 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.201194178 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.204977327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204654367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203954692 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201943105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205626689 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201836747 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.204319754 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201277895 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.203276366 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.20345296 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203126936 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202587927 seconds)
  done (took 22.778318022 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218165815 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225118315 seconds)
  done (took 3.568883594 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.331576319 seconds)
    (2/7) benchmarking "second"...
    done (took 1.243832342 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31244035 seconds)
    (4/7) benchmarking "year"...
    done (took 1.301232315 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.245162794 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224271981 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.244934169 seconds)
  done (took 10.028326356 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208059058 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397082425 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.50340481 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.783497015 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.206792649 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209128004 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.077809719 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209569921 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21348007 seconds)
  done (took 13.933401329 seconds)
done (took 74.836303276 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.219284123 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.198810981 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.387105109 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215996628 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216680218 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.542427234 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.255012832 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337815881 seconds)
done (took 37.500956341 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.214229225 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.195590894 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.929082713 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.212269298 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.213731257 seconds)
  done (took 18.675390174 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.176156736 seconds)
    (2/2) benchmarking "read"...
    done (took 1.532132995 seconds)
  done (took 4.83286965 seconds)
done (took 30.850034807 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207590468 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206321678 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.204336702 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.207343027 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.205721735 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.205257818 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205883043 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207319547 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.207924239 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.208767523 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.20768999 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207158665 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206212746 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205303052 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206282819 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205103955 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20428572 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20637991 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208847294 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.205703599 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207512997 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207955382 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206377761 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207361055 seconds)
  done (took 30.085468743 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210312755 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208626728 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.208905112 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207544688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206750454 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.210221302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209268454 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206943552 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208840731 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208577881 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207722889 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206473819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210230455 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207390586 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208666947 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205780004 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209421629 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206636099 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209776966 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209786067 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209920147 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208431387 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.209135746 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210126789 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207263295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207729385 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.209292616 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.210711241 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209298344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.207394497 seconds)
  done (took 37.385582049 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213712783 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216218444 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21140979 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211599604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.211962226 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214353304 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213218317 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.212471157 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209943355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.21154096 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.211127789 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210661244 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210939475 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210511505 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212313449 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.212838199 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.211196264 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210422353 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.210489145 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210762946 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21092685 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210365974 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212545054 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212432356 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213034672 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.211434259 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210289376 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213016262 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211220792 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214094612 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210624606 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212284062 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.213122808 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.213494872 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.209528442 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212150233 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.215076008 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.2196024 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21373208 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213156248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212622405 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212577268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.212261726 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212986672 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.214756108 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214228473 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214303874 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216177202 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.213289799 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.211865623 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.215548672 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213620397 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217023407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.214712375 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.214546128 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214843532 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214641955 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213077902 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21323937 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212712057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215073279 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215072793 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218528539 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216902005 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215124459 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.213768844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215965834 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216533237 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216010488 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214524397 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214475147 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217068216 seconds)
  done (took 88.488926342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213951805 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215554964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.213265997 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214660626 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215249918 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215600967 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.213892938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216481196 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213085524 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214908179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217614652 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21577092 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214450476 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217938345 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215636513 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215290414 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219323468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214241846 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216719079 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219077238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216658464 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215628931 seconds)
  done (took 27.878918582 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217275062 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220596755 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215769793 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218772252 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215220459 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218099909 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21733703 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217607332 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218074563 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215452972 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217054735 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215730316 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216223319 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216726745 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214570139 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216142582 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218452682 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217051014 seconds)
  done (took 23.041885797 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215565894 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.216502154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216911562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217009469 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216967941 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216451178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216589742 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218295976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218280128 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217280208 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21884417 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218583597 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218677398 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217149254 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219454274 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216091824 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220232614 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217962529 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219191418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217029008 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217365736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218742899 seconds)
  done (took 27.924671194 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219697031 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220331155 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215672033 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217712687 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217967892 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218748873 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220911029 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217196801 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.648139107 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219927222 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216166441 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220621437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219452104 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219782536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215878394 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217880993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220871578 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219438468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221769585 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219360229 seconds)
  done (took 25.94604806 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222520663 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220944514 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21980166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220264264 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220252335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222353928 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2226981 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.220914618 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223378179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223521765 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.221834588 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221914754 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220971523 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220423084 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221995084 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222502274 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222259538 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223245881 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22094638 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223105127 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22181659 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219879839 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222815271 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224723783 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223586356 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221365178 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22286207 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223280061 seconds)
  done (took 35.357517601 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222748121 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223711736 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220939996 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218801416 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220581909 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221398982 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22019909 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220483581 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223979477 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219326639 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223209718 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224086439 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223807257 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221109135 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222069461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223415267 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221986032 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221396807 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221451672 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220020993 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222911416 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223790951 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222925036 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220256958 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221510552 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223815856 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220653968 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221732451 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232909524 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223420851 seconds)
  done (took 37.808565428 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.268942357 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262663737 seconds)
  done (took 3.672031672 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222266493 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225412779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224240959 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22148325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223145328 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22468167 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224668475 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220661409 seconds)
  done (took 10.926722527 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225211018 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227310103 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225952514 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223204334 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226280094 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225731313 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23068615 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24026055 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225161382 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226533982 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233117298 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232914837 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22612079 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226510058 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223217369 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22805967 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227338141 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225158846 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226894686 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.227097526 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226837311 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226640083 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228261079 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222870782 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22713707 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235709186 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.228496819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227901464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225497929 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229297861 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227050527 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223431914 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226207088 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227567723 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227554835 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225186302 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236315504 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246241255 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233915897 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227291064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227596045 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225587534 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226072817 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228137582 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228333206 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229305634 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228659932 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225412968 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227319932 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230516685 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.23401829 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226991719 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225432011 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229997202 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227896721 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234398672 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24552095 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231119788 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237339099 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238968794 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239656306 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236020872 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230954821 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228663242 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238185912 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.253275836 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236088578 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242202386 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225956134 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.231176364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.234840195 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240654086 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249977704 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230681511 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229381715 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230505448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230812989 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230863659 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235739401 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249217677 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229450558 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230018076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240082983 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253453915 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.229259162 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231350886 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.231415659 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229392831 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231841525 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242300453 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247728968 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228756691 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.230903731 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.231118739 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.23561718 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231835109 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230296183 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230158581 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230924336 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.232260844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23028678 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235947129 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240644786 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231522378 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232123459 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.237226893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231021248 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231234013 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237802108 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233319788 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23264777 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232210799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236681044 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229336138 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234777306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239676895 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232848589 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.232537799 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.232944812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232204954 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23996429 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257056842 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232838967 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232511355 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235645859 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245323439 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231713437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.236323568 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.232094024 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230120997 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230857267 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.234119246 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235601602 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.235027196 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234213367 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233393688 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229934422 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233902283 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233538367 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234226146 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.234565584 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232903981 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.232836055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236040983 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232231645 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234470037 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240576094 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.232206462 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232614485 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.235275495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23349107 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236850199 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.235988048 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234153365 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234451794 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234022314 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.234703086 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235617499 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237162566 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.236849311 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238210241 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236145899 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240603613 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23433629 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238396583 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235701886 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233034768 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.236249263 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.237432163 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235499767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.236893706 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234339881 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237388909 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.245295058 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236622135 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237044057 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.238189678 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234437749 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236967205 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234198285 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239650726 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24581583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.23797069 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.242486408 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.23716101 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239400856 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.237815427 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238434324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.2370061 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237501414 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239150554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244448373 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248264843 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259262896 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237335672 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242411323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.238042785 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241204956 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.239065753 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.239852836 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239013779 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238195908 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238149622 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238644034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.238286868 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.237687383 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236284859 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238597366 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.240202848 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240396503 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238414851 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239749654 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241004142 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233449223 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238617878 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236678263 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237691898 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.237395885 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237564903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.236783486 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238861665 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239555302 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.245250384 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23548121 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24176947 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240151077 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239939718 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238406172 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241173485 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240779607 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240462478 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246844299 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.256562443 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.240476753 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247252127 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.256890135 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238566682 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244288586 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241803609 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23782135 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.241209038 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249962345 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239125314 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239965489 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242180213 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24079732 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241940593 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.247720443 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.239388539 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240627758 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241126669 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241718724 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238199182 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240916326 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240614468 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.240773242 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243586499 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24252951 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241420237 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243665176 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241605876 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24245248 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.242753742 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245694631 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251657441 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.247542447 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.239941517 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242417351 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243707436 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.24738183 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243034138 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.242830259 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240853887 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253782171 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.264435923 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24995334 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.243499763 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.242591734 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247292965 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24317197 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247557142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244895754 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244888961 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.24491442 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243466501 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241209734 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244085194 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242635105 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245044561 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244460307 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.249084941 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244279236 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243241481 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.245726364 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.244365759 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244577741 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.244918601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245466452 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.24600768 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24604008 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.242572593 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241357091 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251586364 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261637097 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245535692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243028265 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244527395 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244102942 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247704995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245513011 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248092494 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253930551 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248275549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.255934128 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245498134 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255347472 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.246584348 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249066147 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255662939 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244460247 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245026968 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245966106 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246871547 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254498214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.262527563 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247177094 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252495876 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246420153 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244728296 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245896791 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247314302 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248768636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245491414 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255392728 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266610398 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251446084 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249301267 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.245016919 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247296152 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248015479 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.247000379 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25127171 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247606603 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247150957 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245211643 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24714436 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247961548 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.247299685 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248921072 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245752487 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247285173 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2534543 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264201364 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253146412 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248289962 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254849736 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249011881 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253941566 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265292104 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248164535 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248134285 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248790446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.247893246 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248208123 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249952172 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249823006 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248918857 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.253043144 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248245048 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250172388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249490849 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248723557 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.249344556 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258542758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273333197 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251070824 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256432557 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246843501 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25019712 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254954819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249203267 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248285433 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251469116 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260712678 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257640117 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249185407 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.249637576 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248196316 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251738924 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251762833 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.251420659 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.248669479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25210276 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251090942 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250270119 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251550154 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.24947089 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250195283 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251002718 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.251536003 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.260268464 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.251668687 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25132641 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25213579 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.252823916 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.251091123 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251234791 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252037205 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251144916 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252649989 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250348107 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260842838 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259484567 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252671736 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.253010289 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251364712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.250559091 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.252348704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252529752 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250819112 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252993704 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250840571 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.25190985 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251033637 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.252404167 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.253546898 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.250607139 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250695892 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254508616 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258806473 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253374952 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.248422859 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.253765664 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254312806 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.25009721 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.250840551 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.259441117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255258058 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265940905 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262478067 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257440244 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251660338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254081284 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.263032918 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252972038 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253182169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.252996872 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254449234 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.255071236 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258287176 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255580818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25978742 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25251171 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252188238 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26141655 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274816294 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254150059 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254896289 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258181602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25304382 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252701442 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.256082745 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253951562 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258542826 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272649696 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255220442 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254983152 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.255336106 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.254938666 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26091032 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258165688 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.258058881 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.252671091 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255379768 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256726365 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257893964 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.253323864 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253453294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.256103885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260070347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263479409 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.254617712 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256973081 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256347327 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25576916 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25774693 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256891059 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25554949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252826481 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255768222 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256521849 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255663668 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258964333 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255049978 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257771679 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.259374506 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257202676 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258491416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268849158 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.266070631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253159275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257316219 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257824079 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259113137 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257960487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256369337 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258286807 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.258002287 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.259247181 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257981286 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25697013 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260816697 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272325136 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277260361 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260131252 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.258546915 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259443076 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.259196285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.255738469 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.257533872 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257712785 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259153395 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.266811866 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25888284 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264426558 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276464353 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.261220021 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264713391 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260859457 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267819245 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261660483 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25892064 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260788089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264222052 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278291064 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259757905 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268698824 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28953741 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.275520221 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260350868 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.261510358 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25806535 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.259486776 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262649579 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260602051 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.261907827 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261083516 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.260071019 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260607596 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265551 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.264148916 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.265043463 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.261099261 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257632406 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260840903 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259520277 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261982195 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261705451 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261439188 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263204612 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.2615474 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26169394 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274337889 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285226215 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.263380286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.26422887 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261628525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264495332 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.263821754 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274754357 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272020736 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263404982 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.262023097 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264265794 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263493507 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.259432939 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261491762 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264013148 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262751531 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261297121 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.274049811 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272136599 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268303801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.261102688 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26264577 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262796663 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265099041 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26123466 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262909641 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.263745588 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.265345462 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268719458 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.262372337 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263508307 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264659754 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271229093 seconds)
  done (took 744.113211236 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261642051 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261471905 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260918165 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261844428 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262764586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261514154 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263817377 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26048194 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261964065 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262679214 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261551446 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262254466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262871047 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262376804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261515723 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262402504 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261887745 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262700036 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262104986 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263182704 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263772682 seconds)
  done (took 27.683925242 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266237533 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262152088 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.262998559 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265586484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263304276 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266242947 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.265631531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265938498 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.265062788 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264309833 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.266711775 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266734707 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263259814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.262879676 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263331511 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26795192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.266538136 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.264360038 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.26547047 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263373319 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267373735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.264261984 seconds)
  done (took 29.008200128 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.265174544 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.267708629 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266334497 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.263203313 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267677683 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.264521557 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.266359159 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.268762783 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267899176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.265319675 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.265597578 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.266839723 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.2740449 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.273006898 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26832571 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267179061 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.413250842 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267477858 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26856003 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267160563 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.265017934 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.273312469 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.266255914 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.263831251 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.266543394 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26808161 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267752491 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268190314 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268918028 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268364628 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.274853501 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269933259 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265282236 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269751904 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.266168471 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270061886 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.271784345 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.26762399 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.265408257 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.267547473 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.27949821 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291494523 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267833629 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275440118 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.269948422 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.270189821 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273057149 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279294354 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266803144 seconds)
  done (took 63.514547258 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.272344587 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.270331507 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.269148769 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270293389 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.27380654 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.271064582 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.272141279 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.271158678 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.269009373 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.26710179 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273259078 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.269149378 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.268995708 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271852738 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.271317461 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269280314 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268947228 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269064113 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270529843 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.269250384 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270365864 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273099246 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.272681636 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270703225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271969106 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270854069 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270516326 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272710417 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271123256 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271263041 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272499952 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271393088 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.271600471 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.270577524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273563161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.272988236 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273131813 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.270835556 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27088235 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.272333551 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274620132 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274081815 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.273097623 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274475223 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.270956423 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.270504008 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.270727924 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.27149488 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27171695 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275883598 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27469061 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272275438 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274325066 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.27357977 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275266499 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275151742 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272853341 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272466219 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.273594081 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272853013 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270981458 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273890723 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273901594 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.275184523 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.275161755 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271475582 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.270142071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274424674 seconds)
  done (took 87.680583928 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274710703 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.272496802 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273895991 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273724756 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27561331 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275355776 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274626318 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275552785 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273276111 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274327773 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275327645 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274986834 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.272826722 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275078351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276582874 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276170254 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274630735 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276583804 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274146425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275597963 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.276744556 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277150695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275939553 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276927714 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274981755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27730159 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27629267 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.275571917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277183674 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276901216 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277943421 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277624847 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277734812 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278026513 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276910215 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277044004 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278921428 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278196622 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.2764262 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.27798578 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27805264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.2783629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277333768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.278209707 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277056063 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279065746 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276674256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278632967 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279364438 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277360521 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.27906156 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276824049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276429481 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277254388 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278451212 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278047672 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278905408 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278186475 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278149649 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278045443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277176047 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278869013 seconds)
  done (took 80.341673614 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279774645 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279263207 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277344999 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278091825 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.280412338 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277934686 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279305546 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.277950348 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28016177 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.278452489 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280339453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278727464 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281273061 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280452366 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277680108 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277082728 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278971335 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277692544 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281536589 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277720241 seconds)
  done (took 26.771948902 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275899291 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279894144 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278847168 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277102981 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278537628 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.277893568 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281098553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281616098 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279442166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278781096 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282969153 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280330282 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280339767 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278579587 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280109028 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27964906 seconds)
  done (took 21.663586122 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278880258 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281922808 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281849914 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279930818 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.280703391 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.279384752 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281488915 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278660666 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.279404263 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.280679183 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281802721 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282729618 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282435654 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.283416844 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280298134 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.282151008 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278697301 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280429204 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284439581 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281039182 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281071627 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279762176 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282481259 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.283642398 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.27922687 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.279805684 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.279469688 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279811613 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279387658 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282388105 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.282551348 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.281277669 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28097834 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281571671 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.283553506 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2804427 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282034617 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284931788 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.283903132 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281368371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283043819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281989266 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283919223 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282700768 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280067969 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286036368 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.2811854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281705798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.281282273 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281032336 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284654456 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282259172 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.283638111 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.285394811 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284227982 seconds)
  done (took 71.68625903 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285255545 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284207438 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281487135 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284508635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285051222 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282445055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284898319 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.285099159 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283038858 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2866271 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282901902 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286909764 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285437684 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28575549 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282996175 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.285098916 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283418906 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282245602 seconds)
  done (took 24.315432289 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.283596772 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284669395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.285951656 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284862997 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.282570384 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287846453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.283789727 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284518258 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287356665 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283216133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28432586 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284691484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286845603 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.286466197 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28313327 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284365262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288564314 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.286049293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.28433505 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285280399 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287745208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285600777 seconds)
  done (took 29.471073381 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.285139721 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.284963146 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285149806 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.301563615 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.303275104 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.308290071 seconds)
  done (took 8.967423959 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296104597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29027952 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284157173 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287784113 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286003645 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285402346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285010968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288241994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286546536 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285561296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285350504 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288743846 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290742066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286470736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289491575 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288698372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287026849 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287714765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286441998 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288358707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28722194 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287975137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28555864 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288042086 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286281404 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28871482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287233405 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286823676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287003657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288766103 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290893465 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28821162 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290459354 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287590513 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291628574 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291309847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288345313 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291090369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287471388 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287836603 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28949442 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290610652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291893793 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289323462 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288042316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287627052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285416996 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288814636 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287582655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290214912 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292183052 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286671204 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290071694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292973522 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29136529 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292091205 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285271331 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288766212 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291679568 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289214287 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289672181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293612237 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290032948 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28969153 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291445277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288586471 seconds)
  done (took 86.280067559 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289763789 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287630815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2893028 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290678499 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290191287 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290569805 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289246628 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288282578 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291297165 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290754726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292300246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289916266 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292449435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290423325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289645934 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28964236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292220203 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290023421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28896129 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293346318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289296772 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289737718 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291795605 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29115207 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291517669 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292673543 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292333573 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290116164 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290968549 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293581085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292522199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292611806 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290362599 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291314204 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29303069 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292082375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293358889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291727397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293998865 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295279717 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291504028 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294247841 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292043812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29126836 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2938521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293202224 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291929088 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291732751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294506764 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290407201 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293095082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29129098 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291868375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291897811 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292904009 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291073722 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298559132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292986303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293598001 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295478427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292555097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292621478 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294431704 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295107423 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29487058 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295372471 seconds)
  done (took 86.473869695 seconds)
done (took 1737.615674026 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.45641586 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.410170164 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293403126 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.292958714 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.288243511 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.305878668 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309533563 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290497046 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294491148 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.293745691 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.291693957 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.481140406 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298602468 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.287851816 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.291753745 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.387826379 seconds)
  done (took 42.47988464 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319303487 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.300276264 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.40927325 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312061804 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.322582479 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.475231358 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35018878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.297400376 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.463810504 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.33775113 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.8392432 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.320993928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.297304191 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.395668539 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311869514 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.4751869 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.541900722 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.810904397 seconds)
  done (took 29.785124157 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.731260391 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.302416445 seconds)
  done (took 9.238699555 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.318468389 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29691653 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299850345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295096548 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290806315 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.308002912 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.296986383 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.292558124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.816912609 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.422008252 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.299544326 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.310662346 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315900586 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.300087426 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298282276 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.334017297 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.439581312 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297753505 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29414438 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.304674652 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.298861641 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.383235585 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337339496 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298784177 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.418859458 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.818233975 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302081243 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304372262 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427478278 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.300056749 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.298576215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301423947 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30230389 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191880791 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.744222149 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304070772 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.315895413 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309172541 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299440222 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439786579 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302693127 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.306390154 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.292598247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.721916221 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452944211 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413438138 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.477812139 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304643735 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304136703 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362584794 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304166956 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.303071325 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343544052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.071442159 seconds)
  done (took 109.403621796 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327042347 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.684239197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462384796 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313776432 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942837379 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.865644733 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.308370396 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574296228 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356194381 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295023433 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585287956 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794037364 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310491583 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.354399291 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.486252967 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324934127 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296082166 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.999173621 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309625926 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.295319224 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791382697 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310141433 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29612175 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.452398675 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332119092 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751556288 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.640113813 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.684725514 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31115414 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.29320798 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.752044768 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318466457 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368889385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295191811 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.557483615 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652186777 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629879702 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.296522615 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304644424 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294262809 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.314810648 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743273709 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.636808681 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.299376932 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.297550958 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.748822751 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299822751 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.303630936 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301442586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495532496 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.919631693 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296353825 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.64358363 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.298922654 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.624416332 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.385767055 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.330863141 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779331115 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299661015 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.321561585 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34505243 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299196664 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301596414 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296956908 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302607982 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.640263755 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495241329 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.30506686 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644663945 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.749484172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310701845 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810157009 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.127798731 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318782231 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.347232491 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298623636 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.874366696 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78559117 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302481492 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292358506 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629945539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302168571 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.576000801 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.31545345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314940544 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80295067 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.307348954 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.354288532 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302784275 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.299631636 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.964966432 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303809864 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.564267733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.316165806 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.2979382 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300710861 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.311370554 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296580798 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.302070703 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.304750729 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80804875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.312622131 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.413985502 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31841775 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301115284 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302207429 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303120352 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300166597 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516060882 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.871566785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.304956066 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.301675677 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.295088067 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.305823302 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.460326449 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.301631026 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.598665693 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.303326426 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307579564 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.305640688 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.895010857 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363602031 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300021857 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306298345 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.215733758 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.505397847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318558079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.303533095 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.303832303 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.320685052 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.531648078 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321553748 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.357201072 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.300852563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990610882 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335453335 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.323608267 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.572807526 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.306901638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.159519155 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315194273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301380619 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589228422 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56773601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385724859 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302225752 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317435164 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977220944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.349828281 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436784929 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.32459839 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345646154 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503893127 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.424449857 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301359402 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.881227269 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.302192796 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510630575 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30447334 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600605431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784090728 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319755964 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30507015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000312156 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.028554515 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.978599987 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.306073829 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.576522383 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.273068423 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.781431141 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304239486 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303910387 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.773835707 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.306829377 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.302105529 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.303867569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.307712347 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444627474 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478367591 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.734962368 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309599139 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756716113 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329110611 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302048431 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.299385392 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303823717 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.654821508 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.337496736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.306218789 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35212348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.307354813 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309581669 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773508673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.133413199 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.30571579 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456824153 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923477801 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.320406895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.306763795 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.029815801 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.988665264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811913589 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.344147863 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.610854001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.315701225 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.343941503 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.915733346 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.325032913 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775095356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311167602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.308979842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896084417 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.321683507 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.378222775 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.304440556 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310212968 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834636308 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.322365721 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.310311135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.540511983 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327857014 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553316457 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.308582179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.326545215 seconds)
  done (took 1102.019306281 seconds)
done (took 1294.13305901 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.311111939 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.303547199 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.295532896 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.308224417 seconds)
  done (took 26.442636306 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327881765 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316775396 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.317534978 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.315000085 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325518522 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.315315474 seconds)
  done (took 9.143075763 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.357103005 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.305960524 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312484712 seconds)
  done (took 19.200948553 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.515967512 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.56349068 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.632867887 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.456321819 seconds)
  done (took 10.394425959 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318923585 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320081686 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317344774 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320274494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329894797 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330362308 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323003083 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.321534039 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330332608 seconds)
  done (took 13.13706778 seconds)
done (took 79.540675518 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.309945479 seconds)
    (2/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.357743887 seconds)
    (3/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.310758048 seconds)
    (4/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.262988798 seconds)
    (5/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.515450896 seconds)
    (6/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.354897979 seconds)
    (7/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.314308133 seconds)
    (8/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.307632257 seconds)
    (9/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.304204267 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.567724397 seconds)
    (11/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.683856863 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.244481192 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.355562031 seconds)
    (14/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.378287967 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340069992 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337221007 seconds)
    (17/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.2891726 seconds)
    (18/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.299307946 seconds)
    (19/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.406407649 seconds)
    (20/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.505644295 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.241380465 seconds)
    (22/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.423208227 seconds)
    (23/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.160915216 seconds)
    (24/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.35211044 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331354855 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.206548733 seconds)
    (27/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.417975635 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397122087 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.29803898 seconds)
    (30/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.295420485 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.334405608 seconds)
    (32/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.379746178 seconds)
    (33/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.399621842 seconds)
    (34/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301912786 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.31122222 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.316570261 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412608505 seconds)
    (38/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.062355402 seconds)
    (39/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.358701915 seconds)
    (40/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.426379935 seconds)
    (41/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.147949334 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.022226299 seconds)
    (43/286) benchmarking ("sort", Float64, true)...
    done (took 6.343247286 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.33505845 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.31560981 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.336090449 seconds)
    (47/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.325845967 seconds)
    (48/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.26936732 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231935778 seconds)
    (50/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.299099045 seconds)
    (51/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.117760734 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.425441652 seconds)
    (53/286) benchmarking ("sort", Float32, false)...
    done (took 5.3206782 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577821096 seconds)
    (55/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.316627979 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.334873866 seconds)
    (57/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.316158982 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.761991692 seconds)
    (59/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.337028833 seconds)
    (60/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.440572035 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.373146597 seconds)
    (62/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.120215353 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.902703298 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.571630506 seconds)
    (65/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.151971733 seconds)
    (66/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.360252708 seconds)
    (67/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.584458511 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.327289614 seconds)
    (69/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.833214911 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346735225 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.323997457 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.084272925 seconds)
    (73/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.416051792 seconds)
    (74/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.31664304 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.298883319 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.304322657 seconds)
    (77/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.302944416 seconds)
    (78/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.807250742 seconds)
    (79/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4163079 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.191003252 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.172481148 seconds)
    (82/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.313177276 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.492360499 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.169292235 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.124991038 seconds)
    (86/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.040175611 seconds)
    (87/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.430434302 seconds)
    (88/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.436239627 seconds)
    (89/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.345239869 seconds)
    (90/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.72096797 seconds)
    (91/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.318592759 seconds)
    (92/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.158368827 seconds)
    (93/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.348195739 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.305748729 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.362284801 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.954285629 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.299454892 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.550922682 seconds)
    (99/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.537958111 seconds)
    (100/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.305543344 seconds)
    (101/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.102259302 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077805364 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33544093 seconds)
    (104/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.130585607 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531747006 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.530793387 seconds)
    (107/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.722720025 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.479269542 seconds)
    (109/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.305821811 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.091133743 seconds)
    (111/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.425525894 seconds)
    (112/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405364743 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.404429738 seconds)
    (114/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.116998842 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.448751078 seconds)
    (116/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.657322719 seconds)
    (117/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455123299 seconds)
    (118/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.30620861 seconds)
    (119/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.413819308 seconds)
    (120/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.925219468 seconds)
    (121/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.36177358 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.836182081 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.346494436 seconds)
    (124/286) benchmarking ("sort", BigInt, true)...
    done (took 6.319905606 seconds)
    (125/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.331307209 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.590064891 seconds)
    (127/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.649799308 seconds)
    (128/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.519512035 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.081192763 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.580125906 seconds)
    (131/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.077103766 seconds)
    (132/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.17084393 seconds)
    (133/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.307624672 seconds)
    (134/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.320917336 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.730096703 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.615078071 seconds)
    (137/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.329652157 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429773671 seconds)
    (139/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.31636504 seconds)
    (140/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.404817992 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.337449326 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.112858166 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.349396105 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.737977459 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440589023 seconds)
    (146/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.67934824 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.000781291 seconds)
    (148/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.843708177 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.803791086 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.310476745 seconds)
    (151/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.447787828 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343898429 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.334146268 seconds)
    (154/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.308417945 seconds)
    (155/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.376070753 seconds)
    (156/286) benchmarking ("sort", Int8, false)...
    done (took 4.353928121 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.311661605 seconds)
    (158/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.506222364 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.309510936 seconds)
    (160/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.159175854 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352874702 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.309297446 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.883332153 seconds)
    (164/286) benchmarking ("sort", Float64, false)...
    done (took 5.580358032 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.326194041 seconds)
    (166/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345125097 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310276307 seconds)
    (168/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.372987922 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.714139572 seconds)
    (170/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411803727 seconds)
    (171/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.843000364 seconds)
    (172/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.340847601 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.349751567 seconds)
    (174/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.757264414 seconds)
    (175/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324795128 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.360564316 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.803947396 seconds)
    (178/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.336303986 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.307830654 seconds)
    (180/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.309677735 seconds)
    (181/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.913211662 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.699825197 seconds)
    (183/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.327138003 seconds)
    (184/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387002688 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.368301969 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392518336 seconds)
    (187/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.547109844 seconds)
    (188/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.426238823 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.730359113 seconds)
    (190/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.788200722 seconds)
    (191/286) benchmarking ("sort", BigInt, false)...
    done (took 6.319799627 seconds)
    (192/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.325279516 seconds)
    (193/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.349076189 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455830021 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.320921775 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52292949 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351032777 seconds)
    (198/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.89749347 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.681096079 seconds)
    (200/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.555580626 seconds)
    (201/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.363006111 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.943115757 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.312592914 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.254669812 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344786356 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.346200103 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.326464061 seconds)
    (208/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.32286555 seconds)
    (209/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.820732722 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.382422732 seconds)
    (211/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.799582353 seconds)
    (212/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.373135999 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391141403 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.426220582 seconds)
    (215/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.35366266 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.313786257 seconds)
    (217/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.79415661 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.386390561 seconds)
    (219/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587784091 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.167392542 seconds)
    (221/286) benchmarking ("sort", Int8, true)...
    done (took 6.33705527 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.755717385 seconds)
    (223/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.94823163 seconds)
    (224/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.569153351 seconds)
    (225/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.325386896 seconds)
    (226/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.397526396 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.314657778 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.329004884 seconds)
    (229/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.815450887 seconds)
    (230/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.410629394 seconds)
    (231/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.327781886 seconds)
    (232/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.324519895 seconds)
    (233/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.956809044 seconds)
    (234/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.688435853 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.54181257 seconds)
    (236/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.569903138 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.683219544 seconds)
    (238/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.936169173 seconds)
    (239/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.454138524 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.315773281 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.690368685 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355429198 seconds)
    (243/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.33092692 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348751341 seconds)
    (245/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.817249618 seconds)
    (246/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.40123285 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.952019513 seconds)
    (248/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.312496726 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.32627911 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.70625964 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.688547512 seconds)
    (252/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.314603449 seconds)
    (253/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.911304123 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.037071567 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.364040283 seconds)
    (256/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.452713996 seconds)
    (257/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31957627 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.832177898 seconds)
    (259/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.637940393 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.910951955 seconds)
    (261/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.375765783 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.40581761 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.412432518 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.410940502 seconds)
    (265/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.694220436 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.446994089 seconds)
    (267/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410123841 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.59624406 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.530915738 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.158713777 seconds)
    (271/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.307803888 seconds)
    (272/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358335791 seconds)
    (273/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.768389916 seconds)
    (274/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.316086137 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.371864101 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.214430416 seconds)
    (277/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389640325 seconds)
    (278/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.745050461 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.985579495 seconds)
    (280/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.084813882 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.371748534 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.734481338 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.395683214 seconds)
    (284/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.4802849 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.335535006 seconds)
    (286/286) benchmarking ("sort", Float32, true)...
    done (took 6.334681441 seconds)
  done (took 937.429369974 seconds)
done (took 938.657566642 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.360600297 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366643156 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341244706 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.362970485 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.458054921 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.518317219 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.353357983 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34654509 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.389932513 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391183313 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348548281 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.51242608 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.350557709 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348417159 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342945182 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366225638 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.403031194 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348364104 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.366851357 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350639658 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364698013 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.348736867 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.390142001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.518834864 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.345407878 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347656604 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.353697652 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.370724331 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46590343 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350613964 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.345848476 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361439869 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.402490475 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.338788444 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339878915 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.370253227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.362069394 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.35104019 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.347975091 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.383020492 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.807463314 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.349813374 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.351591516 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.342543809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.346335532 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.347748674 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.351789514 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349984292 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365481371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367275202 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.815860849 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.364288985 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353455853 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.34612175 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355341125 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349981121 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.347280413 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368905185 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.370000312 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368520883 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.39525619 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.350844348 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.346976414 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.365653755 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358566411 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.861518264 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.34069932 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.349224839 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.814002035 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.351467141 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.859634228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358492937 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346870827 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365135033 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.381063293 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.414000037 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34090377 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.345785354 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362216171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.34990747 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.352932818 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367496119 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349983741 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.350102189 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368882897 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.521952356 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359902168 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353572904 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.35654507 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372263202 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.362392373 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36512356 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350221178 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344823549 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355485875 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350627251 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.355395711 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355720311 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352017778 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356150339 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.81744974 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373551094 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344600393 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.346090384 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349698832 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.369113327 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.818132224 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.357061848 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370354132 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395194468 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.352254675 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.406995369 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360999411 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375384724 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358475027 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352441288 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342872624 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.41024925 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.829000996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372301142 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.352682218 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.354019123 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375881517 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.351370889 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345893537 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.424782714 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35299296 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371846624 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.47612442 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.35923102 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.389417164 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354717698 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354601738 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381026762 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374865079 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387662505 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353505955 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373884383 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.373219454 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347981482 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.365890273 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.362228361 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35350746 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357669014 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34622069 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.382866093 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371427341 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374385587 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373550576 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.479339714 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347780056 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.410564928 seconds)
done (took 229.001749015 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.40921542 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.340160619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.44087453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.350007555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.448387513 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.446307189 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.345758918 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346298827 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344133528 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.727814508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345681034 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34771472 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.33989779 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344608908 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431320063 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.35496177 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345772018 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.692290644 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.349378646 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417851617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.348068552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346025915 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349101682 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744999891 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.343555333 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.343475758 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419572613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.352578798 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.700671664 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.342518492 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342453034 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.701920514 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.440277203 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376563307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.349775142 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.356466858 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.450859072 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375631805 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433895181 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430360063 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443488021 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.380835586 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.347933107 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.342982342 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353364278 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351722163 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.34902545 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377663872 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.347603408 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.3483241 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.695325119 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.360564684 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.347713591 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.350886052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349729882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380340374 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.350603088 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352085017 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.438548595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.352580292 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.413078135 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.740227615 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.732659268 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352151806 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352998762 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349814949 seconds)
  done (took 149.536497221 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417469775 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422844874 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.462528821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.351761618 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.402284798 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470754573 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.351183852 seconds)
  done (took 11.136860492 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355478604 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351923591 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401541622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400839588 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353980785 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.531743109 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354982284 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.362773208 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351169494 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.405450936 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.354612097 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351722004 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360216714 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352443294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401283742 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.365043881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467962344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355414548 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355411864 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513932024 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35390585 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.360086401 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.404465742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.365283942 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355682214 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360157703 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.189349728 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355971736 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353782333 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356269199 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353471701 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.433187869 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355451235 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.351496783 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352087636 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467822929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.354049614 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351403333 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.356665733 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350995987 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.357357678 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35653963 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356465696 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.353479716 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.355314499 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37993195 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.355635769 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355512428 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355754179 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355666565 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.405228182 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35575276 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.354927301 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353811117 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406832469 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364349201 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354616971 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353160324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356098866 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355089136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519013513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402472459 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357495034 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.403591348 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357889008 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356354117 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.357310517 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358030795 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40995729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355038321 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401827343 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353847216 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.531969179 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.377509345 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357731782 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359788365 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361474314 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358212625 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.352853697 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361487487 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352327233 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.358952933 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362338524 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35608905 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352750009 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526536183 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464115255 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35323984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.37089025 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363264995 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356142695 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.411700801 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.361155473 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.356448455 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411376988 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472133997 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.411050233 seconds)
  done (took 155.766505973 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361965973 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367937644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3621598 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38114676 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356445527 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358322599 seconds)
  done (took 9.447391797 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359827054 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361914986 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.360197281 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.357969934 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.358740035 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.360010651 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.360558127 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359432325 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363167639 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.360448947 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.361363097 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.361720693 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.36353168 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358940273 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360607757 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.359480628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358968079 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35655613 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36025029 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360130859 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.45450811 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35983335 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361447096 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.35972858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366298284 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360715061 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368280496 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.361216339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.362093852 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369438284 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.363131585 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362238696 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.362911934 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367684384 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366704696 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360886054 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367174458 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366883162 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3596094 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362198502 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.364910191 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363858783 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362908288 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.365468009 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364195541 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.368832961 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369973253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36881067 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.363323646 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.365554475 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367298857 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362808181 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.36577541 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368695978 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36503676 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380744892 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.36963272 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.365172713 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.364487436 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.364127521 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366527598 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363219418 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365296975 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.36732754 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.372900569 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.369715675 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364486072 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368036381 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363613358 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366129678 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36904197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.360532114 seconds)
  done (took 100.563471122 seconds)
done (took 427.706857713 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.807490786 seconds)
  done (took 8.07508916 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.440270668 seconds)
  done (took 7.711403822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.3837062 seconds)
  done (took 22.656132899 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.384007397 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.418529148 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.374855678 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.359633171 seconds)
  done (took 26.803844955 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.894961604 seconds)
  done (took 8.162670836 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.358099308 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.351177596 seconds)
  done (took 13.979304211 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.407251501 seconds)
  done (took 7.673319333 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.431922026 seconds)
  done (took 7.706322839 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.363224933 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.376376237 seconds)
  done (took 14.021843888 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.34904153 seconds)
  done (took 7.618091584 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.290393605 seconds)
  done (took 12.561750303 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.36788865 seconds)
  done (took 7.638460893 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.357961529 seconds)
  done (took 7.626354208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.510149494 seconds)
  done (took 9.780195988 seconds)
done (took 163.283492005 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.35764547 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.353870021 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.353618564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.352201631 seconds)
  done (took 26.68537036 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.400839908 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400064186 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399987011 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409729763 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.404574827 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402688226 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390500833 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391642033 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410130094 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.404061957 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39936632 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402955991 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400962535 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.392270341 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.401298481 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.404078517 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.411644286 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401454461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392892764 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.400869976 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367740262 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411609221 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405763631 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.368105461 seconds)
  done (took 34.844124096 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888879493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436914181 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.522338033 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414818098 seconds)
  done (took 7.532209843 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417705439 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420378096 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.435541121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472261721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.501012594 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.431469736 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39482994 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386585489 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375776394 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.422377739 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494767668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.438099756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505833597 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.369195765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.551663622 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.36930099 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368780237 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418342395 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.472460718 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.497446818 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366242763 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420844297 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424118871 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.434617934 seconds)
  done (took 35.659443768 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.365064836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.38568779 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.369606321 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.365343015 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375116205 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.369609406 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368205194 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367251458 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.369079033 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.375017918 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.369204478 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.378194146 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366624637 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365283411 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373368997 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369621789 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37445354 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.369443324 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.369319924 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.374800274 seconds)
  done (took 28.694343704 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.35927661 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.223986251 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.714218741 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617000831 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.362686614 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362860765 seconds)
  done (took 27.913169743 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440870446 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.578168838 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370605632 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732008658 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.813712424 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.36910703 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.371974988 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.614875604 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928607966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.920250732 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421342736 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.439456724 seconds)
  done (took 20.277787138 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.371486086 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.365765375 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.371996247 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.381913976 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.425917579 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.37324246 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377907418 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.363102821 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.428270263 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428920491 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.373693256 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.428015424 seconds)
  done (took 37.965486243 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454523757 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413601497 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.328022441 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371730991 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085655368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572905248 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370952273 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118003512 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.371427342 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637767172 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379836797 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455687024 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622848549 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374516537 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367440845 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367626635 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59238969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849840846 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369345853 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52937782 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394198889 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368360685 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.587858555 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600083085 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579408402 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343649709 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627203511 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142402978 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657186495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381816736 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377468994 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369113928 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643372321 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036419169 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462770164 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581431492 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388091346 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912084905 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.374444298 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.518757882 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373469158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368152159 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376315304 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364960162 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300158577 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380106544 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123326318 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.372997504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079141359 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365363254 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633359172 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467476562 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.371008012 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.940277159 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375761787 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394264385 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.371613811 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465181329 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939705612 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.752976815 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383260545 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.302639878 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365861025 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506341491 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999035565 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.372823604 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369961997 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370728526 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301573647 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.494651784 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389126028 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516717596 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390082921 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018356359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076111066 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374615822 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321051894 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919113447 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384180009 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.305212063 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595878402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144117844 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307514165 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.325067481 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304352341 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065172521 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381570727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.782924914 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391824744 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122020749 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589677756 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390566588 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391046917 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595285869 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.255326299 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373656697 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.376251482 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50145356 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389310424 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134118132 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307822587 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.369028792 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624575363 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578626199 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369929803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393165847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875708251 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373443772 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.394694375 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3701458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608015942 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.960333018 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390738625 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.813843478 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391468369 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152106932 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1134613 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380574006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.377372993 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384837381 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656645902 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.15785896 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258410655 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441941555 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383701423 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374513543 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.568498159 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22841838 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257130471 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.584378275 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394611901 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387514032 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375482956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324787453 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.367100256 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38396797 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.153939031 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596397991 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373528007 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654240971 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309632997 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522420273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378457956 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59254115 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.613284806 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.383008484 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633938314 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374100957 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379835238 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389893626 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391240987 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473914756 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399109848 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383354805 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633585016 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.375933104 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.381120718 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.537022781 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156068319 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37918326 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.380074111 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377098023 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965174005 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355930205 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374951765 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267740068 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392810537 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44695027 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384213823 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598420906 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.658751155 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384343417 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383769718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.380916328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60224574 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384836266 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.519141875 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45588896 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.879527116 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979227533 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391724415 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.312740031 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.088436904 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.072741018 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378866868 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575203815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376877766 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595799043 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395323227 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384712077 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972189754 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378194605 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.522151733 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.385393222 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391759413 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.383360392 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380841917 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.653709455 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.791029366 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387520311 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393596047 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5246588 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.39594926 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317666416 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898470314 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389109379 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379908225 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.157742004 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415346285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.539640727 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237076381 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632684535 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385373054 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647181319 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.62377707 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412865337 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.379591001 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383523408 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389337249 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.389108818 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391488797 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.393905505 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.540297204 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.82046638 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941796181 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126497513 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91296816 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.74780898 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.391899692 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278092079 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140031467 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31652797 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041457605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628424332 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145274232 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327073072 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885519795 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.630930195 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169121637 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648658221 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615157231 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740203829 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.385877191 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651107629 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595921775 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417410371 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395479749 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312109287 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.664999785 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954450198 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380186019 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462865989 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14264014 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387761536 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162418242 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.460462921 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.11075058 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805120612 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930962315 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770236732 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382734517 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387628491 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295829499 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3822591 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910614701 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02397809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386666448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.888924849 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321522204 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606575705 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.397311512 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388465663 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.012013796 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.385431503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.640738365 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646812511 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320495284 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395521818 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931508754 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.239266176 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390955602 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384935007 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118582239 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392631564 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679197671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.38801482 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.669663027 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390756937 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317531262 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319368048 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.077111521 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389672028 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360042814 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86416921 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.391560286 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407243388 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387212704 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232931147 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640700306 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396097579 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97828377 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613699173 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394179131 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410374955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.390497597 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403175828 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.376082616 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275723718 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623783156 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494160248 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613919217 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.385177316 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.297642702 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424975436 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601861891 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268437837 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390848057 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641565005 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.099976025 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.392219792 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117695617 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413297484 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390902433 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40243006 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38491466 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408388028 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457445805 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607839049 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.400979404 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396253901 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808096985 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390278101 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407675408 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401292903 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48347342 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.870246951 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.680273954 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.163143554 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988525001 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146085721 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988947083 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660833864 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392877628 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388914176 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322995523 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531213064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914073634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662527005 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521196653 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385616576 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415591856 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391204998 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407723229 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603760894 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66418729 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.261693484 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406271839 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047314684 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.273754672 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402894958 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.602140052 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878756302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94488305 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.768446518 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398457194 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168151447 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663812951 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.482414327 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393432964 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977358396 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.408241885 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.143049404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39412588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391010708 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55724007 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659288458 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069630231 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.398298946 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.554186385 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.162800403 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.591351547 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646937138 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868184285 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615828461 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990572288 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107311674 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657883567 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465356017 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614307875 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.509870217 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536563664 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.403277777 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274716692 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389670571 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2373169 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.102816465 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403909013 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994808757 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659940001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.393874815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.392081375 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415811799 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402508491 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619367071 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146098387 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619499429 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401666771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400487422 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961124558 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995204431 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666312195 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333674246 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.388930145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643042124 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629721112 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417295025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.847611263 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.105720751 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956775676 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.360101152 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415013766 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40900877 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117938906 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000152597 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.69981132 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896357375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05373149 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409149479 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670108803 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.40171389 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395962566 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688817427 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401568129 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400197497 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622522518 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.990273952 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192026412 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.418317889 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.62121897 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.335267182 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.624251052 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409799072 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334222867 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400317091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.836235901 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412192809 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527000859 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401113665 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.407124247 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397748937 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.132229123 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671619273 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.39654195 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399935012 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.390474484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415665743 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497453579 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971369055 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402411071 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.068598482 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.751164558 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655405055 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404663481 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.385791566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.401870891 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395542016 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113519822 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360465912 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396041971 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943784497 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.403376049 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.410543276 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40664433 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.609598978 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611327928 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410328202 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624055117 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411039759 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413446565 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307358361 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165583724 seconds)
  done (took 1683.400758694 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.411952074 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.405257171 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.428816753 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.424203037 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441763821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.506240202 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.489520667 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510759622 seconds)
  done (took 52.925969185 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.409593371 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.560650585 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.432228626 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.406380249 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.409358358 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.397177136 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.875821646 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.41562983 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.405118054 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.406187661 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.405461512 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.398448524 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.051357059 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.408822216 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.400791128 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393563942 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.407676927 seconds)
  done (took 66.497105548 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.651076922 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.469278085 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.51897565 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.438542027 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.453689085 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.397297272 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.48617618 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.410241728 seconds)
  done (took 54.134842078 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.411076786 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.41037571 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414828052 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412629825 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.412369187 seconds)
  done (took 8.369284438 seconds)
done (took 2086.17414108 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.4056577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408041122 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405803007 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.406958519 seconds)
  done (took 6.932964129 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.387832233 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.078139327 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.390705329 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.401095883 seconds)
  done (took 18.565718628 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.42043997 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.422202617 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.131431802 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.054239638 seconds)
  done (took 5.496288091 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.148209169 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159833227 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.145677998 seconds)
  done (took 7.76534996 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.395149414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.401463466 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.399840515 seconds)
  done (took 20.504538828 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.717059535 seconds)
  done (took 3.025712362 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.547534948 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.598174782 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713773794 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.726475113 seconds)
  done (took 7.894971772 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.795060298 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79664498 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.590844532 seconds)
  done (took 6.492902938 seconds)
done (took 90.831474004 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.296501551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397364133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.609007888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.26630177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.626249858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605200803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.823831894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.230883686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.902953233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.765639873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.266001815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626647056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.552877282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400308839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.555587132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398701041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.72619185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.344591681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.985442353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.144830508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.82328814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.90266256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.0971043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.047578184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.701430816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.55657388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.486311879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.398262827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.160143136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.630318988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.55728053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.320101658 seconds)
  done (took 193.515672508 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399937589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41806441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.398180042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414427873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.397941001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420882056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420323998 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398918002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413096564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415060841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398581882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.397934486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415178571 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400262663 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413466858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398876729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.41021476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.402268059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.396716507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.397422105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.3969093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.39878592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410561848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412526799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416418275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399156855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.399343902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408412919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.398132922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399535598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.405983748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408624943 seconds)
  done (took 206.295044288 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.404112563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40345378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402323867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.401465747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39971899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419909775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401783148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.419021051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418494811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.404096726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.413936792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.402480559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.40290935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398742572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415130599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418861996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419385503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.415065613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410399922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404595312 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403707396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421090083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401534309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418129345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.421034125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40123428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.419337768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.402613129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399942901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.40268017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410246945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408158419 seconds)
  done (took 206.396362516 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.607709931 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.414195506 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.411198877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.347868391 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41413006 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.413831973 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.407599669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60269722 seconds)
  done (took 14.935173444 seconds)
done (took 622.454310819 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.825795091 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.524255694 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.622008235 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.433608941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.277572844 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.451542003 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.435332612 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.612332869 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.355040011 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.619839351 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.730582675 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.428380996 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.887560934 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431964202 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.696866452 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.534996323 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.310420971 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.414974863 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.76041321 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.004637433 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.71065493 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.948947834 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.619667143 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.35658713 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.864116973 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.94805295 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.167966947 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.287574617 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.428725867 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.764993434 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.147228735 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.470748413 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478714987 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.483019657 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.54093984 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.537943101 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.420106157 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.494914323 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.62430692 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.714074488 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.026409913 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.174087899 seconds)
  done (took 95.885227906 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.403294573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.40639362 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.407386054 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.407875632 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.41029776 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.404814781 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.411392108 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.409088371 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.405640351 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.408134331 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.406192053 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.406319716 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.403714944 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.406089465 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.404921947 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.4048839 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.401700957 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.406071549 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.40598352 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.405792166 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.406267178 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.405752796 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.406135951 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.405082554 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.40418624 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.407724346 seconds)
  done (took 37.881496127 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417522268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.671483691 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.842837242 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422765126 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.419571403 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.421980094 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.497096638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.419392974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422606311 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.421054767 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.592270792 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419985447 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.454555978 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.874479592 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.418269588 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.418956029 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.416814172 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.419231131 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.686074589 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423968534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.519619113 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420630105 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.502007611 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431353228 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.439215069 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419119572 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42291858 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.989793469 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.421337088 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.597454332 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.233074037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.499448299 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.937234777 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.858049654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.233754756 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.422413161 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.418858147 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.601310152 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.421855117 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420032711 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.501890499 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420441899 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.853816292 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.093014435 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439924549 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419019269 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.010993761 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.60156081 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.674614185 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431101195 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882483952 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.424410222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.422288181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.421148139 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.675450366 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429164682 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.425151795 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.999494597 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444234351 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.50264424 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423625697 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.421292048 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.693081058 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.418023865 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.683812854 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421410075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431088197 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.439522687 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.86020267 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.429261078 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114593244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.442571615 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.42247492 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.598215435 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.685594148 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045203123 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.422657159 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.699784022 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95448451 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.501035524 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.425552991 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.97853943 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.504001657 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.428074606 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.42620026 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423106583 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423210633 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475988477 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.504251223 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.048348757 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106105237 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.026893495 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.525105719 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431499353 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422701167 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.003957667 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.441813228 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.424857303 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.855690601 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122713405 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441701549 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433204841 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.115932433 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.445734818 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.509201104 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430738363 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.869454135 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.427144934 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.472780569 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.423419351 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432100082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446544049 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.509389773 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430570787 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.427330707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.089414876 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.622526454 seconds)
  done (took 187.319145675 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420847666 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.435234467 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.42131557 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.41581999 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418643726 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.424228539 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.417866357 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.419711953 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423459715 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.419356834 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418342453 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.420190958 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.421148211 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.420747112 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.426890855 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425382789 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.034706745 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.423405819 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.417172166 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.431235984 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.219231752 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.423378587 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.42073468 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.416162412 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.418912041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.418673301 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.423842804 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.416811603 seconds)
  done (took 154.544172823 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426221955 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.021821509 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.426577466 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.560925469 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.448771712 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.423719229 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.563249409 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488528668 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.429986579 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425830637 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423870388 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.749232737 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428897045 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97326925 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.627481709 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.565211962 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.957757777 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.441129641 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425337769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426152611 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.562717421 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.438694908 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73854895 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.004299359 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.4280464 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.009015175 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.416329433 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.43044143 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.426182162 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030251495 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.425021221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.752751214 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.505878387 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492861212 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.012314654 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.972512871 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.993996634 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.585786585 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428953695 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.428627783 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.429189026 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.418950831 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.036587426 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.435454491 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.432627598 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02660577 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447791746 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430679329 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.436966555 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.428174666 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.491020887 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.492623274 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.755760374 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036992782 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.509229623 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445328309 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.567946944 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.83050097 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.435155641 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.974307782 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419831838 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.039407071 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.448762608 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419633848 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.433061632 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434747634 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.588153287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.56709032 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.980805789 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445842733 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.977235561 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.601718554 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433251373 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.431203749 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.433657079 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.034244488 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.966629674 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.599829888 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.573277462 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.633803968 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.424896054 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.431002466 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.420599108 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.511591602 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433081136 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.040130522 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.980085693 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.443951953 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.43723946 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432625896 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.434920544 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.617819672 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.025269814 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.511586245 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.963534973 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.76262989 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.748581952 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432962407 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.494937355 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.44741216 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.752935267 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.430607398 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.493286942 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.901695808 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.748906977 seconds)
  done (took 170.496192181 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.684102113 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.687251607 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.528039122 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.589451048 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.038272885 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.006517635 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.73496869 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.571405819 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542453795 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.701028511 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.646099337 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527426192 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.654075301 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.513177191 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.176266161 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.510934672 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532260861 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.579574443 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.57661159 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.473609009 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.096214398 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.734338009 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.626464698 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.397139165 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.531527435 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.222254294 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.014781722 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.997533016 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.624525441 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.791253544 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.008008512 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.563824941 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.408402355 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.145324719 seconds)
  done (took 68.76869533 seconds)
done (took 716.214473953 seconds)
SAVING RESULT...
DONE!
