cset: moving following pidspec: 26042
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347568272 seconds)
loading group "string"... done (took 0.595373515 seconds)
loading group "linalg"... done (took 7.441049216 seconds)
loading group "parallel"... done (took 0.175236391 seconds)
loading group "find"... done (took 1.194510589 seconds)
loading group "tuple"... done (took 1.828953904 seconds)
loading group "dates"... done (took 1.248080606 seconds)
loading group "micro"... done (took 0.23282724 seconds)
loading group "io"... done (took 1.048957498 seconds)
loading group "scalar"... done (took 41.772545096 seconds)
loading group "sparse"... done (took 13.499279814 seconds)
loading group "broadcast"... done (took 1.02449804 seconds)
loading group "union"... done (took 14.194011151 seconds)
loading group "simd"... done (took 4.718057828 seconds)
loading group "random"... done (took 9.527003532 seconds)
loading group "problem"... done (took 2.002703122 seconds)
loading group "array"... done (took 22.615766311 seconds)
loading group "misc"... done (took 2.050821752 seconds)
loading group "sort"... done (took 3.440283084 seconds)
loading group "collection"... done (took 19.421593949 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.562458977 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145952422 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119513567 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144475228 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1928928 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13529373 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147248608 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086232269 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962966583 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164856776 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143930096 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521627954 seconds)
done (took 5.167535424 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.197878756 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089841614 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099943147 seconds)
  done (took 0.977452921 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068058888 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129946542 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082642997 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068226458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067592155 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083115507 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067277131 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066811094 seconds)
  done (took 1.360594505 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075289699 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069947629 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087373749 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068995744 seconds)
  done (took 1.095060016 seconds)
done (took 4.494713149 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.947411299 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.25852802 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193744603 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.470073219 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.155331889 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191302832 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678666127 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.367085816 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.218231224 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.105538283 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107735008 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396076333 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108071335 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685422556 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077040748 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110424754 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.173154821 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428860079 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083705707 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083341715 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105661571 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146035037 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103913239 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079536255 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.17334654 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070662229 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155198624 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096311935 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069762036 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250604142 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191011909 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694823461 seconds)
  done (took 10.811028767 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100096385 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123034434 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069894315 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142875653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122614167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072391025 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07273307 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085533364 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092975454 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164292725 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118944759 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12539827 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068159012 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071036275 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104519445 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231469722 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093449885 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103474048 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073777917 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0760842 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126878469 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100094127 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082912039 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097398995 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15349318 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199587863 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102506649 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116523204 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072797188 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102664523 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133346495 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.137864294 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068210974 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08656445 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161220547 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096814272 seconds)
  done (took 4.755518615 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.121626269 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177580075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093630501 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157273929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087570451 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131150637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067225567 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103138503 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257117677 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109005799 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49670141 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132090389 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089753099 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068676552 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089655721 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068895861 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.633554567 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147808335 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104900238 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104023743 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07548873 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089060433 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360211311 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069601933 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067407541 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086463042 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060427995 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150371349 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069288784 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.126815573 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.284067608 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110634301 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070578635 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12193708 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180253982 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097298891 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125918741 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084263367 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067855763 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175891129 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07418832 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08644855 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090133754 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122378661 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123930763 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084887916 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069524309 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185006168 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067763763 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103047727 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.969848155 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169769069 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079690232 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068315436 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300055314 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104230298 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068610044 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065222316 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283025833 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163430499 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068586095 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085942667 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071550541 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086543967 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37344355 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069410363 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065381506 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08305799 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078556573 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069159589 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088872483 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084596453 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.749773404 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080394339 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075135899 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105101381 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067905597 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087094763 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068750094 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066676783 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0874616 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087485763 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.228915132 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072471893 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068654088 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083797382 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066661865 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104637665 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099343204 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088268632 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067338081 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117088841 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071789393 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069453053 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123109547 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069153804 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106225804 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086987709 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115792022 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085504331 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.133314024 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070079665 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117454975 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074301463 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117444062 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103536278 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069957988 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158599132 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065695375 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084418603 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069072599 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083999155 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070248823 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069582462 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101829377 seconds)
  done (took 21.663341521 seconds)
done (took 39.141833655 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315701358 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09705543 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097304986 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077672403 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096937067 seconds)
  done (took 1.550364446 seconds)
done (took 2.380967639 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153260843 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103773034 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084598714 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099366221 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084403605 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104963655 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120541429 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083493196 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121757128 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064892849 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116909932 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0652469 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082791247 seconds)
  done (took 2.154815477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083834091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086971904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089813106 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083010554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082339584 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083816323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080710422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10835378 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081209526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09128809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065339686 seconds)
  done (took 1.768761142 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082980944 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084907889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088893405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082765536 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08220289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082714044 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081237975 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105225224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081915628 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092264877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065995234 seconds)
  done (took 1.766258871 seconds)
done (took 6.516761441 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081172436 seconds)
  done (took 0.909898573 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.758910059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.987859955 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085570399 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138504396 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225787099 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1616749 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.463118162 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114526061 seconds)
  done (took 10.975841605 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.1036816 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104736726 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071300802 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092993716 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072909295 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088333317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07399239 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072807492 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090789256 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073688569 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088049093 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071544943 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.089496561 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074411185 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08801323 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07122335 seconds)
  done (took 2.223126774 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.107024239 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106048339 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095648352 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077761652 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094062613 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074430884 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096614134 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076418583 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090622441 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075533152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095255387 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077011489 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09213068 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067206502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096121882 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078614155 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091571169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076974936 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.096247203 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077766301 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095975634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067075498 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092138524 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077107047 seconds)
  done (took 3.024498988 seconds)
done (took 17.965070862 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1373604 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07943306 seconds)
  done (took 1.051534156 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085667259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101922572 seconds)
  done (took 1.028681524 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086961364 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084233371 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092556296 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097978632 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085412932 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069359827 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107263792 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068555897 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084730906 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069087418 seconds)
  done (took 1.686489942 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072020306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097177001 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072732557 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100804602 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075800398 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084274659 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076024882 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087952537 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080578055 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082361881 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074346774 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103011548 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073268628 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104952267 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09253309 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072039689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090440037 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069990743 seconds)
  done (took 2.353368683 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069065806 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0686091 seconds)
  done (took 0.982131159 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070234091 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064955296 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08632676 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068790928 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082439055 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064811327 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082906917 seconds)
  done (took 1.365140676 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418358011 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110136754 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270807763 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074126751 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109044108 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301565603 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067762445 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07171011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092517618 seconds)
  done (took 2.400926692 seconds)
done (took 11.705961848 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082977651 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08734468 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114853351 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449759944 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111070024 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067507135 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149208465 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220473928 seconds)
done (took 2.124778402 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128243501 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638474136 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418623999 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219643412 seconds)
  done (took 2.12414573 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.395796665 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093609253 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077578408 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069753833 seconds)
  done (took 1.485374617 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069373216 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070983435 seconds)
  done (took 0.988088288 seconds)
done (took 5.572708196 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070335356 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067344762 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08383982 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099196782 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087840273 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065884567 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065242014 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088068131 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068233225 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086659547 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068703556 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068077049 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084986945 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065920034 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065837668 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085879276 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066394303 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064704608 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083976362 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065433382 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084426224 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069355522 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06553753 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083040407 seconds)
  done (took 2.690669748 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088882292 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086265729 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074838042 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091288479 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074050493 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09395401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07476592 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067359449 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091779816 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069560376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090573196 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0723143 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087837208 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074162878 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088222886 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072349277 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091079378 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069077999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070346977 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090974827 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072852325 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086980178 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072161948 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091787727 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072079815 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089803376 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070268372 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086511295 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074834593 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089876951 seconds)
  done (took 3.274841167 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073121593 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06568634 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083717034 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073452653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064827657 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085704542 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06493199 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083577397 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067348587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065897907 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085290386 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065606314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06475362 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084850841 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066313427 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086764847 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083693129 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064774986 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084879588 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066214788 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086144181 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066425755 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065517323 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08361297 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066394767 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065776919 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083399441 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066005133 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083684757 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066771632 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068789828 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087077027 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065951051 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071999976 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087610954 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065394844 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069394366 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0837986 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065960497 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.0832943 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066406785 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064908349 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083430179 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072429347 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064950282 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086569328 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065329942 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084769464 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066859918 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068885866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083440013 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065988915 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085038228 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068209092 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069973225 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084048456 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066886657 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06456282 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086107783 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065741168 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082592064 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066047596 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067809026 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084828799 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082154897 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08967448 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066354117 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067432586 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085420237 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068865338 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067631616 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098406659 seconds)
  done (took 6.207477434 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123264384 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09656739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086722047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068907247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082147395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067294114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06938533 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084511869 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067873044 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089618073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066505127 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084922752 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069209209 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080809614 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084916195 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068530133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089084891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064532365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065338606 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087372445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066700992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087838384 seconds)
  done (took 2.613087212 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.195980666 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090763573 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113085558 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095748565 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087660118 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07705151 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089898876 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072679538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071738051 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088848602 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069602948 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090594757 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070054236 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088480326 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070818841 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08932141 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072746288 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088167662 seconds)
  done (took 2.481597544 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081765155 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067302456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110583061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067411577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088430589 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069967073 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092701339 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077181048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088987691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068863941 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095921997 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179990902 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088223733 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069374698 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086958447 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06920278 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070582459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087102693 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076964726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092604081 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074033851 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095721041 seconds)
  done (took 2.760398535 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084277423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069926973 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106183535 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088171292 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065057043 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066406524 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093699175 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068003081 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092923741 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070863293 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085507242 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070156732 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073035563 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0871891 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072764362 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086418314 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070052448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086065233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071857124 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063834747 seconds)
  done (took 2.434909393 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090832305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088105615 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070002734 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095885438 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070466172 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087956748 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079643021 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087145407 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070227128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113972404 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070017534 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088161732 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079296232 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093575619 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069865399 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096948934 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078497509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096982441 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087657061 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071163751 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111899403 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070539987 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096834939 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070693776 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088782494 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071000826 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087382393 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077088515 seconds)
  done (took 3.227239825 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069819284 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068733613 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08398802 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067195492 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066612404 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084951776 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066622575 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065501251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08766292 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06564683 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085279626 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069702954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069016287 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086669928 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068920643 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067748234 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086514254 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066479343 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064769515 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084122125 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068150004 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085921989 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068888369 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065619314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084316189 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068353869 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065732554 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084059067 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0683736 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065262885 seconds)
  done (took 3.06767403 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080164023 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094159605 seconds)
  done (took 1.042737389 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067216014 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08184205 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084849474 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072200293 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09209612 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06971769 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094933109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073821551 seconds)
  done (took 1.503085729 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085485991 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078961773 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089490057 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098823017 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080963361 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085305897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162333382 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088978412 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075090498 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084991546 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082644457 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085565601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076832719 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068961557 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09313257 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075565228 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084279482 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075502584 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070375037 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086534114 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070029904 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098870023 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070761391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084517315 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071116412 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077774906 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101404118 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069469103 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091151798 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07625329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093611022 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063563175 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067630084 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088815935 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06673364 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097256819 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085096213 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090742233 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07840396 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088013508 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079537307 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082899589 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073778486 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092816317 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07982652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069532163 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088298931 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063971677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084235425 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07290752 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06388346 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087384945 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064281605 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09380225 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073163412 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078934801 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086274934 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070321885 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0907777 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07212852 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093501479 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071779493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070515564 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086826756 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075518571 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091302172 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079263066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081902523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063823168 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066421779 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097552588 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091523812 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094055782 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069667504 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087810953 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066624822 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071038033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089017797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074676707 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093875726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068228491 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093876287 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076530881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086813964 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071405743 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09390279 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068666032 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070940351 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085012836 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085532673 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086631001 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066779031 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06566997 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099417173 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071980282 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086834568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066720534 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094239594 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063164293 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069535195 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08853186 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069208793 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098631116 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073943133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093553148 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07873444 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095434183 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069556498 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089974491 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066868699 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069326 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086454271 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076990791 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08016552 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073321139 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068297348 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089037645 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077282675 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085635723 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06916211 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095088919 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075007711 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066989449 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084817683 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071985896 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087200701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072737529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094580264 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068032529 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063485688 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082383203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073079901 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067650375 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091374217 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073043966 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090499583 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064420577 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085641473 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073939631 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096167564 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068919681 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068497053 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094511552 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069983156 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086523663 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075731797 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088655072 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0687877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074882737 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089513883 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064507848 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090144342 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072668139 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067083342 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092415684 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071911912 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090625891 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070378388 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085783079 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075720414 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068955502 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087230935 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069079494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085934835 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080165747 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089112442 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065095853 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065640235 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095859201 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067305463 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087270788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068838961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07041314 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088486972 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066962445 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086121297 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071005055 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098027992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074083056 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068768051 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094172928 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079935211 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087780612 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071183308 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086894431 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070688122 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069072798 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097441745 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074219205 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092422539 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07094346 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084264544 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07482269 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094235638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068746267 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065801179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086971249 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072951209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093084035 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073567535 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087592444 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068146649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068770551 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091619577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071502348 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087200672 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06913524 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073691538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087473327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075446906 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088749615 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079100326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090989821 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064283305 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090943382 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067915397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074634994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083463785 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066767105 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086311349 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070781049 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067284143 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091485288 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063059527 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094276536 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078231638 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068095603 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087463251 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068821495 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094455462 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071169211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090526444 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07348363 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074979403 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098724302 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0675379 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090949214 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079747963 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087497563 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064315958 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074295025 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086709578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068020803 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086312102 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06775128 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071369238 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097636134 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075747345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082604784 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071400423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085974533 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069138361 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063771472 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092390116 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071265566 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087844561 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076354945 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06936846 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089521892 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071857898 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08778242 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0699103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089107901 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073195153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069584779 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090348862 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068615385 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091090031 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06848531 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065479474 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08985097 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068893581 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087659694 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075168627 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068267583 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088934644 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070985195 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088684621 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069691926 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08708907 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069574162 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072618284 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088925141 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069166757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089835063 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065145254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07595451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08782295 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07689123 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08778992 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066139027 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074393373 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090453195 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07435643 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088608767 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070200501 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089816101 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069532749 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070980738 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095745983 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067521377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09947546 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077289473 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088850301 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072872966 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069427041 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090392586 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068379516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088404616 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071083008 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067819267 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088722151 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07286914 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090888163 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069300207 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088891185 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070857896 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068940911 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090116469 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064597211 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085405525 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069076531 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068479011 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098885205 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069559642 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087543156 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068727955 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069799754 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087780179 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065543722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096478801 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078689664 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089540381 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076048637 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087497829 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070258582 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098494961 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066710792 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067083516 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086169281 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066736399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094420309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071605154 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078107916 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088785435 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067612221 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084622395 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070958512 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066628814 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.083904989 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067143007 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090415305 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068967524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068013126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088403445 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07166286 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088476051 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080129709 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086946151 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070784087 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069383739 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085484212 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068372345 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067381705 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091401426 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070137807 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086389759 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066817474 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068564408 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089242576 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070024446 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087971687 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071547664 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076218417 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088907092 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071486771 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09226177 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064022806 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09081923 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070246235 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068377183 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087762803 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072837817 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091528084 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07085814 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096383117 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069696499 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069041057 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088835158 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067728953 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087513653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069619276 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068854677 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087917185 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070232355 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096886754 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067195584 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071319788 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088993131 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069604925 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096065328 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069767595 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091292302 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077047278 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068799986 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090455013 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075763015 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092658974 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073007318 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089531722 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070830294 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092954788 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068743519 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074534802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088313326 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070475005 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08918015 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067762554 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068667059 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088280265 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06761692 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093840476 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070421874 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067062425 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087906811 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067052006 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088826616 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072946248 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095401073 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072578554 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071927554 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084260355 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066643067 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088973583 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067968827 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070352286 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092100629 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075593392 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090190078 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070671721 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067525825 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098269618 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074858845 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092341252 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067318906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091293492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071031526 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071169355 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089811533 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069590194 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089101962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073981334 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069890294 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088465416 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076039075 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09182263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070631268 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088989836 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07085539 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068597895 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08418018 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069846853 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089522258 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074810421 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071362171 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089664699 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07900076 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086572288 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068999808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09114401 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069187602 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072855142 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083724973 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070195046 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090155979 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071013864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063698531 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088573734 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067012336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090279453 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068821623 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063817798 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099908662 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078090667 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092575538 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067745631 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086352754 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065728978 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064046948 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088900337 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070423121 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089560016 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080512113 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067203227 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088209357 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064018802 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088624183 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072369571 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071952854 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085854331 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064541796 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087096167 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073109195 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073151145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087393927 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070056628 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092214517 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072540464 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066519209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093025891 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065838408 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092575056 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082123197 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090123906 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070528194 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095495302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078877468 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0697352 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084489529 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069795406 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092468641 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069915798 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08888661 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071044598 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103676408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073366029 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068072227 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088744703 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072135726 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088129024 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077980482 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069606864 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089701287 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073428027 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090579242 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077495072 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091527811 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077608229 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09148385 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073270705 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067744393 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089403475 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066797094 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086288838 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071079082 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070123679 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09499368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076582818 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088486647 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079530305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098181233 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071028064 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084499073 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069079101 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068757833 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084638505 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070257248 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086251786 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067679993 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067034257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088018166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070164296 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093963896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070806457 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069601244 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088667448 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063986199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089162357 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072603846 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070301386 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086299071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06988429 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088208726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074116304 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072241526 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087139372 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07138786 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090587489 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071054688 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064410075 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096337415 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068585108 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091244891 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069882905 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068880758 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090721871 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072325963 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094603439 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071180565 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091171722 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078753702 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071220415 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086269649 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065882986 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094366197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067442428 seconds)
  done (took 48.068477894 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111648682 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0860778 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063669168 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084293654 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077385542 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085149676 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065177907 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064611919 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085724095 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067986776 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084668732 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064794173 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093346707 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088596641 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097574322 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088148717 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065194562 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064999614 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084449176 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065243677 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093149585 seconds)
  done (took 2.593043377 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090144388 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105205349 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079880193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103739857 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093452665 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081464861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099805718 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079092658 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103776282 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09589563 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084327789 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099205704 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075510968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09608551 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075551001 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098082827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102474869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074995662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100550357 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080106815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09823055 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098484866 seconds)
  done (took 2.922582453 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070314284 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067357471 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090053193 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064148556 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067597832 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084760818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072192496 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085803779 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072317978 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066115846 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0878305 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066699939 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098030822 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067585349 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068278188 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086323658 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136793861 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072203356 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087832931 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07078521 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063722463 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091633073 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063764681 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083737703 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067929199 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072401487 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089716469 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066381693 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087670042 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068758418 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067437664 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086733049 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069838166 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068052097 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088772966 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067119602 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088127276 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069062319 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063441181 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086588476 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069419444 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083280733 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070140526 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069384607 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08697042 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067098031 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068831474 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089715415 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063547039 seconds)
  done (took 4.670981296 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088516624 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.14484243 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091610034 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12546774 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084011544 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097300263 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072314405 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126907797 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086636329 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068110747 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106678136 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083855455 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090197198 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073119574 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095857935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068749663 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089224948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068219588 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093095379 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06847515 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093457834 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075341051 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103593369 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.102545282 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07465367 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067431695 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089093868 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07265033 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102429442 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093237697 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075465803 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09422596 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085133106 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094824294 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068023896 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091402033 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086082069 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.090510383 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071846379 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087003138 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071275522 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093422318 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075919216 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106707519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068464126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095097929 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069121392 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086640681 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082462224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091836051 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076720244 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105119498 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091990529 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070228326 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091837209 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086338447 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088408975 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068356721 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089852051 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083009984 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085885463 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07279925 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103691991 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070330275 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09662336 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08337283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09536508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071592751 seconds)
  done (took 6.956500301 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079048674 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095264048 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084119563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104915763 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0952879 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075775284 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095217299 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075430481 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095861625 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07933575 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096059872 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118221187 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070683375 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098714219 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074555195 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09724271 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075287367 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096903996 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094716217 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076683273 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095985617 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083888443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096374617 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10354111 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106172524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09077879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07523633 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096534682 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10366025 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076185005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108271833 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073797786 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09607127 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104210694 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087690568 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095145907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067266378 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094957357 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075003567 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096585615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069562657 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104753112 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095193216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070868633 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095569597 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074943096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105035468 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107960956 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078716955 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100647427 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074901266 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105496585 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095047088 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075929474 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104068848 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129509706 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084444197 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104186573 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095489906 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082929277 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105073169 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111200067 seconds)
  done (took 6.597875731 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091141758 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098827531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100602392 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065648012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065872622 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094784393 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06644654 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086980848 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07902496 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098386318 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080372693 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093081048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075674539 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101240068 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093075689 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07755241 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093303129 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072624454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098509491 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072386255 seconds)
  done (took 2.623990831 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079299736 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106626982 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07053493 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09509936 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073179495 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074299186 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093137934 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070347082 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090428474 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071701104 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09946793 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079471859 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090678768 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075487616 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101150633 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07429532 seconds)
  done (took 2.268210876 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08202768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.10177625 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084874691 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090726064 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066649519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085893019 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069044831 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063911897 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086831338 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082908348 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091248951 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071466886 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091300871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06796316 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064781079 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094204379 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064611408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087433543 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069516063 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105273093 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079935201 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088568344 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069627566 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091463959 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069996612 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095379485 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070400742 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065938525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089284708 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069169853 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090400909 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07703272 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087532159 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068896946 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087789231 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068106492 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068367561 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090834351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07178607 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089450402 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068359985 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088028415 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070355315 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069265056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086530491 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069334685 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085166619 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076271168 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06644843 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.091612761 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068051146 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09313986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069975192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100304954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072666617 seconds)
  done (took 5.313501946 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084512418 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071720671 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086782281 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067125632 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093228799 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072122074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071647174 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092999855 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070359677 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088539575 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071431869 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092176684 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071986343 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071743225 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091971938 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072380702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085871617 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070951177 seconds)
  done (took 2.355275102 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075926457 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068720248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098163119 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068654001 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089664023 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07244471 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065213608 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089903053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067551458 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089313414 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07020495 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070911321 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088690733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071871069 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090248427 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07037852 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070970961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088787198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069132671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086040203 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072703862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066851945 seconds)
  done (took 2.631621744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076263347 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096225624 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170748653 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.113064415 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085455575 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10483721 seconds)
  done (took 1.576506988 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094796891 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104789319 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070394693 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1114732 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078791795 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092025748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071656007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09152388 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08185666 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106412862 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07034633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102625239 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101156174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082800596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098463745 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077094078 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092211551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070331322 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091118182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110824841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072759098 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100390246 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070978311 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091599092 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071561486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101384847 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100471699 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086422379 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091500761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079253793 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098242815 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070241174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10205857 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105887514 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072406479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101137919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070743341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11107485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097251069 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080731245 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093355644 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076786645 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102219784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075477617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101486525 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091476639 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077053132 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091973652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071925973 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117521908 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097466109 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079416799 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099282408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080090824 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102538496 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11754616 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106858472 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080638626 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098714563 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106342257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08030571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098352573 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079220314 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107015435 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098999397 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079389693 seconds)
  done (took 6.919710393 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086692941 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109964807 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071925033 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107068811 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101054201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0715042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091636404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071999136 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091629966 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072384432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135310042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07111914 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101738631 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101227114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072060614 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092193523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071972668 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100719282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069728621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118533925 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092724096 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079011144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102109563 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100502945 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085592259 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099434594 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070570872 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093190109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069946413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092958593 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096954923 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072688728 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100662754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071041324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100837995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070910886 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092900861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076337603 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093412712 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096421574 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081364452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11218379 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070903532 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093117904 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105919612 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07246171 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09246223 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071223892 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091982412 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071384293 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106400188 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084408132 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107676685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101083941 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071216936 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093271877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070917429 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092721427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07085224 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099138476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10078385 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072483522 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118053289 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070732459 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093309342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100578351 seconds)
  done (took 6.822932725 seconds)
done (took 134.469236837 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207743906 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190492648 seconds)
  done (took 1.328638736 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072212627 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120390631 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082086565 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131070244 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.091600251 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102418646 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123018664 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083664753 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068898688 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091479485 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069828937 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092167285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135050716 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069397727 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091220427 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071621153 seconds)
  done (took 2.433438845 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106207904 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204047721 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114752915 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067465684 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104457351 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080708277 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090538288 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08013077 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097040516 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068773032 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101716084 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079766667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06702651 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100601901 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095663895 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082507476 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067339516 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103096089 seconds)
  done (took 2.652811229 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11043086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151297734 seconds)
  done (took 1.204941122 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205976572 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128476015 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.215249944 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.443417595 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.220353418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.302436189 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182112386 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183595604 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163427639 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176344257 seconds)
  done (took 3.161232712 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103546562 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177953453 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325734668 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142971047 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091052955 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120868425 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144075095 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11390256 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086374727 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106613998 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106023134 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.08126178 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122921865 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077612424 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099565722 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079923181 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126801595 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0759945 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101707123 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078013368 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122972405 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068456797 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10026585 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076351901 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103305876 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081113942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09078583 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068679293 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.09965016 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078141183 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102585262 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118242244 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081966038 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136614552 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107744553 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.138100299 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100641784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076646893 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076296244 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097587238 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079656342 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102994859 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108728857 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08100394 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068018019 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101894994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068597684 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08989844 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083027702 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103094871 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082725792 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103553436 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136426937 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102979433 seconds)
  done (took 6.542419029 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.767854026 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138445736 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074432713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.835247178 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118919836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085331598 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.753170475 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095722687 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240000358 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763823066 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116838299 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078956152 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211570914 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21788918 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.915765331 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291753253 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.650302338 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108385969 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110685985 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13636409 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166800814 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16093809 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15370693 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412335797 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099497234 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073543446 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141708898 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101736101 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145877323 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107127306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076973099 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160127365 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25327246 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166251662 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076961508 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095105238 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071962266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15231201 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247779216 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198408286 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163696878 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07030903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07156589 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167471924 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135594739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070247692 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14586759 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157900709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177036367 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076157641 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101443551 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148688824 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14438757 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147777876 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104903155 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297225642 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.275140539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095662307 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124781458 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086129938 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243316829 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105401612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187746351 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143719181 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19669025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07247085 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76498554 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.153701122 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071888545 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100734005 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124582274 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076467243 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16605498 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.127710877 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388994924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169130112 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076342772 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072095733 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210544208 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085203087 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094962238 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146370709 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076615106 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12712627 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171945066 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152516208 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152722128 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211332543 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.171953324 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145664668 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07607159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129230881 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099806415 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196138232 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201566694 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146702906 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194060156 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145583735 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146596327 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173981058 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081050284 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154650619 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125476811 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107029303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145065532 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199684689 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128292962 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085095291 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098117427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.147128074 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131600792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087923745 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16758278 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154797298 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.437634619 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.156562491 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091567724 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088415596 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167089498 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146552722 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077518965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247134825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128742662 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152353271 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126767388 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069516422 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126268063 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145726855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105511224 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12710952 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1450651 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101467561 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218686558 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176064111 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104340426 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200407741 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166108779 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100928676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155627113 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12606818 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151042569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10191001 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146420352 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07664646 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758782884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149098193 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127355471 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098187329 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16821727 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074236213 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085331598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108193308 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069228784 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788213289 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110013911 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082980522 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108320104 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077189206 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127177734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140975367 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098644009 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144966249 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213808972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078969496 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125004543 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108281438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145716754 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099391672 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086254456 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107361675 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085424457 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128590753 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098893361 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085351269 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174536776 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.146650914 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179773194 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580246058 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072355127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108628142 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211027724 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073414906 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274134869 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143201868 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207589367 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14819589 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081980943 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305852069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148687166 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170918373 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110795875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158753724 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069892608 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164267378 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150083322 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072833073 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10005292 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.14858944 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.151813702 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147690339 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947647316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094608281 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211012231 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071521228 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.155541129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099570384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080794113 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270387784 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072855041 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.176610248 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14893119 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075211968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109125455 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.82789806 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109653297 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14494051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101093916 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182179459 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170092469 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143113792 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143843136 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100965778 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146825296 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194241625 seconds)
  done (took 41.930471967 seconds)
done (took 60.184244347 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288131078 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198386618 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262630575 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152710714 seconds)
  done (took 1.947471194 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152858913 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10871435 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123783689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089797376 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108277669 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091255053 seconds)
  done (took 1.642424952 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.441681761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282426165 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244728317 seconds)
  done (took 1.938624762 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30971447 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237407142 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465670791 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.310458313 seconds)
  done (took 2.402050269 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200098119 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12041903 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093326254 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088132881 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167898961 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274116863 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130901412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195466365 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080314656 seconds)
  done (took 2.36603351 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.208263958 seconds)
done (took 11.470720044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.347996028 seconds)
    (2/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110419657 seconds)
    (3/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.274058891 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.319506144 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.214113578 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085866418 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.160006525 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085176313 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.278728861 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172827485 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220579049 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.209515551 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.183912722 seconds)
    (14/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.159333146 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.301845762 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.098173807 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080954112 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124295988 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080156052 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.180726878 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103260566 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.200651092 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.241499614 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.263649442 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.24173574 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087290569 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075787216 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.273181083 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.184279219 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074055356 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123073823 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067609524 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196851 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122111919 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.153581592 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077866646 seconds)
    (37/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078936473 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080963287 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200469887 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.151848373 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085676359 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129201428 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.124150179 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07603049 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.247719701 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094853049 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11710112 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.139810846 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.228678664 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.121377602 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076873931 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162190233 seconds)
    (53/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07294722 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099452338 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080480165 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.121548509 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.160158362 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079230647 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065893308 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.104330514 seconds)
    (61/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07105979 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.115484524 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086738387 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.210065715 seconds)
    (65/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.128258513 seconds)
    (66/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192790235 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072225681 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199708642 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078268883 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206398694 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.168643906 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098272855 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.103196002 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069698828 seconds)
    (75/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077617295 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095302805 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.250920143 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076204181 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078720477 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093457002 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.245598265 seconds)
    (82/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.155727961 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.09320299 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099694267 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096755554 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070470294 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136364076 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146377304 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10065806 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103331256 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101264128 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.256756687 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093377118 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.27518386 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055861088 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077876804 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094296558 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05408484 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.247618556 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074884969 seconds)
    (101/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.135753852 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.255750708 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.234141497 seconds)
    (104/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093278931 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079803369 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 0.156285043 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068270487 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 0.171611663 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07823988 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07744023 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053431685 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07729914 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079887774 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054932004 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.262089639 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.261666437 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174003895 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085805907 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.169082105 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079038185 seconds)
    (121/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131992457 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.2971933 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05527252 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146698984 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.120789792 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092572208 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.114713951 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06936504 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.173844487 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076462307 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092782244 seconds)
    (132/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05529734 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075154364 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079845382 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069013055 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.273700762 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054074938 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.092887936 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.110675611 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.289971384 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101315559 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065514333 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.10640972 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.234813542 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123013197 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076800326 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142118721 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055567867 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.133742995 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103527215 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.257434371 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067973947 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092910578 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077107318 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053481125 seconds)
    (156/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097531207 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065375643 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098633574 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070759458 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.151335946 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087359079 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094041888 seconds)
    (163/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113380466 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.122898546 seconds)
    (165/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053828258 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054399301 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136257187 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053804084 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116884385 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069297184 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069439803 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077299807 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17520523 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15267259 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053896486 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098760303 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067788525 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.087345145 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055360725 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092629811 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099104497 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076139509 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074052623 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099726191 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109291385 seconds)
    (186/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100068995 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078321881 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098867728 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055329318 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.245852899 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113515962 seconds)
    (192/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052998808 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09317686 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094575478 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.078088902 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072616927 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082406549 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080842022 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055593721 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068298435 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.092030033 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097770422 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102395006 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054586669 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078100705 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100953456 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055105166 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074827229 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077826303 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.247735423 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07723113 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175469377 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.0548512 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116877448 seconds)
    (215/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055278612 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092217071 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143932283 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077072298 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100074685 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091812954 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095557764 seconds)
    (222/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063619675 seconds)
    (223/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070750098 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097808552 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054510736 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068889614 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115147457 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054228413 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13983251 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074759763 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206308001 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135605435 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092957833 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069642675 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096772171 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054251635 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054261407 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053540881 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092262993 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070415628 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053906309 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091873302 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068365703 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167881453 seconds)
    (245/309) benchmarking ("sort", Float64, false)...
    done (took 0.152829589 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070078484 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066843612 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.134286831 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055792348 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097844709 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077026843 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067656983 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078210069 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101604422 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078277813 seconds)
    (256/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073279958 seconds)
    (257/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053642611 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.201216914 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069159668 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096461493 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055422554 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068487433 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079668321 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069145729 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055738445 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100088144 seconds)
    (267/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071360813 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067409906 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108795972 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.160328675 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077391948 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054159316 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.088241187 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055276346 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169644734 seconds)
    (276/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065152653 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054972006 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093100909 seconds)
    (279/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084168483 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075800297 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079529155 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081996505 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090093323 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055919287 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096371288 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091496493 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076576543 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07558109 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14580532 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09000027 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093574001 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053585878 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05345307 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089190996 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074906638 seconds)
    (296/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074235734 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079408664 seconds)
    (298/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07126329 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054488899 seconds)
    (300/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07868241 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12633592 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122947152 seconds)
    (303/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054940758 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073514831 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094058005 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094664865 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101480469 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069249707 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054982687 seconds)
  done (took 36.306655005 seconds)
done (took 37.27398228 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085273345 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120378849 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079885591 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120681057 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08503266 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105908373 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076055387 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10579086 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0847337 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10926869 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083444865 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056450667 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103256039 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077591973 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101894932 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096296114 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.105904576 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076140817 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100406639 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068987951 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076423317 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093045788 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070609897 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056696367 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106391931 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075610327 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100668646 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078205483 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067770772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093709297 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071451757 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100283754 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068785496 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081537256 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099883913 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077314227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10258 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080629742 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070135126 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093015629 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07632063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092243306 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076790558 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076203062 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099309609 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074717329 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099547892 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084377628 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120884647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071097273 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076699371 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105067265 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079977532 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100192101 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073298804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100333973 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075542043 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096039059 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102560824 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070492272 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100941105 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0778554 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073644443 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102152717 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076760026 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103674855 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079971289 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09861265 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078960884 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0733006 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09342772 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076792221 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095400019 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069579418 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078602843 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103888196 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068391183 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07418579 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099919773 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07460676 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091892425 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071451839 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069910895 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099996783 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070691868 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056623311 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097759817 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075470488 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066917735 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101605787 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074121135 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099959218 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070586846 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101991675 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069459174 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073569334 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.092515584 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069759318 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070104407 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097377557 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069226813 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070183992 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102219056 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070795149 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098318187 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085097211 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068555274 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099336851 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068125829 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090959713 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08686069 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077484346 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093474749 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070218044 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0915592 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075957695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067687271 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093041924 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068959974 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06767044 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099286345 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069219201 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093602876 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077194669 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081870127 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095708285 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072391964 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069522374 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093429479 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073905333 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.09193748 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069866656 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0699932 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.09019311 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070958272 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067828251 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100722638 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070664023 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100879661 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071891803 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077238166 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097896354 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075126603 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073266405 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092291621 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061628546 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069963458 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095630243 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070562342 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092206699 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071528363 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06814052 seconds)
done (took 13.801185577 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069944909 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17907071 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132165035 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100315941 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116918068 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068830579 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105936871 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13499426 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072460985 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13360305 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091341395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113969914 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144820519 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069073047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069034569 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096836582 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071036028 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118038014 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10693629 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114448317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148250218 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068186917 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127435412 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093269963 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117750713 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13253595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06973339 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096170184 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073763069 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12199779 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090735968 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072155131 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093524817 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12968909 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100174264 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114050536 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068823103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112884865 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069452853 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068438989 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12168782 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129719668 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08467502 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111447696 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071225476 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.095863987 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070582009 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114571654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094736669 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109802152 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116339255 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140691209 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072949378 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110801549 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068462204 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115829098 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086653806 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094976323 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07038068 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070600056 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093617596 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072401386 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117471157 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097433257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098279286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086131555 seconds)
  done (took 7.617770553 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089105975 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120600324 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088644011 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113095396 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069411188 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068620858 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094995485 seconds)
  done (took 1.678146831 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070866015 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092281378 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118369886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092640117 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11436554 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090163202 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104497516 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06985076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112426591 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071229512 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115975386 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110391415 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095617633 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077404409 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118849603 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070690783 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094167465 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095333073 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07230701 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118867405 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073157748 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115484172 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072785652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069765556 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110541192 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069809348 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14534876 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073860959 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096193001 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073731803 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067609741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14677448 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110146403 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080861345 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094329704 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086385401 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109282653 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068851317 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086538126 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10075041 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085020753 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094645328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072086184 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068567656 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09971598 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082190259 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095494497 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072434116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072572326 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116208721 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070642241 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108799028 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071864338 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073124876 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096438817 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076048692 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103897377 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071769576 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090213261 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096815603 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088298924 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113238233 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084866096 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112998863 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072508849 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108793536 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086527955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072429823 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097377148 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073836091 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11263232 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067925803 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071059485 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107152435 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071721918 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119472896 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094606987 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096381776 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080728711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069471845 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095791057 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07017638 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119107607 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074412051 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069683999 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100541159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073085555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092999807 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070296984 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073269242 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093427629 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071520945 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072724199 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095982952 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072657235 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112179179 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072495728 seconds)
  done (took 9.742485847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0720576 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070608384 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096925608 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071820655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070500881 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096525605 seconds)
  done (took 1.523658622 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103245728 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097690189 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085389414 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099915739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111929118 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110334191 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086203698 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11196266 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088157914 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.109302858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086037905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11253892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091227675 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102538194 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085103667 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101299783 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086581306 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106174581 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082146365 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102807195 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092507979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102328597 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0778479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111599452 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074694868 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.10027444 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081883519 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107409755 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08413238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111127097 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077908321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07298727 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100951078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110500334 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087823861 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.099708987 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077552601 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074643232 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106308557 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073968412 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112273653 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077000335 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107469597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075427752 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112081812 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074774435 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.100009927 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080744313 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111171106 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075207223 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100471733 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076717565 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098270663 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076460725 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074996901 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112745831 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097273686 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088308565 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075447221 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101169068 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073736794 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098997726 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085927934 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099697728 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084051203 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100738904 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074787704 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101951795 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07749798 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10005278 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07525513 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07217108 seconds)
  done (took 7.703145555 seconds)
done (took 29.290223107 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673347675 seconds)
  done (took 1.710155669 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.8144396 seconds)
  done (took 1.852555775 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.335750101 seconds)
  done (took 17.383908912 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.677122535 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.832733299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.833920962 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164985506 seconds)
  done (took 3.550717545 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.913896938 seconds)
  done (took 1.974537839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250783188 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258252503 seconds)
  done (took 1.552175224 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765049963 seconds)
  done (took 1.813001711 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.332980195 seconds)
  done (took 2.376356595 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34837855 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190774294 seconds)
  done (took 1.592836495 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.539211506 seconds)
  done (took 1.592520375 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.84942884 seconds)
  done (took 7.908295468 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236068696 seconds)
  done (took 1.303416858 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.27898283 seconds)
  done (took 1.336273224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.413227985 seconds)
  done (took 4.472328406 seconds)
done (took 51.46253703 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082937853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084281323 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110245511 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082098668 seconds)
  done (took 1.413145144 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083279731 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075171775 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106239595 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075787643 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106654624 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076149693 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104300018 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081800473 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099862316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078686962 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076119838 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100958919 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079417854 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10309396 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074814967 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07782797 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105341096 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07614247 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104924652 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076549097 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098981634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079519543 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078657367 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101336723 seconds)
  done (took 3.187008802 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082157368 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076026271 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103815883 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07571527 seconds)
  done (took 1.404208743 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081538804 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.121525868 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094954065 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10535201 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09824661 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116963598 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074106227 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071698353 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100905957 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080244733 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095577908 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10432167 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118169904 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079854583 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107771808 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070289631 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096068679 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092679684 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079462421 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106580824 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073182623 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105304198 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072041254 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118902534 seconds)
  done (took 3.333956312 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081531463 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130350383 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08351652 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117370104 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097086601 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068094889 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105763093 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094474889 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157561594 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067872891 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099582896 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068901779 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100764506 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069296406 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079625945 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139470838 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141064991 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072096711 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126780218 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070204402 seconds)
  done (took 3.036339099 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079298603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072379658 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094243268 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072002248 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078775537 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102071335 seconds)
  done (took 1.571640407 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072374572 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069182009 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095113896 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070158886 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073785164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095174728 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06929998 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069122992 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096310327 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070193001 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093785172 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070466756 seconds)
  done (took 2.015292408 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.473011757 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071676328 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096392624 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070548206 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073605782 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094750017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084365167 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070599686 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121806259 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069656564 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096118141 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072162125 seconds)
  done (took 2.467688446 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275945093 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080795601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.342206008 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174870611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144148411 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163167799 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107650578 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146201721 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208875116 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145182031 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238044238 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232512806 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115274693 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199880993 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094030433 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.138716874 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219965452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204345733 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13548404 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236219314 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190320908 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160814095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214791801 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133969937 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139222869 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153205972 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075968565 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108454525 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244710607 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170313553 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207476175 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118423541 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125280188 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242570073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230934698 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178325605 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168285767 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115824994 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16352969 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17483074 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271836638 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119502479 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203281269 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140453523 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110561426 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181425032 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151589921 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.15334594 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142390615 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120432266 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181670048 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249489665 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201477011 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091746224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143123741 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146098702 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150070392 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132888279 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259081805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227543969 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167147721 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074040432 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12770551 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196126033 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192418122 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149261258 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162188215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123933479 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179647905 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195161649 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177193078 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185115598 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166544203 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120530378 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153401947 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178702422 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188563287 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214368497 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160832634 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102889993 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157887094 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134133866 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085909651 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176530748 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079399752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246396216 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131469029 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146013266 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144611715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141861888 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115857227 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229091657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21487111 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136315061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068994074 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135913502 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157023138 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182819368 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120083896 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142100889 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153634557 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.108196596 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177118458 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078065959 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159001308 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108256887 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158328219 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168821863 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.106067789 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160289755 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133703464 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107439841 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198531987 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20390105 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120623765 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085705192 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234723351 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161611545 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137634189 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212116274 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19978233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133286767 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133020334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185172731 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281972009 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095722709 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237551512 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136080437 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088199695 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119664901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16276348 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146845703 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155018697 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086361356 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187961738 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211757591 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105831999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126918321 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174557226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086167939 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113361295 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147449438 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131758026 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100699154 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133070915 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139654917 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204116275 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162214189 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139645043 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163340435 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130835152 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204680231 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121817835 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.136669588 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135420826 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074426893 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172255997 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229614929 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082090369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237541279 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162506051 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137907181 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154978305 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114337901 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179544836 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081948335 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101721753 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179650054 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144492156 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14482818 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220471968 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110186155 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189795759 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160196025 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169069923 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168681734 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168824124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139564877 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119305285 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145667528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162696852 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102939992 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100059302 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114756425 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136186552 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098813293 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114911182 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179069683 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191470307 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103320898 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14732582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130422794 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18799351 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108333062 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166471066 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154869868 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127795357 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222234539 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201374524 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171432424 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132819869 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211297618 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075266563 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102904753 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09535216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190076758 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0889514 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113826835 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153169443 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190773497 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164311896 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20198575 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117340375 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183896076 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198949871 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073847803 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148845802 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21567345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161338456 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.139431002 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121181571 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.131846423 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185788997 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137397997 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260409256 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14974082 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159890945 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220957759 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140488889 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08477338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137455332 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176016989 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138183797 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219754499 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132605908 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093907657 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144196507 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112592944 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137111418 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164450407 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154350781 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172364888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150942866 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197440161 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080699637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149298125 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158551361 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183172916 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069031261 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156263015 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234755113 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126802372 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154333291 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196481425 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111035159 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157612872 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252242453 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184927721 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116927814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14234501 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157338794 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167716521 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15419574 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178875845 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143175759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172026393 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144031369 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11649946 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092984777 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13165451 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14086308 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127787316 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148350845 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152335885 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126318167 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169899469 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146111966 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144930388 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154299373 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102311478 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123924591 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129488913 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219301327 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156392912 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273148443 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108250245 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.219819203 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238243196 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079505952 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110355262 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08542036 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177883846 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117311616 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170230195 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.129678879 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137408318 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163657844 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184000811 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12892771 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071128087 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145042982 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170296115 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144419188 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13139061 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139323971 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234078684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109653043 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112400541 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162096679 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1370455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108747349 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246538228 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.092659142 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101172359 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107874398 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084476242 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194083919 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198520718 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114596865 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.137073656 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15139422 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185579414 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168906568 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133100914 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102668247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146726834 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21574916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167537157 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120399559 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120713754 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195780584 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223494817 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114110436 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128663875 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241249425 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198133744 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.236613786 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120885049 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151370305 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151327319 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146331489 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181671876 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117235219 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238546956 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087070168 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203713147 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13692479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124538432 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166776629 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.101481093 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122076826 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218245724 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155580234 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087280906 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128998407 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149789214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159714776 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137189919 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079101438 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206235317 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0773103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174696504 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240361279 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113124405 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112660711 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12889446 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113857575 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141163436 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136385317 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092211928 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152149505 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248827183 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12225647 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193890037 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207880134 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15032852 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177340658 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13456033 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670592913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081198614 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225229392 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15517667 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251619036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13301591 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154947766 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145371932 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158096093 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181027476 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139463703 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210664606 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169111714 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.184371984 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086012404 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138517817 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146193506 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122260858 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141932845 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148735109 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122900752 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13382002 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155547113 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1932233 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086485403 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128919138 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228815619 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154687342 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183617634 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178891079 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118441747 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155233539 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209523522 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086022578 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159551835 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226338137 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14321411 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133940641 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085982415 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140313611 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244651898 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076672399 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232084075 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159812739 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145914383 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150076069 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.183485401 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172249655 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140879802 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16198966 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129054086 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14962109 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152533401 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088581454 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.111736156 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140809609 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147526053 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.13152347 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110465911 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154612614 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196650022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103525364 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127763067 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108683204 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211742019 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254829174 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093714384 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116964389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15387683 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149313053 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151821764 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161614383 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.114032975 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087091788 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.114985936 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117642608 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145745854 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151508719 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137181744 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146181371 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241859307 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.0879969 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257983346 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128338112 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142208916 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075133501 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111175536 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102958282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129991241 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139350569 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129908297 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216004055 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.13077672 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122670644 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098519946 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105753285 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087780045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194818069 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118219354 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184614178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103428018 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.094814117 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142944942 seconds)
  done (took 74.975851802 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140135299 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111323818 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126259229 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.182916503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155872332 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247154178 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189821762 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23253202 seconds)
  done (took 2.529831255 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074154632 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.126197457 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106867107 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121630754 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096946353 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072433036 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.315367377 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115150459 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069555181 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122391597 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124443778 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098703005 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.493816205 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069439362 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098994996 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090738447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071638298 seconds)
  done (took 3.404521322 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.455945406 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.674266322 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.4596236 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.103419813 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.032013735 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115095489 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.47662701 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.171296833 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098642504 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442925719 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.737056665 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160073943 seconds)
  done (took 18.070477869 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07888568 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071621338 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115118019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087312408 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102490881 seconds)
  done (took 1.599170756 seconds)
done (took 120.058016928 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08450622 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385395357 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056191446 seconds)
  done (took 1.621231964 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088945091 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087511202 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117754051 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086813809 seconds)
  done (took 1.53891421 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07934674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078836017 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117492073 seconds)
  done (took 1.430450584 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.304554115 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172972806 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09390795 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087985901 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08029584 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109964448 seconds)
  done (took 1.431545873 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07728896 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078309724 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10492885 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080023324 seconds)
  done (took 1.486421572 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080833646 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055995673 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057586744 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087021594 seconds)
  done (took 1.433667197 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095200822 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110526709 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086011565 seconds)
  done (took 1.44110482 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114960561 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.118530488 seconds)
  done (took 1.386327187 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086624999 seconds)
  done (took 1.234064474 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09773253 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148289021 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165966086 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144885698 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.177177871 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.145030844 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118554122 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091841762 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109476063 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121006839 seconds)
  done (took 2.473494182 seconds)
done (took 17.270437762 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083376998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397386096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365138171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122712088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673684757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385804171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987197245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124381151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112830128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099839228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088233179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679862414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975875489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351990733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963213435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321047947 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68226361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071691591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09751598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07176772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969970807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099774105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070485399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098399392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654154252 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374061641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10037978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326363767 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098486699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074001277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358212414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099809753 seconds)
  done (took 16.122432337 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075092149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149931712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079046495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087542814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103177951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072824821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103588688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073435993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154368715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072186443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11775892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072046299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102215124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073682836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090410504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100655045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071572454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09844331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073030157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071419192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118368783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071167227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09876683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073110897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07126912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111686343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071459493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098624737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072693726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072991828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102812843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072267194 seconds)
  done (took 4.028667769 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120484034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.159696285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077887742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134711332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.145538534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074693934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177197829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158077235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071098618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117708172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071450973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134578944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072240284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119883825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071947039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100027905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072956974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070943145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099883793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091094437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098814839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072563623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07086535 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100040875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084228634 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099988121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075753798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097945562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075623424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074863726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100178869 seconds)
  done (took 4.351249026 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076740489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078116294 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115072753 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087800197 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100470497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075966318 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075916225 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101561865 seconds)
  done (took 1.867493529 seconds)
done (took 27.511894141 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083702646 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072356921 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105973617 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084769684 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104061335 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083705429 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07020691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106449822 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078046412 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102200517 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.08022338 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070541246 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102874062 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070480607 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077859177 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100123353 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082618608 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103802165 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082566659 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111365627 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073886716 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078098179 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.106006888 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083227008 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.111568736 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083884932 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110908634 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077516327 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071888273 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102672365 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08073235 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118127544 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074068254 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081685704 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100678968 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070934642 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098612162 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071755443 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082184846 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10733155 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073198476 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106151771 seconds)
  done (took 4.889553674 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09368309 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09587197 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119067789 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065796552 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099946582 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064960867 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121665177 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064127596 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064662009 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121843043 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059643057 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060569093 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090961852 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05819355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060809158 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059452896 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092501296 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05941922 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060135283 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089359645 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.064051043 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05680094 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090921535 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063890139 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058939684 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064594997 seconds)
  done (took 3.161971054 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079477546 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085024148 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120445213 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132015918 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13908036 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077746698 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110408029 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089517183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11638464 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070598348 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101411992 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101586752 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089106097 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106373719 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07097826 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114721103 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085933212 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07200181 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106510876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091350358 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116623649 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080922521 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120629879 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08370726 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069874409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101656195 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074901178 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112855012 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07669564 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079169682 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.105048619 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074326031 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101253443 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083284708 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103430605 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073407146 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089734075 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110668242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079509411 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099357723 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075421961 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070748235 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120533443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115127573 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099525439 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077695932 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.106512304 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081238508 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.079627484 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118284931 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079736982 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099413924 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074691109 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069284533 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099865007 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08551857 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100832027 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074099797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079161204 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102778035 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083641868 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10239617 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087193952 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069817227 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107304539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069535267 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099425824 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07072672 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09256258 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10072958 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112032624 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101609259 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071883486 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108184181 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07868439 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075472523 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100407138 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085370126 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109278763 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074378381 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106699615 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075743615 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073087488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118160902 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073475372 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071678085 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100687525 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077621008 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101261498 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07244036 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084380486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100266145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074228257 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.117074721 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071325883 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071399586 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106697125 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075652616 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098990409 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084548915 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104443517 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072128738 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079697052 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100085422 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074420896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107767473 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076742854 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06950114 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104518577 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076966682 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098781423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073188184 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072802312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101296519 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080654883 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076574478 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104480221 seconds)
  done (took 11.811065474 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203023462 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194385931 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073406828 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186215633 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08121617 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113785682 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186880395 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101405535 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101694832 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071508542 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.100808088 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111251868 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134303706 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.148796977 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084637427 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070308112 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11922208 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140843729 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189592695 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154160688 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120926272 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078443063 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.103229181 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072933711 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072068038 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111340959 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087586285 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110418746 seconds)
  done (took 4.501366676 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087151432 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131452042 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077642374 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119210952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095649441 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099091927 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077213655 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072065802 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112820042 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083218837 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099860712 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078730494 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105027646 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.083002933 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071772621 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109624096 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081118447 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101047159 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076491859 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074941539 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10715197 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08415482 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103990138 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07128028 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077913039 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100176334 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068002419 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.119029489 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070523027 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121282313 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069634144 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106109705 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082391737 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071432427 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100021134 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073498796 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100853995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075055963 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073400664 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097494744 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07054423 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060212345 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098464043 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085409456 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.106189046 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063735606 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076000214 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105797497 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076196152 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095777266 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075332352 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073268894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102753785 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078845895 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074391099 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105774614 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074577797 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09762114 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079000938 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072835684 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095588685 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071066435 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074920556 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099765223 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078703476 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103768694 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070909455 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073005877 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104457248 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07731721 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072102205 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.103321018 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068928844 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.102169659 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077116196 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07514315 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103989931 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069970391 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070818699 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100740247 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058330387 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098662615 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058160542 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07418216 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097517847 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071388205 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073246313 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109788615 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085264649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101679782 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07789144 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098751776 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0718474 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074911503 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094534714 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075053647 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085066526 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117283205 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07098609 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.098959445 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084405859 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104396491 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07160224 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059098725 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107368269 seconds)
  done (took 10.282447376 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097113297 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122813238 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074809567 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084468091 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126851253 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096138963 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.108144266 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078385965 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071887867 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117912071 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071444693 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108204564 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075923142 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079294167 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125626263 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07808945 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102442434 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080716336 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.107043853 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.109470459 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083307064 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114702527 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081572369 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100792661 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076050324 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082244055 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128773845 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080915879 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109847551 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085767767 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109245261 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099385962 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086192681 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105727574 seconds)
  done (took 4.444560239 seconds)
done (took 40.24121093 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.270797978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.457501615 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.226278586 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.187604224 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.259209142 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.246462338 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.239442115 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.227952265 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.83204684 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.22979329 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.502346689 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.929514147 seconds)
done (took 60.784158852 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.246158377 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.372871867 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504306029 seconds)
  done (took 4.048752644 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.586123283 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.267950128 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.523414261 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.231767603 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.231660038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.685050777 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.925555627 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.096532769 seconds)
  done (took 28.132518254 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.24215383 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.613334522 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.850369275 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.845115212 seconds)
  done (took 18.723387032 seconds)
done (took 60.909152343 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.240765522 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.276987305 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.252902121 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.216429244 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.340967177 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.259413859 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.590429786 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.456462362 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.243197716 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.214620401 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.259870232 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.240377166 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.228874762 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.559655473 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.233197622 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.225298956 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.239988504 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.714308461 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.611617335 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.240833658 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.274250338 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.262353849 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225098099 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.225762235 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.224132251 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.222370236 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.242258912 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.23036026 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.475922616 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.224958619 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.316829151 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.767767901 seconds)
  done (took 192.50904769 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.223151926 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.217728298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.319925067 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.247436383 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.637569624 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.42351884 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.390005593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.711921607 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.242454444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.243553665 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.403117069 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.225073153 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.466066893 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.209041495 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233763844 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.225573857 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.455885548 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.484410908 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.251902705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.486957968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224251344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.353948381 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.281098825 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.378655046 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.250584658 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.257334465 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.249713258 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.257071377 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413425426 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.394652233 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.234986851 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.238527417 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.797716614 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.082568948 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23491465 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.232266386 seconds)
  done (took 150.144860244 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.502064146 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221077128 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221813147 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223303946 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250936197 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.22135131 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.744446373 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.745940683 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.72482635 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.821710475 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285411443 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.420131212 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222240394 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31350996 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234330431 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.223861282 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23638053 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247038502 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224935414 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221286177 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.743882762 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236612032 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399859834 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228437239 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222317336 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251809979 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.613764908 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223042625 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251411474 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.22254544 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536567427 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.268186085 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223044113 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.499001079 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.036834236 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331921366 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223940216 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25082358 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.220958163 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487020034 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.222580735 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.222279174 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.225005235 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.797042021 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.224908177 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.738944808 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2249277 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.094861082 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.221962845 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221763817 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.468528128 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.689598204 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221896773 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220757481 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.224930512 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.219824563 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219565624 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24898742 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.493225126 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.317833493 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221271814 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.224608638 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249386098 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.220727479 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.257255591 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221287577 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.220373204 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.22014348 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336417336 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273618402 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.723776969 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224092682 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.404109086 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313350071 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336003175 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219801278 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.220397006 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.220871221 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.221004435 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324875272 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.220841555 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.593906664 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22756882 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221869383 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279168017 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221536544 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311197901 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.220946624 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49100743 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222900101 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220508704 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.894110732 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31399088 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.222884621 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.220289599 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219624986 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.597218208 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.723482626 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.352700944 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222601349 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.503215883 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22276753 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.602590913 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700034713 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.77791341 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.224212848 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323501649 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223367342 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221696413 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219640183 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248738311 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220213391 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278003655 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.221265377 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612471274 seconds)
  done (took 346.215190657 seconds)
done (took 691.544754423 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.907149216 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856315815 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.985934692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.874741592 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.849665648 seconds)
  done (took 10.632795997 seconds)
done (took 11.792438437 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39853526 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398073022 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274928342 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399575011 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245401535 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414296474 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376893937 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241863483 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318721411 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.29124312 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319881801 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265744813 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24567836 seconds)
  done (took 18.351207466 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528768906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518454091 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282388904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.566960745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260226313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532533001 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413134477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430052023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412029198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233169268 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231139518 seconds)
  done (took 16.56866111 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525643042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52348647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285202637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522939314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259735777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.574872078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414236369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426564239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407075705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232820109 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232578141 seconds)
  done (took 16.564831812 seconds)
done (took 52.644929166 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.227950982 seconds)
  done (took 2.387511397 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259846699 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423558566 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243349944 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.232781543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22963665 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229449242 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233921566 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228947893 seconds)
  done (took 11.242546134 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225734205 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228176708 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.224815863 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227849317 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227594206 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225011547 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228171261 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.228939661 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22743402 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228568443 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225444157 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225863628 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.225944937 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228122438 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.228515284 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225507025 seconds)
  done (took 20.792354751 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227045422 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.225334486 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225757447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227528909 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.227278009 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227310966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.226955697 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225493051 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225831371 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224679718 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.22618232 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225792481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226245178 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226534573 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.225325042 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226456728 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225368681 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225914807 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229810511 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224957026 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225985031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.225109839 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.226973943 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225793456 seconds)
  done (took 30.592906817 seconds)
done (took 66.17597418 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.121295791 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.702851513 seconds)
  done (took 8.984635017 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.227497518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.227753981 seconds)
  done (took 3.617045945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.227971203 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227600432 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228951135 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22713852 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227335971 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.227070108 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228084294 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227168711 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.226651156 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227532878 seconds)
  done (took 13.435344803 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.227145735 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227239715 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22466984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227514801 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.228917428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224863273 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227031173 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229299427 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2278242 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.224883734 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226995046 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224993235 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.227280624 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224804413 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227424174 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.226601001 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225379346 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225118741 seconds)
  done (took 23.240918528 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.227061154 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227463953 seconds)
  done (took 3.615283174 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.226654396 seconds)
    (2/7) benchmarking "second"...
    done (took 1.226022915 seconds)
    (3/7) benchmarking "month"...
    done (took 1.226982723 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225461437 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.225686037 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225901656 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226548854 seconds)
  done (took 9.744202754 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.228410969 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407386252 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486996213 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80852617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229177822 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.232036963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070956819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230891605 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233595145 seconds)
  done (took 14.08956083 seconds)
done (took 77.888589852 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.197449132 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.219976944 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.016765171 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.234806129 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.237913384 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.562405229 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.234895108 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339614595 seconds)
done (took 37.206209302 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.239712031 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.882064332 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.91839966 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.229828457 seconds)
  done (took 11.192907037 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207506373 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.079419052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.208736453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.175320142 seconds)
  done (took 17.833301353 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.793143479 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55495078 seconds)
  done (took 4.509483936 seconds)
done (took 40.937278252 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230046057 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229180412 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.227153054 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227217757 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228658787 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.226870181 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.226472053 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.230435385 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.229639469 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229376571 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.229815855 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.229170179 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229940299 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226535543 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226998687 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229627716 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.227601468 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227023341 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.227139843 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226364741 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229999423 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229867906 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226848683 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229834483 seconds)
  done (took 30.645916814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.23088228 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228713009 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229937524 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229479273 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22766155 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230669918 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230359852 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228239788 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230028318 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230059024 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226988012 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227704482 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229896068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.227743253 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230779641 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228100001 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230597943 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228065688 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23037025 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228119447 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230255854 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228083877 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227952214 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230481926 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228785059 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227892665 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230389667 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229486142 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231325481 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228188216 seconds)
  done (took 38.041507848 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234765025 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237851331 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230755113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231120534 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230488819 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230653531 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231645297 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.231414734 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231835059 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231165663 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230805506 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231132597 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231283008 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230762678 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231584072 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230964518 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231423881 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231639351 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231746931 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.232127303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23314253 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231859673 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232193087 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232114172 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232443286 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232009169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231918741 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2323012 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232535954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231971794 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2315307 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232925006 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232626128 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233427354 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232840285 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232068452 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237053688 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238688827 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232198414 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232998211 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.23251391 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232593392 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233547394 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233038652 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234037524 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232161698 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233008609 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232898113 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233204889 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234151877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233157341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233148326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232298604 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233426883 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23305373 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23358227 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233742759 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233613958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233739014 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233049076 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233355119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234055242 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233243961 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233470748 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23335338 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233512401 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233538975 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233446071 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233062971 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233996894 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23360751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.233741422 seconds)
  done (took 89.927238838 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234410139 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232276049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231438507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231773577 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230958001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234185909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231404435 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233908239 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23230226 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234132061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234182538 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232990815 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232047574 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235566236 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235208896 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232624645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234781156 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232171422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234606582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23507236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235039253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232391937 seconds)
  done (took 28.300909257 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234521634 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235619611 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232176893 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235295809 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233727729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236046975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235573578 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236450841 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235263368 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233391405 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233128862 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235310756 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233525797 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232790013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233830269 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233551678 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236174262 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233392813 seconds)
  done (took 23.388529066 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233729309 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232943216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236092345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232707368 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233854721 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236104996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232509156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236878959 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236001071 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23377929 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236249198 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237286936 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237157921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234127634 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236651555 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234365829 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23737104 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233707432 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236776861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234779477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234817175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237085071 seconds)
  done (took 28.344419524 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23697617 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236799189 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234482676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234747569 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233865709 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236822237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.237436627 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234921713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237784993 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236650245 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234610751 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239014506 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234454443 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236445627 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.234714879 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234537345 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237660838 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235819604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237812697 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235660313 seconds)
  done (took 25.891781524 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239622508 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239257797 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238873601 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239779434 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240439806 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239557566 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240016178 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238747681 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240550546 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240163331 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240147436 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239235431 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239987016 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238982653 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239063576 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240098725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239656855 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240359942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240495021 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240363345 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240960608 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241412061 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240596428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240047772 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240048885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240309399 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240284678 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240480465 seconds)
  done (took 35.89156118 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239142006 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239841603 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237507564 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236865886 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237622871 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237100862 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236927778 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237660584 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24064184 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237632038 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240341503 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23947494 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239781692 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240115453 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239639021 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240518518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239842901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237935031 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238397523 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238887646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240080314 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240427834 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241117276 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239111641 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238802823 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240424224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23817965 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239074018 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240165253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238593886 seconds)
  done (took 38.34523021 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.259908438 seconds)
    (2/2) benchmarking "in"...
    done (took 1.258983893 seconds)
  done (took 3.692405984 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238354058 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240620897 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.239772491 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238097419 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239016643 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24114316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240346982 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238352841 seconds)
  done (took 11.090004783 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241879495 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240322077 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241024059 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240983267 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24282471 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24277296 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250997718 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257405613 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244563592 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242706085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247481831 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.248984292 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245111657 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243264567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.241997467 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243929193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242072997 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.242176534 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.242270566 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.242378205 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243260701 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244640846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246875049 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.239420155 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.244091555 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255029509 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.247231536 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.242316493 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243541506 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247256502 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243366479 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241445519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243706034 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244027627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24260327 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.243839552 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254710496 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259178301 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252251053 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244443866 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24387917 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241176677 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245665092 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245463574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24589159 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244381007 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244699339 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240885178 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244809168 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246057039 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248143322 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244210452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241145283 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250046211 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.245603061 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253466631 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260217738 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.247530104 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25230362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.255939234 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257413159 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252227388 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246475076 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245299312 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253456034 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264939562 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253890636 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257661274 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.242375864 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244631563 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254421016 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25657523 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.253067282 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.245051051 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246356449 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.245658618 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246094958 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245698196 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254623161 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265454706 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246024156 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245995263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255019723 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264559545 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24522204 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245528235 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245805412 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.246085937 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247074367 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258699298 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262505128 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246189293 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245153559 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.246076621 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24747658 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247077844 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.245219203 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247480766 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243458188 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.246775739 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247227675 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250467065 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254863189 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24696018 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247585241 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.255354342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246919577 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246911554 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255802346 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246271164 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247893155 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24792908 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.251792327 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244461128 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249763162 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255028683 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247807444 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249280532 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.247406327 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248080059 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255921838 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270909527 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248344293 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248103242 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25331736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257862893 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248058263 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252033673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24784826 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24610111 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245439002 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249969076 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24855255 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248721447 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248971007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250063685 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.24558053 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248334476 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.249163662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24969224 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.251116255 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243673007 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243981524 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.245723111 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243454111 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.24529777 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251295955 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.243136488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246705765 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241218658 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.237767658 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240990862 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242619788 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241273775 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242100457 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240621584 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241039849 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239092573 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238199398 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239039357 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2387809 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238285058 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244750191 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239967071 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243484135 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238204378 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236514668 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238270696 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239262616 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23878826 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.238490924 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238019317 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.241013557 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24482928 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238073631 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239700474 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241048941 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240010163 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240083058 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239625017 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242167589 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.246348505 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239368062 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246611318 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240327987 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240617142 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.239357504 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240595488 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239841602 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240683638 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243064508 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247380541 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251331458 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24825244 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241407499 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244115568 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2420467 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.2446693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244491518 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240995107 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241253288 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242540096 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241074353 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241501626 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243318142 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241993805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241246141 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242194504 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241906646 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242967204 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241496056 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.242727137 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24222642 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239502654 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242602958 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242063687 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241164944 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.239896948 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.240699257 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242033571 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241957434 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243186023 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251485749 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239522631 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243408596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243131561 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242132293 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241106851 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.243252714 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244432309 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242695732 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249958664 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259979321 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245006201 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250790492 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.258423246 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.242476841 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.246930767 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243062636 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241454566 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245578008 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249675777 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243138527 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243778843 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244628008 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243617348 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243733136 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252153764 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.240146265 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243767875 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244221259 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245233243 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.240844457 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245180154 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244116978 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244301528 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245931156 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242954393 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.244242112 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2456461 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.244390913 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244825506 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245341561 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246159036 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.251209943 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251231294 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244276945 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246024596 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246153929 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.247733836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245633563 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24500105 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245524834 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256402509 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252955422 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252012741 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.248321745 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24414747 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252888562 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.246128604 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249540344 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245183727 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245764425 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.246009895 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244139382 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242890269 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24587471 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24527822 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247342718 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.246425953 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248848566 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245839828 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.24560545 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246403269 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.246269696 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.246009607 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246074149 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245464935 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.248149402 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248065669 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245448241 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.246929385 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254988417 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261697801 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249039232 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.245348348 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246537628 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.245926891 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248357161 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247994882 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250383961 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.25374655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.249476956 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256752935 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248453589 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256953962 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.247192869 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249991762 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253758084 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244723778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.245780883 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247595983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248098077 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256059932 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26343583 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247928572 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251611724 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24838457 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248554772 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247779877 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247592179 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247575919 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247913721 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257388494 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.265238292 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251979581 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250260979 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24534983 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249208424 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248670272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.247910679 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254365666 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248339219 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.249610451 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248491151 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.249225368 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.249491666 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.249436276 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.249176464 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.246776091 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.249210348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257625873 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265697522 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253150256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24941789 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259164537 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24950711 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258858051 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265614013 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.250036947 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250431531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.250079152 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.251895579 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.249412752 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252310142 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.250886162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.251130315 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252527177 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.250094112 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252478104 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252182384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251772405 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.250801182 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260047884 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271177389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251805364 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25387992 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248111748 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252202281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.254681406 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251035182 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.249523241 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253730357 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259439522 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257214798 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.251618502 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250457117 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252247288 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250988461 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250236118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.2516086 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.251001799 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.251834146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.252180338 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.252227383 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256582982 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250961394 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.252735583 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252296802 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.252966072 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.263411151 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25236551 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.253260869 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252247628 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251385507 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.252499369 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.252271015 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252345792 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252458809 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251515255 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25256349 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257870313 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257823918 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.256008014 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.251685676 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252690379 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.253082835 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253152298 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252884079 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252361885 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254593516 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254447004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252339221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253440534 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.25130152 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252925642 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.253115682 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25250336 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255051793 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258581688 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252909108 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.249299333 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.25213736 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252704919 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.252458178 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25386426 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263439764 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256431666 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.262048178 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261034032 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257206672 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.253879869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256995112 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260838633 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.254226006 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256132101 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255138434 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.257031349 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253997768 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.257765331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254860549 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262384635 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.255114749 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254877336 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263958744 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271682003 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253788807 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.255383349 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258524509 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.254415066 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251650846 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.254245956 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.254638233 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262770764 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273424804 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255290822 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256432608 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.25314922 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25693829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25879167 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255310593 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.256507448 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.25203885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255289798 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254971926 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255602487 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.252987756 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.254817278 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.255290212 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.258674341 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.261261839 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.252738541 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257755298 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254459117 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256392027 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256251476 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255376783 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.253596944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.253836287 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.255590027 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255991974 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256609875 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.260507112 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255522056 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257556739 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256969383 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256926598 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258475983 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264310487 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.262672079 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253955944 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.256413666 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.257053998 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.259863912 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256320349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256831446 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257004316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.260081265 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256343697 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256726738 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256319218 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25871734 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273579438 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27122988 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25766252 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257580396 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262637763 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256808665 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25420453 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.257094852 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258925286 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259690043 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265437243 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257731947 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267280913 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272756957 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258189507 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.261136284 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26052148 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264998314 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26197504 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25815463 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258367888 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262553676 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273623089 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25821163 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267168967 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286638769 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274950407 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.260151574 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259131871 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258339594 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258981273 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260905226 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.258363707 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258766366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258297666 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258340709 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259236186 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263096213 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258228822 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.25716578 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.257368632 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257377672 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259015848 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254925601 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.258258725 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.255074691 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256228454 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.25620223 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256672804 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256576246 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266701496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265207659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25634719 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25464398 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.251662849 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.257823914 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.256473187 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262455391 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.259194495 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.254140131 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255016633 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254375181 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25275312 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.249969385 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.254049117 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.252514731 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252833416 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.25022804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.265068917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260875408 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.258857384 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.252964097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253456911 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253368786 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25514575 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252795851 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253914374 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.255424083 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.254083267 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256910927 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.254626033 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.253447366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.255724473 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259981488 seconds)
  done (took 746.612711424 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25211958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251338668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251642743 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25200505 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251085743 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251692592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251283739 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252036548 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251339129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251476022 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251503609 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252489316 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252124101 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252335252 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251930387 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252619124 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252677547 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252473013 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252162814 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252376618 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251996317 seconds)
  done (took 27.477810335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.254350631 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.252592749 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251923256 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254441646 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25251547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254785617 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252980544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254875882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256113132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252410023 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254682943 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2554584 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.252623142 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.252432046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252428863 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254523122 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254867366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252748417 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254571294 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253003522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256246812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253102695 seconds)
  done (took 28.772361589 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.256824267 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.25595701 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.25646335 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.253333221 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.256330529 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.252888061 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.256630973 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256282567 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.255182417 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.256568245 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.2552046 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.256995536 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.261076398 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.25905501 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.25860103 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.255005995 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400404184 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.257056186 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.257479909 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.257153916 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.253377965 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264366026 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.254732798 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.253677283 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.255796221 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257695923 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256882637 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.256840355 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.257829813 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.258428645 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.260661124 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.256520043 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.25679406 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260279559 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.25764372 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.258289764 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.260673892 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.257645779 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.254686292 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.256903664 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.26609491 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.274447482 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.257805438 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264038558 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.258269796 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.256897143 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.260563958 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.2647961 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.25509173 seconds)
  done (took 62.972605132 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.258342844 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.257778089 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255005272 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258051051 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.257546018 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.257579921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.258051916 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25774001 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255429013 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255512704 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.25848765 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.256066512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256484744 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.259162363 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.25898272 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257164123 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256357862 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256345769 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.256220732 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256597212 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256245494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.259142329 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.259355174 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.25736494 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258795243 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256968449 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25662406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.259315229 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.257149574 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.257009541 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259470303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260174493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.259756933 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.257508869 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257408489 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.259340508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260654277 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.257899594 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260604533 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257186127 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.260198542 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259961739 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260236838 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.260778579 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257096932 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257768903 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256910287 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.259076598 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.254714249 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.257648389 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.256476021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.255658794 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257470508 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.255096238 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25677491 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.259723184 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.251831798 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.252201272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.255048991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.2529734 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.251683079 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255144664 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.252973816 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.255433653 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.254629198 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.25257417 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.253644577 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255544227 seconds)
  done (took 86.672853143 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255488057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255525108 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255459663 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255261899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255781509 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.25552082 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256351322 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256784867 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255971657 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255676813 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255967014 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256364703 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.255580153 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256153942 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256787914 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256578808 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256138436 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256931456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257085373 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257024314 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256884385 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257148094 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256230501 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256864867 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258041182 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256916424 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256336629 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256493722 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256977814 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256380987 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257156128 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.256976381 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.25669171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.257599529 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256953954 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.256881498 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257256087 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257259916 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.257146776 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257112443 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257712891 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257051346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256989368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.257598581 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257366289 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257181025 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257756645 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.258199897 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257753975 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257441148 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.257950083 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257533324 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257651783 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25795144 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258272483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.257950143 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258737196 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257498262 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258534339 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257620808 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258483701 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.258040831 seconds)
  done (took 79.122783291 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258216283 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257578207 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.255449054 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.255498211 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257779383 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255437236 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.257843626 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.259251158 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258360007 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.258322297 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258615972 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255522022 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255319408 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258313623 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255711899 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256546548 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255877681 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256366829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258684391 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256355486 seconds)
  done (took 26.332024675 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256840112 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.259346776 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.256808078 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256738763 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.2590194 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.257008968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.259674058 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259169867 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256774529 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259053505 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260019838 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259930422 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25646423 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256886062 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.259441668 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256328192 seconds)
  done (took 21.321548828 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256836266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.259132286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259420924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.259928803 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.257424453 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.25769624 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259612055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.257472469 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.256714747 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260480123 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26046656 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.259811524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.260056241 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259789611 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257772087 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.26059274 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.258426353 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.258509733 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.259992246 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.260896384 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.258488151 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.258811242 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260166117 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.260478616 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.25799204 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258606018 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.258362138 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.258252584 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.258646336 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.26070402 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258366315 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.259928067 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.25803509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.25867528 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.261164536 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258923989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.261808335 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.26120545 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.261524927 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.261446004 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.261610765 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258561644 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.261558656 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.261170759 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.2598269 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.261834664 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.259427571 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.260223886 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.259443802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.259165758 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.261280902 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.261994765 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.262997585 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.262819522 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.262531846 seconds)
  done (took 70.481229972 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262076644 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262268832 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259701209 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263206489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262680048 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.2598664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262359648 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260400427 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260445921 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262457891 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261930752 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.261934174 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260698148 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262380748 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261790899 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263487132 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260263719 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261878395 seconds)
  done (took 23.904671957 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.26075237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261897478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.263230195 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260893156 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26098756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263885061 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261611603 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.263614624 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263056025 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261274142 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261236482 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.264068953 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262796038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.263993844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261582867 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260917458 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.2639505 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263371113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.261709817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261589922 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264049446 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264514166 seconds)
  done (took 28.971211566 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.263060543 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.26401836 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.278585133 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.302150569 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.289864591 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.263369539 seconds)
  done (took 8.856935648 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262488152 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264422583 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26196495 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264394651 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264511538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261452977 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261732059 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262227938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264003544 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263004934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262025237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264418087 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265470517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262421073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264892348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265181577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262104675 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262301479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262969258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26500135 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262438017 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264881582 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26319586 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262276062 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26257267 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262988406 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265759974 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26339919 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263104413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26624872 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265525916 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263758241 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2656172 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26390515 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266556364 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265921013 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263604666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26632299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266055384 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263905769 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265905322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265343106 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266790987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264616988 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266761335 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264924614 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263756943 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264059518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264478514 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267438362 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266324076 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264070855 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265913351 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26725064 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266502948 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267288428 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264739754 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264407287 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267224375 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264548175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265126321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267915152 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263943628 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265434119 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267733639 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263537806 seconds)
  done (took 84.660697632 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265445646 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264792703 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264840136 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265715833 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26416672 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264540125 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265559648 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265192551 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265548122 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264645693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267071398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264394547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265468152 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265798207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264568526 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265134068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265015728 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265109009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264831955 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270351226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266084823 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265331949 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265552281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265804731 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266345377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268588136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265802183 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266065455 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265416781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266092795 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266143124 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266244722 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266542284 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265726592 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266544345 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266408889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266239102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266930969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265861881 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269171591 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266868761 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268811917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265981336 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266834918 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266905034 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266833901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267135817 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267006567 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266660496 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267761983 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267118506 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267931574 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267305189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267760318 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267210336 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266854429 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26729824 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267753795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267682905 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269639568 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266822119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267562158 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27017342 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267971225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266707815 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267106285 seconds)
  done (took 84.789775023 seconds)
done (took 1735.671998981 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.351455601 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.318151924 seconds)
  done (took 13.871464567 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.432138571 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.38536919 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.269239955 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.299021766 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.269964661 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.266819858 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.271539945 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.269983782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.270017483 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.269968041 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.269577124 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.457547302 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.319614186 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.268679629 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.267903027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.359051383 seconds)
  done (took 42.152644789 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.286040906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.271928292 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.372056834 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.285419481 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.292003575 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.438833552 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.321668814 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.269680745 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.419258654 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.303119971 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.669609302 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.28929142 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.267348022 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.262232569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283911447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.433435996 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.491077441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.675599322 seconds)
  done (took 28.830703535 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.660051245 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.258563423 seconds)
  done (took 9.112125291 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.264870595 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.277220389 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.294493471 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.285847012 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.267371672 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.291719502 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.285013869 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.248247723 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.25682756 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.269798698 seconds)
  done (took 63.941256725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.269487419 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.251333083 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.250874573 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.249156717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.245859011 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.241972064 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.247061466 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.244825658 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.46574726 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.362033404 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.263294436 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.251515726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.245570694 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.25087447 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.242239703 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.28029035 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.372098198 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.242186523 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.242170562 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.249826649 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.245462366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.328205387 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.282763347 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.24441724 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358659706 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.520606097 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.247858872 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.254059185 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.350201631 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.240977858 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.242636054 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.243563226 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.245440118 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.789183233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.673638485 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.250016403 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.266290445 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.252183783 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.241813465 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.369451938 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.242384696 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.247262792 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.23960787 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.642771983 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.392711092 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.345123073 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.384877601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.244101967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.241479333 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.29863319 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.241694063 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.242011915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.268754079 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.9644457 seconds)
  done (took 105.296839446 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.284555662 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.721159022 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.404248879 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.254822817 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000311314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.859816575 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.236138805 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.490666899 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.246550238 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.235944651 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55296374 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.705998334 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.24392238 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.247056092 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.296912774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.323617399 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.236187625 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.972748551 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.234420202 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.235036576 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639343076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247637521 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.232462315 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.390808528 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.270566216 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.663720937 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.483844821 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.512095178 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.236811283 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.232286985 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.663161983 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.23629354 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.292050091 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.232183728 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.488627862 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.551940243 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.533309786 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.230930409 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.24291571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.23193585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.233910617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.656716671 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.541624294 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.230849241 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.23398341 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.662236361 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.230701655 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.23631288 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.237601183 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430936623 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.201739799 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.231704666 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.4821066 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.232056656 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.573967282 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.31632566 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.326823931 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689338745 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231079693 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.178577736 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.242798714 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.231313041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.234928779 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.230748452 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.237065735 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.547107477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.381363129 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.237689861 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.547072965 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.656532826 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.240798285 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.721790655 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.167499871 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.243306329 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.313165406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.238590926 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.778159526 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.686327105 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.263507667 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.229789549 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.527528741 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.228732326 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.531656772 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.237553066 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225951948 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638879704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.239074416 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.238585705 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.22528755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.224934924 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.849502067 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.225283444 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.476222523 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.252560742 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.224384066 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.223946832 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.227631516 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224604088 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.238067192 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.229997851 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.715654428 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.223656915 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.512503386 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243231967 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224385411 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.22439781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.225525608 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.22549521 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.441677542 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.751367426 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.22996643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.226041829 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.224412208 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.232818766 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363414318 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.232391335 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.499766785 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.224394169 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224512254 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.231155219 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.869804055 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.228847092 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224439924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.228049697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.075975519 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.434294952 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.242109141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.225434093 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225391835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23810924 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.436367267 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.226850816 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.267588978 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.229448733 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898104333 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232076368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.236692826 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.849519104 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.23528269 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.10504594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.24599098 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227190033 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.524867682 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.487332433 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.309345081 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.227599589 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.23945247 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872753572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.253714283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373415152 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.245352348 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239760901 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.424272099 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.663872196 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.227613243 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.795060057 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.22847584 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439967813 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.226799957 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.537951657 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.68155469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.227146696 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.231572324 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895241712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901667512 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.863749685 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.229522457 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.543522033 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.220147187 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.672891433 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.226952046 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.227236656 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.655281773 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.229754201 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.230501786 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.228890928 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.226881031 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37923799 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400907923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.465779962 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.228019939 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.656511722 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.238935658 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228068856 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.241313854 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.229710912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.580700615 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.231993763 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.233184775 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.267094154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.228006999 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.228947635 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.670001151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.163831815 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.228218169 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.380935238 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.826322251 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.229712866 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.228173398 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.919769862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.517673664 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703373859 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.24476398 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.506837861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.227229565 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.267148495 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.924409554 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.269046112 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.669793954 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.231608416 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.229395081 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.788873841 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.229671552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.579374925 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.230009811 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.231311022 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.723726307 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.230609202 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.231457948 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.447337237 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229005524 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490556073 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.229580817 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.241753971 seconds)
  done (took 1085.288377559 seconds)
done (took 1349.69697472 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.230658676 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.233468726 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.217147248 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231421547 seconds)
  done (took 26.083575364 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.239203918 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.237343235 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.237532452 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.235376119 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.237756647 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.235878833 seconds)
  done (took 8.593525507 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.264898602 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.232273289 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.231802164 seconds)
  done (took 18.900457074 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435612459 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.45992683 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.57365661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.259633037 seconds)
  done (took 9.89994304 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.238528084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.238084327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.238253502 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.238519773 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.241289096 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.242711669 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.238664256 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.239361647 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.24215086 seconds)
  done (took 12.328250552 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.843953772 seconds)
done (took 81.821604935 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.401282398 seconds)
    (2/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.357098162 seconds)
    (3/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.747329564 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.255254882 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.360251306 seconds)
    (6/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.35516341 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.333410414 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.664958932 seconds)
    (9/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.583051296 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.328532277 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 6.231279717 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.780069035 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.412583272 seconds)
    (14/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.394369357 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.021334428 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.493202748 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.372831938 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.087378783 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.273175488 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.231841712 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.258836378 seconds)
    (22/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.389928529 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23134986 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.515982158 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.804910937 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.950362881 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.258555988 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.217622224 seconds)
    (29/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.727337508 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.00797086 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.775160845 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.827544569 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.348364125 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.641816957 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.835481685 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.317194523 seconds)
    (37/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.700186855 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.257331203 seconds)
    (39/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.231801067 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.62219821 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.233430127 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.244146248 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.086692423 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.335370772 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.506131145 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.466656689 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.242885634 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.233363486 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.412529495 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.978369575 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.259189769 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.233854924 seconds)
    (53/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.317320721 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.344944308 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.279047717 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.498790252 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.399647612 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.283516476 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.563193419 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.25784701 seconds)
    (61/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.343974731 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.51933372 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.442724297 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.21987439 seconds)
    (65/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.585140685 seconds)
    (66/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.678575884 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.29131104 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.233287607 seconds)
    (69/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.233756302 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.234168258 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.548972366 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.983933017 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.245298684 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.044516371 seconds)
    (75/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.236559759 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.262649935 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.220655929 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.431683999 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.273575505 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.234554147 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.572234134 seconds)
    (82/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.737406236 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.360318991 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.279611996 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.298441814 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.249171443 seconds)
    (87/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.404694013 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.237588662 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.260133654 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.234995825 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.236827448 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.548288601 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.57177824 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.028794993 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.801440262 seconds)
    (96/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.333039198 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.249203232 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.660851557 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.5694211 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.27415761 seconds)
    (101/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.567859507 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.699683276 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.768658245 seconds)
    (104/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.248671264 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.345618322 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 5.208820093 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.093661507 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 4.271172516 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.766874482 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450814111 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.844365296 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.683221362 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.643986891 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.536499986 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.25509759 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.010893511 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.237054151 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.285159265 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.225439867 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.269263698 seconds)
    (121/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.273225998 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.453503899 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.541853674 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.24049487 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.541382771 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.554385061 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.574616833 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.862152199 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.746907189 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.260394805 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.03364834 seconds)
    (132/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.799277694 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.507678039 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.222761728 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.726489405 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.521303718 seconds)
    (137/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.490158606 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.225778861 seconds)
    (139/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.240972307 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.931118951 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.512615136 seconds)
    (142/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.229958486 seconds)
    (143/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.361084925 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.49544646 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.28909131 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.340099386 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.472595316 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.237983483 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.581498933 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.59164969 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.436117653 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.951364886 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.238897468 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.264512311 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.618077681 seconds)
    (156/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.320041599 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.419389897 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.260958731 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.498012389 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.267235378 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.45894079 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.578651477 seconds)
    (163/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.436978187 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.409327716 seconds)
    (165/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.759625334 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.740067913 seconds)
    (167/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.595055919 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.663498717 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.321540452 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.0931697 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.35956247 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.764204131 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.238648851 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.237258553 seconds)
    (175/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.021863425 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.26516163 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.639136219 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.246778267 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.384184345 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.251400176 seconds)
    (181/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.266254996 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.24839038 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.265659014 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.32182288 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.60343164 seconds)
    (186/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.249428859 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.280701287 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.265402212 seconds)
    (189/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.001543662 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.762842524 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.42713373 seconds)
    (192/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.371415181 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.579561815 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.280214121 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298294389 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.342739748 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.928670533 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.240388235 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.226354513 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.259271093 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.298089436 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.420384152 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.24278217 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.799213653 seconds)
    (205/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.301474403 seconds)
    (206/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.32212441 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.800878952 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.527944642 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.96045983 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.824885465 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.27957405 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.239801756 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.932024557 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.257249099 seconds)
    (215/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.415027582 seconds)
    (216/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.240504172 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.323341913 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.880473504 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.455664468 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.570103148 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.30766101 seconds)
    (222/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.578164963 seconds)
    (223/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.343537595 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.325933284 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.653185392 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.24052636 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.058929297 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.85051002 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.319527402 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.263648392 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.240754338 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.243645965 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.539079152 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.265779189 seconds)
    (235/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.261988803 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.53546218 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.450718967 seconds)
    (238/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.272747609 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.294371786 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.376095553 seconds)
    (241/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.239164857 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.036995667 seconds)
    (243/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.253057436 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.243804801 seconds)
    (245/309) benchmarking ("sort", Float64, false)...
    done (took 5.52335261 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.289757882 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.341067625 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.315823811 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.226789742 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.953927895 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.258512777 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.942574936 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.490069355 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.233163306 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.301295534 seconds)
    (256/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.25594954 seconds)
    (257/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.073188406 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.243858835 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.384909154 seconds)
    (260/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.306216411 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.548182636 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.441583125 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.085391355 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.921019418 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.229660497 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301581321 seconds)
    (267/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.306937393 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.635773999 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.535178839 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.36551719 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.62827112 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.712603101 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.980037504 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.841261572 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.278511602 seconds)
    (276/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.938019353 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.242440334 seconds)
    (278/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.244676311 seconds)
    (279/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.968288919 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.349767183 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.401216417 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.310050559 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.32606171 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.426346755 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.072714231 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.37397647 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.270119326 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.978634524 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.245598055 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.267745171 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.822122198 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.47173994 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.518086382 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.947275127 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.286341969 seconds)
    (296/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.26987566 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.830522448 seconds)
    (298/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.406864243 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.801095864 seconds)
    (300/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.028362184 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.27012085 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.293493522 seconds)
    (303/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.849795475 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.267538117 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.348277158 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.081347411 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.3450102 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.662508171 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.060934249 seconds)
  done (took 881.597997794 seconds)
done (took 882.77345724 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.278061434 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27207537 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.25566417 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.277634503 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.367437122 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.284643064 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.266056273 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.258050207 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.30477648 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.305140853 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.254597316 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.28238987 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.257513609 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.25618032 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.255477532 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27049718 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.214914988 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.257424424 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.273228657 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.264796855 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.272306903 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.254676481 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.306078846 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.282930483 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.260375304 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.259280282 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.259544627 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.276533002 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.368130726 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.259986461 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.25993978 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.268080526 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.214990535 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.255398175 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.251410532 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.27640539 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.267423313 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.266217809 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.260447628 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.289043637 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.580464928 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.256511816 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.257924549 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.257084333 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.258358823 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.262199644 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.258607261 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.262942791 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.270318306 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.270924719 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.57049512 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.272702399 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.260941956 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.257931985 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.268732845 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.258226149 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.261739078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.274541502 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.277792931 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274047149 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.205530833 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.263628589 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.260649002 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.275735966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.26585938 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.612997414 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.254635674 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.263532517 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.586914015 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.26411354 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.611400384 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.266610022 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.260256588 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.273905265 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.290982018 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.220947176 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.254305182 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.258470134 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.26625593 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.257847574 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.268824909 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272048162 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.263476125 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.259908867 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.273454088 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.287577272 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.269919868 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.260256356 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.268739901 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.279190966 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.267215316 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.270560938 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.262961628 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.254950186 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.269304095 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.26385882 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.262920226 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.262124201 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.26521854 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.270585842 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.58697319 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276524382 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.256596868 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.25752695 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.259755343 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.274181626 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.589100686 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.261424393 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.282518949 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.307380573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.261716195 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.210619213 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.264664102 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276284429 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.269131579 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.263590224 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.255905679 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.210853748 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.581295691 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.275439455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.262536888 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.259526177 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277689615 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.262394171 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.258314771 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.225288922 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.263491132 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275444779 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.382570047 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.272526233 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.29196829 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.259987069 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.264342606 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.293362359 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277286926 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.292807342 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.264350545 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276972901 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.277626877 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.258342829 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.272426347 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.272183832 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.263640634 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.26817228 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.256486746 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.290158234 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274720695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275068651 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.283969879 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.382685155 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.259994122 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.212334421 seconds)
done (took 212.570587901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.322277991 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.257470212 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.346380711 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.259419726 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.359306913 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.357765084 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.256703301 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.257206665 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.256928313 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.636090059 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.256343322 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.256820058 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.252796954 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.256261564 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.3427481 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.259379026 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.256964442 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.599302094 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.259948788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.332087386 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.255641275 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.257167143 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.259736195 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.643993615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.257976671 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.260242379 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.331884477 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.259422549 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.607246177 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.256931462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.25964577 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.608536577 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.350284495 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.277210832 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.269462744 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.266982109 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.360695163 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.275695696 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.343037547 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.34281615 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.347951128 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.29868716 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.25539449 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.254778536 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.261307102 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.261202827 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.258483966 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.287154161 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.259006885 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.259236766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.600525348 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.271067079 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.268621856 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.258334537 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.258755607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.281144935 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.258840224 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.262095246 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.352341223 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.262087746 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.324618406 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.645337577 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.639062483 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.260926654 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.261181644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.259262426 seconds)
  done (took 143.529107397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.328662837 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.335786305 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.369125612 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.263047108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.312122463 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.373671194 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.26468989 seconds)
  done (took 10.442395027 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.268602094 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.261936487 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.312485075 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312508627 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.261893345 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.40984896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.263318998 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.273975864 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.259872858 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.315800702 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.263193623 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.263159281 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.269332301 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.258559595 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.311807947 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.274955018 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378638226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.264322374 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.263420213 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.4146949 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26018942 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.269662853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.315177869 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.274837486 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.264126984 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.269415859 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.831294998 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.263704572 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.260446832 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.26297302 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.260282892 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.302373394 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.263862936 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.261890083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.260735496 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379290357 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.263705394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.261707457 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.263713663 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.256668376 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.264150065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.263312085 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.263629415 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.260767428 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.262737348 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.288430378 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.263651957 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.26362675 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.26348495 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.264339022 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.314806593 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.264258839 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.261826277 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.261734306 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.320013599 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.271510801 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.265398577 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.262507003 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.264487064 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.262283977 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.416956616 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312665129 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.264032826 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.312789329 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.26491522 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.264898987 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.264207886 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.26470129 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.319808864 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.265210296 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.313399337 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.262762511 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.418752988 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.289101185 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.266044727 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.268289973 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.268703298 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.265101158 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.261000984 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.271815816 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.263064749 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.266661421 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.272006844 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26303242 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.263517099 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371396789 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37513168 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.263626601 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.279996515 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.273292868 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.263675145 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.319977271 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.265580814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.26396828 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319318945 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.38181358 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.320048114 seconds)
  done (took 146.414884947 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.271811771 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.274448191 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.267307479 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.282441324 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.266740321 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.266694678 seconds)
  done (took 8.828429425 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.269365685 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.26754627 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.266578551 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.265995091 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.266675566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.267618152 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.26680974 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.269157926 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.270590736 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.266994736 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.267358215 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.268260505 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.267816754 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.267703154 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.267489132 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.266866678 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.268686212 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.264212478 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.26665313 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267490662 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.363429367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.267048526 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.268452361 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.26932769 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.270411936 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.268167478 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.276118516 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.267011746 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.268044697 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.272249397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.270889247 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.268036079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.269051303 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.273073453 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.271538033 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.269880276 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270999932 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.269495504 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.265788519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.26832738 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.268988083 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.269080617 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.268588266 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.268954406 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.270601602 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.27362159 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.27258124 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.276243754 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.2692702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.270040161 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.270186011 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.268943731 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.268565224 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.270042351 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.272045188 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273405629 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.274055624 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.269473981 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.269530698 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.270569599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.270263838 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.269832797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.270950052 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.273778063 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.276116406 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.270862903 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.270656518 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.273271454 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270352816 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.269161353 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.270492286 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.267767488 seconds)
  done (took 93.707590127 seconds)
done (took 404.116183303 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.453828028 seconds)
  done (took 7.656294416 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.51898681 seconds)
  done (took 7.721760694 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.661672131 seconds)
  done (took 20.873561266 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.284044545 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.281600605 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.280848354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.268379829 seconds)
  done (took 26.317710839 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.457880057 seconds)
  done (took 7.660736591 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.27519019 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.262911854 seconds)
  done (took 13.741963082 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.648308175 seconds)
  done (took 7.851365491 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.362973171 seconds)
  done (took 7.574069718 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.262675242 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.271662325 seconds)
  done (took 13.976516635 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.2495561 seconds)
  done (took 7.452554377 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.976873038 seconds)
  done (took 8.179588231 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.266903995 seconds)
  done (took 7.470919294 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.313198742 seconds)
  done (took 7.51658235 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.820382248 seconds)
  done (took 9.023742915 seconds)
done (took 154.221859871 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.264083115 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.264043045 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.26397286 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.263475931 seconds)
  done (took 26.258740732 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.305054861 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.303356848 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.306433962 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.315082288 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.307352273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.304270199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.296720354 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.296482702 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.315414061 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.3069098 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.30653901 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.306229058 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.30397879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.297124868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.307554505 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.306533855 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.315787728 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.305437501 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.296112193 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.307859635 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.271976012 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.315809342 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.30723368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.271901235 seconds)
  done (took 32.48212325 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.468010235 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.342316921 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.425088413 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.324499732 seconds)
  done (took 6.76481048 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.323846428 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.32469031 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.337871255 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.374665659 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.41516444 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.334406718 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.295124113 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.29300179 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.279736389 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.32536575 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.400198574 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.340532846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.430688383 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.271704001 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.454209721 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.271448871 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271835364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.326878179 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.376254912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.389683223 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.271896343 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.324449204 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.327852817 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.341264341 seconds)
  done (took 33.308235247 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.271315606 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.279893981 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.278259281 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.27217742 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.27262507 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.272346649 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.278090795 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.273161403 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.293288331 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.273727876 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.270724076 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.27182329 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.271288906 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.272021913 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.271754553 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.286088791 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.286162375 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.272671219 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.275316873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.278367492 seconds)
  done (took 26.727561992 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.266885072 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.238482232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.619126107 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.522899033 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.267340299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.266396335 seconds)
  done (took 28.388057408 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.33906434 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.465594071 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.273978399 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.603069232 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.68087547 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.276558063 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.273649726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.499029254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.780065848 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.777878888 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.328110486 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.337586593 seconds)
  done (took 18.843500046 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.281263203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.26987801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.281932596 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.287024203 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.325716488 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.278531386 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.281297912 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.268607715 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.328053509 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.329920392 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.278408624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.326096496 seconds)
  done (took 36.74523241 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355968599 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312112188 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.101739056 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068216192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408113206 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480944756 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.03909628 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71663563 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.273780302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543397217 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253610325 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372574622 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.52428977 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276315648 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272131082 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.23228489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49487792 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745141464 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273295574 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.123117206 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298642899 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270762963 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.22100586 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.299589922 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.482780446 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.250596226 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.531417295 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046790579 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539867866 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284917121 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282069776 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271757342 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546118302 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896587141 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366366629 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281983682 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035614574 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.815687072 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.275162686 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.126913336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.032897205 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277152438 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282786082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272606838 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207003303 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280000015 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728957307 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.277462469 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.983929375 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272863977 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284056425 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366077994 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.275698316 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.842547377 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348332577 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.278216571 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.270653468 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278979487 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845271012 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62364712 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288035323 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.209027692 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.718569959 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.11922359 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890265079 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.376463318 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.276879987 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276945334 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207463094 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.175946169 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292172326 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420383331 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.298768431 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911512512 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963377598 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268972529 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21833917 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808217566 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288144359 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.21092936 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.50140362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04978656 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208862083 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.218148017 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208195331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939824861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283460151 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.579986915 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281415322 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.720560351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284034962 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291367142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29757944 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496963647 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.158042051 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275072452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.013566578 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416575076 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296316059 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726024554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208257488 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.279246999 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530300914 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.486579075 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282214027 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.230734769 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48317003 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288232429 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.292203781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.274507944 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.28766514 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.846906729 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288099698 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.624997605 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29472293 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.050785953 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981340754 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277028312 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.37848623 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.258843633 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524550678 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.000133133 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185241799 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343519456 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278418725 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276019122 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.229447382 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128535777 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.18311017 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.278249738 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286348944 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.287770386 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.276422104 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224864295 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.273472262 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305344025 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.054722062 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.498851568 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275412611 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552645738 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210446735 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423496503 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285005193 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.499145487 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.41977098 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.276690137 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536010129 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276021588 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305472729 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288506511 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294585084 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372635262 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298219025 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.288915765 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.534036629 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.279818562 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.280677351 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.219640821 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058391924 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279869401 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.282193868 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.176953072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851811553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254619932 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.285630241 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16606083 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.290060003 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344649919 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282586094 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.287336674 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.972002876 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.164488146 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.282736822 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.274158204 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501615432 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287984178 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.221834231 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360796291 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.480999239 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85691296 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292119557 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.211200868 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.988761588 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.969956224 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277685436 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.4669899 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277621681 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287117434 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288507509 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.853192225 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856896874 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280633359 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.130237366 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.285726638 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288655674 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.283904868 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279566297 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.948080266 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638286817 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289105843 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.2905259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42166506 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.2921256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.212470848 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.795715652 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283330621 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279296589 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.054090167 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313536 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.139149705 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755925608 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536822899 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.034328882 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288976087 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.235192733 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.310897659 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.280261003 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.045999401 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295605994 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.299083969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289504358 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.290790836 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.147858868 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.718531401 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848803426 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987643398 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80225397 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164178529 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.294107038 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.176930144 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735936196 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213604839 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936639583 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.459621469 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.733538486 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223982912 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486493739 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.422661914 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99991669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292279761 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507711474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156781086 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.054388141 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306642158 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493041681 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315020372 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.29024771 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210597407 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.575866039 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54500323 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.048107201 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364043609 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732203941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.052294894 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.073223956 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.280706042 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547386952 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448078195 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.909323631 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668882114 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281459007 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.298000115 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756803804 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288703947 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.807561546 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900475923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296993002 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.488759233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217103551 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.2932412 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.29227483 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.282522299 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.466734711 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.292263121 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.539265514 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293341911 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21717273 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288791749 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808244265 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.13833911 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.287713294 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282940891 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985574332 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283762176 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5532818 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.286139806 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.942211704 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287103768 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.216811749 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21681639 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.975395027 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285590307 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257982838 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759927828 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.707657475 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339646059 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302681312 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129176115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538291912 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297705811 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863037262 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510129149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.141767365 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306363956 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.383582809 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.099779505 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.286781376 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.18200089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519070033 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185897801 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.506939672 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.120457093 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281182624 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.282987881 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496958185 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.196408755 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.287996444 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517672048 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.996245274 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.295858784 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982680362 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308744643 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298800581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297134034 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.733417938 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291825738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354223125 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294558201 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.295310438 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.295785884 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450205508 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288983157 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288447405 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.299083599 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378289865 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668037405 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.945946314 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.059325812 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870092618 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006219485 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869761202 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298430426 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286214017 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295618017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220236551 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433917775 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.810284567 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559261516 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416632004 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.838300048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30917859 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.10898444 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31141025 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499897827 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560689547 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.156385776 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289589439 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.946533689 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.168005244 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296694074 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.496888882 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766706571 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826897632 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398766615 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297803542 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.742503432 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560375845 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.37735451 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285775346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875809734 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.306290996 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564172206 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.293570268 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295211571 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43611331 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296577873 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921232355 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.296053298 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.447469652 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.060282208 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.250892947 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.544732346 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720018406 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.299144286 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87249156 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987457781 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5510269 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357306697 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298781064 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.386226845 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432455857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.286325026 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183056705 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288101067 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130858998 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.997159601 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.297128531 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87512611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552171794 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.286337691 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.290024588 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312516734 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.298259484 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511232328 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961786575 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512218419 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298198417 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291312779 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.857952435 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875622746 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302662249 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223691027 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.292903609 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519560554 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.525753055 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314378539 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.742016168 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.000449408 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829878857 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.260571382 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311356076 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300551301 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990649151 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875302523 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.955957551 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767600117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946998618 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289596599 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565028594 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.294817512 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292980573 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567269184 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.293214384 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296756181 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301807546 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.873671916 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017003059 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.305899592 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.182977513 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.228249139 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.515769503 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99613758 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227227731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290770798 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.472938237 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290578766 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420964039 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302364772 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.288313405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302827169 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.025847377 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566529485 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.295887954 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.293956886 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.156396655 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301842855 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300757646 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556542209 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296931054 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.965661314 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.640698032 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545980639 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.301920026 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.279113972 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.294687936 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292182714 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008883092 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259386809 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.882120272 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833839847 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.307063186 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.303824672 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295739233 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.508155689 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503276576 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291959284 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32269433 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292159915 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309345349 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.19746454 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.058442919 seconds)
  done (took 1554.388022193 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.319297632 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.338717451 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.3270756 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.310426967 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.348205739 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.349463362 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.360383705 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346227824 seconds)
  done (took 51.930111965 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.304093786 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.442523591 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.321028764 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.298200583 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.304254991 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.296590167 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.729490513 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.292905122 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.302106301 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.302790199 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.298521803 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.298856446 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.936433628 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.302580644 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.304797482 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.282200304 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.302490737 seconds)
  done (took 64.555780197 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.293291666 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.610948318 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.390804306 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296520132 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.037291365 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.307222421 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.672186014 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.316655647 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.294166599 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.355977743 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.944731455 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.329041913 seconds)
  done (took 83.080732557 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.301719171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.301412225 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.301364691 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.301742993 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.301148548 seconds)
  done (took 7.739353676 seconds)
done (took 1972.418323942 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.538829879 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.978195256 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.900197404 seconds)
  done (took 5.110391361 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.442751714 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.492506059 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.612030054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.632465905 seconds)
  done (took 7.413168283 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.578019173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.68672037 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.477802775 seconds)
  done (took 5.976203201 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.621793274 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.321498949 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.416258157 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.297094774 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.294880357 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.294785777 seconds)
  done (took 20.120641489 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.299590798 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.301585292 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.299938527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.302666525 seconds)
  done (took 6.436945706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.281831976 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.991831757 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.283378567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.296122632 seconds)
  done (took 18.087661454 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.046150663 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.058977852 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.043240059 seconds)
  done (took 7.382815927 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.29593756 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.140841177 seconds)
  done (took 9.671437411 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.583374558 seconds)
  done (took 2.817866184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.432291271 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.623229515 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.357233674 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.235083434 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.368653163 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.8980813 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.829285392 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.431427503 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.221115135 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.300775337 seconds)
  done (took 26.93244612 seconds)
done (took 123.081593788 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.911561223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.536459301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.491207035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.882281509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.52195162 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491957908 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.517040181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.84702295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.390375923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.383370533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.882739034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.52379999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.460823073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.53732797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.460838375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.541437081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.522906299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.951309351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.560544076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.765053469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.517760505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.522180508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.720170984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.542024356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.528394433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.450674405 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.107804083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.544131574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.745641521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.117632268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.449682321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.9409769 seconds)
  done (took 189.603167087 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.298291367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.304503672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.298377605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.297918457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298713878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.311539203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.299971073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.29879999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.304194178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.299199638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.298812238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.30273378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.300156527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317365445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.299865292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.320225954 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.301834749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.300220104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.303697437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.299534287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.299186736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.308095914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.299376054 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.308394242 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.303655399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.30032133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.300528774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.300075636 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.300410839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.30928164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.301134129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.300141462 seconds)
  done (took 202.924614283 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.299159842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.299859427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.301554553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.300907672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.311634349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.301096925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.302443965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.299575436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.300551535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.300165353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.318237933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.310046325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.302699055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.300664914 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.300246536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.300124849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.326239995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.300450444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.300298703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.316298095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.303005649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.311771308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.300978373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.301026819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.302254503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.301366834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.301369191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.301345434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.314093882 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.303137364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.302149035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.301948632 seconds)
  done (took 202.976271793 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.502642571 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.30802331 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.30942769 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.271757146 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.309059249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.30869042 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.30142535 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.498376374 seconds)
  done (took 14.048911993 seconds)
done (took 610.789070455 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.551415976 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.267048795 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.503740395 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.328101959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.084414131 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.330574824 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.327594929 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.491706041 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.213338148 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.494272295 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.511911531 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.330105821 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.654550639 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.329455163 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.566761606 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.426002993 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.178189482 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.292934037 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.634215527 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.853101953 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.580315721 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.718912676 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.491252921 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.230284217 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.659126695 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.741453919 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.983998978 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.183323858 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.331055754 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.632668547 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.916652406 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.241526016 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.382917286 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.365993615 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.419791144 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.403348218 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.207875324 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.365404536 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.506294292 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.50004357 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.852097982 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.041517094 seconds)
  done (took 89.366920079 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.299726423 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.298970453 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.297998613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.299106718 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.299666685 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.29852149 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.29781933 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.298199289 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.298718048 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.29825069 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.298501827 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.300156664 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.299041973 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.299638776 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.298599376 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.299014557 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.300087575 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.300710065 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.298748137 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.298424648 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.299547981 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.298896707 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.299128191 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.298740021 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.299742803 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.299450014 seconds)
  done (took 35.018829449 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.312377279 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.553017278 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.709581544 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.319143877 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.311894427 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.317271756 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.385066658 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.313317702 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.315450907 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.315226304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.461347202 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.31649508 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.34575877 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.736699867 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.318003512 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.314225131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.314271211 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.313791526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.561616846 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.322564153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.40490655 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.315528904 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.386814984 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.323983539 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.333296378 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.314325755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.318194546 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.830014551 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.318006468 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.463628462 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.042877105 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.385949422 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.784984764 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.725864076 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.04403043 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.316948199 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.314183708 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.46848696 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.317681823 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.314932206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.386304163 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.317911701 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.722356253 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.932383429 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.331823124 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.314441066 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.848505295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.46814374 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.548275067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.324689638 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.743649504 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.320666921 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.316381435 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.316025294 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.543428143 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.324252654 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.315128584 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.839288924 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.337051419 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.38742314 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.31865582 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.316164813 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.570212243 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.315729981 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.558522727 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.317454397 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.323177394 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.316519793 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.722885326 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.320550394 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.95551308 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.333276953 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.316120873 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.464004229 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.559849051 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884282872 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.319765069 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.576453122 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.790764069 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.38757054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.321659555 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.823843188 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.392259944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.320427845 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.318272856 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.318748736 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.316061531 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.363707357 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.387950745 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.880145167 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.944808943 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.858850707 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.408049944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.332741556 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.317970907 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.84396451 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.334926072 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.317217228 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.721037082 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.954636067 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.335194617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.324453373 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.938976464 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.336667866 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.390357886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.323390357 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.730890967 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.321226696 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.364117023 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.317817892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.324309292 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.321579799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.391127265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.322919517 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.318461959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.926836452 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.489784302 seconds)
  done (took 173.09095904 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.312233798 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.32846392 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.312505753 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.311704151 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.31197617 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.317157834 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.31196747 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.312118592 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.317543756 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.31191279 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.31233803 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.313364834 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.313636789 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.319303942 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.320456388 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.318909472 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.922267775 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.311549644 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.318859539 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.312704596 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.097921325 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.315662542 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.31519177 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.312346192 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.315228971 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.313369756 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.323338859 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.31433815 seconds)
  done (took 151.468878984 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.32013854 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.848816991 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.321954977 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.441371768 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.340548085 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.317414465 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.439388409 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.37588791 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.321906778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.31783247 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.31779515 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.602458815 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.322591369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.800809633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.497993244 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.444549266 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.801381276 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.322781573 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.318105642 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.317782068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.443615275 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.327840744 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.602036812 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.846830849 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.32227677 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.846114603 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.310365217 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.321348145 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.320320693 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.848147857 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.318964013 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.603703066 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.391572767 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.378957766 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.84792973 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.802463791 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.806032688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.457962046 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.322492794 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.318962615 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.31931315 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.309627224 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.850402611 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.323105291 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.322215439 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.843852564 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.337366442 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.32226126 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.329574714 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.31970931 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.376832738 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.377446028 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.60725044 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.856028748 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.393230352 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.343694163 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.4433081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.692833693 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.325629983 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.800878646 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.310215724 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.853710685 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.325514199 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.310486312 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.322373366 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.326015923 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.460409356 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.446506825 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.804916227 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.3233978 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.803029221 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.460691287 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.322673341 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.320966447 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.324225388 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.855707978 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.804393598 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.461232575 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.448035878 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.502937319 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.314447596 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.322685343 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.311371726 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.39447859 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.324646582 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.854084483 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.804618075 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.323318802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.324062857 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.32473697 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.323968779 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.486476221 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.858292124 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.39509444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.800510725 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.622752412 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.60947813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.324712613 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.378613566 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.322890044 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.61036016 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.325483211 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.376219425 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.753384467 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.611336429 seconds)
  done (took 156.86462594 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.554156997 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.429304185 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.40778149 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.430244406 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.903926513 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.868809007 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.560563313 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.439315061 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.427943022 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.555215694 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.40816241 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.413646775 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.495812787 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.394859375 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.042853029 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.388959891 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.412441063 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.440790842 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.413753718 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.306116058 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.929695697 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.602424658 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.485949578 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.180852947 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.410830516 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.04741913 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.854532872 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.893701332 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.493641921 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.560299027 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.847643885 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.38918472 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.240300936 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.964782828 seconds)
  done (took 63.45217312 seconds)
done (took 670.504282054 seconds)
SAVING RESULT...
DONE!
