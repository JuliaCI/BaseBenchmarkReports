cset: moving following pidspec: 27515
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.344038293 seconds)
loading group "string"... done (took 0.541488346 seconds)
loading group "linalg"... done (took 6.759633904 seconds)
loading group "parallel"... done (took 0.156384546 seconds)
loading group "find"... done (took 1.179724461 seconds)
loading group "tuple"... done (took 1.763948943 seconds)
loading group "dates"... done (took 1.199002166 seconds)
loading group "micro"... done (took 0.295261308 seconds)
loading group "io"... done (took 0.900716092 seconds)
loading group "scalar"... done (took 37.371809799 seconds)
loading group "sparse"... done (took 10.952084666 seconds)
loading group "broadcast"... done (took 0.91352397 seconds)
loading group "union"... done (took 11.788504805 seconds)
loading group "simd"... done (took 4.143944882 seconds)
loading group "random"... done (took 8.496006348 seconds)
loading group "problem"... done (took 1.865873747 seconds)
loading group "array"... done (took 19.622934937 seconds)
loading group "misc"... done (took 1.63666866 seconds)
loading group "sort"... done (took 3.0353166 seconds)
loading group "collection"... done (took 16.859256458 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478846751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121289528 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113289796 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117034704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141374498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114128456 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121459392 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082394342 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.84909704 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138002416 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11592223 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410247396 seconds)
done (took 4.999639183 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172517074 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081335911 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08020844 seconds)
  done (took 1.317818167 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06429564 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120083713 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065704278 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066017001 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06556211 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066770044 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067283563 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066846441 seconds)
  done (took 1.674691947 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075227634 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067980122 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067835022 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067206782 seconds)
  done (took 1.436448677 seconds)
done (took 5.831081702 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756030082 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198714737 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180045703 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391265822 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128223603 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163569976 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648976126 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317710421 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187118294 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082859401 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104203531 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.32369715 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105935703 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635426313 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075702179 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088736612 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138611328 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418519083 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06636508 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081076701 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087914027 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127060826 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086785823 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074097434 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142059691 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06710847 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127609027 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07948803 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065368387 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207985748 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173825692 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655299533 seconds)
  done (took 10.181643913 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094292283 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095008525 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066823319 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121861948 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093759144 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068215041 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070266349 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065830149 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0855213 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126597578 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087157839 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.0995142 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064623734 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067760675 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.082640809 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202790654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079798982 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079834634 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06928438 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073948362 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103970365 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076572852 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076992157 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076471683 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126780078 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17900191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094864923 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09626016 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065685752 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078870348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113752253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125116197 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064446091 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065460863 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122640239 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092944243 seconds)
  done (took 4.550720945 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.897141925 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136919277 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089151939 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159098754 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066715459 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104652293 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064269988 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082431256 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196405311 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.042006991 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.43333351 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109057532 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083442171 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066305949 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067316824 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107749927 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.064943807 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357384529 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107942635 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111155293 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08215648 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07270754 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068338083 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340935464 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065598261 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065140733 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066933371 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057284194 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110555324 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063690543 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066811441 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981202823 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086581814 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066269389 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099741511 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16611515 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088611163 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131623839 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064508226 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064243454 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144506013 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072122206 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064121042 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081230413 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100750615 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100918883 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196048715 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066324905 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160046666 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065369173 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084212716 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.707469655 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152313997 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07695422 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067505596 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247291391 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086472618 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068007892 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065302304 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181915792 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125731703 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066136162 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066279236 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064579342 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066974448 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377986424 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065695155 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.755903195 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06930904 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077757128 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070547314 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065172586 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071473701 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072682647 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084413028 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064774181 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062567318 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065214475 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064971338 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067380707 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066985286 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083060716 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187599366 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065264764 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066771323 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06380349 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08429817 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095641126 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071836444 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064524356 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09907011 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066783975 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066180635 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100081557 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066018146 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082569284 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067796539 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112454755 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065119453 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089491573 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065920949 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064613353 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097276237 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071786702 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098560659 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076211149 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066364828 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.219050922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063537956 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063455766 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.064814462 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066034004 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.065316914 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066922187 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076982317 seconds)
  done (took 19.695604562 seconds)
done (took 36.480765189 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271633457 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075979257 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073235258 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073161655 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073481421 seconds)
  done (took 1.809598046 seconds)
done (took 3.043253428 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11815239 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09694623 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062946382 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09396314 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063732833 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09848321 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097182388 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079870393 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097370704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063166333 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094753172 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.062912145 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063239293 seconds)
  done (took 2.334129344 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081392776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082477241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069205944 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081313575 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063228182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080647227 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079423556 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086906696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07920152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071485415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062399356 seconds)
  done (took 2.054994252 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080717268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082315893 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068083958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080576605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062335585 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080262979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079492531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08414347 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079605276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072330119 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063185977 seconds)
  done (took 2.04769548 seconds)
done (took 7.64793705 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076176762 seconds)
  done (took 1.283752105 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.576144343 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.01821281 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080268429 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10987143 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18129529 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116972983 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272434438 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084997989 seconds)
  done (took 8.826793233 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099710862 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068009823 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070719274 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070610539 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068723859 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067712247 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068353462 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067002785 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070365466 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067457965 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067595002 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070863649 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070189299 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069836839 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070453415 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068523893 seconds)
  done (took 2.409900803 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090600549 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089123681 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072499999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073526464 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071045401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070771911 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073120453 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07202465 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069666195 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071216159 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073452363 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072081641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070136855 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063914116 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072392142 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074002597 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069860232 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074124173 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073608524 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073587473 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073398086 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063115175 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071038253 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072835492 seconds)
  done (took 3.060541393 seconds)
done (took 16.795738452 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110331719 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0700738 seconds)
  done (took 1.391996952 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079850622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081301012 seconds)
  done (took 1.38065336 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080339008 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064610042 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087821898 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076378781 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065514918 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064735441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085091111 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065365863 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065078271 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065175157 seconds)
  done (took 1.94001166 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067445613 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076639659 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069496329 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079427185 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071971749 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063490019 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071255245 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066721157 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076011082 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062082859 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070341376 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080940043 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06978918 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082475586 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070865321 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067019277 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069069113 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06582813 seconds)
  done (took 2.505943331 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064190514 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065828132 seconds)
  done (took 1.357256908 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065315994 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063065756 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06575749 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064791785 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062122621 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061615688 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062312609 seconds)
  done (took 1.66835176 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.371522882 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109110821 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291934329 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069789032 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080884934 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246644942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064390007 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069221286 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069646582 seconds)
  done (took 2.639412485 seconds)
done (took 14.10885129 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077131803 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083813017 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093242819 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.337069349 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090644454 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064580078 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112961635 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18472905 seconds)
done (took 2.278629983 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204537904 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.557800007 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364858302 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193641982 seconds)
  done (took 2.343202893 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313026439 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089676969 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058438574 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065625702 seconds)
  done (took 1.763240984 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064546084 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067986531 seconds)
  done (took 1.365705901 seconds)
done (took 6.910199546 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065781483 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0850336 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065643051 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062624053 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064856676 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065218843 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062675862 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062378743 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062550456 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064965975 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067337181 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064557624 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064948895 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064796177 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062603617 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062356467 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062516729 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064761362 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062280202 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062470215 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062487172 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064880201 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064195523 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062491984 seconds)
  done (took 2.822232014 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082719996 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065796978 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071478151 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069610797 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068805422 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069875861 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069753968 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065160322 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069881853 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066866663 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06853108 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068513852 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066758944 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068878867 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067126092 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068943576 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069836279 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065196325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067452573 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068806782 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069685862 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065241108 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068337065 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06969882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068441151 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068327338 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06682268 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065642229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06974617 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068286212 seconds)
  done (took 3.302283821 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068592385 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062473038 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062793744 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070467528 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062612237 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063718628 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062284648 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06298279 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063989853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062641092 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063982381 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062541659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063080761 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063769989 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063584868 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066408452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078060596 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063019961 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062434066 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0630871 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066039772 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062759927 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062887254 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062531035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062501153 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062510025 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063221379 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062915361 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063692979 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062646092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065583305 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065949521 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062483366 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069421226 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066204795 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06212315 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066510488 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062188091 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063461317 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062206708 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062111288 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062480624 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062586105 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069460692 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062972023 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064671352 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063539334 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064731237 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064331222 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066877339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063741675 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064067312 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065794818 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065515062 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068091761 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062100172 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063001669 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062100791 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0633267 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062408525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062208355 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061891796 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064966195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063356367 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077276024 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068938345 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062306285 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064288295 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063788164 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065401604 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064335671 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075466915 seconds)
  done (took 5.893117602 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089163624 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085829219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.171718941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064530925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061231969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064818564 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066630655 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063061525 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064295645 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068324971 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063109416 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064054143 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064145674 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075716275 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063373124 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064327531 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06847487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061090066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063067981 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066189566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063086209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066027922 seconds)
  done (took 2.839502803 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153264065 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069105143 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104024675 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071711881 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066091456 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071104268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068599208 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068796465 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069222556 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066808772 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066929842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069065651 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066659389 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067689008 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068290452 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068974812 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070790616 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06743598 seconds)
  done (took 2.606294479 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075819494 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065857137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085390029 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064803271 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065534046 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067149092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06943949 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072750743 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067249234 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065120265 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07256794 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067595088 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067133351 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064844538 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067139758 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064871405 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06739177 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064920635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072579044 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069340769 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069352504 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072723581 seconds)
  done (took 2.770982402 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07845126 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06635212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081367706 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067881391 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061121987 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063691336 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068964461 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064751896 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068853652 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06701519 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065443626 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063287742 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068250288 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065218623 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068074467 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064877182 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066643546 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064930415 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066593474 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061533864 seconds)
  done (took 2.59630082 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085242932 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06661046 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066938839 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074500929 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066357663 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066312952 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073752774 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066762919 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066546623 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086744969 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067061236 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066007534 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073643274 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07059581 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066245017 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073592812 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073951933 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073589511 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066621265 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066265871 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086189001 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066184244 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073405737 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066221718 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066727237 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066431514 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065924703 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070869528 seconds)
  done (took 3.233873164 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065207345 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064918958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063053191 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062573538 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062444006 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062576577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062466549 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062650248 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064898311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062729291 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065030099 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064896332 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064870161 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065290992 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065109778 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065672598 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064925371 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062705741 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062800995 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062532288 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06465652 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06522599 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064789449 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062440397 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062446842 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064796698 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062714446 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062420537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064543814 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062435155 seconds)
  done (took 3.171575517 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073631504 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071151105 seconds)
  done (took 1.402859413 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062617949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078304193 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062432636 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068772526 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068222151 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065409528 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072673013 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068461712 seconds)
  done (took 1.801990172 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080676252 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075764904 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066288246 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078376561 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075824524 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081717224 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130912513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06588222 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071436235 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06321387 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078131885 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064544206 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071229923 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065460072 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070738732 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071192079 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063100513 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070705651 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.0672057 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063663623 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066102108 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073158928 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067194297 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060693831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06590509 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086646831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07567825 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064417673 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067912931 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0721612 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071314619 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059529105 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065223631 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065909187 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063260836 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074627616 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080130021 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068310798 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074204343 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065944188 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07537251 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060377192 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069513676 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071779075 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074958917 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065362476 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065536883 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060815715 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062905748 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067376677 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060703315 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065527967 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059786202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074537101 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068982554 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075287437 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063870959 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066767478 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067994479 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068475213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071813691 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067255928 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067541357 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064753528 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074603135 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069540955 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073835181 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060531652 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059671131 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062978895 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074565201 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087320426 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07141054 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066103587 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065737629 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063208056 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068539983 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066498455 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070882773 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071844575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065252607 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070683752 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072401041 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065407662 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067525753 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072680235 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063475201 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067876663 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063288815 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080948426 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064169862 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063236773 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063030462 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075196794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068464148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064706597 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063542295 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074089723 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061045892 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066638105 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066699166 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065748029 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075192281 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069792424 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070030382 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073508875 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072215958 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065345396 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067529897 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06202215 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06523677 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063720499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071033877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058687049 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066962486 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06514131 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064335111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198660834 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063751257 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065551066 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073832888 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071605896 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064648736 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062018443 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068174885 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065234167 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06849731 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073280489 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064433225 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06147069 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061596487 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069047387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065738001 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069348533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070106762 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068594819 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060290113 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063564172 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071528199 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07384364 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06610534 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066669848 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071456897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067117465 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064870117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072605601 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067771618 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064910085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071018753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066493827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060539675 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068313223 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068467416 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063681422 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069356554 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06844388 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067567751 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065959679 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064498974 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073308858 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06606135 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065014128 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065894682 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064530804 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075664451 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067345023 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060822796 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062468485 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075004408 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063651547 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064984971 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065355877 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067276463 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066559904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064034005 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064539838 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067573491 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0745397 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069226484 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066112174 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071013415 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076759947 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065097553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06794031 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065349882 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066061415 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065994025 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074121441 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070776831 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069670723 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067418979 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062022468 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07068527 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072210522 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06451491 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063121831 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064423357 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069022908 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070942778 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068954804 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065880443 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063197954 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06563076 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067982744 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067884792 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064690436 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064473473 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071886834 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063669949 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072294328 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066226967 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075327959 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068431846 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060944548 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067987988 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063545161 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071108116 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060801039 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063427588 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064795606 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066630385 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063988699 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067824537 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059462866 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072155678 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072757751 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066113169 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064856617 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064978311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07148355 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066533615 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068960798 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0680496 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070223102 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073890062 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063591379 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067318714 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073662676 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064246669 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187694506 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071210823 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064140197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064147922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064845034 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063553791 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068577526 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074241025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072392063 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059437533 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06862927 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064109115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064924192 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061391211 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070220411 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068869359 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067017479 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072481113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066608612 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066254336 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069704782 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065576026 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067156381 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066994936 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069158127 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066312665 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067352528 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065439295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068520306 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064855266 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063681872 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067179324 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065398838 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066002263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070970747 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065278754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065805247 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068106653 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065756874 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06603199 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066976847 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065314062 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068302421 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066496965 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066769319 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06818085 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061892487 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072903867 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064986131 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072743473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066522015 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062481329 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071998489 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067496727 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070904852 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06569712 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067030656 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066892766 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064997213 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068497827 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072117856 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063691755 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076111409 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073149549 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066285591 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068418997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06573489 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067078327 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064819148 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066589843 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065604345 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065401248 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06495888 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069861717 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067717611 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065654365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067169194 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065688546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065443339 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066550137 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059855993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064222447 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064731395 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065319266 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074334649 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065476177 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064934636 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064075469 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065905083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0643855 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061847707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07268331 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073925741 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065879354 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072001983 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065118614 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067106515 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076453471 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05992835 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063965997 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063278882 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06413832 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072215278 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065710951 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074064147 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065147076 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065171471 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062918565 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065732292 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064078996 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05980403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062932429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068443442 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064276091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064246073 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065479242 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067603876 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065498548 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074025184 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063816405 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064934772 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064383262 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061497334 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063485387 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.196045276 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068862223 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06648909 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063872302 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06323896 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065079702 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066438041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067326178 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06539715 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067683589 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075173352 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06604475 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06863144 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068894372 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061037987 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069110519 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06524306 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065496374 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065517997 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07000459 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069214201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066597971 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074413837 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065296146 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066596496 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066196945 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063683711 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065060942 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065227154 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065600992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065085189 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066432157 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072754931 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063871399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068356219 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065789169 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065953507 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071930475 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066392961 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068579451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071385344 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065930765 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067470147 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073909625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069304107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069191345 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066763199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066822483 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070970718 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064468433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071723684 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065935878 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065842565 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066807542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0639127 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065462615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065488119 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064625356 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071362191 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066874235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065219835 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065038892 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063546864 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066613976 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068609202 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072701012 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067739495 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068349168 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0610699 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062591791 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06630954 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063137356 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06714542 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067800228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071232292 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067646773 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06587395 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064359524 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074849687 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071067061 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069439179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063779246 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06959356 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066514483 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067917854 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067221728 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065966165 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066445017 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069394005 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068057576 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065490522 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072083017 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068916984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066057242 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067525518 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066520391 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065793137 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061006642 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.0666576 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067586972 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070613581 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067813293 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065665979 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075592928 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063551643 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066021808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068923278 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065292555 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070376342 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061167255 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067179657 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066310148 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066485311 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060427568 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064463365 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06330896 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067081812 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064161137 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060677473 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075305553 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073248244 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067146985 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062854896 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063006721 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059496292 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.191243727 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065757662 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06777928 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067459433 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075335234 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06494364 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065554133 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061370245 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06574607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068990648 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068255479 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063332253 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061649365 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065836112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068883716 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071206808 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064861899 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065099221 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068706276 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067966473 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063599585 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069465463 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062475953 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069406137 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078845061 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06701043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066118629 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071664826 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073638216 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066591197 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061046514 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066230359 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069429545 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066196725 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066606523 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066746908 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080181021 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068807505 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064801082 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064407123 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068711798 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064646225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073323659 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066372674 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065688488 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070056219 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067742419 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074638554 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068173046 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073986705 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068455157 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069176857 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064681544 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066459655 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064056551 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06468959 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066962886 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066317835 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071174235 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07398056 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065608012 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075626342 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075092573 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067566055 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06298089 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065527426 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065240862 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061039958 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06623837 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063794011 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063697426 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063935115 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064060056 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066344273 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071125282 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066572351 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066531533 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065359452 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059984738 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067910252 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068049768 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066546614 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06278603 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06546137 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066513026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06963608 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06872066 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063349178 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067631471 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066969768 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066110354 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061090896 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071446906 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06446644 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067346675 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06433031 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065726133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065851979 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068486214 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070120072 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066261605 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067544967 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068792802 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067199657 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062578724 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062794036 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070252497 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063362901 seconds)
  done (took 41.984784057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098316138 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06216177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061766177 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061437392 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071923411 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061912567 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061317829 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062174353 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062162718 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064246438 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061085371 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061016654 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069434949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076162222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072431097 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065485071 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060810849 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06222078 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061115034 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061875077 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069478414 seconds)
  done (took 2.731653558 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072337987 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069131241 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070844847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074085362 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066288017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069116157 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07103555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068932111 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074480595 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065639127 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074063182 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069152086 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065854797 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073838164 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065823803 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06968001 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074329947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06607416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069279354 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071530111 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069401228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070627923 seconds)
  done (took 2.86019661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065591976 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066446816 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06652604 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060773141 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065009762 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060209413 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067962594 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062801933 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068461759 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064210449 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064216426 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06412494 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066330837 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060476769 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065112385 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06312037 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106253777 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068089523 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064630621 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065540913 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060687014 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066817699 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06066392 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061128322 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063911088 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068505799 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065582826 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063457917 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06426274 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064583882 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064796881 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062776293 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066687938 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065509902 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064008912 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064357951 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064911682 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064629796 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.0606447 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062683622 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065388438 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060706319 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064989933 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066304498 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062958424 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062739652 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065906561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064707166 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060175986 seconds)
  done (took 4.512659863 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077862858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106301477 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066325414 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087052981 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077965398 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073769391 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068540344 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0875435 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062116934 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063060245 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07976635 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07776846 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064448142 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068932093 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067984953 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064725132 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065742117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063783606 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068013228 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06399032 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068233586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071316528 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078063094 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077192598 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068756246 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063634368 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063674654 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068808429 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07658364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068286885 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068543843 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069537396 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07865549 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069916226 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063701945 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066424129 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079775592 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06471655 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067077888 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062976447 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066621497 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069147875 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071069643 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079803361 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064496355 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069290866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064229048 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061768536 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076328595 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066808014 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071431162 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078051374 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067913522 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064467406 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068930636 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078005468 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064018622 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062772935 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067059429 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075984407 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062287154 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06786122 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077055084 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066003155 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070876442 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077351851 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069690133 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06791282 seconds)
  done (took 6.258122453 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07389946 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071211918 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07873922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078330434 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070361692 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070965804 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070882719 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070732614 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07050687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075276499 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070465998 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091162541 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066435146 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072959267 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070677047 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071035145 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070982247 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070810589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070664497 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070872262 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070895334 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077952467 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070489711 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078380012 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096381606 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066102582 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070772822 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070799412 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078262765 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070757804 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077828991 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070872781 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070649184 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078120458 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077774893 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070788442 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064043321 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071023426 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070860512 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070578555 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066665775 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078726718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070548586 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066693364 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071055633 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070399202 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078300633 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077650637 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073046288 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07509255 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070622907 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078286069 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070222544 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070795936 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078204354 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102586801 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07781752 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078289964 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070743457 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077975343 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078401863 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083871639 seconds)
  done (took 5.943560696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081006185 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073556323 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074750362 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060337101 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06300465 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068386301 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062913391 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063237773 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072657885 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072896015 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074972558 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068366505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070907078 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074957033 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068425007 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071462721 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0684053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067991386 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072701402 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068136076 seconds)
  done (took 2.74583597 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07290151 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081032765 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066162071 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070178229 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067743894 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070002896 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066842267 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068024989 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065726115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069098774 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074574055 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074555052 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06557956 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070545755 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074318314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070275287 seconds)
  done (took 2.46585029 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073355962 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070826854 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077883733 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065125466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063531239 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061598365 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064687353 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060761698 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061383112 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076215576 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064722289 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067348536 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064969171 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063248699 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061823176 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067275194 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061455123 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062352499 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064844373 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076894015 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074883019 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063059802 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065448049 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064971794 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064473154 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069554509 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063835855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062852177 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062403042 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065120688 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066006755 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068360879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062502499 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062808415 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063585227 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062386285 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064595917 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065551253 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067574747 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064881641 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062858719 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064573885 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064682713 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065560154 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061211617 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064924066 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061365602 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06693145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062388547 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064848596 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064700515 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067351315 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065542601 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070962412 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067092004 seconds)
  done (took 4.948938886 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077472935 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068179347 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061236687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062865079 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068306285 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066292188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068455251 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06678262 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066325273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062951503 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066219378 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067711769 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066465307 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068220174 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066809508 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068166101 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0608623 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0664482 seconds)
  done (took 2.549864898 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070269266 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064819836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072288343 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064878519 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064609969 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066898373 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06150262 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063673613 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063601928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064964358 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066631168 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06778247 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063745161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067039398 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065033932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064783422 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067018964 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06368565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064474168 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061104826 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067099918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06344991 seconds)
  done (took 2.783054434 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.070918477 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090691985 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136451554 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08225447 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.0800713 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077442512 seconds)
  done (took 1.881769955 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089295659 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077448632 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065736115 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08701012 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071937856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066205051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066742053 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066193239 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074298379 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074659429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066451154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07421318 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074612089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074079647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071852827 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071909904 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066494308 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066473862 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065574817 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082405222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066806974 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07442299 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066252808 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065826339 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066213644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073987975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074514797 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074650213 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066216514 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07413432 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071502731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066386072 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074530192 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074567177 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068009429 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074457116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065745641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081897719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071768689 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073586892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068250667 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072181615 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074307881 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071185032 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074177746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066353723 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071189746 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066247646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066768789 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083989949 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071807167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073501074 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071826842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074820851 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074506261 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084501869 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07466565 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073866613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07192986 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076686225 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073834137 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071547135 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073305801 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074824995 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071867524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073972385 seconds)
  done (took 6.128136545 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079631104 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084737206 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066704466 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07548981 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073965129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06599003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066358005 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066433419 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066141382 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065974329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105534904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066483572 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073641828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074145535 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066795754 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065993842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066191652 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073865707 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065873005 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083903669 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066251976 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073555825 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073441746 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073840363 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074678947 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071861669 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066381198 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066369501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066221075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066249001 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070801411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066611782 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073596771 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066247515 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074177383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066501516 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0661234 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070983046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066477606 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071785604 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073738692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081710265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066084399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065842598 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074678821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065981501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066377905 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065874179 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06633328 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066165578 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074617002 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074700512 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075805065 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074063193 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066430269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067255204 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066333649 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066519671 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06675133 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071764203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073768735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066445848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084313678 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066067259 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066291917 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073712871 seconds)
  done (took 6.038228401 seconds)
done (took 127.504647121 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182315708 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166944008 seconds)
  done (took 1.688132887 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066515334 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094843177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075925618 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126783661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066298858 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098402748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097468754 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076498972 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065075889 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065603749 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065173516 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066785539 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129550392 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065603128 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065065706 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066856716 seconds)
  done (took 2.643480912 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095764798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171824584 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097748012 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063698808 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095445784 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071714071 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063703502 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073865244 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069715327 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064063627 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071548484 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069218508 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064059454 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069564522 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070166836 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071302934 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063890711 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07151319 seconds)
  done (took 2.77172451 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097757894 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089106112 seconds)
  done (took 1.539157599 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153100034 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103898019 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147094166 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.329782055 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157827502 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226530446 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125876453 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124133513 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119825007 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121026059 seconds)
  done (took 2.957615504 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096677413 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.144895524 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.252155553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113357501 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071258039 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089473217 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115288696 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076072328 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076554473 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07592942 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076134654 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074932205 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094240653 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072391799 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07282958 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074929698 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097913838 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071467577 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07436242 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072352423 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095131358 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064621179 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072260978 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071518219 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073349734 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073650729 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064628303 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064676849 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072994575 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073300813 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076081323 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088319404 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073231022 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102893419 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069190758 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103766533 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075789719 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070159702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072708495 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070295048 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074390688 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074773696 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.070817129 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074659682 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064511091 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075797962 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064496525 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064767356 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076277991 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065557076 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076610955 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075690727 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102809994 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066345587 seconds)
  done (took 5.827268341 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.658096922 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10125471 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069442047 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10688329 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094875775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070810107 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.682621079 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08939728 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.17158278 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09042643 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086913253 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068950911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079342623 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081707647 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.106659502 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099769687 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092407697 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070166855 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099330164 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097002221 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067204803 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092035844 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088641207 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373280189 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066407737 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068382775 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066589472 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068794679 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.10802349 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076379123 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06895426 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118913145 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082609296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118409763 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06589771 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066477723 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067095938 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07759751 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17894607 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.132972036 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128870805 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066373293 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066845643 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067593971 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087890164 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066418895 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108015837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079158442 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116467444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068473256 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068759698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066488028 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067622516 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078155232 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07588424 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079766887 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.236969351 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06703697 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067410946 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070341863 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178739038 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077941411 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078340398 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090795267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127995978 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067284209 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.713572907 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082174816 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066079271 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067842562 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066840091 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068054965 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066997941 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244436373 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341427658 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069476858 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069264839 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067613017 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.163119778 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077561457 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06797209 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110860617 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066791158 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068085949 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069037108 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069587115 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116060063 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079043061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06885267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067624816 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069423821 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068038352 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067181149 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160867222 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079365585 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078828257 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158215872 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069012975 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110005155 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077944236 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069472855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078429383 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067468426 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068689817 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068138583 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078347516 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094440836 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078514782 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06938771 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066791633 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097015516 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079451814 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067222816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077039015 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395205588 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078653768 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066514277 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079260403 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067412055 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109725056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069148078 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174359843 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067774787 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077760253 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067802764 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066368373 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067103358 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108395578 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068931822 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067830558 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067782706 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068915773 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078466154 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132156405 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069433003 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159341944 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132033721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06903663 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11736205 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06722163 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115472816 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068727598 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069835686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066212437 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.707927388 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067620176 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067557988 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068878235 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135798716 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066786459 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078044354 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075672265 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065655765 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685759706 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0763398 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074038658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.207564977 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0701693 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067733554 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067455422 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069417341 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109113901 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141889342 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069273179 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067742284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077254637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109958576 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067088375 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076910275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076740295 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077303689 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067973793 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069172083 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079620798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116827064 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078091491 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132563666 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512260339 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067858052 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076093788 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.139722786 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0673038 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083440263 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066897003 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080858368 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110155746 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075957331 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225752612 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111330658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137676322 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078956354 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080951414 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066647533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067185762 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078024088 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067400195 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068933308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077068934 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069384599 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068600769 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082100337 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067395359 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171955662 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066487726 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077783412 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066345291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068924129 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082083597 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067593895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069013615 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077903629 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069143427 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076372482 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.656187871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076759554 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067427385 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068895247 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133305563 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110883996 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066809038 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066989011 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069130395 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107604155 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.157311059 seconds)
  done (took 27.842594315 seconds)
done (took 46.633139112 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205092703 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147652276 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198721702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115574238 seconds)
  done (took 2.118099411 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120594606 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098472713 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093086379 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064063839 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099696162 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06401923 seconds)
  done (took 1.930477614 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305030766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206560922 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178411038 seconds)
  done (took 2.073052048 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193975092 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183812888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389067731 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249677768 seconds)
  done (took 2.505642153 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140343083 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087224159 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066286787 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082052386 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130978255 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15752808 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098621942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122607285 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076877547 seconds)
  done (took 2.396821466 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142094022 seconds)
done (took 12.564135305 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.156738458 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078616964 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.119940379 seconds)
    (4/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.182169001 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.189260703 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075439397 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172100294 seconds)
    (8/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.153225975 seconds)
    (9/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110103208 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098009792 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080702978 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075083658 seconds)
    (13/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075753447 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183924743 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07611034 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067958419 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072637853 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.187568899 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072360976 seconds)
    (20/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.141095084 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148117351 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087921313 seconds)
    (23/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065519486 seconds)
    (24/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072514208 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.149637589 seconds)
    (26/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.166028152 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.145149994 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188428223 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.135375984 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.154791433 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156408504 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.19070062 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.186490296 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173989212 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073663718 seconds)
    (36/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.145680747 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080639132 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069558593 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074502253 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096087047 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08412197 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064393713 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070275642 seconds)
    (44/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087649803 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049991259 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092926317 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070936441 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181325401 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071953266 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07007513 seconds)
    (51/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106809337 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169872862 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070623978 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165195951 seconds)
    (55/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061599867 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086495955 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174915721 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.09946646 seconds)
    (59/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.144108517 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071769179 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093836452 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08963727 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099634245 seconds)
    (64/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.145225688 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.1338503 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133466587 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075715822 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106983889 seconds)
    (69/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182106742 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.065853473 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.136340638 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050201657 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.101076819 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082147965 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051680346 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.183303484 seconds)
    (77/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073525286 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08578266 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06371637 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110953448 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053196105 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070586019 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136062009 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.305469835 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076747635 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066135679 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168047709 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.066444628 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053305715 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072973231 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072499484 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094661713 seconds)
    (93/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.10924205 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071243481 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050421542 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.154537048 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07677669 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072418197 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177001992 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170818167 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.13650858 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.133709129 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050468293 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090597779 seconds)
    (105/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073099208 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148679176 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102098852 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064538202 seconds)
    (109/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107501731 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.162796049 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088195583 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144457502 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052274664 seconds)
    (114/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.148443736 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.155721827 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071590936 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064550739 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.285625603 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064844813 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.151262097 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144947956 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05013355 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108767339 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141795308 seconds)
    (125/309) benchmarking ("sort", Int8, false)...
    done (took 0.137861388 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071028934 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112904283 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071911709 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065048748 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085829139 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050087377 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065900412 seconds)
    (133/309) benchmarking ("sort", Float32, false)...
    done (took 0.125899872 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068156701 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.158935454 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.140215968 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072624658 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066713686 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071486569 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071000025 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070092399 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08929986 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051674769 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050524892 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050412029 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07116787 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118160507 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050828421 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070187455 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09857733 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063996244 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071617505 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087042829 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.146238961 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.172836744 seconds)
    (156/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070887151 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065347494 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086708342 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110377628 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072386067 seconds)
    (161/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051091746 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074449886 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110610164 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075179471 seconds)
    (165/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061405008 seconds)
    (166/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077797272 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071315732 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07883248 seconds)
    (169/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062326714 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167897875 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050436101 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050510115 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050844379 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090896633 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089001267 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051869687 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089399576 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065444559 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136893557 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063812375 seconds)
    (181/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.105190708 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074019823 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076648794 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063770734 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066271264 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070843827 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053142622 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050109421 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070061679 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063730616 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072200096 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051897156 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0714005 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.220116646 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172276062 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070111047 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.137577673 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079951792 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074621915 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09028095 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05155279 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065159529 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063594476 seconds)
    (204/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108468098 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050334598 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071871603 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065777886 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065457771 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088532806 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169831923 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065260009 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067552678 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05202819 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050955501 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085753232 seconds)
    (216/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076244994 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06358845 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072977984 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065531425 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066870204 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100163614 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050984393 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067465613 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0927533 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071931903 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.078361957 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068022332 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091661131 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067253563 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064886584 seconds)
    (231/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106798851 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070251687 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060322398 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053947202 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074291537 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050181524 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051777714 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117081384 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063698462 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063549473 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051960793 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050324472 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13671549 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069776538 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125956395 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168598773 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069540444 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050300009 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051926213 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064887445 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051870051 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050493173 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063429171 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.12381421 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065493047 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064447703 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051586225 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138256834 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065526187 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051983896 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077344166 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070682367 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050624589 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07173133 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051705798 seconds)
    (266/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060083585 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051718902 seconds)
    (268/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072188197 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072402149 seconds)
    (270/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068811137 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060237018 seconds)
    (272/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051267223 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065877083 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051890384 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050701107 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064616969 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052044544 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08048006 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085561394 seconds)
    (280/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061002047 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071532176 seconds)
    (282/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051213469 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06598487 seconds)
    (284/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085986815 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063971778 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062765387 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062775182 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050372266 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071363182 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143925043 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076507848 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064183082 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050482365 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069415331 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070439977 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064440755 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085747023 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052215076 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094244364 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050786006 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053416659 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078179976 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051405586 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066784869 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070075935 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050529963 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065841476 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091330987 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066152263 seconds)
  done (took 29.891873204 seconds)
done (took 31.286709921 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082681707 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091064467 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073185229 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090991536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079012013 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07509729 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070988619 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076357713 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078385078 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079920873 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076761245 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053912793 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072737073 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072958614 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07328705 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089520915 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077293442 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071660976 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071694522 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064302743 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071481841 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065066232 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066344039 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053834849 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076935748 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071059651 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071382576 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072807796 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064901319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064847509 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068016429 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072172541 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064834822 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076583996 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070773095 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071674614 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073286473 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07526384 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066169276 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064768508 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072682992 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065053115 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072026115 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072342964 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071768932 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070465794 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072049659 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076463888 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089477373 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066632052 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073015957 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075474013 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075019951 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071059732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068746255 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071748185 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069640473 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089324928 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072415782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066976214 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072858 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072449629 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069911777 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07149 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071638503 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073487567 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074577893 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070061279 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073329812 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069580386 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064208402 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071733536 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067958214 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06439493 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074297645 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075469591 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063233835 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069968226 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071207435 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070261383 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063905747 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066282024 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065924887 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07000618 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066710359 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053920578 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067789078 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070039512 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063429233 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07157432 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07049654 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070944395 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065588368 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074391457 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06380603 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069220813 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064544197 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064558493 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066198904 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068163763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064089215 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067239819 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072984981 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065828343 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07011095 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077362069 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06402026 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070340115 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063456885 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063517876 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078026992 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073339852 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064767837 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067013054 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063666063 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071698946 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063692272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063724293 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063708983 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064008626 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06959942 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063949653 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065883733 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071106085 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075867155 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063607803 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067017383 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066126886 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06349979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068686422 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063279456 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063425727 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199584098 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061505657 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066893742 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064976104 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072460351 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066717682 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071943834 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06671178 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0726978 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069455078 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070191287 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070543761 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063330663 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058170326 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067196587 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066950925 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066826967 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065038286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065969888 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06471116 seconds)
done (took 12.252008418 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066159725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13936214 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097400289 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093630766 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084569141 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065858125 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074860385 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100497864 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067225768 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100263429 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085579119 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084063115 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111117676 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06387875 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065061723 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068532076 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066029684 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079917035 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099262447 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085445234 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107073735 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064272673 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092536076 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088522805 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085673766 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099668954 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065990675 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068633736 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068513381 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089439737 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085276793 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068821725 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065623466 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098249606 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090680919 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081345213 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065194299 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080794035 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065820293 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065281449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079512273 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096264446 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078516709 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078865756 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068801236 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067895173 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065766684 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081634696 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086944854 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077138807 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085062289 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100842313 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067529352 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064752461 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063603694 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08380232 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064610236 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067263963 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065388491 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067351287 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065035658 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068039566 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079755709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085045688 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068586094 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078481232 seconds)
  done (took 6.702466521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082584394 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088616304 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081345013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082732733 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065145476 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065427693 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065342754 seconds)
  done (took 2.014416812 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065823378 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087052972 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087237646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088358885 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083175983 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086182624 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074469212 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065229826 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079418446 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066932091 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0866121 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099828949 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065825607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071817581 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08978964 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065630423 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088886978 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065452969 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068466025 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088593766 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067222834 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080875685 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068998814 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066219603 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079343151 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065683518 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110772625 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069389652 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067226992 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068522989 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063626705 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103899766 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078900654 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074416594 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065426378 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080045707 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079816363 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064234885 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081832658 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071095863 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079682508 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065995202 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066751764 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063577596 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069481606 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075768056 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06662269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066126906 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067870581 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084582741 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066327413 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078491438 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070036714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067807887 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066919676 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06937608 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075389035 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06628138 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084530121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066837107 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081539624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.080958581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079279713 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080971747 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067596923 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078534749 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078657371 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067753681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067084639 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068791089 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081210695 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064236702 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066929503 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075853261 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067568727 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08830125 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08827631 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067129322 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074717139 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066608522 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065848677 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066137589 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087989608 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068099091 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065964073 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069938754 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068538789 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063846275 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064696838 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068899095 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06355695 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067399887 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068312228 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068842797 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06831248 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081674128 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067864819 seconds)
  done (took 8.641622918 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068073709 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066917035 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068147113 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06700142 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066590222 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066888067 seconds)
  done (took 1.910055504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.0917387 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068523757 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080880839 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071294328 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103623405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085378878 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08528756 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077313741 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082442393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077399276 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085335616 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086597427 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090963778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071507052 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084964605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071056127 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085616644 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074331416 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077597843 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071893537 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084958555 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07163647 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071922104 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080235368 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07472267 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071182516 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066479596 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077755162 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07717338 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077408293 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071216733 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074599188 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069173407 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076963819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085649899 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069404342 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070514614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075843145 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071362404 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07443143 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086322441 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071991121 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07313876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07607675 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076662439 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069237329 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075621798 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074556031 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084950061 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07574352 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075758195 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071179114 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074638732 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076067828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06894734 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077231072 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076732428 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085603607 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071728263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070427799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068300652 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074813425 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077120222 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074216568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077528935 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075945675 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068970886 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071678991 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071750954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070765572 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075796097 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067653524 seconds)
  done (took 6.987764453 seconds)
done (took 27.725200374 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542619001 seconds)
  done (took 2.017067165 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606449418 seconds)
  done (took 2.106400041 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.374019092 seconds)
  done (took 7.866602183 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398843633 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.514045166 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.710434884 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12898027 seconds)
  done (took 3.296645621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673663612 seconds)
  done (took 2.178030683 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209139707 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194404286 seconds)
  done (took 1.920869807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.366421247 seconds)
  done (took 1.860431494 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106087219 seconds)
  done (took 2.602781492 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257864835 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160982444 seconds)
  done (took 1.92113998 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458564538 seconds)
  done (took 1.955741506 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86368868 seconds)
  done (took 6.366671942 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204163245 seconds)
  done (took 1.748480921 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237125573 seconds)
  done (took 1.735742959 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.719762188 seconds)
  done (took 3.217987909 seconds)
done (took 42.296866983 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077930889 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080056198 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080193425 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076234006 seconds)
  done (took 1.800814101 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075923806 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071638256 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075534329 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070987198 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075169959 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071265807 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073027763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07530165 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071167325 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071247727 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071229645 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071297081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073437733 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072656193 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069376512 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07351766 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074412726 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071420021 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074003077 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071228022 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069765845 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073643258 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07354917 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070516685 seconds)
  done (took 3.241018208 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075790259 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07142031 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073949479 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070721818 seconds)
  done (took 1.799160881 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07644332 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089763315 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087877353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075722511 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090085638 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084400284 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067968946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06762908 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071347382 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075460681 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066908328 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093757266 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085757498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075333365 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077539496 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064674784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067265763 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085349765 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076091375 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076232648 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068509232 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075667096 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066641045 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086303084 seconds)
  done (took 3.356188193 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07583048 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102132722 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075589577 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085387381 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.0878994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064116408 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.072682663 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087308139 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121053792 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064129165 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068460657 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064043784 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.070768517 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063548562 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074340773 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10283955 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106494841 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066909232 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093768198 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063885389 seconds)
  done (took 3.121814396 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071367581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068534625 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065153389 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0671483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076469079 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071510535 seconds)
  done (took 1.932443903 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066897365 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066709719 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065868352 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065710351 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069743984 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066075302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065060215 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066001776 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065800981 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065550966 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065722002 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064587344 seconds)
  done (took 2.305303201 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333482838 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066850417 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067351639 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0647407 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069660352 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06483832 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078315124 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066719264 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089101299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065093767 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065375154 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066912342 seconds)
  done (took 2.612457615 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201262798 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074782512 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230889109 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133843458 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108829937 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113110069 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101760777 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110875375 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139808733 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099614211 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163497344 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160826008 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104616378 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134179734 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08709804 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096239404 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151359311 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1588413 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101067199 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161980439 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140473023 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121625156 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143132437 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099191767 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103342299 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118709952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069417307 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07824108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165540132 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127971033 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142525138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10860923 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091313834 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172089427 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166391814 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139239551 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131967297 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082295673 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099821698 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130402107 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19449732 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086739158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159395408 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242824896 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079505891 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137663491 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117768509 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117722719 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104964572 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087649579 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142701914 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178374362 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135044403 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085359853 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109200091 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112358644 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112803588 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100883592 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177881791 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15713626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125145083 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070001101 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09709478 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150386635 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129160192 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106295302 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123094711 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091509989 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130286175 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151363301 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115766549 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139515903 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127827704 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08694737 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116345356 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136553234 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124753085 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165815267 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121785283 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071404723 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12131198 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101140286 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079674311 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14020893 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073582195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171719929 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096128563 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103838863 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110351332 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107141802 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106617568 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157951694 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140156427 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24109339 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064904676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101860636 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118044253 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144434382 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085733303 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106136077 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113397564 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076116487 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135353932 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074046323 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121162734 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074328746 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122676336 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128485905 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073788269 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119757645 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098040993 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099154421 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129736439 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156396246 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086427812 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080772113 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163905605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120523091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101818437 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140328197 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151393808 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096884176 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100597822 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145334386 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175718128 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087198808 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159583839 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105024485 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082100297 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085592261 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120785391 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10969003 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120170129 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080460139 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115789374 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164050452 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073730848 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093522692 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130505913 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077119348 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0791038 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101224886 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098139411 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092777579 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098152922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101818933 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135870247 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12038873 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102093255 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265636535 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09689129 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167251942 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087128063 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098478061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101927179 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069187937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133992958 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154272035 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078717458 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16134953 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120734859 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103287994 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116562891 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081715246 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137000283 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077235989 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068759482 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140715543 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108329986 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107468966 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147063086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102396081 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123149691 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116718381 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130864053 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129140503 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126207763 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102630737 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086884781 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108791047 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122819176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071596663 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089136407 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078212607 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10169966 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093253439 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081289728 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138785672 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121183558 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098005864 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109119761 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09457655 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143489297 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074651706 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125895439 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117124037 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092022505 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148679073 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148393235 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129017976 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097500698 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142264708 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068621004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072165293 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229345722 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121818546 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081549676 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082248742 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115543169 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144450557 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125577465 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134544442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109250055 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118254226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151092911 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068014144 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112547977 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143645586 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118573385 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101878061 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087944314 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09676493 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138920957 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105550296 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177177949 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110834307 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123109277 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150696765 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097329352 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077999786 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10106513 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132676677 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102212502 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143304086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097136371 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085956277 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107539146 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073087384 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097789144 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124363671 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117126807 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132315497 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111802738 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129840761 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07570926 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114783082 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117847008 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120908791 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063040938 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117457709 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157049317 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092094065 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115808266 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149512882 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077971729 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121796239 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316186915 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14322899 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0832205 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107671787 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11508462 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124701472 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11731397 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136405838 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108071554 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131975978 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106756464 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083760327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085422759 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094284373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102546445 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092835886 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104748446 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111955842 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092653718 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12973155 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100715337 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106843765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11545391 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094386255 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087595579 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094552865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170077994 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117586902 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166714624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097308134 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140924325 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15969094 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073194485 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077432812 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076607547 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136870373 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082258034 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128120766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095616271 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104114802 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121271133 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140542592 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093111113 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067548416 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1058546 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131173616 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109822343 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096276158 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102488321 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158935478 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098439951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077455504 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111247686 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102430337 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099666183 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310623825 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060982495 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095642176 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074976449 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079554676 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12454399 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150123916 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079270644 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10059787 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11640227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108272391 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124129401 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099202247 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097537407 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112409005 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14751233 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125976138 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087616307 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109349168 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126671792 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167342525 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103450445 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093388898 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167734803 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147537198 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156241384 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085676039 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110923519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111032911 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106262057 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135823963 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081503604 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159190074 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080181723 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132782802 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104298334 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087686231 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126957901 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.096405272 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086091515 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144063062 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11482085 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081042755 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076007479 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115952463 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117519673 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104329724 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073846522 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136062458 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071153501 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128817794 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164747849 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079400983 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102083928 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237930688 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07818851 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10608232 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100994969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087534451 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096537993 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168562092 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085829314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145606536 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137791719 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110130518 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133757116 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097631816 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633216053 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076369067 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148232726 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114118577 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169087691 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095760652 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11481349 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106180501 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120402856 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140818091 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102735333 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174046259 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129341329 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112940314 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077899637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099498909 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100027591 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087044215 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102925396 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111332434 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112631916 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091650025 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113303489 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120343348 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080212678 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092711303 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151991185 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11416383 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141418984 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137715948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083589468 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115905412 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135476198 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078396434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119007655 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148619097 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103608571 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095626769 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078064681 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243656528 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167126979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07222098 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157831399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116727158 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107545473 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11046803 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111547263 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129159064 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105835913 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118872654 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091116275 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107451844 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110102602 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080370534 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075417264 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102351823 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109943038 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095882318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096632729 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09641904 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14703596 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070295518 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094461443 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101520576 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141696165 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170200192 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086339734 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081697431 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115786477 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110152273 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110246564 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117990686 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077309337 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080648115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080145712 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.075950691 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105923331 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110023018 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101912429 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108709957 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160059909 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080710806 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222474594 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09339022 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102554009 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068391248 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076788128 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093422069 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09500802 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105990388 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098676741 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165588092 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091910405 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087167467 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089672748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071324474 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080360898 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267858011 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109058358 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116774226 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095479965 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061968976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107029301 seconds)
  done (took 57.608626642 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106949376 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081331999 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09541367 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148097102 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120845581 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210016505 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155753542 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197715329 seconds)
  done (took 2.730910421 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066702966 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092804314 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097744617 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081105079 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06505901 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06653389 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220722786 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078413984 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065187848 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086347504 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076906102 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067439163 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.39460534 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064442856 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066448633 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061317618 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06735695 seconds)
  done (took 3.325376938 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368928417 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.366416792 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367564412 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07165802 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.660982966 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087287288 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.062312923 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094971492 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069988244 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280684084 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.699893682 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.090769107 seconds)
  done (took 13.837921374 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073419229 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.067738973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081300277 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081463063 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070437641 seconds)
  done (took 1.989548883 seconds)
done (took 101.205482368 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07828222 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.289885964 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051986496 seconds)
  done (took 1.983160734 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081611496 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083405895 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083029326 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.080576685 seconds)
  done (took 1.946450314 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.072577175 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074652827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082202477 seconds)
  done (took 1.843186081 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220143233 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.135261925 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084750089 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080147189 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076106473 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076670904 seconds)
  done (took 1.854737255 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070299445 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07391184 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070777443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074889303 seconds)
  done (took 1.90730249 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074220431 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051772628 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053705418 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054338924 seconds)
  done (took 1.851867066 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084174967 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077565323 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076477826 seconds)
  done (took 1.857892912 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104485433 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.082657828 seconds)
  done (took 1.807011827 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080538217 seconds)
  done (took 1.69889912 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096838266 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111520209 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125285823 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106669067 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133265592 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108476915 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084430425 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084252242 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074998559 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084893246 seconds)
  done (took 2.627682948 seconds)
done (took 21.508976291 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076361604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359122729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358632898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088514718 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667501572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354992301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965873914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090040769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118032553 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066136689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082031548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646315483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.951175646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317749003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942535553 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317795466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650470629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066612676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065962264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066382871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950591665 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065925705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065972974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066981074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649459171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369564564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066283468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.313823423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066058684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067998224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352962122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066589636 seconds)
  done (took 15.960082839 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068728985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115812341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072333811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082633796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068855568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068083086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07063473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067275074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122082745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066422027 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082228699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066476679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070149177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067029537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085429722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066578327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066980111 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066909156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066698294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066894525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084226816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066429666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066744641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066851981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066916701 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078282147 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067049539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067000597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067231616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068591855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069590992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06750227 seconds)
  done (took 3.975331736 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112589628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122528433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072762707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100910662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109502958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068912737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140083551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090920707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124551413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06657373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082351482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066667019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098718695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067407919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085616607 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067068001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067540863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066908265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06712383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067070474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08553139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066611364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067639769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067323868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067217703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079421965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067046684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067321678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066936631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068784913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070615241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067206111 seconds)
  done (took 4.220093893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070844812 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074216817 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080314622 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081531234 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067805708 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070175507 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071320374 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068511447 seconds)
  done (took 2.220118494 seconds)
done (took 27.998549162 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076870481 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066911646 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071636818 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078852656 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071247607 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076877165 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065433336 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072744602 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07040079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071205924 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073609238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066265817 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069421967 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065790311 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072274703 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066353904 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07764063 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07020382 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078125755 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077351746 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068134551 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071146626 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072973173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077602316 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077763987 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077019685 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075570317 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070865881 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067988441 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068966933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075317941 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082223581 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067221576 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077326007 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066552811 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066492631 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07045782 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066470858 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077647699 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075053386 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068194651 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074470595 seconds)
  done (took 4.650387214 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085812206 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089378336 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083090358 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06023823 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065865917 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063828167 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08688461 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058588508 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058467036 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085820606 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054690664 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058056894 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.060807158 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053067318 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.057903449 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055710559 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06029471 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054877269 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058068639 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058394861 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056728864 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053015269 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059272694 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063239743 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055592755 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060535742 seconds)
  done (took 3.297818171 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073422629 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082749282 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086231239 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124252922 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10183199 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076692599 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076481228 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085549022 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08378499 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065576717 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069380797 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091598426 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086118041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07209667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066475798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082009051 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080620754 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067843416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071669116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088484273 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08230251 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076181935 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090288087 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078735417 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065868596 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067983673 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069859638 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090506101 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070592125 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074259841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069540686 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069187059 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067872761 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077264929 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069419732 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067450512 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087483756 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075278133 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075776662 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066710426 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069081747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067182601 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087250767 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120350545 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06580725 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072488 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073544077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075110441 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066085836 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084507337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077029736 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065424488 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068767305 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0659143 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066314432 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078849805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067916479 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068447773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075355304 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069242113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.078319122 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069867521 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081155046 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065798334 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073675496 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065522137 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066872715 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065342293 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090763497 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067806199 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106106511 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067331175 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067588948 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074601843 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073497532 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071569165 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066890435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080675249 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075788038 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069988799 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074316863 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069538115 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069340862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085806818 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068037615 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067597854 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067117278 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072279941 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068856319 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067555549 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078497713 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066321801 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06912371 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082321187 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065675928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067311519 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071824462 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070316729 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065911687 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076958285 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070853828 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066768412 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074986729 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066155546 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068731886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076200483 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07206345 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065579788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070566437 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07243393 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066832763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067712974 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069400883 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068094684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075377411 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072570487 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07067666 seconds)
  done (took 10.351749207 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157566704 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149831542 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069007009 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142111013 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075174348 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077266646 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144103931 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092332321 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066087231 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06717 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067112192 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112630136 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103131739 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119754073 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.076864801 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066113986 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.081571785 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114362058 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145776395 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139587904 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.081523704 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075192934 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068510237 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067576268 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072836925 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080855454 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089019601 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075477672 seconds)
  done (took 4.351547796 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079538566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099242327 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072454092 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087632422 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088772901 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066559105 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068493641 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068323977 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078798673 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076889805 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066230986 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072174417 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072737427 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072906635 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067637934 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072963343 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07355582 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067910812 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069452924 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071517863 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07600424 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.078685868 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070393381 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065760534 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072539561 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065733452 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062869108 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082174699 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066855745 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088435399 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064466706 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073454864 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080298173 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067083193 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066249382 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066532787 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066252767 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066295672 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068053023 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065026469 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065321009 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056496536 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065390692 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077321054 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0722299 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055438611 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070929878 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071295861 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071785552 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063903641 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069387014 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069203408 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069603844 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073595787 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071209697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071487717 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067317028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064715806 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073973611 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066161429 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063496814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065136238 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070973555 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064745694 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074199782 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070630346 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065182163 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065717536 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068480643 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072232687 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066068723 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069697989 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063990317 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06816375 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070721988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068018243 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067472942 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065216507 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065570262 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066404688 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054490643 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066698427 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053230051 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069492489 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064439035 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064827848 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065882449 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070835495 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077967705 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067209538 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071671444 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067164315 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065082596 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069148262 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059246823 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069047415 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081115591 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080465705 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065956799 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064001401 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080237604 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070404118 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065529347 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055300689 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073606947 seconds)
  done (took 8.982685743 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093294821 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08610107 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068605011 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081615003 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089140933 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.084866472 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073333541 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075092344 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068198208 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.080306619 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071908846 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074708641 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06644541 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075231024 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092446777 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075184517 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068233637 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075135717 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070569776 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099003964 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080962607 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080067474 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07321936 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066823489 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073780308 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078463411 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088133297 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078097261 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077226446 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07385509 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.07827837 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087924164 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.072633021 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.070652686 seconds)
  done (took 4.33367226 seconds)
done (took 37.59717834 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.712652671 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.896166232 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.711542986 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.094669727 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.924695894 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.84209653 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.78898522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.706720326 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.052179019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.755925681 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.95858788 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.745368332 seconds)
done (took 64.836670836 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.72898712 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.855208539 seconds)
    (2/2) benchmarking "String"...
    done (took 1.983133967 seconds)
  done (took 5.490299545 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.047417009 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.256716867 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.953690705 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.709727509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.715274827 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.002879662 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.513576692 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.23555081 seconds)
  done (took 30.040863065 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.911388062 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.915260327 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.389487023 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.425210905 seconds)
  done (took 15.349713596 seconds)
done (took 62.399729498 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.724536324 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.742642799 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.717174914 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.694242427 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.765410697 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.720255083 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.317568832 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.80072628 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.708009041 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.692915728 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.709096869 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.131152778 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.722403708 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.178516454 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.710237235 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.709010049 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.716048341 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.440700161 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.863230572 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.714514826 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.725315119 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.755557455 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.714339159 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.859134992 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.768441312 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.710385735 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.150840425 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.716821952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.321175956 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.713341129 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.741177041 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.75228015 seconds)
  done (took 202.359745654 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.711231831 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.520422661 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.616744312 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.761840765 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.031765601 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.913708788 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.8336339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.116789207 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.716526035 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.721087106 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.854760551 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.713274178 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.907693198 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.666964073 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.730471094 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.729075461 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.880854328 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.928803102 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.728870687 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.983137977 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.725263727 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.69648857 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.642954656 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.851395638 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.725617093 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.751568133 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.742051637 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.745005848 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.904582157 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.845483181 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.719507912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.732027704 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.905612951 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.586775929 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.722865872 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.722521356 seconds)
  done (took 166.744105583 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.099130185 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.713555473 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.712056421 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.713528252 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.719026187 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.712754285 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.834759026 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840142243 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.167208833 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.067353977 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762861548 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535616245 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.711836249 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779386814 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.727114801 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.712981654 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.714218907 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.727444243 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.737216611 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.71653663 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.713021148 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837185235 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.726352278 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.772757477 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720991945 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.713330882 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.718823239 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.082135656 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.713094679 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.713013361 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718771749 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.956949923 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.721168631 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.71559403 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.621874522 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.920532547 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822499565 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715913887 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719837704 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.714467038 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.934163518 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715388592 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.714191191 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.716405682 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.904076592 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.71599942 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.83884727 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.71771052 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.223096383 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714782667 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71494535 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.030193684 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.432950029 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.717610026 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.714942994 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.716523785 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.714877264 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.714408873 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.721699378 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.871419481 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.788313725 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.715937248 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.717205762 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720947069 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.715194495 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.868350703 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.715976146 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.615568876 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.773338525 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.822595335 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837811325 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.719216447 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782450927 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810142846 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.716045984 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.715472936 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.7154806 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.715397128 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.797133761 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.715080552 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715176117 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.832019835 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722035218 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.716862089 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.764633981 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786305396 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.71653314 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630748328 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.7193656 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.716239884 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.030521634 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783975566 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.716539861 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.715999385 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.715908818 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.831962115 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840451089 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503246329 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.719872107 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.894248978 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.964819786 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.716680752 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.906817267 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.899388635 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913222662 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721816115 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80987696 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724039991 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.718388507 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.717578354 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.749031014 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.720073478 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.777484051 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.72174394 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.087454511 seconds)
  done (took 395.355893556 seconds)
done (took 768.27093114 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404714549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.373814556 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502433618 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398403209 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.37261749 seconds)
  done (took 13.713401237 seconds)
done (took 15.373381004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.811746994 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.811341595 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744462144 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808566554 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740145261 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.806827686 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.789394216 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.743403502 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.77466086 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.744146114 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.776991356 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744589717 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731603407 seconds)
  done (took 24.689157477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.960103318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961696986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791781755 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95115552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768297047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958433468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887404469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871072266 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880393206 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736558767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732279903 seconds)
  done (took 22.162339618 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.959925557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.956874217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795873788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.96061109 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769877977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.966942667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887684391 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.875346414 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.879646022 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735572096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.733793085 seconds)
  done (took 22.185398401 seconds)
done (took 70.697670742 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.729271838 seconds)
  done (took 3.393470349 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.751083863 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.887254208 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.737347819 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.734082795 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.730236302 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.730879537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.734048117 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.729142893 seconds)
  done (took 15.699172932 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.728031347 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.726686027 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.728253339 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.729841638 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.726727908 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.72558357 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.72751461 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.727219424 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.730983991 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.725794788 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.726579272 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.72917212 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.728539942 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.727823756 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.728165013 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.726422098 seconds)
  done (took 29.309652592 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.728328276 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.726557229 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.726530839 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.727404828 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.726771107 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.728100417 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.727531762 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.727080161 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.726001585 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.725788598 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.728883299 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.727327356 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.728359554 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.727613136 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.727887788 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.728105414 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.729387129 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.727776804 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.732166019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727305312 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.728592431 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.727763956 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.728344491 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.729045463 seconds)
  done (took 43.13666226 seconds)
done (took 93.203299508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.44420605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.218322446 seconds)
  done (took 8.329212168 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.7318795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.730130602 seconds)
  done (took 5.170984834 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.732368189 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.73159281 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.730232545 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.730283096 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.731206399 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.730974271 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.730145952 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.730746314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.730073054 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.731689705 seconds)
  done (took 18.97549829 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.731111468 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.731132278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.727994579 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.731228296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.731353473 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.729180872 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.732259341 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.730924376 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.731798004 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.728274193 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.73110605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.729263414 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.732293171 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.728725183 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.731404071 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.730007214 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.729041622 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.728210679 seconds)
  done (took 32.812151761 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.731209282 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.731314036 seconds)
  done (took 5.131010218 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.729884777 seconds)
    (2/7) benchmarking "second"...
    done (took 1.73005144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.730320423 seconds)
    (4/7) benchmarking "year"...
    done (took 1.730112833 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.729804857 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.72968406 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.730092673 seconds)
  done (took 13.777070897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.734536876 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.904313662 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.972630376 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.402243952 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.733596966 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.736669153 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.680946448 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.736595922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.737538065 seconds)
  done (took 19.30839768 seconds)
done (took 105.170830769 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.545922371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.729866464 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.104646275 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.79220958 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.784586274 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.025508852 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.772711099 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.944904168 seconds)
done (took 42.370106327 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.783638871 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.205182896 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.229324136 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.588261719 seconds)
  done (took 11.693033216 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.71253149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.252074257 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.768622833 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321184419 seconds)
  done (took 19.737380465 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.09799829 seconds)
    (2/2) benchmarking "read"...
    done (took 2.090762665 seconds)
  done (took 5.865504483 seconds)
done (took 45.753040024 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737104971 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.736300336 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.734557779 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.73163002 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.735304256 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.735130152 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.735127625 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.731433931 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.731428169 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.734559212 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.734437259 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.734566525 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.737146623 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735277007 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732969922 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73175819 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.732289416 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737411247 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.733154213 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732334321 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.732649849 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734765951 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.732655809 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.736085391 seconds)
  done (took 43.291423901 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.736085656 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.734012501 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.735849599 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.735759542 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.735608311 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.735950021 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.735584357 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.733171602 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.73534104 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.735753814 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734231998 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.733878688 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.735812803 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.733401225 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736500165 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.733334066 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.737639021 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733204176 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736468588 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.734925173 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.736911549 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735812937 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.735454433 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736778477 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.734254455 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735183385 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.737343323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.737448431 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736643687 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.735541092 seconds)
  done (took 53.735792636 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.742301209 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.746137511 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.740088981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.736826802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.736722708 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.736937875 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.737523189 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.737441699 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.740099399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.737755447 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.737281869 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.736745527 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.73742724 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.74116913 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.737522576 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.738968798 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.737906985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.736948556 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.738065613 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.74006299 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.738398352 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.737524455 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.737098991 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.738049884 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.73786265 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.739738118 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.738981658 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.737907922 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.738656737 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.73767109 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.739068994 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.739908263 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.739246945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.737951608 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.73894608 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.738277561 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.744672082 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.746275356 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.738665989 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.738609561 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.739825135 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.738320955 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.739728515 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.739394556 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.740218063 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.738043345 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.739642915 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.739433728 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.740765107 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.739507418 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.739086354 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.739338879 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.740193618 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.740172763 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.741215096 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.739848806 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.739832482 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.738947736 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.739082501 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.741595456 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.740932844 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.740221231 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.73998623 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.740133468 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.740548595 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.741887961 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.740358598 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.740746995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.740998107 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.741335704 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.740290561 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.744094198 seconds)
  done (took 126.919616285 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.740180586 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.738394358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.738148937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.738392103 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740592131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.741412379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.737653485 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740381987 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739625929 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.742538167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740237281 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738088383 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738526238 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740977046 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740498972 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.740522069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.741370073 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738827785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.741308704 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.742245566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741778626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.739625306 seconds)
  done (took 39.958497694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740522178 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.740486341 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.738966535 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740851479 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.738848238 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741045231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.742060391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741794736 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741903573 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739343409 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739615852 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74185709 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740246592 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739118429 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740104207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.742220072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74286409 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740097515 seconds)
  done (took 33.008634068 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.739868887 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.740109412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.744087066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.739982811 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.739261397 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.74389778 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741090987 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744016602 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.74587973 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.740057228 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.743109355 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742883348 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.743153949 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74238287 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743523773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740905873 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.743411884 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74028742 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742761553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742355276 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.741453011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743766029 seconds)
  done (took 40.007363235 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743418847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743198433 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.741226243 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.741359217 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.740321546 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.743603887 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.743168808 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.740574639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.744197491 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.743766352 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740881593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743148288 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.741213357 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.745881156 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.74139995 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740976652 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744187804 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.742416086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744643807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.741037085 seconds)
  done (took 36.531296415 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745864221 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745827854 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746561867 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.746601568 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747290338 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.747648106 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746754025 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.745872899 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746484786 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746830113 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.748301116 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746679839 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747233404 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.747235362 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74791716 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747496136 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74691299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747156297 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746942845 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746549892 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.748440093 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747863658 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.74748875 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747272748 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746454707 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.747416542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747596572 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748266563 seconds)
  done (took 50.599845619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744862336 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.744988496 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.744106636 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.743063455 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.744561606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.743855381 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.744726775 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.743700373 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.745377967 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.74581317 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.745305427 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.745655717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746542359 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.745845368 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.746418844 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.747213451 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745964811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.744646672 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7432521 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744216225 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.747404199 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74795157 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.747147329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742946289 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744173949 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.74703068 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74401475 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745248163 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747732325 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74440745 seconds)
  done (took 54.041753043 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.764591698 seconds)
    (2/2) benchmarking "in"...
    done (took 1.768280017 seconds)
  done (took 5.215621901 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.744953406 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74777159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.748130088 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.745066043 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.746840917 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.747875345 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.74821977 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745214635 seconds)
  done (took 15.656755033 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.748862831 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.749404017 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.747848473 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.748566009 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.748950103 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.750382101 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758462058 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.748357669 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.751085095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.750127563 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.754830126 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.75726338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.756812495 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.749062552 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.749065487 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750300447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.747992928 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.749474846 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.751984324 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.748979707 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748607761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751565358 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751464234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.746821449 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.752890418 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.760386994 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.755177978 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.748720433 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.750944428 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.75615726 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.752527635 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.748223584 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.751915399 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.750761355 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.749876883 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.751605664 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759314556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751971503 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.757478616 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750471615 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750060245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.747855002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.751595114 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.753667739 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752110355 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.752214737 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.752099898 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.746644875 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.750790914 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.754974659 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.755653898 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751397746 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.750496852 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757291349 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.753300686 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758325545 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.751716786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.754508313 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.761778785 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.76247824 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.765966571 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.758434302 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754932185 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.752539659 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.763554908 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.774727346 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.759860111 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.749124463 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.74929142 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.752110745 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.759985796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766300829 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.759834943 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.752627453 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753020317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.754327292 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.753580819 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752351621 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759937586 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.755915752 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.753344955 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756565001 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762760393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773014393 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.752231001 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.753448316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.755481322 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.753291818 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.75445088 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763161615 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.754269328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.752456076 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.755452823 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.754155686 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.756864691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.754684649 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.752495851 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.755257428 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.754510818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.753819062 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.754601905 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.756624041 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.762608728 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.756523322 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754356277 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.760666722 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.753149869 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753218128 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.763947635 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.756300851 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755210087 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.754793832 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.76287929 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.751658669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.757479717 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.764897017 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.75545432 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.757210746 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.755460456 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.754047707 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.765084981 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.780412758 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.755104674 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.75390197 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.759656224 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.765674357 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757134073 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.75815948 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.754834548 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.751939057 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.751762577 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.75753091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.756358044 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.756479916 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755463703 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757951478 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.752245518 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.754767313 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.756943284 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.756674737 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.757827546 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.755876029 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.757519657 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.759864281 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.756709879 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.757762647 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.763020266 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.757117999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.757639073 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.760220369 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.752830872 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755762692 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.758740496 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.757222155 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.756623938 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758145174 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.755313823 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.756490464 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756088021 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.755747743 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.756359165 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.757414954 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76075991 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.757572208 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.762526932 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.757246955 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.754446082 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.756869748 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.757346711 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.757010029 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.757606486 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.756334675 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.761068356 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.765868048 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.757951814 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.758326201 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.761993946 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759008767 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758524338 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758835167 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.76138152 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.765331554 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.758797359 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.767436813 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.758329382 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759019127 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.758486983 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.759197433 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.75790308 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759066307 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.760677286 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.765158092 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7729385 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76698003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.759331143 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.762442473 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.759263675 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.762926979 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.764903931 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.759552465 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.758537914 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759556801 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758391173 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758966309 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.761676873 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.759546263 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.758666215 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.758777397 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.759067532 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.759327319 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75911533 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.760889313 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.761783572 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.757467766 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760337032 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.760173791 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.760072335 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.756358176 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.759217946 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.758794503 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.760157024 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.760196824 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.770188161 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.757408954 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761483862 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.762471554 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.761815129 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.759048395 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.760339157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.762744078 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.761154253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.768427197 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.761651103 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.76158921 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767777733 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.761658831 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.761017882 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.764397371 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.760181816 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.758790012 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.764908115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.767674183 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.76075417 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.76102711 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.760812119 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76104892 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761359883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.769127481 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.757866619 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.760458768 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.761086269 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.765271164 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.757983725 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.763493311 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.763274723 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.762349216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763326853 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.762068291 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.761675395 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764038473 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.761329564 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.763184945 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.762351103 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76425248 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.769041286 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.76759752 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.763600317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.767258011 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.763187308 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.765459703 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.763263979 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.762322053 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.761655266 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.777564323 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.769599903 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.771071935 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.765445071 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.762710438 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.768403841 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.764017569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.767776679 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.762136019 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76392433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.763818326 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.762978085 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.75983643 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.765437271 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.762822085 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76468141 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.765262797 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.767450167 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.764246757 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.763358207 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.764679548 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.764529693 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.763820208 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.764011924 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.765538424 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.767750551 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766553654 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.7640248 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.764641279 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774012883 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764892991 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.766828319 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.763867188 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.765177507 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.764662679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.766547879 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.764422442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.767609556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.771835833 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.767077683 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.77501506 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.766073689 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775002449 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.764674188 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.767659719 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.772977665 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.761905774 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.763426689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.766565265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.765529692 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.773481901 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.766335657 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.767353167 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.769663177 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766346236 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.766454985 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.764689647 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.76741233 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765827389 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.765486082 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775417858 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.766858098 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.769804618 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768565228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.762178259 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.766795414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.765238292 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.765642646 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774093705 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.766334475 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.768189589 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.766910504 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.767044439 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.766780998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.766656188 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.766376955 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.76429521 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.766964565 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.773736783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.767594834 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772351789 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.767396015 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777837515 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767870349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775422716 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.768136825 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.768882185 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.766764154 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.766361643 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.771188379 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.767097283 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.771885143 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.766948433 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.767169843 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.770521308 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.767952507 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.770473112 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.769476799 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.767705089 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.767468351 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777004293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789820309 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.768931595 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77122527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.764315073 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.76919876 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.771722094 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.768366054 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.768667185 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.769227019 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777774862 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773721215 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.769077139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.768121869 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769375772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768579487 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.767645058 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.767786013 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.768822082 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.768368594 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.772692998 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.770286902 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.774173109 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.768076768 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.769991062 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771854384 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.768723468 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.779083895 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.768318405 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.76999743 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769180315 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.769701088 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.769847501 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.769711545 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.769711896 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771053385 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769679592 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.770914364 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775409479 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.776478874 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.773224438 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.769739949 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.770383042 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.769858109 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.771730234 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.770649982 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.769499375 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769581637 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.771287052 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.769752344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.772199285 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.768365783 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.769419082 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.770794386 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770419115 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773345903 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.776929513 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.770378981 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.766504542 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.770744812 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770422385 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.769942957 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.772274698 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.78155905 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773831753 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.780083632 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.778887621 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.775592115 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.772206918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774180492 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.779376592 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.770411911 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.772577256 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.772360446 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.774843851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.772099564 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.777277852 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772751022 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.780061342 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.772528786 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.772363233 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781115148 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.776289829 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77256278 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.773588062 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.777371349 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.773077038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.769811154 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.771735218 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.772756265 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779770169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.776191449 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773394922 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775547909 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.770508606 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.773276438 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776667351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772806916 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.773669966 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.770187928 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.773194503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772715605 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.772903237 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.769939389 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.774270657 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.773679459 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.77449632 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.779962315 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.76973594 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776030164 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.77511999 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.774458695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774405293 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772663913 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.770111728 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.770640866 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.775027117 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773504339 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.774696898 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.776150389 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.773221796 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.775563722 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.774868943 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774561326 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776679328 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.783066447 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.78082468 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.772740145 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.774629941 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.775557699 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.778119921 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774779428 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.776779147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775153842 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.778964454 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.773679452 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776603945 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.775101858 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.778758466 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79229908 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.775452919 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776463407 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.776483027 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78202439 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.775917073 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.772435493 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.77528319 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.779542301 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.778348088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.78360721 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.775762001 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782640822 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7755321 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.777192072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.779440696 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.781513903 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.783855117 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.779276351 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77608113 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.777051089 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.781031991 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.793456423 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774691624 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786328075 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805498295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.776959179 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.778356909 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.777642689 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776362395 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.776020897 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.779824415 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.777249227 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.776186584 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776907828 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.778115435 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.777621297 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782845024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.779503776 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.775662693 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.776336192 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.778575451 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.780491108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.773491958 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.778819658 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.776384032 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.778164518 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.777253394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.777831348 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.779141032 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795851646 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.788737419 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.778274421 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.778507266 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.775044622 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.783817816 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.780680279 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787707375 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.784635158 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.778362189 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.777929218 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.782499767 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779262375 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.775269815 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.781032044 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.779277815 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778601482 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.776298257 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793593896 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787324111 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.784429448 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.779870103 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779296187 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.778876853 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.780993795 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779317932 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780628283 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.781406591 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.781080088 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.783561281 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.778226297 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.778274213 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.782004083 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.787815279 seconds)
  done (took 1054.313547307 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775494176 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776688261 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775968597 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.774832491 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776184928 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775760873 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77576471 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775660641 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.77605115 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776349508 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.776432338 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775734931 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.776857736 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.775873358 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776222516 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776809172 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776648688 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776963162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776270669 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776229234 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.776796677 seconds)
  done (took 39.013175947 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.780022221 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.777691439 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776931418 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.779960873 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777227206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780051929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.7768028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779740154 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.779494145 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777212337 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.779853391 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780093125 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.777134731 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.777904064 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778277273 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781136432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.780506226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778151606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.780726511 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777609099 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780920037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.778230201 seconds)
  done (took 40.850961862 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.782539948 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.781846291 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.781323882 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.779116562 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.781419781 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.778316293 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.781912787 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.780866935 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.782244835 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.783834418 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.781108973 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.781928813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.787536628 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.785612199 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.78503966 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.781758944 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.92584165 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.781505172 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.782734971 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.78236311 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.778815289 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.789384815 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77986987 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.779390255 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.780380836 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.782558672 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.782312434 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.781497232 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.782033583 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.782736103 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.787590308 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.780453214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.783048573 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.785341454 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.782157017 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.785174482 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.788199353 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.785473213 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.781499917 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.782294539 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.793847478 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.801196333 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.78468678 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.790011041 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.782250695 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.782727415 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.7859868 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.791794659 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.779529244 seconds)
  done (took 89.258425094 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.784037024 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.782373178 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.780853905 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.783209662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.784865609 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.783538599 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.782896067 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.782751944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.781116552 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.780358325 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.784487014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.781174683 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.780324793 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.783188829 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.783465133 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.780847185 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.782778028 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780157062 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.781455128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.780491109 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.78116239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.784704434 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.785228145 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.781076403 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.783474014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780399839 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781068539 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.784329258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.781284044 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.78048426 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.784664413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784274887 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.784522503 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.781883191 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.781807972 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.783710132 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.784633121 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.782082441 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785368736 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.781834348 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.784380189 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784686957 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.784721833 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.785196959 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.783912257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.781363505 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.78219008 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.782552618 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.782841378 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.786809992 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.785690905 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.783315345 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.785526269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.783014381 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.785263843 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.786436144 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.783554394 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.783528774 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.786408865 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.783533542 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.783070435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.786390692 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.784068764 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.785184409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.785854152 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.783226049 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.785090225 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.786128658 seconds)
  done (took 122.988382439 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787268122 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.787396081 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787634777 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786743135 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787156126 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.787683565 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787569711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.788064753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787247836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787198693 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786522435 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.786139703 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.787580929 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.787229615 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.788139593 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786826454 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788338725 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788555543 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788911788 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787192502 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.788391549 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.788917713 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.788095018 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788235891 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789059405 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788612596 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787957308 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.787565684 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788703192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.789133692 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789374827 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.789994236 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.788617501 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.788602282 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.789051662 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.788102607 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.790723015 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788372303 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.788894748 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.78879333 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.788134303 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78879198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.789244984 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.788697097 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.789447769 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.789454802 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.789178697 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.789962902 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.7884631 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788341926 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.789558618 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788472705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789652177 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.789252537 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.790145119 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.789049906 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789514847 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789119875 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789657262 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.791177738 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789954829 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.789280175 seconds)
  done (took 112.611693737 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788617929 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789930291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.786880261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.78671146 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788374323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786125261 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788699061 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.78978228 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788075373 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.789761565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789451031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786026163 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786094839 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790285431 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786601739 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785831252 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786280535 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786008758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79138119 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78697539 seconds)
  done (took 37.481394125 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.786983304 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.790096572 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.787250449 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78948128 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.790023936 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.787496499 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.789978456 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789427287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787360141 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78962038 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.789805156 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790077697 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788283741 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78815497 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.792471463 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.789468522 seconds)
  done (took 30.350349349 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.788063696 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.790590974 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.79283031 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.794263718 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.78895369 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.787955164 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.790487547 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.788138736 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.789343038 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.791841856 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.790805212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.791057501 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.791371277 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.792122519 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.78972924 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.791014453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.788677856 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.787988622 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.791217502 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.794236661 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.790122679 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.789132291 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.791666742 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792426179 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.789355102 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.791053408 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.789370109 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.78950193 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.789562058 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.792223171 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.791815804 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.790400998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.790096683 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.789560029 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.792944108 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.789604877 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.795694752 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.792221616 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.79329125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.792924063 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.7930491 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.789590531 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.794796408 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.793255589 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.790277876 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.793339377 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.791215606 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.791317456 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.791039806 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.790524259 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.794436353 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.795065624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.794365318 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.794808455 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.793825806 seconds)
  done (took 100.252174815 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793691579 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794341022 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.792632125 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794060104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79327453 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.791802048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.794589824 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.791473018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793091903 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793882335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792807472 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79411844 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791872528 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.794595274 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.794432255 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79436449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794335719 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794903389 seconds)
  done (took 34.012919451 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793065984 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793674086 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.794849831 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.791361372 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.791961654 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794360343 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791084082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.794427605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795686662 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.792901011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792139789 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.795583469 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794847437 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.794893499 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794443062 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792169414 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.795108251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796290981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.792703436 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792827665 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796137286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795336574 seconds)
  done (took 41.195861808 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.795324298 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.794751614 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.812804748 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.840340576 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.827319368 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.795494426 seconds)
  done (took 12.596436039 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794659988 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797879449 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7939973 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797778356 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797001488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793777878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793403183 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794667906 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796657396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795821198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794397772 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79716541 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797078635 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793486172 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796129334 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798136237 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793437598 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794750661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795627329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79707973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79494099 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796469573 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79443836 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794096802 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794372963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794362607 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796986243 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795366178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794910042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796362629 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79698404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794383394 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79713643 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796040253 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798088851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797231248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79453215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79830662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798035998 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794757522 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798544216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797896205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7980037 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796202333 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798815718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795976383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795642242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795287299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796805455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79949085 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798937816 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796453908 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799317678 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800195435 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80031221 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79960523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79818879 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797046405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799553932 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797812801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796529488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799941933 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79691271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797647088 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798743712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796161539 seconds)
  done (took 120.310557898 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796947228 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796591067 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797256351 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798358817 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796992192 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79745316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797300344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798072267 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797230124 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798714684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799973348 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7972583 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797477113 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797477762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797217009 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798343286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797068607 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797862745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797616274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800982747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799817336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798477044 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797742093 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797883905 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799543903 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800493233 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798701571 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798174443 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797759719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797974155 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797473117 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799679648 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798587227 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.798500603 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798924184 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798934143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799923905 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799404863 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799087936 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802013954 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800340488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801873137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798683181 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798445015 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799537428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799905161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798789472 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79927838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798845595 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799522578 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799254322 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800685329 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800072752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799895825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799862104 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799548796 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799771979 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799621896 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79906009 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802073561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799086217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79985437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801699495 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799705726 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799747126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799790609 seconds)
  done (took 120.46618833 seconds)
done (took 2456.3391567 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.862313981 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.79428725 seconds)
  done (took 15.393090479 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.964032213 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.916113484 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.801198427 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.832030394 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.801847509 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.825028756 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.821660487 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.80248736 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.802036956 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.802490192 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.802993537 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.989261732 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.801600014 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.803631204 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.802750436 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.895085507 seconds)
  done (took 51.203480978 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.806234465 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.80611472 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.817226837 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.808620843 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.80646448 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.817307663 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.838220044 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.809271243 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.840493387 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.82914393 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.878615152 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.81563048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.807001783 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.85456219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.818264425 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.822075772 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.908700909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.880194668 seconds)
  done (took 34.704220496 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.883692222 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.807320892 seconds)
  done (took 10.435316326 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.830693028 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.808781792 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.822965881 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.825132165 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.812706961 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.835477008 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.818946047 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.826864917 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.822790546 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.800792505 seconds)
  done (took 69.953411729 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.81190791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.806205296 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80747345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.80501889 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.798554868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.803218806 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.805606542 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.804308619 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.484255869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.840675361 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.813806074 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.811939573 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806321833 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.80813426 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.804397664 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.827830201 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.974866475 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.804387395 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.804566682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812760449 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.806907339 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.858443759 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.82130511 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.809314285 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.836264295 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.488116561 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.81482252 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.813004411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.930584092 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.805711883 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.807370554 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.808282395 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809712253 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.188103097 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.124187966 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.806665451 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.816369419 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.815411343 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.806508783 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.919501466 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.80892836 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.814413684 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.774293504 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.114975908 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.906313966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.850747061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.208760664 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.812259923 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.810072148 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.837860163 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.811430415 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.809160305 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.820949368 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.320702931 seconds)
  done (took 129.367586614 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.827735306 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.28893875 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956966662 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.805437441 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096186878 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040835587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.804997613 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852257422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.839278335 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.055988663 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982440964 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924308774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805559038 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.806632789 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.804818941 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802645593 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.954839066 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.876622742 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806876376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.805541348 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840060725 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071941016 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.930538125 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.944913684 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.828063818 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030725915 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.934442183 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924324291 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.805991513 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.802967568 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872300766 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812337355 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.807304656 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.806656462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971138146 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911592647 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.901959768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.808559334 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807835475 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.808202345 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.833137322 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025527496 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.913257889 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.943887917 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053684959 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033876546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.806725865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.804974154 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.812273869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998566772 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.020334112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.061269921 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936148056 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.807844129 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.146277499 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805605685 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.860852937 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056480567 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040479826 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.917415773 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852410328 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80707564 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.804381297 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121619182 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.808439641 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913247271 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.182233609 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.809910616 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.915517516 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921858355 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041456977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046142745 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837491038 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.808685041 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.847396102 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091533272 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879599662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059225654 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854678211 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.808528046 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90061421 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.813607938 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982962214 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125079905 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075123094 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849146651 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.811255816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.80665278 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055833822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059677934 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080334231 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052628756 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.974632993 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.863273336 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.808847624 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.806262225 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.809495677 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.940106788 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811074364 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169393078 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054220626 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.576325539 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.838908867 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124259136 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947793087 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.811183455 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.808594782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.810390425 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015121454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.854150894 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.811798988 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809116007 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056365452 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.754585678 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.923173976 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.509765458 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.874533919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.810966367 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074824232 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810967091 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056548406 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840452284 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121735032 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.427001849 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853314217 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.006633403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055751587 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.81088207 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072798934 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.124165731 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933865555 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.058401811 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.54977968 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.813839775 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102908464 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.825212889 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.835233971 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.979557368 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.815247506 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965688184 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81365097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1184208 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837205477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980057299 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.067577679 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087393707 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.85681905 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865583052 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.823862069 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945379598 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814895648 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.835607791 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.995686895 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911480432 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.812482135 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.380324146 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.812284907 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95974903 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114335936 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836223431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884461653 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.813871008 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81271065 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905746319 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839155846 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.464529282 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.814420723 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.981052751 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.77758443 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.262874301 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.810804062 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.121510778 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.023656012 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.817044831 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.813432761 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.616763317 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.810612654 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.974017636 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.97161589 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.488710264 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.815621188 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029438122 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814270019 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945871577 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814824202 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.812628613 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162959261 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.89513968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.816405108 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.821723325 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.811026079 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.812382956 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045682133 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.842050216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.533263442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.952470228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063829924 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.125528033 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.075980831 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.862269253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.815976044 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118940789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856347503 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.882286352 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.815528891 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838741351 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058090309 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816894987 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047022987 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102433917 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.833475097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.864809164 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.815477324 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.87932884 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.813606048 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9545773 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910301968 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815639131 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.815563659 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932313218 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941533588 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007963536 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.816020694 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.856945419 seconds)
  done (took 941.664082592 seconds)
done (took 1254.456396353 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.813265427 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.814006029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.803979985 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.813464104 seconds)
  done (took 28.997742206 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.821397664 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816363826 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.818622813 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.81734897 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.819065496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817128837 seconds)
  done (took 12.661081478 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.838061654 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.813961879 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81381095 seconds)
  done (took 21.217009944 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.885350724 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.224868093 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.922440504 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.259629848 seconds)
  done (took 10.043485489 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.820216528 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.81973956 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819470908 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.82191777 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.821622418 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.821286319 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.82020153 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.820941719 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.82244395 seconds)
  done (took 18.141010136 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.160805382 seconds)
done (took 96.973979096 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.824274367 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.814707188 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840593011 seconds)
    (4/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.805263284 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.923804876 seconds)
    (6/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.291837316 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.834661963 seconds)
    (8/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.950987097 seconds)
    (9/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.720993087 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.867115015 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.973265991 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.146807929 seconds)
    (13/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.005617519 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.811975516 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.857813568 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.876671066 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.838540926 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.081230523 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.912329435 seconds)
    (20/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.11179223 seconds)
    (21/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.153715751 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.597398105 seconds)
    (23/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.905970876 seconds)
    (24/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.501314336 seconds)
    (25/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.115232209 seconds)
    (26/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.43843528 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.135720023 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.83950162 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.879549172 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.991973662 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00910387 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.192451258 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.961557896 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.092044183 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.842438212 seconds)
    (36/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.916102699 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.010009668 seconds)
    (38/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.844108002 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.815260921 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 5.076639349 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.822387785 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.207749898 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.948285974 seconds)
    (44/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.824866232 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.905619145 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.86965073 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.216510923 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.133533127 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.143652882 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.91398967 seconds)
    (51/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.847467353 seconds)
    (52/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.817668133 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.031836112 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.780067133 seconds)
    (55/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.355298839 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.899471687 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.815782609 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.950929783 seconds)
    (59/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.016875843 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.926355613 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.141623508 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.077888846 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.897747525 seconds)
    (64/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.132254886 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.830215494 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.819216074 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.82720556 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.80178905 seconds)
    (69/309) benchmarking ("sort", BigInt, false)...
    done (took 8.706975284 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.876004752 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.036433264 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.988102784 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47688635 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.62982018 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.009256495 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.162395716 seconds)
    (77/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.932056737 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.832671799 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188470752 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.892930421 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.801568256 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.264773994 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.915870566 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.003571527 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.822723378 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.505270932 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.818080219 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.523208669 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.806282311 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.988884734 seconds)
    (91/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.844555855 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.194282845 seconds)
    (93/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949288904 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.836093794 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.185279288 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.412960137 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.820162913 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.902823482 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.818513029 seconds)
    (100/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.418906632 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.965726428 seconds)
    (102/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.880416549 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.911405197 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.868427105 seconds)
    (105/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.923809644 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.804256902 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.782399999 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.209442973 seconds)
    (109/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.122805027 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.996620523 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.723501641 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.821605926 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.804694277 seconds)
    (114/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275500746 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.441957432 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.019508839 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.085987429 seconds)
    (118/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.924528705 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.144517957 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.700403178 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.924514343 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.129894912 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.113473839 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.818621913 seconds)
    (125/309) benchmarking ("sort", Int8, false)...
    done (took 4.817314187 seconds)
    (126/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.068933501 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.924212958 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.826699082 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.0741398 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.181702295 seconds)
    (131/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.889753983 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.821578977 seconds)
    (133/309) benchmarking ("sort", Float32, false)...
    done (took 5.577932887 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.887543539 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.987794538 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.270479062 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.842782535 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.881953917 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.074760295 seconds)
    (140/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.844183477 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.034050256 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.080591004 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.413086936 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.202478879 seconds)
    (145/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.102289225 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.9488016 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.806784483 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.720961232 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.840289258 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.952473623 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.046170219 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.847689783 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.734429784 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.341799785 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.118155318 seconds)
    (156/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.932803751 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150214676 seconds)
    (158/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.825844905 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.916503813 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.841682659 seconds)
    (161/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.960400183 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.121350118 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.352028501 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.915637698 seconds)
    (165/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.049521999 seconds)
    (166/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.497259035 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.951738198 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.968272483 seconds)
    (169/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.43834252 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.902554974 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.267346373 seconds)
    (172/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.00898052 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.215748612 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.466347192 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.095948948 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.963612761 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.977396072 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.886689355 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.926526119 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.041535812 seconds)
    (181/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952161371 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.12562743 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.499877431 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.06755305 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.873508787 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.852241962 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.806083916 seconds)
    (188/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.125881799 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.852898429 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.963794648 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.871183347 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.807097105 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.219367677 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.847645924 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.806775171 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.392868069 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.888001271 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.392984819 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.941644319 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.190808005 seconds)
    (201/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.989065722 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.121854887 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.882588146 seconds)
    (204/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333585983 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.926750317 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.851524117 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.87184453 seconds)
    (208/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.824145968 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.521410206 seconds)
    (210/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.19003614 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.829925497 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.89675288 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.80816811 seconds)
    (214/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.115483034 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.839710079 seconds)
    (216/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.847748238 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.905127697 seconds)
    (218/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.136529444 seconds)
    (219/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.924030854 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.92007998 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.897238088 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.123731058 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.953568293 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.5288297 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.024807625 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.823654241 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.41269907 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.74162225 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.829823148 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.161225206 seconds)
    (231/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.024652267 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.852695992 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.000903689 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.223486425 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.040348837 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.901647539 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.812997367 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.855809036 seconds)
    (239/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.761739777 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.868834325 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.095571196 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.832203941 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.82982325 seconds)
    (244/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.95675187 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.933321587 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.827600581 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.69730749 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.059682638 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.71489114 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.120876663 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.33742394 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.096953985 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.913180615 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.644469417 seconds)
    (255/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.830644267 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.979286519 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.264392922 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.831904965 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.515588926 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.220758302 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.353129207 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.863755445 seconds)
    (263/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813547502 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.264416686 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.711794899 seconds)
    (266/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.108503181 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.213228701 seconds)
    (268/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.840653006 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.854042808 seconds)
    (270/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.914362773 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.337766363 seconds)
    (272/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.161713101 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.828758915 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.605110622 seconds)
    (275/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.175145441 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.161883019 seconds)
    (277/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.095244324 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.692326984 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.749139137 seconds)
    (280/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.041486877 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.91857346 seconds)
    (282/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.957365785 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.914921004 seconds)
    (284/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.826837587 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 4.578660693 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.909555012 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.944224481 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.204516594 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.019013381 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.82704925 seconds)
    (291/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.944870729 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.988198319 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.429310607 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.869899531 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.914531544 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.070779634 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.753505394 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.206294932 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.818926136 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.143169819 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.819173928 seconds)
    (302/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.432048091 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.991584234 seconds)
    (304/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.919414232 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.849765047 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.25897352 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.82722901 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.180362757 seconds)
    (309/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.831443952 seconds)
  done (took 1012.236159962 seconds)
done (took 1014.004784203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.131086629 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85523264 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.838420861 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.860340715 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.950414584 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.86879479 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.849882554 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.840884354 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.886490978 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.888412222 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.839082031 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.867520215 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.841988345 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.840339825 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.838465885 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853642086 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.146065752 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.868030005 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.8592057 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.852202101 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.860271512 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.841818584 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.892492063 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.869758901 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.846971166 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.846407337 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.845968869 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.862529152 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.95506753 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.846240417 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.846785319 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.854045821 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.148367897 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.867091122 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.837300571 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.863703849 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.855156039 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.853571768 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.847554088 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.876195076 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285456628 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.849297295 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.844985539 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.845003119 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.844778646 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.847299942 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.845255532 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.851098066 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85689156 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858369002 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.284260953 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.866386587 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.848428726 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.846417127 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.856254477 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.846677289 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.847945145 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860676625 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.865693769 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.861756915 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.140400395 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.874619324 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.848245881 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.861988383 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.854158574 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.323091632 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846475466 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.851088577 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.28712652 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.856992807 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.323512826 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.858915018 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.847654119 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.859502436 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.878958083 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.149549584 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864488833 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.844633725 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.853010715 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.844469645 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.855507737 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859218967 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.851153167 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.846541596 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860471684 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.874899054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.856117141 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.847742635 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.854908623 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.8660718 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.853525369 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.857631027 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.850464481 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.842253436 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.855722834 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.850464039 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.85066611 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.849838891 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.85142014 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.857721549 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.286493256 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86875115 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.844635242 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.844211427 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.847019299 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.862798194 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286886453 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.854484091 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.869763762 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.895920926 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.849410122 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.14593451 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.874933291 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864667929 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.858303972 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.851924867 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.843644313 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.144150122 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312563451 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.869544617 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.850120623 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.848294003 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864849008 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.850213652 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.844588954 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153406593 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.873686254 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862606615 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.969547921 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.859445138 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.883354156 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.847116183 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.85217175 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876914835 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865276843 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.881464424 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.852066191 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865304292 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.864956695 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.846133638 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.86062424 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.859431599 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.850890944 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.855915652 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.844210142 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.881852185 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86287398 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862692848 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.871587829 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.971953995 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.847428316 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.145521334 seconds)
done (took 292.542264273 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.918022443 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.846921102 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.946811447 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.84587549 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.930776074 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.933667743 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.844459311 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.845486713 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.843862846 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.227116839 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.844839855 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.845305826 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.843949039 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.844371469 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.930961727 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846887119 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.844353505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.188854019 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.848362271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.91907048 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.839033429 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.844659699 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.847037517 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239367445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.842583391 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.847687611 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.91867207 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.847591316 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.195400134 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.84437996 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848336929 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.196423497 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.939582876 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.866295612 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.857763547 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.854975139 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.932349539 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.851547268 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.931190052 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.930828072 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.948907276 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.889446751 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.846278008 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.84398453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.852045343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.850770947 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.84603062 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.87784493 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.841895482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.846615333 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192064655 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.85798496 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.855854854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.846117273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.846938409 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.871304039 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.847297694 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.849849165 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.939624179 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.851167058 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.912794063 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.234084565 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229445212 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.849282718 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.845090063 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.846836064 seconds)
  done (took 182.914046559 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.915871663 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925990354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.917350417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.853701378 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902711625 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.922294654 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.853388607 seconds)
  done (took 15.071527812 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.856566364 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.851495414 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.900282562 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.901319783 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851561517 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.001370314 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.849671861 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.862423025 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.847858767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.905145578 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.852509814 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.850914123 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.858238022 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.848485608 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900206264 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.862574453 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966405408 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.852861331 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.851486527 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.008150116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.849111444 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.857889775 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.906409828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.863040065 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.853031151 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.858188273 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.434685824 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852349808 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849782491 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.850624558 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849845226 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.893224548 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.851930064 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.852778507 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848802364 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.966768252 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.8543107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849497342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.852387256 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.847615156 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.852449502 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.850609325 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.851623178 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.848916284 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.851440062 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.874835676 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.852284039 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.851910557 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.852566201 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.852854521 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.904110058 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.852277501 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.851895438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.85087486 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.908730547 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86049358 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.854421943 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.850261907 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.853036366 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850549079 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.010039052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.908820607 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.853013492 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901272114 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.853018927 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.854216094 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.853982977 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.853174507 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908532495 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.853060473 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901652022 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.850978933 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.009948803 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.877165641 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855228741 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.857947001 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.856033068 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854332568 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.854775024 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.86064026 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.851015853 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.855469381 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.860160719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.851745302 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851657723 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.96051584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.963997873 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.85174704 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868723201 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.861272557 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.852015988 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.907651336 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.854309127 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.852550524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.906515318 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969683001 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.910893743 seconds)
  done (took 204.139897177 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.860169136 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.86310099 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.856524761 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.870747168 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.85561003 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.856307901 seconds)
  done (took 12.947920391 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.857925096 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.857397094 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.855114669 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.855683901 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.856509842 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.857188937 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.856163608 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857372924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.860798616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.85595914 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.857191507 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.8580887 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.856976063 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.856985871 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.856793282 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.856106311 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.856864478 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852864242 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.857665003 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859171971 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.00130647 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.857264454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.857174558 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.298946787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.860392635 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.855488646 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864085362 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.855554406 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.855954538 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.862433673 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.860933504 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.857208399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.857589908 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.862554795 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.86227396 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.85865347 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.860779011 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.858741942 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.854744501 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.858494685 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.858530324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.858615139 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.857797885 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.860692345 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.858632648 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.863224367 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.863476297 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.865775975 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.860677314 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.859823132 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859679421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.858105471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.85937628 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.86047905 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.862525138 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864178054 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.864581954 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.861099095 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.859700936 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.86079438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.860042676 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.859723563 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860185372 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.863779364 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.865233334 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.860704131 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861261347 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.863274044 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859948372 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.85841035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.859971101 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.856660159 seconds)
  done (took 137.235591134 seconds)
done (took 554.100490071 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.146672183 seconds)
  done (took 8.935955457 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.948255463 seconds)
  done (took 8.830916115 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.188801492 seconds)
  done (took 9.978186712 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.861560496 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.866447777 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862590032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.852941735 seconds)
  done (took 29.242366906 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.223270711 seconds)
  done (took 9.013688653 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.867651013 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.852192033 seconds)
  done (took 15.583829864 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.92726434 seconds)
  done (took 8.719802051 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.916199509 seconds)
  done (took 8.7089105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.866743274 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.864871013 seconds)
  done (took 15.536201266 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.838728942 seconds)
  done (took 8.629120897 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.657014466 seconds)
  done (took 11.459479578 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.862748388 seconds)
  done (took 8.670592501 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.87382182 seconds)
  done (took 8.667344576 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.029755584 seconds)
  done (took 9.823954698 seconds)
done (took 163.590835724 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.859155891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.856345313 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.857035264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.856755164 seconds)
  done (took 29.222936521 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.896952106 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.896118266 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.897689775 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.907377641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.899510919 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.90266845 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.888835915 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.889751486 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.908102359 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.900392286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.903524214 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.899376591 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.907241375 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.890411382 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.900210397 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.903977564 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.907758292 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.898269218 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.892407485 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.900523618 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.864281493 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.914883523 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.902280031 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.864271431 seconds)
  done (took 47.338751869 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.063341222 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.939669114 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.018092309 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.916403841 seconds)
  done (took 9.731794963 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.916776878 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.923667642 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.929905447 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.970110979 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.995595416 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.927683285 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.896311826 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.887616457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.87357069 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.919575359 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.995300729 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.941773462 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.021947478 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.867782033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.053030928 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.866859218 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.865671881 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.923916679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.971279147 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.992854678 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.867149294 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.917813956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.926799008 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.93599758 seconds)
  done (took 48.185264212 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.865213685 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.874665382 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.876820582 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.865860272 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.867809416 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.866316313 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.872177062 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.872146709 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.887919996 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.867857677 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.865482062 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.866324615 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.866869051 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.870529043 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.865935159 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.879892402 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.879980583 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.867567829 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.874548909 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.87318356 seconds)
  done (took 39.224992031 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.86030872 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.715683239 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.212445481 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.120929398 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.860442078 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.864268803 seconds)
  done (took 31.432256497 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.880221059 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.932227356 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.878790481 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.92494629 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.003262598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.874005509 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.86768829 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.940200882 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.975468697 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940448463 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.885559313 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.89428943 seconds)
  done (took 24.797131505 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.866364431 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.864929223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.865090735 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.88267274 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.879172603 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.876946777 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.875792822 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.867131573 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.884278955 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.88705719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.881310843 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.882283294 seconds)
  done (took 44.319376021 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951840929 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.907955429 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.905438346 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547171269 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242990021 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075394115 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.46880657 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.195841209 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.868500648 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138015038 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900761667 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969611697 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120223479 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327508743 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899124654 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.318420896 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161952703 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072554004 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894474856 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544255263 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930189661 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.99407483 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.607133461 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924088756 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076382263 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.999121372 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.126401329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865647558 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001242835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903877339 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875353411 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865355785 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139204002 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244625841 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970540493 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876443079 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486053418 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.581979172 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.857621913 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.683721387 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.593234653 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990760154 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87749286 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86581407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80013988 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.964108879 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242380224 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.872352203 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.577885271 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866030317 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877168339 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960253266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.870541236 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.682964451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778904217 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.868843285 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.864919542 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873880422 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438711076 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973262841 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.002228549 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.840375806 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.958776502 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583605445 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255311297 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.01778332 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.871357378 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872370088 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801768216 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.644687527 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925703409 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198290107 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.890214703 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518934994 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193540685 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.954990244 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812004032 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135273802 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343116863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.842120247 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096790026 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86946418 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803933298 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.812740787 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802850025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141129014 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909312719 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.627164873 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911431079 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.196071217 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.881342995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888678803 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893059953 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09318128 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.753628013 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870793799 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.654521408 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014997183 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892319849 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198667067 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804838435 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.873753569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126855338 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.080934138 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.889571419 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366220437 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02709802 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3792823 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.921070341 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.960767486 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916444816 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.135672976 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929008358 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979088784 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928618557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871178845 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164524253 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397723445 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.005662934 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.890622875 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996716669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202852159 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901005391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956689559 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881634466 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871860848 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.6563614 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42561486 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.872461916 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.872955631 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.897850109 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916987921 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.87257721 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822518555 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.495947375 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908472854 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.885829144 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095898919 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383231258 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182224165 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807083853 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22071262 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961963817 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.094224478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.513914692 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.94701421 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132838732 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.895378243 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.924407829 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918727301 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892074471 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971160015 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894937242 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.968729711 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165450648 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.877963671 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.876626793 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.661874304 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91141736 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882682274 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.878193472 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62340305 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144349999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901965254 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879262628 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.762747569 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.888243683 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938324239 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878200181 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.883577127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.41431355 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586969073 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.880522677 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.460391497 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099131504 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885178021 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.609689041 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991434048 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.957461507 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145371674 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933726884 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.808991635 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.585845629 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.568305437 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875684567 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810830194 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876649919 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88400808 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885064874 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.071757335 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145387554 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919463577 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.562098497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.918863609 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886844443 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.881408425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875545775 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385859101 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987754159 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008738468 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920019897 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019806997 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.890020348 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809833318 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.879967884 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882002267 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877385717 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876438192 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909202916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.561689357 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251901043 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138367693 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.526916613 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890582983 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.612586598 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.935135098 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.878897599 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687003204 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99168512 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.91652097 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890835374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.888531766 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.640811843 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.585333331 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449156028 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19288898 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193465895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312150896 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.035479922 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905507643 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216795089 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812281881 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434902299 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93944937 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225926408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831722697 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964856228 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.521905931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221088155 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893805323 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115241567 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261824406 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.750429176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904756017 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09040525 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915830502 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.97625923 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839218802 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.182622497 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02050989 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.571635333 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088479953 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211223944 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678134991 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902867331 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.878606665 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.575476678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967830072 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.589998237 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051440666 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.01594259 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.812771241 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372895923 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885904776 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.105395739 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226889304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.986719811 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.99878457 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816410159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891490004 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891828335 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.88205256 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.878286726 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.765876032 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.135775891 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892142042 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815369982 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.95162681 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162776113 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.796351586 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.886324342 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882175288 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175967824 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367230461 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049560462 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.925623049 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395740942 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887771705 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816189798 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81657713 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.574038766 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883769254 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.857787345 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101127764 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.983242151 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792310689 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903496356 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961916403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137980907 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897219239 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149037401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158077452 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579497633 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906630018 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.983320856 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.542489043 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.992002488 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881948453 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118684239 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633436063 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110979447 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.923505013 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.025906801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.881764049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097111047 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884599974 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.793059613 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120578717 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.605005784 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.908682547 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192533163 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958289898 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.78697876 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935020607 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.974323902 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893618995 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963743555 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894647066 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.896095437 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896254303 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930616109 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792383087 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.011872808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.897397363 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978888053 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00049946 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406404029 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.890668616 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155488429 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258248048 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205138813 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943669746 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885038519 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893692995 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819259654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03256432 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110338319 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157890745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.015319826 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.999734849 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910515636 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.55518266 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041926681 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126303407 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161029383 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.780659161 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337837119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925731021 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.886658046 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897760193 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.097729071 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108065518 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185881163 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024737031 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.911554374 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244726203 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160113288 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.888750946 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886845074 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454090852 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.924221063 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.576092128 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.931534426 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.798116418 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162290277 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897737064 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262379903 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909309165 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.042843556 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.6607315 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581630272 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18011475 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.87463423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951119895 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158296343 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269930906 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201604308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955467431 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899527925 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.99184596 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034663882 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.776763988 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.888395113 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889471079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937778731 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.597686976 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8974348 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157537781 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198337483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.885822371 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.776403752 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911726099 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.898910923 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112892109 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14792246 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143830633 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899149192 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895042253 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.703175577 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158090758 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950988828 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825449297 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.893170118 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986770944 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139354576 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910538057 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.34285985 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.601693054 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157521202 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.892860716 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914550966 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990934552 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246385261 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207844733 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.421897986 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095688975 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.485775874 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409770868 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189930064 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.894350878 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.991503408 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192982151 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.894116236 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.914279796 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927557797 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.153764863 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201333243 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.947738561 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58924949 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.861617917 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232749444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448943046 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83058157 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900441506 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.950235513 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891188881 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019004711 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904668843 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.789628492 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994005116 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.674382143 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177041141 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.897375119 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.884304893 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.638852753 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.132567062 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924153114 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034821852 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899035462 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.56701654 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.245906291 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147562777 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.918406218 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.898121379 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.896016717 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894012422 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879293421 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08744784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.088511083 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165417786 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.953077744 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.928287379 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896694006 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.108959177 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104035978 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.811622337 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036237691 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921240794 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934987912 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.79812947 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393939978 seconds)
  done (took 1676.807363824 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905035442 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.926547317 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.962820057 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.010192558 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922958136 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.948141231 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.916605534 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95868739 seconds)
  done (took 57.380346832 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.89411192 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.110534769 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.902051726 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.893890698 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.902517672 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.893695372 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.059169585 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.904253247 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.901959019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.904018119 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.894117046 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.895092286 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.208329672 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.915748051 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.894121806 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.881907835 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902951096 seconds)
  done (took 74.807743741 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.894511358 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.911313516 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.926536895 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.912007437 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.004663966 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.89553345 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.729689641 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.897188962 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.896579933 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.925141413 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.524946563 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.911394736 seconds)
  done (took 87.260544857 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.902022552 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.901734003 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.901345106 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.902681045 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.900882987 seconds)
  done (took 11.341451712 seconds)
done (took 2183.672648864 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.146932367 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.106632508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.125736522 seconds)
  done (took 6.063603214 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.039695889 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.086310915 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.208720674 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.228096404 seconds)
  done (took 10.394059921 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.175034953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.273783503 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.107876831 seconds)
  done (took 8.382249583 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.288356572 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.895603517 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.003665867 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.888911126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.893263179 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.89373905 seconds)
  done (took 22.505149387 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.89446166 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.897296821 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.896015527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89733463 seconds)
  done (took 9.412218831 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.87699718 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.617913582 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.878633115 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.890867977 seconds)
  done (took 21.091734487 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.644328257 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.655176576 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.638914068 seconds)
  done (took 9.766128464 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.606655426 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.817713503 seconds)
  done (took 9.251457343 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.154473579 seconds)
  done (took 3.983018968 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.027724974 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.160978674 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384309381 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.400292544 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.450193649 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.757952311 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.202580661 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.134328861 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.288437943 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.332696326 seconds)
  done (took 24.968663207 seconds)
done (took 140.982865379 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.273630416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896299543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.093765658 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.233257074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.141244135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.093279134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.110129585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.217319738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.744985838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.740975214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.233725727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.117007575 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062097142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.125952183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.062260205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.132257848 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.113759548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.296196556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.92810915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.127909886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.112515037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.870944075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.07600951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.886291061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.114645119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.044028795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.450164905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.132429283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.079882908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.458092442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.045158733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.278482733 seconds)
  done (took 172.122580137 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812828457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89594388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.895068654 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.895670034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.250100147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.896232565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895773323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894927802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.116014816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.093520427 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.910807707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.277791272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.91295387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895720993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911338179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.903723659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.323853964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.919689957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918978856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.915756367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919612453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.19619061 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914347905 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237638657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.289419065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915584325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89560838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923659022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906262789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.911502657 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915852285 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.897144169 seconds)
  done (took 209.29327092 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.898419309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899986543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.900244541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.899990746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.900552113 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905370183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.901771498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899838631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.611624387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.609699989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.909134271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.907995134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.89908611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.909833959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.911065138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.902113401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915317506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.915203468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911266112 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916283871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919435716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.75700349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.923273646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.756706973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.909002081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910933261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.901876027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915151478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.916560794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.919671965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.915331044 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900078244 seconds)
  done (took 222.449181208 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.097045147 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.906262654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.908627587 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.846512104 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.909367199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.907595132 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.905724712 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.097168114 seconds)
  done (took 19.430832873 seconds)
done (took 625.137210607 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.446973125 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.223369134 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.092753822 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.935068377 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.144847457 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.970953398 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9294161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.99707019 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.119853441 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.008488276 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.637880727 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.949847232 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717755876 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.954721253 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.054122797 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.986598511 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.503825733 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.595482584 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.111301937 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.981113582 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.103554448 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.904297512 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.008639504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.150127198 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733119283 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.921405532 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.09423563 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.512926805 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.941883705 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.095820087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.647052863 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.317712883 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.942604644 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.930204835 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.985727188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.965348674 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262580162 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.941070708 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.060520628 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.672471039 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.974300708 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.006275311 seconds)
  done (took 106.370105808 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.90004518 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.899072723 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897473969 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.898567485 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.899266373 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.897957758 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.89773066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.897934575 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.89961439 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.896483106 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.897115913 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.899853134 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.899359741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.899385832 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.899573007 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.898914589 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.898723455 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.901678329 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.898323575 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.897320649 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.899881891 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.897816885 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.899334673 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.897366438 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.898564268 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.898074499 seconds)
  done (took 51.220723514 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.912252139 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.057593553 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.13997647 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.935645676 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912365918 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.917048903 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.931130757 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.921040724 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.915694742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.914559523 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.007956067 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.922247927 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.932645682 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.138325661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.928806812 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.913058338 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914364007 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.914001503 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.066951613 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.931275767 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.934165075 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.921473934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931442012 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.929465987 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.914615429 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913517522 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.915225172 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.360134982 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.924614576 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.006226323 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98634285 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.936142328 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.311429097 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148981404 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.972163246 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.921354518 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.91404994 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.01315535 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.923160243 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.913183681 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.930661591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.921576302 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.140330828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.414867673 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.928169226 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.914346927 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.360824033 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.021666019 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.959862038 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925183642 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141704002 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.931735931 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.917003073 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.915233042 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.950250833 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.925976853 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.916188348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.226135062 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.931045833 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.933254737 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.925035956 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.916821173 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070973873 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.928894672 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.060484261 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.925723842 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.923999337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.916056018 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.14105492 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.932444694 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.410407813 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.929705192 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.915607913 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.009243429 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.068775138 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.390693569 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.93058434 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.076978111 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.328548411 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.944605754 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.928287642 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.341510349 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.946786777 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.927586493 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.917113413 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.918734542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.916511598 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961169162 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.930431036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.351136436 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.414974939 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242556659 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.946578501 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.936124615 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916629502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230201216 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.927847391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.916941754 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.136841405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.425598582 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.92952381 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.923930277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.40250754 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.931144825 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.934740774 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.92977225 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142009186 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.934894732 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.961140854 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.917684114 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.924039415 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.919547031 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.936497983 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.929369132 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.918565096 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.392608909 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.030650574 seconds)
  done (took 237.207687259 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.913725571 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.923219911 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.910653154 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.924043047 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.910760635 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91907462 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.912141921 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.912340919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.918214923 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.910954783 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.912170473 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.913987258 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.912451181 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.921088784 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.954105687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.919605354 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.522633488 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.917784177 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.91319005 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.929396595 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.560582783 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.919463037 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.913881533 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.913879008 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.919720196 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.914660473 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.921786279 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.945975604 seconds)
  done (took 168.832257885 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.919896853 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.036917116 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.938206933 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.94759113 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.928336693 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.919110802 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.945457922 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.935503096 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.928383116 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.919068049 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.917901209 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979818541 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.931903586 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.020114721 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.955074943 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.954985441 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.023770255 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.929561856 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.918438558 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.917575571 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.949842128 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.915638706 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.98373704 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.048629364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.942445019 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.037102971 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.925304885 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.922841158 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.920264329 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.037076455 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.938020466 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.980727063 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.95014267 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.93870513 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.044525894 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.039855327 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.02847848 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.955883235 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.925718292 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.919350558 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.920199602 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.908873938 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037750143 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.942994008 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.922459131 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.029726699 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.942043371 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.92313467 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.933039646 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.919953154 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.935458633 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.939344512 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.990648345 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054836205 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.957564179 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.955269626 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.949129544 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.219406181 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.933577441 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.020480536 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.917001053 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.041173906 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.943244918 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.911120984 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.92386007 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.929229702 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.951765479 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.958389469 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027901704 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.934317184 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.021407205 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.963012697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.93034518 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.922456932 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.922465643 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039852878 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.043338232 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.962272512 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.963665596 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.954973509 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.920700617 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.923242498 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.911452923 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.941427434 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.928231021 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.037951406 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.042405863 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.934075745 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.924665179 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.923745504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.925133738 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.949364224 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.049383685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.962150323 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.025970247 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.995125143 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.998509854 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9382958 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.937076535 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.928567228 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.989739885 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.939036965 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.933886947 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271308549 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.017241889 seconds)
  done (took 208.271489625 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.019944219 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.412265443 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.979071765 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.9848472 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.222837944 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.348271623 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.719498913 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.972702166 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.976004781 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.00170225 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.130710126 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.049420572 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.986194764 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.960579786 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.380588163 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.962879011 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.972972427 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.998430529 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976711377 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.558361765 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.27345133 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.092441157 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.96952238 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.113207996 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.956418817 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.279144742 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.463068665 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.370202305 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.009859148 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.319011846 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.335547933 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653123154 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.194223886 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.221527888 seconds)
  done (took 76.724543213 seconds)
done (took 850.462218775 seconds)
SAVING RESULT...
DONE!
