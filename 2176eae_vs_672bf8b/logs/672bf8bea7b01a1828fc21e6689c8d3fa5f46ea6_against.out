cset: moving following pidspec: 16189
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352518172 seconds)
loading group "string"... done (took 0.597429562 seconds)
loading group "linalg"... done (took 7.342075595 seconds)
loading group "parallel"... done (took 0.169946438 seconds)
loading group "find"... done (took 1.182477511 seconds)
loading group "tuple"... done (took 2.056225098 seconds)
loading group "dates"... done (took 1.298643541 seconds)
loading group "micro"... done (took 0.242079635 seconds)
loading group "io"... done (took 0.984734654 seconds)
loading group "scalar"... done (took 40.976128425 seconds)
loading group "sparse"... done (took 13.194515547 seconds)
loading group "broadcast"... done (took 1.009773089 seconds)
loading group "union"... done (took 14.28285372 seconds)
loading group "simd"... done (took 4.695570888 seconds)
loading group "random"... done (took 9.493461864 seconds)
loading group "problem"... done (took 1.992977771 seconds)
loading group "array"... done (took 22.311286563 seconds)
loading group "misc"... done (took 2.006883205 seconds)
loading group "sort"... done (took 3.403304145 seconds)
loading group "collection"... done (took 19.132861112 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555229858 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144225554 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11963178 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142228766 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187062443 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132737177 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144538817 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085645677 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.950201714 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162795776 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142149424 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517896862 seconds)
done (took 5.018065383 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218385316 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089000957 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097806721 seconds)
  done (took 0.86992768 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066639267 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128486896 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08152134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068212382 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067499035 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081921939 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068324434 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066672378 seconds)
  done (took 1.253309822 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074802733 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06985163 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085254228 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069325757 seconds)
  done (took 0.990555404 seconds)
done (took 4.093651738 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.936732716 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.253345059 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192577389 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467491991 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152155248 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190244051 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667222022 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347618436 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216812916 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103108413 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106755466 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391417608 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10784771 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671372648 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075917334 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108242551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159314788 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44069745 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081927819 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083919072 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104802007 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141933229 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102512089 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078862141 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168530977 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070349469 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152304818 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095676429 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069293821 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249524684 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19054182 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688596787 seconds)
  done (took 10.596743245 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100284817 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120823522 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069934141 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141650324 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120701308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072655845 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072610689 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084194743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092915737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162654855 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117623259 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124983713 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067059921 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070579711 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103179983 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230167756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092433748 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102695798 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072820191 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076352339 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124988285 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098758322 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082017058 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095697884 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152611884 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193800114 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098503032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112522142 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070265184 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098578183 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129890196 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130455269 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068744858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084887799 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159908917 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096781603 seconds)
  done (took 4.592125294 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.111639196 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176884691 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09384723 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127430856 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15698075 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086738183 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131541003 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06759688 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100674032 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253793499 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.092073746 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49179042 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129965007 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089667157 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068476319 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087295354 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06905012 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.617892317 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145703975 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10547517 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103423321 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076152044 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087222457 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359037922 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069033104 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067602387 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085473472 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06034583 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149206002 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069072623 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.268077169 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109352864 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070316362 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12027963 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18209603 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097596335 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12483319 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083162161 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067785813 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172689968 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07408136 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08515117 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091220913 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122878146 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121694585 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084542917 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069189953 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185324571 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067394774 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100882073 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.960598503 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165949145 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078843583 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067587046 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295872632 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104424351 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068690744 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065027362 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282203791 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159368342 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067661645 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084878815 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067753234 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084993212 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37821639 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069444239 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.89698877 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070511167 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077953861 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086413814 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068181153 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090577999 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07450428 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102820728 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068100708 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068883146 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084207557 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067569455 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085942221 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087725702 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081948265 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20945487 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06793117 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087304791 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067189702 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086773211 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114783923 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08524253 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068491913 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115757583 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071365644 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069075134 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122758107 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068657208 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105724291 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085690656 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114906798 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083305457 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144986915 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067951929 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065145524 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115185547 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087587982 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102008617 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097352802 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069004467 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.162792508 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064434442 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083745121 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066181746 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084774797 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067743923 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06845905 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086936707 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082939655 seconds)
  done (took 21.5423347 seconds)
done (took 38.529976647 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.312801318 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094171685 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093345556 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077005064 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093795683 seconds)
  done (took 1.435930051 seconds)
done (took 2.171529769 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149629923 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103196785 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081510816 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098346525 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081174197 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103420119 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117818703 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08220036 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118370405 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064791151 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113800293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065776775 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080220078 seconds)
  done (took 2.02167775 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082789678 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085168406 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086178444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082104136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079096748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082863898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080156527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10520379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081032108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087657763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065273114 seconds)
  done (took 1.648036652 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082100857 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083862154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08502511 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081419953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079272241 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082572174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080683206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102073541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08076463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088321313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066116717 seconds)
  done (took 1.644444382 seconds)
done (took 6.038380434 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079810068 seconds)
  done (took 0.806325803 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.7384295 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.808810758 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085067338 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137523325 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222485689 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158049265 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.45092617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112198919 seconds)
  done (took 10.647957052 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.1156206 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087087235 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073384756 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086033049 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071039039 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088960499 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069903462 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072039931 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086786249 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070845675 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087622673 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071156407 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08633591 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073870032 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084392887 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070480584 seconds)
  done (took 2.095052752 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106136278 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103962054 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092627563 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076551854 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090607422 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074488175 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092570754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076015462 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087793752 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073823249 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09182661 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075872735 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088743142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067219829 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091939121 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078216143 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087992147 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076279437 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092725913 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077287877 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092544324 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066556207 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089319071 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076810076 seconds)
  done (took 2.873275781 seconds)
done (took 17.152865999 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134677396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077294847 seconds)
  done (took 0.946702314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083060988 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099646369 seconds)
  done (took 0.924904175 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084156651 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081517916 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09189648 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094986449 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08274553 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067586732 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104613126 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067837644 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083065238 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067541113 seconds)
  done (took 1.568360194 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069872391 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094602229 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071916707 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098589543 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075946735 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08215216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07583832 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084676698 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079975158 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080085307 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07349903 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100256509 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073386464 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100236206 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089797151 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069788837 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088492468 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069318962 seconds)
  done (took 2.222846627 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06705691 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06851878 seconds)
  done (took 0.881709139 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068011763 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065251774 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083477846 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068480023 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079595742 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063920594 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080566143 seconds)
  done (took 1.255317501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410838265 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109717608 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265832066 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07301869 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107123474 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295538455 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066964876 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07142051 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088673956 seconds)
  done (took 2.275344966 seconds)
done (took 10.814040328 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080767997 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086771351 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112218345 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.433553103 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106219305 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067704961 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144683379 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212549321 seconds)
done (took 1.985778041 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128319265 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626362138 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.412728584 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21522157 seconds)
  done (took 2.00456217 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.383916432 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092181113 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074239518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067564662 seconds)
  done (took 1.37153931 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067046506 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070827281 seconds)
  done (took 0.890487417 seconds)
done (took 5.144034974 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068225746 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067505241 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080382845 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067012753 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.116625792 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064559411 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06538827 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084410663 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067366653 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084519453 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067737386 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06765468 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084659529 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064854958 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064912581 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080321479 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067716809 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064466728 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080373102 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065434938 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080151479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066980896 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065015487 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08043777 seconds)
  done (took 2.554791848 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085919655 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084123687 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072961598 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088577331 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071559376 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089869625 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073164533 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070808524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088554815 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069139016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086481397 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072378228 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085200303 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071883064 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085635197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072317887 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088711324 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06856264 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070105636 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087308878 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072980127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08361573 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071992474 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088098951 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071244011 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08840171 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07064409 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083461838 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074037246 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088237912 seconds)
  done (took 3.129113623 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071712649 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065036498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081326335 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073759064 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064772548 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082391076 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064907124 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081166546 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067084943 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065080899 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08271846 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0648519 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064610648 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081496154 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066184438 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084124449 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083960747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064866039 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081718489 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066234765 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084157588 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065024764 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065175042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081310889 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066035417 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065030416 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081430667 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065563735 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081395219 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065767547 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068222401 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085013513 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065191345 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072319238 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084829122 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065030463 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06912033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080849212 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065740563 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081110775 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064603159 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064652484 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080373476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071812519 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066151741 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083485984 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065635357 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082733466 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06587012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068178175 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081066659 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06527371 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08333901 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066762139 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06924096 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081063079 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066343861 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064589336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082036991 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064707398 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080174101 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064786521 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067437519 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081367198 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080524463 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08788024 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065695515 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067850471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082051342 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068089458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06684302 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094962929 seconds)
  done (took 6.018013849 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11962478 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094930771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083533798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067484878 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079741627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066123354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0690589 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080957868 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067275587 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087468 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065231898 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082418213 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067276508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080850956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081361177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068091901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086766878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063511394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065914098 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085572359 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066717347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08531855 seconds)
  done (took 2.475861052 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190520928 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088762625 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112260553 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091182361 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085795428 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074373934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088155188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071949321 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072042506 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085492176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070293746 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087670566 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070256249 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086116436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070856692 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086227645 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072676797 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086766263 seconds)
  done (took 2.353853286 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079734464 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06799017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107934937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068296028 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08501058 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07072984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090195906 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07710495 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086078027 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068448356 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092419234 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070826963 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.196353347 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067720507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070763165 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083928191 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070368555 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083700156 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076965176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08876478 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073950818 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092734902 seconds)
  done (took 2.634918483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082734798 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06978208 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10272827 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0870461 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063865536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066683599 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090762292 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0680525 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090440702 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070153137 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084412216 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067964991 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073623272 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084516739 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072634249 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08435043 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070148984 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084299808 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070619831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063952826 seconds)
  done (took 2.313851954 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089962232 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085069171 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069508137 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093491342 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070053393 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085729632 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078622966 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085298545 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06985456 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110099843 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070205565 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085661035 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078921094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090582518 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070330839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093451266 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077681172 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094709654 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085224165 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069975141 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109918282 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07001312 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093352573 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070319311 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085593256 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070516898 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085628475 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074457467 seconds)
  done (took 3.083979832 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068068788 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067851181 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081988634 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066056958 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065833008 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082042028 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065320335 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065463598 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084179314 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065873872 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083448193 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067565454 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068090936 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08353692 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068484436 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067581818 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083715613 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065615869 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064590006 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082616251 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068156784 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083728284 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067765979 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065546722 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081391491 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067750749 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065636276 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081436883 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068249209 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065530489 seconds)
  done (took 2.935127955 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077602438 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092131379 seconds)
  done (took 0.941584357 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065884892 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082042456 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081916008 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072578062 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088981235 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069271869 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093199197 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0727626 seconds)
  done (took 1.393936218 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083738654 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079884051 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086686272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096743323 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079910481 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08599389 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159396457 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085962656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07535376 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083627254 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082982349 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067809156 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091652699 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068841481 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090768495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074889215 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082230722 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074643167 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070024764 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082800595 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069323755 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09608251 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071246914 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081775032 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069680837 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077120274 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096891025 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069325609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087882311 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076045526 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090208919 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062016371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06855165 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08542832 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066635714 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095685703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084853336 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088120871 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078088528 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085725399 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077975952 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080467066 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073533971 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074233574 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094909388 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069319386 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085915535 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063242072 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082088869 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070577693 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063587121 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084770833 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063148436 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0919909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07187049 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078290144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083407053 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07064246 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08812664 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072881531 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092238125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070242013 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070852447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084379944 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076065931 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089656909 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078322946 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080583147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063121665 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066723338 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095302243 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091708626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091169868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070094706 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086297592 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068218408 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072256133 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086162205 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074380848 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090578982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06961524 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09103606 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076840735 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085268969 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070539106 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075416473 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083423066 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070322909 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083223183 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085244399 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084531466 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066566111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06586488 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095432218 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071715401 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085402261 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066377813 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091959776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062286113 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069159432 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085897029 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069803276 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096168231 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074218867 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090047611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077678388 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092755114 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068188306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071494567 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081864049 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070071512 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084397642 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075895591 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062437843 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08785623 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069886936 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085503871 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078209603 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082875366 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068485372 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075788827 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090243843 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066949028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081517581 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071267013 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08468323 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071905117 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076659985 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083752269 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063429965 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080233727 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072707754 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068211138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088008877 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07298206 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088387235 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062918078 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082409298 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072646948 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094584318 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06862953 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069225724 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091239955 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0699145 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0842339 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07512138 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070495417 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084628832 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074980156 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085966642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064298314 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08824075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071675192 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067995649 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088577803 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072318821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087531584 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069173962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06642776 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090218283 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069582329 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084848566 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068180029 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08334595 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078946159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069539729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079904603 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065752227 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091779052 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066287848 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067380079 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084311553 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070795288 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08596589 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066541295 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08406519 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070342203 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079622373 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089756209 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069344604 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090659224 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080045145 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084769803 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071319341 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084729429 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069377096 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069335182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094610098 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074363789 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089540924 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071198464 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081676664 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07383896 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076526248 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084302756 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066898088 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083731532 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072665796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090809823 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072637479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069943374 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083450142 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069545309 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08826406 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072905842 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067444156 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084587268 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072891238 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084123787 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075354248 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0863682 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079567622 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088877746 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06343923 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071359608 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08386445 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074722958 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080670681 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066660266 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067516259 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086306145 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068482022 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088518102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063236233 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075785089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093829386 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069032809 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084072364 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069239032 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092295419 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070345694 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072422448 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088963525 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07517108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095671503 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068374637 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088163549 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079418699 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068293966 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079622186 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073700484 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084484919 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068166708 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066771686 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084080522 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071179116 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093609372 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076028653 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079438702 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071242233 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066850459 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084513125 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064217982 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089402982 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071491489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06887466 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091500586 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069833635 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086114669 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072524816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084381123 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069893954 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069606976 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087786499 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069993859 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087904853 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068540436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088103469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06754419 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06624847 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087105343 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068911815 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068544154 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091050475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068582594 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085815082 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071917706 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086084697 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069205163 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069439086 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084953167 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071787176 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085777333 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068579773 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071028195 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080472418 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076265299 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08530987 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076656836 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068179941 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082183248 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074390788 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088089705 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073981548 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086346238 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06946463 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069188948 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085210625 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072460695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091957065 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066965128 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097036468 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076607868 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086056263 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071053285 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069076708 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087164338 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067677517 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086459477 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06939301 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069928953 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085985475 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073357154 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088011472 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068475554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070345272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087028013 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06931654 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08731373 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063215612 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068215616 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085003789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068912098 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095795259 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069259719 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084716312 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068084001 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068981111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084702062 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065277084 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093332392 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077986197 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086524684 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077398519 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06715201 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087039894 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079245208 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082576977 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066874531 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083701823 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066912988 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076404714 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086180863 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078159757 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085957031 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068014009 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065715987 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086219479 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067514671 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080074585 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067138856 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073075642 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085107276 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067961836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085617151 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071721924 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070037514 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096076369 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068603518 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086920776 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069079171 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083068437 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068447286 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068175739 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088668923 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069814838 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066909579 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083015698 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069250787 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086354143 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069709248 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068202273 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086833904 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075751542 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085979109 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071848064 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088957135 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064421634 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071017628 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085795932 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068949963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084929834 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072625035 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071597907 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086760929 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078225139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08540362 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070053948 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086345265 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066937471 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068191379 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085734033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068692576 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085062747 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069768025 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076538285 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085016294 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071574927 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085706764 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069505684 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09298705 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069239324 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071520379 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092829751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068857967 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087256108 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07666728 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089853009 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07250322 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086812871 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069849515 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074618902 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084678401 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074672248 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085524824 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069489144 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069928764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084387664 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068794256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085680515 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067382634 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074643371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087462038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067958588 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084658462 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066902173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068872781 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089414921 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076009068 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088341141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072216677 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081336736 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066285847 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069503873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083885953 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070503035 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089306322 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074789828 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070670645 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086252689 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067977179 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095684212 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07490032 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089607519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067113454 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072238802 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08729869 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071583668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086820072 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069088803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069786441 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089635559 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070794567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085029208 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076626092 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089465589 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070169148 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070208063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087001697 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06931225 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080528717 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069334566 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071720212 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092553923 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071591304 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086210987 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079564425 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066210407 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085942608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072416132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085820451 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073292424 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081268765 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070143848 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069640431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087528348 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064522104 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085241729 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066313842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071114619 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085415575 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06485838 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097118165 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078005124 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089144935 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068085128 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067877713 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081894035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064205498 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084476772 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070360547 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070820278 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09649773 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068443211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084889158 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064701717 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068235223 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089344241 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071926211 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08326138 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064365819 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067585862 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08887569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074082574 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085182396 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068572374 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071328519 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08834465 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066669793 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089547828 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066660959 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090153787 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083017676 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069008975 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087090358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074397191 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094910352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070381164 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081380438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069766627 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071424564 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086919663 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069850329 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087068522 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084578039 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090042265 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068204428 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084834008 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07126101 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068135516 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094648967 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069851605 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086914318 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073544385 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069490033 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094886723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071247107 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094807459 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071715802 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089016482 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067866624 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0863682 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066844919 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067864677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087264475 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069946529 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090732709 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076608487 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085436144 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079504304 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095409216 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070834503 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06514023 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086347376 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06877419 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063878802 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087108154 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066982845 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084786926 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067169179 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066980245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087568891 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074289934 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086962512 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069824329 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08496475 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06322392 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071685662 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088572427 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071261944 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065151424 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086773701 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069804645 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090560158 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072892185 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083701541 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070426589 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071636953 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087280541 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064875379 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093083289 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067858711 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072118373 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085684333 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070235339 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087007901 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073161676 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074138335 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087295565 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071038149 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095109106 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073129573 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083671746 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066321123 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073696299 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084475587 seconds)
  done (took 47.210557674 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109859941 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083597085 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06470038 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082068847 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077410666 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083173422 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064262686 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064756557 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082830273 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067979733 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081956123 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064245452 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091283245 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089717564 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094457748 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086494076 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064494026 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065330387 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081610783 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065163616 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091433348 seconds)
  done (took 2.466505028 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088754932 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102158009 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079833891 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100991472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092153981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079751933 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097027829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07888229 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100604286 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09305619 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082849761 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097675589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076190385 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093526142 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075495935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095259864 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101523029 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074636139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098436059 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080119644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095146353 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07913103 seconds)
  done (took 2.772200019 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069275427 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068056702 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088378237 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063853012 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067849858 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081857758 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072238773 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083850461 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072678542 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06628855 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085540725 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067502039 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087351665 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074937054 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068302724 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084036121 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133212569 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071927439 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086298728 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069629498 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063214114 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088154439 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063725497 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082308252 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067379958 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071457001 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087011609 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067194163 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085249445 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067567144 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06791723 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084728784 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070599217 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068484493 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085068197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067656157 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085731737 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068818089 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063536953 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084413136 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069429827 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081830292 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069022982 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069756061 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08441777 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066724688 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069299704 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087548314 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064245052 seconds)
  done (took 4.529141619 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08664623 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.141075573 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089093539 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123964477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084513625 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095125888 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07231682 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124289877 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084618769 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067014801 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.103969997 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083012575 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087675314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074036459 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090188254 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069366947 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087234756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068347321 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090610844 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068809706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090748968 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076044773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100707578 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082308743 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090415166 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067774542 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086187572 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073473623 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100459331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091839123 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074097094 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092290468 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084169788 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09157643 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068312301 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088306217 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085724567 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086334089 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070929341 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084802479 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07094581 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089974791 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076633576 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102877428 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068553292 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091579537 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068342899 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083125962 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082273901 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088944278 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077166556 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101665214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071886466 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086641089 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072205948 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101974677 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086519031 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067013011 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07112061 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099355565 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065698256 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09040967 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099470518 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070836909 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094009187 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083625536 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091676885 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072012387 seconds)
  done (took 6.748598334 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077759798 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092999757 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083039562 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102415519 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093426469 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075911485 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09251317 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074760131 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091899294 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080395085 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093757265 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116050084 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070337682 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095889741 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075526453 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09348208 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074491374 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093051044 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092635499 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075519166 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092539049 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083278646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092731257 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101259576 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105127302 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088276955 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075868661 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093039474 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101300774 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075889541 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104480723 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074193133 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092830392 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101836332 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087282819 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093524575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068125108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093701302 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075048386 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093338669 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070316951 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101288564 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092816768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070626908 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092719481 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075449554 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10154175 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104746504 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078450335 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098121933 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074742154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102127603 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092615895 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076683177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101016341 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127002305 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08366971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101363797 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092761241 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082581734 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101962995 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108011917 seconds)
  done (took 6.393383449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08951665 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095809481 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099096997 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06469753 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06613331 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09206624 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067393239 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084188815 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077389447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095762876 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080075215 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090100331 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075514037 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099207008 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090815891 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075793437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090707875 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072194968 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095165472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07173148 seconds)
  done (took 2.494512421 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077850943 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104755543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069281171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093302683 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071560296 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074133083 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089905716 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071317371 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087238484 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071990517 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096988315 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078798407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087273064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075614684 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097842082 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074683186 seconds)
  done (took 2.148807304 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080902718 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097550348 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084088919 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088226733 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067926312 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084116299 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069283716 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063884649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083725857 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082798382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087914313 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070352468 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087811076 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067654663 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064433788 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090952773 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064771958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085121088 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068591897 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102208321 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079445048 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086402871 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069562523 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089612445 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069266255 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09257908 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070247424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066212503 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086766033 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069290868 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087621247 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076517169 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08404301 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067750717 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085273961 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066290988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06792048 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087872493 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071655391 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087203819 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06772622 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086105079 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069001644 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069412678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083606141 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069530078 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083315626 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075228515 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065865249 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087879884 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067768325 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089565004 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070099696 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097208876 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07192943 seconds)
  done (took 5.136645116 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082408535 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070899508 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083214468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066773576 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090760944 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070276321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070946614 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089648188 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070054808 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085079961 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070345283 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089542125 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070867465 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071472267 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089893983 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072495459 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083064534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070802917 seconds)
  done (took 2.229246822 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074522594 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068751671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095123294 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068713787 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087692164 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071949172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064689355 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086939643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067972919 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086685739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069536138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070470361 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086276856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071458945 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086906429 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06945357 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069689171 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085947148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06899322 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082616676 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071958987 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066417428 seconds)
  done (took 2.504400575 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074382188 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096563168 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166304487 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10956904 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08476797 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101365508 seconds)
  done (took 1.465363398 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09246547 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101537006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069668975 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108804608 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076550933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088945783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070795305 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088577074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080335715 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103557285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070356015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098921807 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097895824 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081495423 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094949186 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075949226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089267148 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070606688 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088039912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107464049 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071483988 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097631919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070685126 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088527084 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070683574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09840864 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098167354 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084782903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088727501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079468107 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095333676 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069646807 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098188116 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103352334 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072875717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097987486 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070800972 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108760409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094934194 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0797513 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090679115 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077401932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097271166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075285994 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098872401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088864738 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075359694 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088568537 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070760961 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113805511 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0949088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07935983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09483335 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079048385 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098716696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114504283 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103430651 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079166707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094851069 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103287958 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079482597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095784564 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079256719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104302451 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095385141 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078858011 seconds)
  done (took 6.68420255 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085065791 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107402506 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071485707 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103931357 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098361302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071458264 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089181395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070853424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088817169 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070134079 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130461742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070678178 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098608577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097724098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071423213 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089267126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071543039 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097846975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070330043 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114925035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089055347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079325009 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097563965 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09728425 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085027381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095325922 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070736055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089680526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069849908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089455162 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093769526 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071148836 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097608907 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069588575 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098286683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071103929 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089582685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075464243 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089308544 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075878773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098995733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107899315 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070659444 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090006632 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103076989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071332561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089650006 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070806862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088917375 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070762798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103505937 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084099662 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105134934 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098658575 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071534083 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089970182 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070793056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090918218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071499979 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096004332 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098004767 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071506193 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115044257 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071384622 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090035659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098144819 seconds)
  done (took 6.594644339 seconds)
done (took 129.96281594 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214690617 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186914051 seconds)
  done (took 1.236528378 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070833091 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118011264 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080546565 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130770657 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088240756 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102658625 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12041549 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081475038 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068467315 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088408363 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069330362 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089660742 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134306351 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068895077 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08817052 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07107612 seconds)
  done (took 2.313932445 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105624819 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.199725625 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111459177 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067094513 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101272269 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081052605 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087092308 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079751863 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093904961 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068141811 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099355916 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078362039 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067033688 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097270949 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09325704 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080490439 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06650591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100001396 seconds)
  done (took 2.524723096 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108434838 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145232702 seconds)
  done (took 1.098606277 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206997799 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12418062 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206441841 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.43247116 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.213208751 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.293778065 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175798594 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.1768933 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.153293934 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172490911 seconds)
  done (took 2.996075407 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100769607 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174256162 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320005297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141339472 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090094914 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118799467 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141349254 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111907874 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085077611 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103557615 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103616587 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080431861 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119434432 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078128517 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096641434 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08034866 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123548605 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076152889 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09871195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078060486 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120761503 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06905605 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097403651 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076740945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100045721 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081422343 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087837514 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068804533 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097169338 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077830994 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100585373 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116195205 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081111802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133732851 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104562876 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135451646 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079632031 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094776287 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077261713 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094299838 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079609127 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099133943 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105486996 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079836696 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068306685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099968509 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067861438 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087262496 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082215055 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099824431 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082215186 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100335752 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133885195 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099077075 seconds)
  done (took 6.344303033 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.759996707 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13650813 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073449574 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.831615131 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117174808 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085256739 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.752540983 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096063145 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234543984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758778332 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114796109 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079773964 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210425385 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220012863 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9514993 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292525936 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.648427068 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10765731 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110787129 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137223217 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164707574 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160865454 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153128683 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407589038 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098322631 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074462843 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14092007 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100873462 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144659972 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084660427 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098396989 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16009512 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.232257304 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184756642 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077132248 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093518327 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073226292 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152592329 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250258674 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194292672 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161588065 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070453641 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072226146 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.16544982 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134539507 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071163385 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146987218 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.158465632 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174199302 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077381909 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079319186 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.167660381 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144992934 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148402465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103592992 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280046583 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291265657 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093731877 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124767617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08748536 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243076283 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086381559 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206994141 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142498636 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194352014 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072926289 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757799543 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154669824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072724025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098676701 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12455844 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0782789 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143087387 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147417125 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373307399 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146307319 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097112806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072734408 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21326893 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086748576 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093670096 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145203698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078323994 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126586254 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148650553 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.172575856 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15405174 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219479117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147602086 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164562739 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078041293 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128543999 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09726096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19470547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179720016 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166804318 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191061849 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146181032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146374929 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150784452 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101398906 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.156306956 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124172176 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104974392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144356716 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176883638 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.126896181 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107128028 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075605702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165935452 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128415457 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089279573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143440488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174187364 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.434940004 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151152495 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069195657 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110822183 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144110485 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145240518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099180018 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216226978 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127129631 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173024041 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125994196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070284961 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125364245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146968959 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102640535 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126537292 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144889693 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079725795 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.218479204 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199021702 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102745284 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201881964 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165079888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0779098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175255175 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124261916 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15098871 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080785775 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14222635 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098990138 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772566062 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148073657 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125772806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077358084 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169436623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071750536 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106728935 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106099671 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070355916 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77525512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08871558 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103612369 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085168004 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099458949 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12583262 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141232503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075403278 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16599254 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187538331 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10109219 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12384149 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08506561 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163751363 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079224207 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107100771 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087016977 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10738833 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126643473 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074771563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107456474 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151901513 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145060262 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201108911 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.547197472 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094022566 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084661227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210286267 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092938849 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247726102 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139821012 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205277794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146426886 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10389931 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288117426 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147450175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168814574 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08862332 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154929235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090770295 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142325545 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147851904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092930338 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078642974 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144328537 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170897928 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149512676 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944619997 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072853667 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207525397 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068923826 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17517383 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078607824 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101336748 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254690203 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093814804 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152445353 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147967838 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097647059 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08623321 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.696840287 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086106961 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.166074429 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07925937 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202064499 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.146715914 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141383097 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140571087 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101330771 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145961095 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.18979031 seconds)
  done (took 41.439816687 seconds)
done (took 58.790580483 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284017054 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196984846 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257890516 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150846198 seconds)
  done (took 1.830769789 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148819956 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108996228 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121094238 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087593826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107424288 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088222139 seconds)
  done (took 1.531469308 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433400705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28135609 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244106578 seconds)
  done (took 1.828432164 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.304749944 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235647828 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458244221 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304580611 seconds)
  done (took 2.278253112 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.196606359 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116292625 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091453339 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086786349 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164052569 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266258519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132060233 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196656162 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081682455 seconds)
  done (took 2.249101353 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.205037988 seconds)
done (took 10.787604689 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.126010391 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.212688058 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.344884259 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.149696662 seconds)
    (5/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084868525 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08275599 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135838888 seconds)
    (8/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.189736779 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.135893614 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.150407642 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107274493 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080481683 seconds)
    (13/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074877978 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104225256 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.251298458 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.198013876 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081603639 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.179891709 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 0.152864909 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078947877 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.252571664 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11833326 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112233814 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100014871 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085729798 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114386674 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15627962 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.272537418 seconds)
    (29/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103399574 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.263967871 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.243235979 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178113061 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.183460012 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089883124 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.149905872 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114014463 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097267386 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184412155 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.178402335 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.136466693 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076354235 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.221080377 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101785671 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.299176737 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079306792 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.107783092 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.099685421 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121080496 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095246001 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.220263537 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097465398 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195582036 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078696729 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075594658 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098141809 seconds)
    (56/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.300772489 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.257357817 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076906423 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194460232 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06830843 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133668467 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070641376 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.17575678 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073815448 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117115489 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076245837 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.180158004 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.277800308 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 0.153816598 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.230127879 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152528962 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.244686133 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080334995 seconds)
    (74/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134608017 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089697789 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075596411 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077166997 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074114997 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23385226 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.256513725 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.116664767 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.177158335 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.070244185 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.208447009 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075300894 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126012604 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101289469 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075340885 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054433548 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08877246 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054008631 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055300523 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.271145263 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123487211 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054083761 seconds)
    (96/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.251111272 seconds)
    (97/309) benchmarking ("sort", Int8, false)...
    done (took 0.169606593 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066328057 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148494853 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094431052 seconds)
    (101/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101262549 seconds)
    (102/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093439726 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.260244419 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053163793 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.16960379 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075691605 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123346471 seconds)
    (108/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100173215 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074347175 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068135502 seconds)
    (111/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.159314531 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09277381 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101805095 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096294652 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098492089 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06543254 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053312539 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089796326 seconds)
    (119/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089090887 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169540112 seconds)
    (121/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06459049 seconds)
    (122/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094696193 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.232756597 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114351185 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068146521 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078305934 seconds)
    (127/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074662041 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053839927 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.162446563 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098414725 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203610257 seconds)
    (132/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063506843 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074235577 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097516929 seconds)
    (135/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105905564 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173554444 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138303539 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090327017 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074134062 seconds)
    (140/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.123296501 seconds)
    (141/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112612367 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096684838 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07690757 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054696487 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.33235284 seconds)
    (146/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07361569 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05419778 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100009553 seconds)
    (149/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.177178436 seconds)
    (150/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.221151083 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098240344 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054843388 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101516879 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089745296 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074384935 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119253224 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075657696 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092561678 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108981207 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096574075 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054307778 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081745215 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090142844 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0682648 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075742023 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097346292 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092392735 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089790374 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054126741 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071549263 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101929806 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091993482 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091276637 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106448075 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076977911 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.245919995 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112488203 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071989034 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.18234255 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096908781 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055199449 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054686068 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159683893 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068216029 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064824303 seconds)
    (186/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143147162 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068926067 seconds)
    (188/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076313854 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174942236 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091479766 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075267069 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052869322 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115143542 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069499765 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076454564 seconds)
    (196/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21114569 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077916226 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.258551704 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070944638 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092925493 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068782485 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.243151471 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076863 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09128325 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097760612 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129349784 seconds)
    (207/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.104520905 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097185807 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067330685 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.129753468 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054231206 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078568792 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088906603 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.238804789 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092791554 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077438011 seconds)
    (217/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064024123 seconds)
    (218/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076378627 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063993485 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075285563 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090691228 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054685538 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173518519 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070112108 seconds)
    (225/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069705376 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090767749 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06302511 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075068632 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095475661 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074676908 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053892896 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1033097 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067262797 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086141659 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055050482 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054771871 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198070299 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072077533 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075555769 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142118564 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115772309 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08406544 seconds)
    (243/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075918865 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.116921439 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092015044 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107914452 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070416443 seconds)
    (248/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.076140392 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083045338 seconds)
    (250/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076220292 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055790845 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054089822 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11760537 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091437927 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131768252 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067792684 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053346895 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075088404 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07039554 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075426372 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076727377 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069522302 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075104599 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098795314 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068204734 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055402277 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138375743 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.254419331 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098064869 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.076368436 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068325519 seconds)
    (272/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067900987 seconds)
    (273/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.086416859 seconds)
    (274/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067716526 seconds)
    (275/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054505977 seconds)
    (276/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075410037 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055463483 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069082301 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053232551 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089867019 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.13813739 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076075362 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075600131 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090186628 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067480258 seconds)
    (286/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054031982 seconds)
    (287/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078050778 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054221086 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075797351 seconds)
    (290/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07721335 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069662809 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155941753 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053937973 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068185904 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097083145 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056292669 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090210668 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055345113 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06770131 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065082168 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090871146 seconds)
    (302/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055037159 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097805892 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086038902 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067984161 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094375473 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055328029 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1708407 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07415073 seconds)
  done (took 35.783472281 seconds)
done (took 36.65740431 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083865745 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117916257 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077663328 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117702386 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085785267 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103759786 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075244977 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103710162 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083050286 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106946239 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082823202 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056398016 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099720926 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077917959 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099959488 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095393145 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103658197 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075703724 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097980845 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067584043 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076506721 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090263516 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070889459 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05662091 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102802619 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0757709 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097102868 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078033783 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067634187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090702653 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072404101 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097444166 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068234042 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081676071 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096908337 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077438771 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100907844 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080197409 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069656218 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090838862 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076859641 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089344922 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075839761 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075573008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096833264 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074154869 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098270002 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083072607 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117698538 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070880617 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077209584 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102500067 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080601833 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097195599 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072432752 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098699728 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073438407 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094859019 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099194828 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07064959 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097775582 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077668758 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073725254 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098704775 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077580724 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100342116 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079480365 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096932674 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078372908 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073981602 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090319688 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076935545 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093426999 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068391632 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079163198 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101368878 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068204281 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074279601 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097301303 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075808914 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.090267885 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070272822 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069868029 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096987068 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070633952 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057377251 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093937161 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074866805 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068068761 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098532513 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07490745 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096664224 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070468547 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078625696 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089837347 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073783708 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.090946716 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068954829 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071194195 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093899766 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068170454 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070295278 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099247301 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069759393 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095130033 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083167148 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068331037 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096596575 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068798005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068016534 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107459894 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078128327 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090318819 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070567319 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089199853 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07599491 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067994301 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08985017 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06810646 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068698243 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096127058 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069005732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069927653 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097697271 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082764383 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092935898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072304743 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070486673 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090666747 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074880382 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06877607 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090875424 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070729167 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087893982 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07084658 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069448736 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097745784 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071408746 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076497017 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092167267 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077240846 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094889933 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075210402 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07364497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089683718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061483243 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070436695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092708699 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070583228 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090434275 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070337766 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068533522 seconds)
done (took 13.523638594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068565851 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175766034 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.130424228 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100510706 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11358177 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06852954 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102452853 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132888128 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070401835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132588325 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091644374 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110711447 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143137552 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068171504 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068682732 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094842707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070221621 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115151551 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106965598 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112597418 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144600906 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067629679 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125596343 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09396664 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115556512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130066702 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069527316 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072679998 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094188395 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11960306 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089741483 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072411063 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091110048 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105472874 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120667542 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111180673 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068562076 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110594547 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068588878 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068983297 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118329222 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127028344 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084727766 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108220324 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072897284 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093515872 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070898757 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112522362 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09504446 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107411875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114645926 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137796851 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072422375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108581512 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068192902 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113606774 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086710262 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093827869 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069195744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071775992 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091373493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072625149 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115644299 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097154568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09581598 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086036819 seconds)
  done (took 7.424486839 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087634113 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119027049 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086956793 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10998753 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06869189 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069137437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091965456 seconds)
  done (took 1.568245297 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069367176 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091630557 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116042097 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093435926 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113112736 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090557201 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102100236 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070186549 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109555325 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070711779 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113733638 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109481798 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093621353 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078171411 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118012278 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070208921 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093467075 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09318044 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073061435 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116174758 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072196737 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112963513 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071465001 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069557019 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1082777 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070094892 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142067881 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074193124 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093668217 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073018252 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06758785 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14433773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107028331 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081229509 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091769484 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086010455 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107716507 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068230039 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087174201 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097418189 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085114899 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092646638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071938417 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068033783 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0968947 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082028231 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093336627 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07047893 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073428528 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113742079 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07076243 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107212939 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07063781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073819664 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094761146 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076614727 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10244896 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071129378 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090550207 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093887734 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088091195 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110491091 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085246183 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110260654 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072534629 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107293789 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084775261 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072263347 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094369641 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073498448 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110053049 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068005691 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071030557 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104563467 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071781408 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117254097 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09432461 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094948588 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080543254 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07000954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093610988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070499193 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116731035 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07390863 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069821588 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098152108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073326577 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090477277 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069116084 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073285758 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091017165 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071716318 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072441723 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.092853779 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073053058 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110594115 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071050967 seconds)
  done (took 9.538680611 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070966444 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070746832 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094575383 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070869617 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070567916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093479928 seconds)
  done (took 1.416615442 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.1017603 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095469632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0850886 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098564511 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111336117 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108477871 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086503343 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10971981 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088533184 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106484274 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085613352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109432513 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091555112 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099735427 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085789606 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09920737 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08595134 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103224319 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082602174 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100274885 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092059503 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099902162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076867064 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11009851 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073780509 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099207322 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08054217 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105685574 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083382012 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110084158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076458314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073474512 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098821864 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109101443 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086331959 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098563295 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076001347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074461226 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103555036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073658943 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109382845 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076848807 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105337854 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074562832 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109672569 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075717354 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097935075 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080927822 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107852383 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074436236 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098105202 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075854718 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096929395 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074560239 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075582499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109153443 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074294144 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109356404 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076614306 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098272044 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073317947 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096593244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086465357 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096604361 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084559691 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09824988 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074949874 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099475047 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076816378 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098438112 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074345856 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073809137 seconds)
  done (took 7.517112743 seconds)
done (took 28.388238348 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65640344 seconds)
  done (took 1.59509174 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813320449 seconds)
  done (took 1.753736883 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.763752909 seconds)
  done (took 16.709544932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.64747251 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.828715378 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.830589538 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159187373 seconds)
  done (took 3.405336785 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.88579432 seconds)
  done (took 1.846324522 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245974942 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256578379 seconds)
  done (took 1.447872324 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7349303 seconds)
  done (took 1.684607434 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.296038502 seconds)
  done (took 2.242136484 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343273938 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188722918 seconds)
  done (took 1.489481346 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53294522 seconds)
  done (took 1.488279054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.849354411 seconds)
  done (took 7.807909415 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235220264 seconds)
  done (took 1.202832217 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.27415226 seconds)
  done (took 1.230135588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.327760689 seconds)
  done (took 4.283761331 seconds)
done (took 49.131986045 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080875156 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084388734 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107189027 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081152343 seconds)
  done (took 1.303508617 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081068256 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076302468 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103751204 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075243519 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105154213 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076770753 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101645759 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08111793 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098915789 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077271197 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075899555 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09849838 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07828406 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101882526 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074095828 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078394257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10393513 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075462191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102565879 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076951798 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096847711 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078683081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078660098 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098125224 seconds)
  done (took 3.058585731 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080501322 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075257388 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100289248 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075479817 seconds)
  done (took 1.294025769 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079735321 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119896188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093702542 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104130462 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096586948 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11442357 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072356291 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071902565 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098218302 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080089774 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094055993 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103100292 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115854947 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080022495 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105359355 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069765919 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071170802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115748556 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079865568 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104846807 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073602253 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104033645 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070769777 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117631845 seconds)
  done (took 3.20151537 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079836889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12947032 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082623318 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115995246 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095107356 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067855724 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103293484 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09393082 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154188157 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067893478 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096658434 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068665054 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099124259 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067854534 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079348391 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137735766 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140700398 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071591108 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12514016 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069082457 seconds)
  done (took 2.90925874 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077369586 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072472989 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091802397 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071765918 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078999774 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098650411 seconds)
  done (took 1.460601647 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070929206 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069373909 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093132352 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069251276 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074294655 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093188636 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069163726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069106907 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.093846429 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069682963 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09341187 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068980007 seconds)
  done (took 1.901832761 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.468886224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071214687 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094927328 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069456819 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074034475 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093360423 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084173025 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070659459 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119214346 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069138131 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09369286 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071801095 seconds)
  done (took 2.351439131 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271846279 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080937182 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338327969 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173956752 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145092624 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161933233 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107868448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145926244 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205674052 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143387465 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236749032 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206244268 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138711184 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172726695 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117849497 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137407464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192737369 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227823399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134154463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233389181 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189398272 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16029861 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212514506 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106694536 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13902571 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173928023 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075133987 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083968229 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239352298 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190880038 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182124671 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142791964 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124659301 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242570398 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228454578 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176421382 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16715012 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114554897 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161285504 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172735039 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270873106 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117640992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202589597 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137971632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109683912 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179474137 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151922414 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151856321 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140524576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118101526 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181150291 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246881097 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172558882 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115968506 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14097349 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144970891 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148310493 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131900321 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255649669 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20078287 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190136064 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075352783 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125985157 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195181838 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166530868 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147715322 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185766205 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097516272 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201707279 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195530231 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148678122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207196661 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166354607 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118297276 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152089719 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17747784 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159949811 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23832892 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158640946 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10105002 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157075841 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131730387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085547113 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173893646 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078883429 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243728026 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129292685 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144540234 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142434589 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114958651 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140785787 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227336466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212737788 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109089763 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094603524 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13383641 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155643878 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1827638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118521733 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139556624 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153626484 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082130408 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198789331 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079369361 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157697217 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.107364971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158155025 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168611328 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079070315 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184504525 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107812802 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132917233 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169742903 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228357525 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119172395 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086576805 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235210546 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160921774 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13662753 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183462651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223171131 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13068579 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13192223 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185471857 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253725098 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11904392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205751704 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135496412 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113089608 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092289889 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185575305 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145420399 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154630233 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086721631 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159179818 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236824127 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103040278 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100164234 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171556089 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110093757 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110055857 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145588418 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106094628 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123694964 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132135123 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137919055 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175460047 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159526097 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13830278 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158453148 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12956347 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22936807 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118107634 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110131994 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133845297 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097978425 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172086083 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226269257 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083783942 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233967739 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160734004 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135823495 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152636024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086942916 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202859397 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083056138 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073387421 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207567373 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143624436 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142860082 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194078627 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135707943 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160709392 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158497 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192617954 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166735586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168424622 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138313637 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091531576 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143305491 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185960285 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077499172 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124295424 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087242897 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13440645 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124506878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111405609 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180454184 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160778616 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129568672 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145557336 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12805467 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188850786 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080014038 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190325821 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153348837 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098604518 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21907395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223552885 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172214435 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131074355 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184020248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099340436 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078349225 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118992877 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165060858 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1126541 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087856061 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149769535 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213242132 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164470741 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171784976 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141954014 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155706912 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222525254 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075104538 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147356587 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188712289 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159005071 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.160611391 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117047271 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104756121 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209165013 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109628708 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284913679 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151626741 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159991426 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192969753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13622188 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115252098 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109526118 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201562499 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136627483 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190201708 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131796835 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119076494 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14362159 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085445929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135953357 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161949085 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177987235 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173052387 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149555249 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167289352 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106977362 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150237284 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158526614 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15612133 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067794079 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153251578 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230774345 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126394941 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152395011 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222994956 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084023903 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156183288 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248925206 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210114512 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090061977 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141612957 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155306553 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164513436 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152721356 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204376631 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142264199 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171238269 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143398792 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090386438 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118426379 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129591721 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114156273 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127706371 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145428579 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150650053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126665533 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167231876 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144989342 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143859299 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152835402 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128174767 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095513549 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129005364 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245284146 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155234314 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24446852 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132243212 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189097307 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236577448 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104450269 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083627003 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109269762 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178606262 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087927507 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196178867 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101524551 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137737362 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160946508 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206679109 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100178269 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09821432 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143346659 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169981291 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143096482 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105812174 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137316036 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233081039 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135462604 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083652758 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160380733 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135989884 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135814447 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249347113 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064770843 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128156895 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079348842 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110271705 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165849915 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224215271 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087199845 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159413511 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153097585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156383352 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165377233 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130788384 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128232054 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145037501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186694509 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163442411 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121706853 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146362169 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166345025 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225990003 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138783804 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100290246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239005075 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219766514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232655307 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092660063 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150300633 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148675072 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145549374 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206953207 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087918402 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237511206 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112987545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173119705 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13677819 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124067207 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16508783 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126864763 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093205488 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215051058 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15351832 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111240059 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0846569 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164906 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155727773 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135623758 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07819195 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202422433 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075323813 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200401073 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209698354 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112781651 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138494933 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101171707 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113257159 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140444426 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135999649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116272404 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124199802 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243904485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122200164 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189701774 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203745481 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148118731 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174602144 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132211459 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668725492 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108398565 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195745381 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151800637 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248463036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129580915 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152424989 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14403791 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155762521 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206171262 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139407136 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183995178 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196002283 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156143221 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082998541 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135940145 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144234041 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120346998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139196672 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148979054 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149714508 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131825358 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155608683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165554811 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111313326 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10127911 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225695408 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153905433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180335952 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20459739 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090879939 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152784937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206320746 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084120542 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184607278 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198373305 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140937182 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13120877 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110688316 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11181921 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239445523 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102866951 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201923268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184277287 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117197809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146061515 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180886447 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169060662 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139340748 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158972515 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126246486 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14609174 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149713888 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114823244 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082369269 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138291789 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145759722 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130356011 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134877914 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124583915 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218272556 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075813203 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12592166 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13483433 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183624085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248822315 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119937701 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087629295 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151869801 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147232644 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149718725 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159514671 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11184937 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112390863 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087811166 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139910489 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118474163 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148917328 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133652102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144854452 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237558551 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088425836 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256931869 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12687245 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140465339 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073343697 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110874766 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10202662 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127901811 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137040931 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129704871 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212739392 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129287283 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121689656 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124261336 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077239888 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08752184 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192945145 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145510991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157093018 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129117962 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066959674 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140529344 seconds)
  done (took 74.077169428 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144416866 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107726995 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121755369 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176858329 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150640393 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244282328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185703459 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227865251 seconds)
  done (took 2.400600791 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071789238 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121118818 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10592919 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.119434014 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093210064 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071316083 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.306859386 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112969711 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068795511 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119180412 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122967942 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095107044 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.48539812 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070707443 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098006065 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088530635 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070669761 seconds)
  done (took 3.254507932 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.44703983 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.641907796 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451861034 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100830848 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.897689842 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112288311 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.297180195 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.165518892 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094091131 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429251071 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.7345976 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151534925 seconds)
  done (took 17.565854971 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077898281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072456166 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113630902 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08757675 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101008078 seconds)
  done (took 1.496390742 seconds)
done (took 117.223521528 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082497147 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382206775 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056432706 seconds)
  done (took 1.515521648 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087086279 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088906522 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115700833 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086904083 seconds)
  done (took 1.431212056 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077714807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079272762 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11553969 seconds)
  done (took 1.320390946 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299412496 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172577377 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092765311 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087301523 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080763314 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107335434 seconds)
  done (took 1.324079296 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075635404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078439406 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102736466 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08009483 seconds)
  done (took 1.3779303 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079316025 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055081748 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05769263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084577749 seconds)
  done (took 1.324637382 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094014205 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109438037 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084542179 seconds)
  done (took 1.333690765 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112315472 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11654301 seconds)
  done (took 1.277508709 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085261777 seconds)
  done (took 1.130629687 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097162582 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146879548 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16495828 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142085786 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174854627 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144052989 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117380741 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09201402 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108127825 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.12038466 seconds)
  done (took 2.356549889 seconds)
done (took 16.075984542 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081332489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396521516 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364366318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121706637 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674749243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385710899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982096398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123374034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112666215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098122355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088133568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679201032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972120829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32691178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98672534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324167079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679094958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071166622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096103437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071210369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96705409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097662754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070903085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097938723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654573928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374791111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097939402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326340778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097745895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073844112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358027365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099401888 seconds)
  done (took 15.99099236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073296393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14861529 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077788845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087861758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100751233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073398489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101816905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073156793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152404637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071546133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115820875 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071615043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102003349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072783777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090167906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098223109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071803034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098546874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072490066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071240985 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116310143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071340564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097907472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072278733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070815224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109673048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071266887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097993985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0723822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072965872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101000194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072416427 seconds)
  done (took 3.903829515 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118585915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157102834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07730716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133180276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144280136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073727081 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174174496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0967326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155345036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070749695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114878122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071471788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132185087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071924209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118041794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071827045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09820309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072243849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070961089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097814614 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090791364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097306403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071871934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071427618 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098178604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083981301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097642727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074744953 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07098552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099540368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074647327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099112248 seconds)
  done (took 4.210122735 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074972048 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078044574 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11230751 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086391215 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099758042 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074892843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075403384 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099569525 seconds)
  done (took 1.755711125 seconds)
done (took 26.899057522 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081345114 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072515495 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102924031 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083838495 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103012937 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083197082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070266738 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104462898 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078455926 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102612389 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079762937 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070728924 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101043692 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070795423 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077697089 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098130975 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082803608 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101719232 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082941577 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110081327 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073288942 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078677766 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103883031 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083232853 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109383878 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083166354 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10949959 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076803232 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072739812 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.1001866 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080049072 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115810773 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072516786 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081942375 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098730541 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07137098 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097563196 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071281323 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082860508 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104749108 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07411929 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104658355 seconds)
  done (took 4.753536379 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093160908 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096409606 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116931637 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065521472 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098321342 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065156395 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120350636 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06399102 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064340512 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120869874 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059910399 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061069288 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089962665 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057284747 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060118035 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058886499 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090689298 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059138152 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059964806 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088424315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063802128 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056114903 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090269871 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062682579 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058428684 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064817729 seconds)
  done (took 3.044210886 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078286592 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085453531 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118883269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132897031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136527024 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078123634 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109159729 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088478305 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11505177 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070283962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101226447 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100969297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089421407 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10503527 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070904836 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113314282 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086123954 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072054268 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105408074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091136122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114999419 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081346802 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118791323 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082579405 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069611312 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100151202 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074757152 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111622622 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076181427 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079825041 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10251459 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074060386 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099775022 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083485965 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101404708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072952866 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090584532 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10806827 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079856182 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099182157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074910788 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071944159 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119502694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115513884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097508566 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077369567 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105504404 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081021516 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070686849 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116494889 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0795185 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097173064 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073837445 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069744891 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097564189 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084974081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098891763 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07309177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080029606 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101186138 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083044725 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07391579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113526127 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070430248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106277647 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070503564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098742235 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069841459 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09337983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099654753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111793218 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099502344 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072001175 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107791455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078821587 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076603911 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098802116 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086610325 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108045285 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075155462 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079328063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10145764 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073819143 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116204379 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073175408 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072603565 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099263115 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077221966 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073757749 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099465583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084256365 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.098495378 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074517001 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115272226 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070894498 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071536069 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104482646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07621931 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096555354 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084093091 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075552471 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098924811 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079415384 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097794162 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074304279 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080211919 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.102894264 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069961285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101958453 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078015005 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071292533 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099433695 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073790047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100313635 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081225157 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076904314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103141457 seconds)
  done (took 11.627987844 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198318733 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191954125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073695003 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183769067 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0790093 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111842964 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184922265 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100291323 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099342692 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071773792 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071397146 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.137983036 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131853243 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113560053 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109597207 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070263961 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117604514 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11153137 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187715346 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.179626245 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.128255277 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078191797 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101290751 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072476216 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072545576 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109741308 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087155576 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105729743 seconds)
  done (took 4.355746151 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085095071 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128400613 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076466625 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089271035 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12300278 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070609365 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102926266 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072500543 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111122372 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083017086 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099355863 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077045748 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078169458 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107448977 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071781659 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108454195 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080558877 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072337123 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101819703 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075920693 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105060344 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085034585 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103409031 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071033173 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077670765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098517065 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068134948 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11749816 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071093641 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117803937 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069597752 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104379363 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080900699 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070921317 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098847665 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074276047 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072798636 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101324666 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072951002 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097535537 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069133381 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060826199 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097731815 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084138988 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104833284 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06339042 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07692972 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10591427 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076170227 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068764462 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102040514 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073832938 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10239871 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078030971 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075577019 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104548369 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075261401 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069437899 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105278675 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073586854 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066479144 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09721146 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075981707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097825414 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078645995 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075846379 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069905197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072870938 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103287906 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0778338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072303849 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102351629 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069061247 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072566208 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103438678 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074905367 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101667236 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070187255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070625442 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098965765 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058443539 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070587989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085557008 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07446069 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069285209 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097460319 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072703514 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107423352 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084190067 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100416025 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077860382 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070699142 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097927932 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074798916 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065171941 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101753259 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086056676 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116194751 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070472131 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097687515 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084625462 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104165068 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070347485 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059101938 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106947925 seconds)
  done (took 10.102628873 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096058197 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123324609 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07327482 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085057611 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125564898 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095683805 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107158323 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077307185 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072097274 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116336021 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070774432 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107610793 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075017988 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079232068 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123957806 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078308356 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101648171 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079744637 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078918383 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135421034 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083959939 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113300751 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081379896 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.10022281 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076270406 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083542319 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128075549 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080850201 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109274455 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085567464 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109894321 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098671321 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086355057 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103968578 seconds)
  done (took 4.324585584 seconds)
done (took 39.260346901 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.153133097 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.344281116 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.127225005 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.015088796 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.162616144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.168955878 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.140648477 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.128586225 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.450258884 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.128946671 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.379807437 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.778285285 seconds)
done (took 59.051999586 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.240153518 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.268161294 seconds)
    (2/2) benchmarking "String"...
    done (took 1.400830239 seconds)
  done (took 3.745000598 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.47668204 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.101145769 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.407495829 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.131574151 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.129553347 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.55014264 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.694830272 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.958182261 seconds)
  done (took 27.046645522 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.128240448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.488809832 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.475747521 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.476675604 seconds)
  done (took 17.645708729 seconds)
done (took 58.230148138 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.13737242 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.190004185 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.143751923 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.113940361 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.235994337 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.153682616 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.401290634 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.340556467 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.141595654 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.116871131 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.149934381 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.133672129 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.14449854 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.451434545 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.134593136 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.129596508 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.145632239 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.629417181 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.50885105 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.154019814 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.1290139 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.158299719 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.142161275 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.131052442 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.178956904 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.129110584 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.130071168 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.131093839 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.336910315 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.131487443 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21919902 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.677617847 seconds)
  done (took 189.126886225 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.128928223 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.168344834 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.226039015 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.172048562 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.773768783 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.326784813 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.255153227 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.819151072 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.143709343 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.145770864 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.461002751 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.130080341 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.527192722 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.174071147 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.142256766 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.234088576 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.401234461 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.476018989 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.150492707 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.402123535 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.151689577 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.53755346 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.487005143 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.380885153 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.167065711 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.174445833 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.145337107 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.139426286 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.323269697 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.324816654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.137539668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.134935019 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.705316107 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.989706532 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.14608958 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.146227312 seconds)
  done (took 148.426899414 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.405653083 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.131437196 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.130551658 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.130997047 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.131433925 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.159690455 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.131331079 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.656798429 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.66069821 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.63269337 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.175705595 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191266774 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.340584152 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.131006516 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222944393 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.143610247 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.132480156 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.147047274 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.157515068 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.134040814 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.130987643 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.658640271 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.146812999 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.134410681 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137383567 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.132447766 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.161616818 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.524432658 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132973112 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.161755008 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.445730911 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.17582508 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.132267501 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.429760876 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.592967055 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242745159 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.13311896 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.1613341 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.13195519 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.397040534 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.132738048 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.133291765 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.135838568 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.717974835 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.135537506 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.659763209 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.134709475 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.003329845 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.132654378 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.133234016 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.482913578 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.628733723 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.13622106 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.13290093 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.136651633 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.13287167 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.133139876 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.163026135 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.408013915 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.23208263 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.134555085 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.136811042 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.162309391 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.133870908 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.251061197 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.135832272 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.813557684 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.188766538 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.238920227 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.660779 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.135891853 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225844374 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250311156 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.134290103 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.133592455 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.134315869 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.133890144 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.240263282 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.134544032 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.520641228 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.134179848 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140480037 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.135588096 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193087026 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.226595612 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.13506735 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447753487 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.13760243 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.134214779 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.815410963 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226764561 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.134336251 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.135271631 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135352614 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.526718549 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.664867165 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.307700455 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.136416648 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.151273541 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.136955462 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.135826691 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.535820609 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.64422294 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.745722323 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.13795833 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24119173 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.13985218 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.134129515 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.136604042 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.135425937 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.162778888 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.136229781 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.194508608 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137185292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.531307272 seconds)
  done (took 336.799966118 seconds)
done (took 676.835044602 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.764778757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.750201966 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.857160136 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.747512717 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.729227886 seconds)
  done (took 9.930061963 seconds)
done (took 11.011491968 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.312594978 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.314193706 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.193826171 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.317567733 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.165625764 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.332623437 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.298675924 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.15942215 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.234324235 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.20920914 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.234168041 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182436576 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163702984 seconds)
  done (took 17.200726108 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451725743 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.440731453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.202356476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.439796136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.178254559 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.44938856 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.342206561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.34255547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35013957 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.152643804 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152435775 seconds)
  done (took 15.586019876 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444872855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.440601582 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.204633108 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445337682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.178909321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482518579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.336238952 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346186188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.329766342 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.152354011 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.151402013 seconds)
  done (took 15.595896693 seconds)
done (took 49.464205593 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.146478541 seconds)
  done (took 2.229514666 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.180381739 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.342748244 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.161599111 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.152700888 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.14780964 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.150874834 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.153450644 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.147228153 seconds)
  done (took 10.521858644 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.147633669 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.143642847 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.146525628 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.144248256 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.144298744 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.147342411 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.144883866 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.146979363 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.147536937 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.144564582 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.147363913 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.146009758 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.146280029 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.147473707 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.14419173 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.145332549 seconds)
  done (took 19.418141661 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.146573408 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.144976373 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.14466322 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.145577037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.144389648 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.14413488 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.145649311 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.146129228 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.145361495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.144769664 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.145560156 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.145591804 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.145063839 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.145561912 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.145686059 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.146486286 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.145207504 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.146255812 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.148681535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.144532235 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.145998244 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.144841655 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.145762814 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.146617156 seconds)
  done (took 28.585042139 seconds)
done (took 61.83757999 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.154098334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.735906269 seconds)
  done (took 8.975533062 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.148489867 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.148481623 seconds)
  done (took 3.383322109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.147944052 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.148683351 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.149447457 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.148385607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.149540649 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.149232836 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.148372946 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.14900974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.148723906 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.148703088 seconds)
  done (took 12.575212339 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.149872227 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.151124291 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.146037294 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.149132927 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.156363636 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.146040091 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.148281595 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.149746279 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.149246277 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.146653053 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.148714708 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.147082685 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.149516283 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.148162319 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.149163846 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.147618092 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.14759796 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.14612573 seconds)
  done (took 21.763973762 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.149451539 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.149744596 seconds)
  done (took 3.38617045 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.146393768 seconds)
    (2/7) benchmarking "second"...
    done (took 1.14786834 seconds)
    (3/7) benchmarking "month"...
    done (took 1.147072868 seconds)
    (4/7) benchmarking "year"...
    done (took 1.146131657 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.14704183 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.147430623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.147648937 seconds)
  done (took 9.117603616 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.150780417 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.33570552 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.414472497 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.743277535 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.152307457 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.153620764 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.006981499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.154697074 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.155804483 seconds)
  done (took 13.355258259 seconds)
done (took 73.64208648 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.14729288 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.145414366 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.055189928 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.153904143 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.176422421 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.488098741 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.167476625 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.266080438 seconds)
done (took 36.687027309 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.154592428 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.889793304 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.896489714 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.151463758 seconds)
  done (took 11.026836247 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.13986124 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.061516819 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.132983776 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.161378221 seconds)
  done (took 17.584845566 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.746023827 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534411427 seconds)
  done (took 4.368473738 seconds)
done (took 40.222778303 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.1518614 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.152187405 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.148632124 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.152309285 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.151372069 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.148679144 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.149614884 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.151096921 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.151358171 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.151660966 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.153017602 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.151796793 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152299717 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.149095195 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150012424 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149806438 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152122915 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.150453105 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.150078356 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150147945 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149868724 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152342692 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.150588001 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.149986969 seconds)
  done (took 28.710118733 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.153581283 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.151006886 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.153046721 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.153147739 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.149664118 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.152909817 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.153319475 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.150616379 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.152519039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.153667543 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150596775 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.150633948 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.152704476 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.151863204 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15303874 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.150155842 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.154172963 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151664496 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153048616 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.151992662 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.154020868 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151299494 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.15231937 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154371137 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.151835407 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.150885855 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.155198737 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.152282505 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153733253 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.152164919 seconds)
  done (took 35.662645837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.157971262 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.161166099 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.154725015 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.154901959 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.154528939 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.154184687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.153420226 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.154429832 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.154450735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.153962352 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.1549717 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.153757103 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.153504865 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.154494478 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.154074756 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.154057822 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.155867107 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.154054708 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.154529739 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.154305039 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.155239104 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.154757991 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.154610135 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.153835347 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.154692727 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.155612561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.155444328 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.15493456 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.155380657 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.155362341 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.155092341 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.156624127 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.156399676 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.155308614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.154678206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.155100745 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.159984448 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.162449013 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.156173457 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.154429902 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.155319848 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.155571063 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.155537935 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.156006458 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.155413042 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.156242225 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.156532577 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.156226726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.156283491 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.155580814 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.156135792 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.155722065 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.156177392 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.156686881 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.15614613 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.156497371 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.157189695 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.156112984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.155539133 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.156489384 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.156390963 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.157044921 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.156799754 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.156607307 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.156821492 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.156966021 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.157366746 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.156699372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.157163605 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.157716701 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.157089453 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.157754087 seconds)
  done (took 84.3128523 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.157703881 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.154736747 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.154746853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.154651351 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154853272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.158068996 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.155059938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157379153 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154928408 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.157611177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158443517 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.155610155 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155588981 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.157767453 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15775905 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.155833987 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.157595171 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155712822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.158395842 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.157212049 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.158016123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.155793918 seconds)
  done (took 26.538684011 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158490064 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.159352617 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.15594892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.159112856 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.155853279 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.158688361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.158712155 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.159259732 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159004406 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156677042 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15633127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158127271 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.15590519 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156641027 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155965676 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.156307753 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.158534259 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.156376697 seconds)
  done (took 21.931681955 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.156896839 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.156382668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.159445211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.156635623 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.157255185 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.16003592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157007531 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.15919225 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.159925246 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.156838571 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.160265578 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161612546 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.159348444 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157023923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159769539 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.157188297 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.15929818 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157151015 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.159891817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.156781324 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157583412 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159526959 seconds)
  done (took 26.581927286 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159394031 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.160200354 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.158580397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.15766808 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.157665343 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.160218813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.160517695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.157547777 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.159164596 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.160866542 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.158189138 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.161761164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.157524477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.157679844 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.158882806 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158226358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.161539723 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.159808692 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16083998 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.158423515 seconds)
  done (took 24.282217175 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.162129272 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.162383155 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.160971457 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161745594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.162653608 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.161614127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.161823717 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.162576089 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.162499408 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.162844031 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.162250844 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.163640721 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.161797497 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.162830305 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16300208 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.162493463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.162095441 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.162647934 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.163897339 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.163662243 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.163257414 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.162628313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.162906593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.162813548 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.162748172 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.163587526 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.163317296 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.163506509 seconds)
  done (took 33.652984826 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162187078 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.16309406 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.158876883 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.160111704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.159552467 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.159146557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.159354479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.162335503 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.16105238 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159275831 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.16153832 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.16115512 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.162559812 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.160812744 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.16111094 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.162171661 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164174308 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.157024051 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15762558 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15723319 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.159872621 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160338785 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.15978286 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.158407911 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159680128 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.160891018 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158241894 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.158543056 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159851862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.157582501 seconds)
  done (took 35.907855041 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.178392687 seconds)
    (2/2) benchmarking "in"...
    done (took 1.179570319 seconds)
  done (took 3.454464828 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.15783172 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160349572 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.160115038 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.158793738 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157498226 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.160944459 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.1604457 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15716444 seconds)
  done (took 10.375373246 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.15815584 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.160318112 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.159941062 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.159760897 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.161254574 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.159253403 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166943003 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.179590245 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.16050155 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.16083566 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.166620842 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.166951073 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.162243323 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.159261404 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.15951867 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161735818 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.165497858 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.16011814 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.159153026 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.160250542 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160724327 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162515741 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.161237628 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.158009132 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.160183641 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.171802732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.164767616 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.160345223 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.15963022 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.164247589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.159554762 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.158737526 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.161596305 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.161369939 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.160382118 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.161363405 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168393664 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176026801 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.16726945 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161205429 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160094596 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.158889623 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.16196308 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.161266526 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161560527 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.161360312 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.161467441 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.158015851 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.159785039 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.163171045 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.165917361 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.159390263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.158237684 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16474281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.162792344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169081202 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.178404612 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.163465629 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.169872304 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.170779452 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.173789506 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.16917417 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.163309901 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.162662896 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.170336738 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.18425374 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16859227 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.175843378 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.16029023 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.161960184 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.168873624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174769701 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.171109603 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.162975238 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16237663 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.162779766 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161673102 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.164030611 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170231082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.182319768 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.162631893 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.163658884 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171749505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183114087 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.16177752 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.163732783 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.163352384 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.163569179 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.163035054 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.174255933 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.178654429 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.162664639 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.162620981 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.163294366 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.165610132 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.163796794 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.162389375 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163905946 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.161794251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.164119676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164541332 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.165994368 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.17257241 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.16483292 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163902897 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.1699437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.164378925 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163286958 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.170951014 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.164211443 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164425552 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.164365843 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.171734629 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.162644835 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166585782 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.171863104 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.164599928 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.165358234 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.165033688 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.16516415 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174031273 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189582437 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.165252641 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.165317101 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.170135829 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.176419091 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165235904 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.168373049 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.166472933 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.163756254 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.16229318 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.166415514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.165507625 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.165424974 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164972793 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165443637 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163303095 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.165606253 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.165403145 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.166343532 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.166458965 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.166040252 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.167195948 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.167138674 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.16601667 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.16792148 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.172475579 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.166604531 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.167691063 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.16722346 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.163735772 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165903597 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166685832 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.167749646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.16582971 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166537346 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.16607617 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.167217916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.167505765 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167424079 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167856074 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.167548343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170528373 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166714833 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.169916414 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.164972091 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.165079648 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167003549 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.167305407 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.166562575 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.167677159 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.165628018 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.168440646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.174348187 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.167139397 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.167410465 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.168041701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.167679293 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.167960559 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168626378 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.170081628 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174453708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.168763304 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174932516 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.167916366 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168256077 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.16836047 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.167517807 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.167042484 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168661554 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.171574477 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175411421 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179937462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.177904875 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.169221924 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.172371162 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.169350473 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.172434448 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.171969306 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.169517832 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.169600704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.169300333 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.167163461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169224284 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169734965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.172750039 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.165968239 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.169335794 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168804772 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.169418355 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16926819 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.169179659 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16987322 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.168231843 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170259069 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16920471 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.167790678 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.16737468 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.167742158 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.169266376 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.169118909 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.169207893 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.176087465 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.168333015 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170990165 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169987399 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.169820703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.16840937 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.170721875 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171874821 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.169705425 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177692516 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.18664351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.170185813 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177166713 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.185257854 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.168157321 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.173096807 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170682248 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.167595313 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.172757787 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.178518625 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.17119168 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170648777 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16966908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169620604 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171459688 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.177074459 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.169863443 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.169826918 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.172796162 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.172176124 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.169383274 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.172101811 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.172334485 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.171371443 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181689924 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171808684 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.1715778 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17147341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.1714125 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.171857645 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.171451589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173929726 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.180407671 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.175451294 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.171781297 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.17415076 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.172269896 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.174718336 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.171477227 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.172121631 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.170433047 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184499159 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.180644606 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.178619672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.173601387 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.173489405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.177695297 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.17338096 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.174721238 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172753133 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172500439 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.172513819 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.171952893 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.170498298 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.173400354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173546262 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174048573 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.174083781 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.177691822 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.173568739 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.171832537 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.173130236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.172713009 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.174005249 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.17059373 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.173939003 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.176353067 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175130455 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.172753916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.172485704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18060719 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189650909 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.17505734 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.173585794 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.173522957 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.176888725 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.179000326 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.174043309 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.176023859 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.181398662 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176798949 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.182332257 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.175227797 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.182429905 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.173703375 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.17621372 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.181448968 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.172015577 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.171611509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.174057992 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.173945634 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181302675 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.194501192 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.174148527 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.1781144 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175081678 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.17471418 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.175214887 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175782682 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175772783 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.175693158 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183727834 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.192617714 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.178772676 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.176690615 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.17280875 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.175553333 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.17421518 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.173993362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177662677 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.175921192 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.176324529 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.174396415 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.175400138 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.17547229 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.174871285 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.176254245 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.173335327 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.176707169 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182154561 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.192414136 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180046162 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.175661685 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.18266711 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176941513 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182221365 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.1927841 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.176851083 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.177479916 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.176424253 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.177101778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.175843806 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.177123257 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.17654756 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.177292607 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.181784358 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.176757642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.178574548 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.177303211 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.177641763 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.176592252 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187567116 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199359218 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.177495686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181870695 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175507086 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.179036176 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.181548174 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.177990135 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.175615708 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.179166406 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187299344 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.185936765 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.178125947 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.17818477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.178448442 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178321606 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.178237922 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.177623296 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.177694824 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.182213673 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.178247851 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.179144907 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180941077 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.177782681 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.178257582 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178869893 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.179230412 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.18924328 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.179464059 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.179785578 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178586029 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.178668846 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.179044939 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.179802624 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.179344462 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178707931 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.18132702 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.179587646 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.1850193 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.183655814 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.181219247 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.178337222 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.179491877 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.178279205 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.178868575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178459301 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.179686411 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178612989 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.179872369 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.178979964 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.18038657 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.177334966 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.179816479 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.180010525 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180142271 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181649349 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.185032992 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179432287 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.177210363 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.180368942 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179651536 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180280076 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.179248889 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.1874367 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181968501 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.189503738 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.187094785 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.183144058 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.179651089 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.182429084 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.18953836 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.177880817 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.179784673 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.180894185 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.18070232 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.180192271 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18187733 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179892401 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.188635707 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.179263853 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.179501464 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186628048 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.196782918 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179981193 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.180454084 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.182847126 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.179433412 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.18275274 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.180112275 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.178489579 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186525773 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.197248837 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180008304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181435387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.177085149 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.182345412 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.182626027 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178970822 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.179156232 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.177760616 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.17956533 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179638193 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180234423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.177453159 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.180252867 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.179900205 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.18261191 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.185580989 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.177525426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182321414 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.178820892 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.180061338 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180508336 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179607 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.177815753 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.177824331 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.179552321 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179465635 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.180098555 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.182470093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.178894888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.18098103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.182036415 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181061288 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183405866 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.189230923 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.188215482 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.178952397 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.180214378 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.181130103 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.182692592 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181056653 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.180875534 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.179677216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.181963674 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.180813827 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180666479 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.181848225 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.183287316 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196122665 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.196830139 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183293638 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.183697682 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184638099 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.180851073 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.179394824 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.181579086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.184061318 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.18447428 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.189458948 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.182351528 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188139787 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.197683442 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.183820874 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.186008143 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.1848454 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.188580654 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.184272063 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182760302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.182106216 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.186216697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.198236541 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183411939 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192325356 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212189563 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.201138942 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.183921833 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.183164609 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180499627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.182981679 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.18417236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.182988441 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.183188085 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183553217 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.182706401 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.184070966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18883923 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.184854742 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.184382159 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.184722343 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.183380136 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.184589478 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.181796702 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.184521095 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.1834544 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.183706039 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.183667902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.183186739 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.184005801 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196396233 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.193278164 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.184865579 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.184631533 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.180588575 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.187002077 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.185974222 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19275584 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.192326936 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.184698039 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.184626075 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.185919747 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183062527 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.181304867 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.185040658 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.183621681 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182535609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.182195073 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.197023589 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.193787069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.187241268 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.184487173 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185415107 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.185218795 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186434757 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185241323 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184998883 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.185669976 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.186258343 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.18875488 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.185953515 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.186395233 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.187600065 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.192220399 seconds)
  done (took 701.447143784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.183843359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183277279 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.183263891 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183246583 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183835709 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183564409 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184261446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.184083741 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.183372129 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184371937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.183839829 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183584821 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.18418201 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.185095126 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184163663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.183480455 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184297521 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183412085 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184313538 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184148007 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183931359 seconds)
  done (took 25.982719306 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.186496594 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.183603078 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.183710886 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.187220132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.185553125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.188094707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.183448783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187518715 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.187466633 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184110294 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.187504489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187691212 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.184237776 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.18479693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185061342 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188024436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.187899018 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186394243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.187291157 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.186277693 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18819254 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.185924623 seconds)
  done (took 27.21877929 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.188207191 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.18885279 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.186860705 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.185908628 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.187906579 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.185081887 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.18833801 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.188103209 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.18705927 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.188403061 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.185654258 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.188721941 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.193700027 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.192884421 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.188906976 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.189173435 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.332799433 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.18883176 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.189364438 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.188946401 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.186415723 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.193808168 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.186833981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.186451878 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.186816606 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.188220231 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.188265572 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.188460058 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.189698901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.18978704 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.192736735 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.189060491 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.188191147 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.190767286 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.187635743 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.189991636 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.193676047 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.189676797 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.187167885 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.190296113 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.199218649 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.209459237 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.19044516 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.194562494 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.189301629 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.18989783 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.192465144 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.197209043 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.186909832 seconds)
  done (took 59.572519346 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.191141893 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.189659586 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.188397354 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.189446409 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.189998358 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.189257375 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.190845491 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.191022147 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.187362219 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.188070054 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.190637653 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.188656987 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.189008921 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.190594753 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.191785468 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.188450796 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.188875177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.188376566 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.189482049 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.188382881 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.188892561 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.191899479 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.191191821 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.18937201 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.190147328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.189430567 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.189438675 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.191343965 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.19028087 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.189318247 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.191788009 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.192417023 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.192506588 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.190523571 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.189742484 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.191833432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.191540234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.189058857 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.191184717 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.189193003 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.191968831 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.192272732 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.191882825 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.192881274 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.189604494 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.1896866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.190357778 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.189586094 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.190174981 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.192674617 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.192316891 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.19070413 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.192515574 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.189799948 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.192726091 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.193323738 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.190398573 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.189784378 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.192408872 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.18998247 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.190313803 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.193753382 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.190981007 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.193555788 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.193660415 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.190471516 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.19105588 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.193552114 seconds)
  done (took 82.091550222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.19291772 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.193031829 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.193366873 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193573974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.194206055 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.193022823 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.193689773 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.192844691 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.1928754 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192676804 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193442662 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.194174421 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.193734544 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.193131565 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.193820702 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193527503 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.193897225 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194563258 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.193123556 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195062531 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.195021886 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193451077 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.194155274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193996956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.194861201 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194273462 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.194024508 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.194962675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194731022 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.194947002 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.195128088 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.195107564 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.194745997 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195165829 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.195020302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.193808517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195273104 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195304742 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.195291708 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.194561771 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.194714677 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194840009 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195143925 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.195328801 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196016538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.195738208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.19563036 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.195776375 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.196098413 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196219679 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.195875481 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195204068 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194436167 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195047182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196438018 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.195326486 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195220975 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195289297 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196348864 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.195479599 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196254928 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.196071434 seconds)
  done (took 75.19766659 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195420198 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.196415704 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.193408656 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.193574263 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195705894 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194223724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.196468406 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.197027128 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.195993773 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.196578973 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196476517 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193834505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194242366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196732117 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.193629154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194176435 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193023313 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194150154 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196809365 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.194701424 seconds)
  done (took 25.034292796 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.194265478 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.197090578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.195665625 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195308865 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.196596864 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195059388 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.196742675 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197239121 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194603403 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197980385 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197656058 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197844846 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194851321 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195075145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198063163 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.195595596 seconds)
  done (took 20.27155568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.195474582 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.197453313 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.197752428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.198699515 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.195888414 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.195830199 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.199084828 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.196242698 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.196538846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.198808283 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.198770166 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.198916459 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.199499107 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.198200081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.195699156 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.199072432 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.196131108 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.196709263 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.198866125 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.199090016 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.197773292 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.196802088 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.198884512 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.198073663 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.196748317 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.197887793 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.197048817 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.19677293 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.197118889 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.200028312 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.196957246 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.197572628 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.198316855 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.197758495 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.199449096 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.197639585 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.198550259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.200255978 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.199652672 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.200224316 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.200840706 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.197472384 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.200266569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.200926733 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.197343174 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.200088534 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.197900065 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.198658867 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.197964307 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.19863212 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.200856884 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.200341768 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.200370235 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.200894395 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.199617456 seconds)
  done (took 67.042395986 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200979846 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200477064 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.198474822 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.200568152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.200978203 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.19852335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.20037281 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.198308523 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198499027 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.199957574 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199341711 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.201427604 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199255468 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201739057 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.200267684 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200469684 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198117461 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.198873853 seconds)
  done (took 22.73311572 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.198915834 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199458024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.201188101 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.198863258 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.19932554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202239319 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198628805 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.20138944 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20218204 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199709758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200019264 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.203127985 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202699366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.201886734 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200748589 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199161787 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.201997083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202078845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.199908732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200220411 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203273043 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202441051 seconds)
  done (took 27.556667811 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.20036478 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.200109449 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.21762775 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.242865765 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.23335126 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.20160746 seconds)
  done (took 8.433798051 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200422018 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203579199 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200939876 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203089205 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204525419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201532529 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201406565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201030192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203058323 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202840474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200739402 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203597505 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203860997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201863183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20346181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204263203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201724886 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200740048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201441539 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204595508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201425494 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203579475 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202303812 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201192844 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202802272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201331556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205129141 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202345743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201829211 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20408706 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204139882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200740574 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204460253 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202404316 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204722654 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204761902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201996796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20421073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204111829 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202089054 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.204701244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20473656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205637688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203572645 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205751678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202584629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202088951 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202649893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203040766 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20602466 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20565977 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202702177 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205898562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205525975 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2057645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206932627 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202863355 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203639359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206144296 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203883235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203908469 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206095443 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20399497 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203804363 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206345736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204049912 seconds)
  done (took 80.567352505 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204472072 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205451159 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204083984 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204756174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202943834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204355294 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205010033 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204432118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203513824 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204140072 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207076029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20459851 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204584342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204747436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20543025 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204850547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20458622 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204484247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205947535 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207067462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203876559 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20450291 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205137339 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204975687 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205627139 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208740703 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205468298 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204289772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205052516 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205333596 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205180411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205210287 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20576147 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.204897178 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205689831 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206097253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204632694 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205593038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206154209 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207863222 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204856288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207326408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20656377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205827934 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206128888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205644669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205410499 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206421333 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205824946 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206666601 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20608917 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206680296 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20752954 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206644112 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206098869 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206657117 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206990834 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206039532 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206700782 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209328406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206542359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207478483 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209563681 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205647907 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206883097 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206609581 seconds)
  done (took 80.722418518 seconds)
done (took 1636.371348112 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.299343992 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.29270605 seconds)
  done (took 13.735183262 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.372150568 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.324221605 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.207792264 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.255071798 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.20831263 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.230223156 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.222599568 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.207804111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.207331951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.207154537 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.208657101 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.395604564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.204640836 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.207411678 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.20823149 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.299470469 seconds)
  done (took 41.122313009 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.235652162 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.215095823 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.320533589 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.230916809 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.236104891 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.386192217 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.265931385 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.214044539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.372737091 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.251810689 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.683969285 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.236331468 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.213402839 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.257382956 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.229570266 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.387068406 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.444339952 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.686525742 seconds)
  done (took 28.01249439 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.632787372 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.204449525 seconds)
  done (took 8.982252393 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.228594893 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.263805768 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.210238427 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.203233843 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.24982427 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.245626667 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.230270556 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.259993773 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.225171336 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.260178275 seconds)
  done (took 63.531652985 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.230598493 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.213883923 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.213703882 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.210662296 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.204805495 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.204990055 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.211492999 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.222312162 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.640694494 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.333240966 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.226439291 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.220333502 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.212855309 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.213211023 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.210824884 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.248932094 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.355208017 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.211689688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.210476694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.219504708 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.21276718 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.294682974 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.25189273 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.211506211 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.331471251 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.662875026 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.21832146 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.220528148 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.336139736 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.212351394 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.212532628 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.214417565 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.215160766 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.778194557 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.693710877 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.233667503 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.237106473 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.223521232 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.212946633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.336052132 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.214668365 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.220802067 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.206821006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.668379262 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369298194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.320400832 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.410009516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.215194034 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.21542822 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.274503808 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.214636023 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.214814008 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243222487 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.945523781 seconds)
  done (took 104.208189102 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.261557109 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.694198925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376009552 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.225153042 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.058235079 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.833163092 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.210394054 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.482685885 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.227211767 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207345685 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.477561462 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.70396484 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214436647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.217489718 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.718013643 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.277834359 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.211014224 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.120645874 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211249213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.209023934 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.630035539 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225752999 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.207954146 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306885193 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.246169839 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.668346022 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.626428405 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.716933898 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211588057 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.208729397 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.668830574 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.210687044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.245136339 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209766717 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.478440612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.564795869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.541484136 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.211266812 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.221619051 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.212028374 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.240849655 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.666333843 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.552460832 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.211680894 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.21620031 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.675051636 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.212067354 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.211571456 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.211066835 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.416653094 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.119621224 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.212975401 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.638115393 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.211833662 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.468533761 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.298678356 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.242938892 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698114345 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212061711 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.386543879 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.258476234 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.211063558 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.217764302 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.213814163 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.214189383 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.541524521 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.592852659 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.212318535 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.543037203 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.661392029 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.212034243 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.738733241 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.142203622 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.234712612 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.250054525 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.210043018 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.944500694 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.698401764 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.235929561 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211709503 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.53601922 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.216577974 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.484021754 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.223665197 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.210383954 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64322248 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.23133902 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.247187129 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.211370936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.214669609 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.988205807 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21324179 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.471523503 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.228981365 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212183897 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.211317271 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.247282508 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.217205107 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.215100151 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.216650626 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.731881429 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.222563528 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.341164556 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232113293 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211788615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.214342 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.211116244 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.212724609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43581326 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.793734527 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.218346246 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.211261157 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.223906711 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.217544154 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318653681 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.215170693 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.504691273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.213506444 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211493966 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.217461139 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.874837176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236826295 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213677723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.214533681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038888061 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.419713299 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.229808262 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.215660961 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.213259637 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.239092602 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.549806462 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215452383 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.221589236 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.216522699 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908501719 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227342789 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.254233788 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.775317303 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.213852353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.21367967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.230640489 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.213739467 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.518411805 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.484032532 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.511622788 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.217392926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.229782962 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911289994 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.235300697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.354712121 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.232102485 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.243750332 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.41239986 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.329826827 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.214190464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.781885601 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.214754341 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432173904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.216074625 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.529916997 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.701795197 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.219370659 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.221115666 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917745607 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869465631 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.870238101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.219270811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.486047894 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.190894169 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.668003477 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.214973263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.216458112 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.793246321 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.216343812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.215789491 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.214643292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.215521873 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.284822462 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.390462557 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.097189488 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.221428083 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.674446189 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279383699 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216334803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.222145609 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.219770126 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.56718276 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.304634909 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.215884285 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.249539425 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.21649693 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.223807288 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.683631603 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.179138428 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.219096904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.367648103 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84065341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.21875496 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.216753378 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.948842879 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.485734683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763997774 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.247328978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.522310594 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.22228082 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.255448467 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003277296 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291978855 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.730304731 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222299124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.218642731 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816759582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.219822713 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.262596694 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.21704716 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.217250214 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.749265653 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.21912416 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.217541463 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.563104687 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233317437 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473249649 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.218449646 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.245163258 seconds)
  done (took 1085.287762693 seconds)
done (took 1346.023401981 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.218732751 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.21706555 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.207238208 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.219328144 seconds)
  done (took 26.022558597 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.22944324 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.224864374 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.226612174 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.224015086 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.227589275 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.224500507 seconds)
  done (took 8.516956759 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.262003787 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.218783837 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.221181977 seconds)
  done (took 18.862091222 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435730535 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.433912748 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.587971022 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.297760549 seconds)
  done (took 9.916219704 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.226192299 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.227306705 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.226019838 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.228477711 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.230834704 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.231863644 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.229609906 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.229768851 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.232701466 seconds)
  done (took 12.221260144 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.054649526 seconds)
done (took 81.752892704 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.230066012 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.798809395 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.379444253 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.52633495 seconds)
    (5/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.491327715 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.344294158 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.269144808 seconds)
    (8/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.585010735 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.815910233 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.250567906 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.487827615 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.283855416 seconds)
    (13/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.234870166 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.24562477 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.591663873 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.221517279 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.262249024 seconds)
    (18/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.430025913 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 5.206522781 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.247840746 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.772423934 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.532563092 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.117333155 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.247577062 seconds)
    (25/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.225427245 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.237392072 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.343562277 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.919037612 seconds)
    (29/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.602255792 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.973094607 seconds)
    (31/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.509420621 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.223227916 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.275473115 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.825133121 seconds)
    (35/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.111668784 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.217528973 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.325318462 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.220913981 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.087088309 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.811893329 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.252083674 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.207789257 seconds)
    (43/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.236434732 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.4199094 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.329184855 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.400965605 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.623224575 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.633376167 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.280112155 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.927738701 seconds)
    (51/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.361856544 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.221615156 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.362229316 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.334810358 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.49173997 seconds)
    (56/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.784857112 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.606959118 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.252303823 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.315090038 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.441186949 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.104238064 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.283659263 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.323588159 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.248782438 seconds)
    (65/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.226983071 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.249923908 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.69504341 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.30646153 seconds)
    (69/309) benchmarking ("sort", Float64, false)...
    done (took 5.564274032 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.326833376 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.286097227 seconds)
    (72/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.788117881 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.325022541 seconds)
    (74/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.650010816 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.697536768 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.521874478 seconds)
    (77/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060185675 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.252457376 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.817152248 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.624105909 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.98845338 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.222074422 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.424963124 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.519498064 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.985790716 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.229764439 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.311635827 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.576013126 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.504314471 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.633266191 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.691324037 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.661535514 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.877477637 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.274346481 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.039566011 seconds)
    (96/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.214537852 seconds)
    (97/309) benchmarking ("sort", Int8, false)...
    done (took 4.241783478 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.526168477 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.249364511 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.090046728 seconds)
    (101/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245300448 seconds)
    (102/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.308937736 seconds)
    (103/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.227295164 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.979493573 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.332106098 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.30759265 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.227006805 seconds)
    (108/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.240017726 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.006965923 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.631649456 seconds)
    (111/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.448748656 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.130637969 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.336398819 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.064486886 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.486651639 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.016582149 seconds)
    (117/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.44565146 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.574737279 seconds)
    (119/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.599512271 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.227977719 seconds)
    (121/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.544015453 seconds)
    (122/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.330537739 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.699865818 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.225538647 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.614715642 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.834956042 seconds)
    (127/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.246900638 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.211455318 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.737564876 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.249285243 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.225541917 seconds)
    (132/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.618080074 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.670772485 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.509827358 seconds)
    (135/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.269352458 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.248091263 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.226328014 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.841651622 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.976144816 seconds)
    (140/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.413550277 seconds)
    (141/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.502778547 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.486326266 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.308855133 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.048902495 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.68596892 seconds)
    (146/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.314027681 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.862115145 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.232792957 seconds)
    (149/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.743482438 seconds)
    (150/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.788312065 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.331429361 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.605577754 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.317517355 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.618490471 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.36705714 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.28636261 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.052161375 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.354089144 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.5852791 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.253831122 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.45354383 seconds)
    (162/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.935328301 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.177431697 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.994983847 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.25465439 seconds)
    (166/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253989032 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.315888684 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.246720998 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.561220635 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.304591889 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.256258696 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.679940418 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.257162951 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.356682042 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.092814464 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.528350743 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.626950322 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.310602784 seconds)
    (179/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.793466804 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.25810285 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.247773898 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.240721808 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.232650499 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.110449113 seconds)
    (185/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.708419599 seconds)
    (186/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.246825055 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.22973104 seconds)
    (188/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.414785225 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.236076333 seconds)
    (190/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.797386653 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.255903028 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.562317957 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.246646498 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.229738987 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.373414308 seconds)
    (196/309) benchmarking ("sort", BigInt, false)...
    done (took 6.229198894 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.273523758 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.215735462 seconds)
    (199/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.294657602 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.278832258 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.141972681 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.805575041 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.231410842 seconds)
    (204/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.251885124 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.705235859 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.220492627 seconds)
    (207/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.843903219 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.258788667 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.286836731 seconds)
    (210/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.586255175 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.488969742 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.333493082 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.098187354 seconds)
    (214/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.774853742 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.336213372 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.906430444 seconds)
    (217/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.555590596 seconds)
    (218/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.523970042 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.007248897 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.447744852 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.265508161 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.844374615 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.231282352 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.218364465 seconds)
    (225/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.330977405 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.984065957 seconds)
    (227/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.583388709 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.242051498 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.254814058 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.337774505 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.216637869 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.472097268 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.274723192 seconds)
    (234/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.226752926 seconds)
    (235/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.785214713 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.217381961 seconds)
    (237/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.233137771 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.296984033 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.082928438 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.233147773 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.897749499 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.593513711 seconds)
    (243/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.075602943 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.307389396 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.31615839 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.30552602 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.294865897 seconds)
    (248/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.829380645 seconds)
    (249/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.457405749 seconds)
    (250/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.111001415 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.242826074 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.715907187 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.701488743 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.153585398 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.516558279 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.440095195 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.663883389 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.542214885 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.294689457 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.259251237 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.095509733 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.233911499 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.259964827 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.613347984 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.857551063 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.059168702 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.310368158 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.430083565 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.28346268 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.610801888 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.868584937 seconds)
    (272/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.352925293 seconds)
    (273/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.98098576 seconds)
    (274/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.596551413 seconds)
    (275/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.542496003 seconds)
    (276/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.607396954 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.837474079 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.231979171 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.546825451 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.156715126 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.220572793 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.289885025 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.319977834 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.316844953 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.344165443 seconds)
    (286/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.833981113 seconds)
    (287/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.235716023 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.093649129 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.960511116 seconds)
    (290/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.27363799 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.234400558 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.347121686 seconds)
    (293/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.657392478 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.233322947 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.279191553 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.219689544 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.737343803 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.872929957 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.35459391 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.278714765 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.007009397 seconds)
    (302/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.421922446 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.256915564 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.611631591 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.23610131 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.320920202 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.229543968 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.283446999 seconds)
    (309/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25093389 seconds)
  done (took 889.180051709 seconds)
done (took 890.341630364 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.26891348 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261514215 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.246720073 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.268758371 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.358764366 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.2757168 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.257672834 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.249612557 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.29494629 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.296324336 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.24498878 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.274101847 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.248512584 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.246767792 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.246666332 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.260152137 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.267031884 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.246400263 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.263070758 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.25712125 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.262324635 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.245831587 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.297373544 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.274927166 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.252224905 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.251157618 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.25096153 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.266879051 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.358995935 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.250181522 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.251333868 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.259545209 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.267053386 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.246959764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.250042369 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.267108978 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.259229596 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.25777886 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.252659544 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.279118324 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.654393257 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.248345006 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.248332335 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.249622164 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.249765794 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.253916712 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.249270582 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.256623609 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.261125931 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.262066956 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.643975988 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.262880066 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.252006328 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.250474749 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.260499292 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.247495926 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.253770224 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264158481 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.267298566 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264130865 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.257774394 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.254997402 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.251589963 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.26560376 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.255946503 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.68233555 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.244626269 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.255338678 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.661903701 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.255497014 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.685832909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.25793539 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.251531352 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.263482678 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.281470026 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.271176559 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.244886859 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.249205649 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.257066239 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.248584195 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.26014588 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262088303 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.255211578 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.252322321 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.263340869 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.279392566 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.261860707 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.250288379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.260450459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.270180007 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.257270734 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.26112589 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.255413346 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.24630985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.261736593 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.255500747 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.253563348 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.253976445 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.255797784 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.262852459 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.660861651 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267736267 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.25006272 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.249180759 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.251852579 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.264714018 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.665732181 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.250387654 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.273799313 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.300456129 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.25428159 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.265391913 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.254699759 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266396862 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.261241687 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.25621559 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.248256306 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.263546132 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.654392681 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.266257945 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.254241567 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.249744001 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26668928 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.254715892 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.250743746 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.276999491 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.254417096 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266560654 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.372801376 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.264603817 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.284244101 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.250048691 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.257179768 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.282156934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267916754 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.283567178 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.255984724 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268664012 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.26893544 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.250887457 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.263083109 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.264947631 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.255194339 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.26114246 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.248487034 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.286507649 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265476128 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26547843 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.275335596 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.373046809 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.251761033 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.266917384 seconds)
done (took 212.37723612 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.31144955 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.246637663 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.332599364 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.250072652 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.347797445 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.347389289 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.248544847 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.246792466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.247461227 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.668012008 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.246836141 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.248042314 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.245181901 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.247646196 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.331974651 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.250005566 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.248010521 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.589100712 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.250688959 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.32093903 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.243224504 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.249603101 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.250467748 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.628746212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.24897775 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.24851093 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.320179349 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.250656215 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.592856791 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.244671886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.246738459 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.595032336 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.33867664 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.268194912 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.260522405 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.258417602 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.349887774 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.26785247 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.331420279 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.331068167 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.333593781 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.289700415 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.247363608 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.252201386 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.252836525 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.251807003 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.249377334 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.278200192 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.250942754 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.249852249 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.590553513 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.261602907 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.250072619 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.249155682 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.250313286 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.281715883 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.250628032 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.253903672 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.340608639 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.253536802 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.314778449 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.630973326 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.671741074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.253601388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.252372097 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.249342959 seconds)
  done (took 142.946205399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.319186655 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.325172229 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.362417135 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.252215213 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.303860904 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.365873115 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.252845325 seconds)
  done (took 10.367458599 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.257441287 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.253301735 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301859559 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.30223801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.253354346 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.401339423 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.253870433 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.263785582 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.250876005 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.305872444 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.255946683 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.253880339 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.260445201 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.246831399 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.299932225 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.264728311 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.366780975 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.254579965 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.254513813 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.40408726 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252184103 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.261129748 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.305093559 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.264919925 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.256959749 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.259192142 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.818399061 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.254517661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252628908 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.254617198 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252241446 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.290399698 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.255070973 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.254644231 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252276355 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368650787 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.25385642 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252918681 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.255389449 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.252687537 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.255406651 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.255461047 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.256504479 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.253760061 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.256000923 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.277429665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.255866936 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.256126672 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.256317804 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.256623946 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.305665419 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.2559746 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.252696172 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.254469358 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.31057631 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.264024779 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.256552385 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.253993759 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.256835764 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253826847 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.40671892 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.302498343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.257090205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306438457 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.257017201 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.257716659 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.257464368 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.256736409 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309543719 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.255851103 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304365614 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.253730234 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410959177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.278730973 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.258406094 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.258949247 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.258672682 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.256301114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.24978163 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.261276826 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.254650703 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.257850926 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.261488696 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.254970952 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.254801636 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359151032 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365344639 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.255359059 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.269065204 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.263627912 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.254897816 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.308815628 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.259408502 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.254995092 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.30907719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370975208 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.310288719 seconds)
  done (took 145.529128628 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.261316058 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.264285453 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.258400018 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.272523258 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.257524054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.25742588 seconds)
  done (took 8.761857207 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.260494064 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.259188277 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.257600192 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.258444535 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.258255498 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.260215306 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.259698015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258966173 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.262696266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.257807622 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.260203273 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.261789051 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.259359845 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.258919045 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.25956874 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.258837882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.259776175 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.256584518 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.258953873 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260229785 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.354978979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.25947207 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.259097656 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.260148803 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.26497032 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.259262788 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.265530089 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.260336054 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.260242869 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.267605274 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.262920179 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.260060536 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.261150275 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.265180665 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.264226882 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.261533082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263822599 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.262446742 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.257828437 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.260106247 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.263354431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.260477273 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.260404191 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.263697241 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.2610728 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.26490193 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.266499653 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.267801693 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.260382501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.263137685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.264188047 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.261890845 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.262180724 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.263249152 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.262135003 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264874828 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.266372229 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.261824487 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.261118335 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.262364665 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.262091562 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.262192293 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.262904029 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.264799079 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.268104711 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.264412047 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.261846027 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.265465886 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.261640625 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.262033907 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.264203623 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.259895256 seconds)
  done (took 93.133388928 seconds)
done (took 401.919845542 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.608163289 seconds)
  done (took 7.802685442 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.416898521 seconds)
  done (took 7.612965975 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.62909505 seconds)
  done (took 21.83004649 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.338517121 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.315229963 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.273478642 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.256552572 seconds)
  done (took 26.380629781 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.567251205 seconds)
  done (took 7.762104746 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.255081034 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.25450482 seconds)
  done (took 13.706850024 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.819357408 seconds)
  done (took 8.013560608 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.917814279 seconds)
  done (took 8.119858745 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.255223732 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.268579158 seconds)
  done (took 13.970564595 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.241315601 seconds)
  done (took 7.436608566 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.508526673 seconds)
  done (took 8.706811573 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.268746183 seconds)
  done (took 7.466282375 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.318008297 seconds)
  done (took 7.512998762 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.213728253 seconds)
  done (took 9.408406442 seconds)
done (took 156.924662149 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.255715462 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.2559067 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.254619844 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.254138539 seconds)
  done (took 26.21598227 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.297077474 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.29685047 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.29984301 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.30909172 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.30048241 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.298448216 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.288618009 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.290504359 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.308243937 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.299040671 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.299539594 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.299051793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.297330753 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.289010605 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.299164886 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.29958968 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.308074706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.298326609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.290060029 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.301468612 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.264948565 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.308801877 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.301423541 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.264757419 seconds)
  done (took 32.306457959 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.467556037 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.338331189 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.417990649 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.316686489 seconds)
  done (took 6.738267496 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.315971851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.317547201 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.330620042 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.37010871 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.395461532 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.326506362 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.289505593 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.286983878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.273448381 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.317984391 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.393428084 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.334326716 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.415566889 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.264972258 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.45310255 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.270631846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.265230082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.318683465 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.368471011 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.391798748 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.265484655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.316513858 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.330740543 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.335121596 seconds)
  done (took 33.146042204 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.26441461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.273632483 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.272098733 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.264752894 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.264618933 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.265108348 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.271954493 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.266349405 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.286423949 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.266714704 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.264652673 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.264751606 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.264240375 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.266723842 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.263059031 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.277853544 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.278945092 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.264792637 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.266739042 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.27159783 seconds)
  done (took 26.577432864 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.258535745 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.116233665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.611356279 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.515695951 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.259670755 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.261254804 seconds)
  done (took 27.222407508 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.334774909 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.467721907 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.265405105 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.616696957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.693046163 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.266772981 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.267015284 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.506586248 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.816767512 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.807492227 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.322822174 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.332566855 seconds)
  done (took 18.898201684 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.26311149 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.261282378 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.273843409 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.277527002 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.320408929 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.270270433 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.273743875 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.260379004 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.322930717 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.325254557 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.269967924 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.324759015 seconds)
  done (took 36.644423173 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349096245 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304401037 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.247870871 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011340247 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981529752 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473578563 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.014635189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13940851 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.268933006 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535609406 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261864655 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353515574 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51951911 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261650086 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266168252 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.272901597 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490392837 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741723918 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265729011 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.191971605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291133642 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264039871 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.352141489 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.292806706 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474700793 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.240471938 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.523486481 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.045308756 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544639661 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275446804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27276207 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263175245 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536962164 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935058631 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360771868 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272481651 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9473309 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810722478 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.262906618 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.254203554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223744344 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267524274 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273301042 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262119024 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202589272 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261561842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692122278 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.272756315 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.974887477 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.263616326 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274042378 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357366416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.266953153 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.834113805 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267120912 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.270611608 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.260713291 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269364497 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832449506 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688956482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267129365 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.204605548 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62977313 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.254350996 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871015314 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.367645954 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.26740191 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268685071 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198770165 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.232674434 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281426862 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411176428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.290252245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911494178 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957276214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272773249 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197838371 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801936128 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273390235 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.199959344 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493302102 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.040555389 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201277549 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.214519087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199679062 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969434607 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274982419 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.661402935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.273686439 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687932671 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.27888308 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281967011 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289271375 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.490081933 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.149418058 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265534775 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.226725969 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409237297 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287894591 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.691582452 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203777781 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.269872981 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521959583 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.478249756 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27170564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.27000351 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46409674 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282153725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.281711446 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.274055584 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.27779166 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.828898071 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281000017 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700190354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286198159 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.043547414 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009090413 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281259452 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.367261835 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27283458 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512234897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.038446113 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171561265 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334838409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265125135 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266931938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.286447086 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119160852 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.170443879 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.269442051 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276420387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277985286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.268214558 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216238621 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.264913427 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26756506 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.078060191 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.493476588 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271219767 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54396256 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202957738 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415680453 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277394659 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.491443149 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499944402 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.268414037 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530058093 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274150047 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277451351 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278604577 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287126656 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36561798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290872129 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.279598425 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524078378 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.272725507 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.272243031 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.276585235 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.050777507 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26975237 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.274809998 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092380497 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836900699 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24770164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272890607 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158794532 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.282815346 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337349095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274563042 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.27981395 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.084459828 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080025228 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.277134149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.273860186 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493661454 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281175559 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.274913205 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353788474 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.463306288 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845197137 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286297198 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.205314759 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.98142891 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.963244241 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269762889 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.458594444 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268814964 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279920968 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280826447 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.768583192 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.838762692 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273506676 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.198509802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.279029425 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281365722 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.276224612 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270645941 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.068215645 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.71736501 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287587195 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281251867 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414168494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.284920666 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20523731 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.789028229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27606558 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271621549 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.047059522 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306510041 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.200714266 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742355915 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534695632 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.98566252 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285500928 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.309314182 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.304714148 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.272978608 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270564631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298682988 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.292734762 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282314891 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.283275499 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.213074231 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.712778039 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838100993 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020273506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798748602 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202684089 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.282246132 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.174694717 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702312227 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209968298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930952591 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461917004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712078997 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220698433 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469567787 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507427421 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040873217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283913508 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501040633 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195731165 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.276723669 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288216053 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485257243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307647026 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.284022135 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203767437 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.576044332 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499939135 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26042742 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354202603 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69965311 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277660455 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056637539 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.273043899 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658744598 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448041229 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822190283 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661063135 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286874965 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274994032 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761883277 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279045689 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.803758052 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885210859 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277164597 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.473913404 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213209659 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286107359 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.285878045 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.276007899 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.585095023 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.285255139 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.530251095 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287170047 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208998512 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273847288 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798312789 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.138779479 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.282107193 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276137337 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020648087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278181567 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561351942 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.285193618 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.051746298 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280708009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.210863786 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209543646 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.968350205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284141315 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251693956 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760666743 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.624572987 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266553859 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296017718 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124306488 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.532718667 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.290064356 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.85607019 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503271728 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.057536175 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302023305 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.377673651 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277465667 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.263985859 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158369579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511921961 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103342756 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.501943787 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.284630825 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.182842524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274782859 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.491390285 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164531572 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275852488 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521956217 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.989039157 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.294618303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986268808 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304639648 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286388459 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294105078 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.64473678 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286685726 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349182412 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288809095 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.289402405 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.289244108 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448673965 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290416354 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281972145 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.290971442 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373633952 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762850713 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.052046225 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.052280671 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863429858 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020471639 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859224645 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292817934 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27846852 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279756215 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212707341 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426737928 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806714603 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551977456 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409500809 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.706711284 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302873251 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277666902 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304490492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490999873 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55467059 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.151366567 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278175796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93980746 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.161914653 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290239286 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.491297597 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768051463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82859313 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398700029 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28720924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.707476437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55659082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370778964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278941823 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870005392 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.283507889 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668971055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.285723114 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279062781 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44312823 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290204319 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954563541 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.291364072 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.436481523 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.053062623 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.233423995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537464175 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.751983423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.291688098 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864372908 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986970367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544891018 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350757459 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29092891 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.391117151 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426253524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.291340853 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.177702581 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280891542 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125607944 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.991272376 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.290671638 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863304937 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545318153 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.278735124 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.290486488 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305537119 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.290263048 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505410681 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993942944 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506331422 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290722388 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290956613 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.851460093 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865338745 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296060006 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216170606 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.285911476 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519769011 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.518863244 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.307336173 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.734497148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.993844049 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831614886 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.254403218 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303951446 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293000252 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.984553677 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865533161 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.078535254 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772633213 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93774301 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293260006 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559408054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.288421484 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283189934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562176759 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.28645512 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.283002307 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29555385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.861359662 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047350408 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.288286789 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.260548047 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.221867553 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.53293521 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906744696 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221669355 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282670365 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.468357777 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287712533 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414033941 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295774807 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.288612308 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285686599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.044142268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558301612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.289745928 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.272969687 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.268984511 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287929319 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290569779 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512868528 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291228199 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.960084978 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.637211348 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541639438 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.285344597 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.271182635 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.289097352 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284436998 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003328413 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25484787 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.784255213 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837999987 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.288659473 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.297341972 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288921389 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.50114847 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496993502 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301121257 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299245967 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289353114 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301809751 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.189897263 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053059265 seconds)
  done (took 1554.736606247 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.317131479 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.296111507 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.336355979 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.300865619 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.307044318 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.309236634 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.305680807 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420476077 seconds)
  done (took 51.815379126 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.290551797 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.442214175 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.316127476 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.285928148 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.298422764 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.29943625 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.748078568 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.296856313 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.294706596 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.296183725 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.29515204 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.296631233 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.955836267 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.294774288 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.296934709 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.272260955 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.294622446 seconds)
  done (took 64.50752663 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.286436718 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.880831762 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.392935977 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.287510846 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.251851795 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.296074119 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.073535953 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.296917939 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.287805865 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.560767702 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.944764684 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.300967242 seconds)
  done (took 84.087410304 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.294784594 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.294850656 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.29392803 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.29434115 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.294254085 seconds)
  done (took 7.69797142 seconds)
done (took 1971.790527399 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.546713522 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.9842306 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.946796241 seconds)
  done (took 5.155980246 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.435036725 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.484584557 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.605323798 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.60957353 seconds)
  done (took 7.360983259 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.567060102 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.663892123 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.476794598 seconds)
  done (took 5.93431827 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.703173211 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.292125868 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.41313501 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.287319365 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.287308105 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.289644713 seconds)
  done (took 20.09261135 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.29265118 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.29436812 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.292167939 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.295480183 seconds)
  done (took 6.401211002 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.273748525 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.986737724 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.275364427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.291452931 seconds)
  done (took 18.053785944 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.039585681 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.050852164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.036520674 seconds)
  done (took 7.353656665 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.288292285 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.128982382 seconds)
  done (took 9.643588389 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.579987214 seconds)
  done (took 2.806987706 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.42357134 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.621055025 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.347151006 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.245184726 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.341212139 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.168454987 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.944998184 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.521658081 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.23032591 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.482514781 seconds)
  done (took 27.553721081 seconds)
done (took 123.537568851 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.088699142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.314104209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.496091972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.058953547 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.522368873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.49639015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.701409326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.024684151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.691317517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.559054676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.062737791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.526552519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.652257633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.31061332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.650592673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.313778536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.522342901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.142791968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.748840318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.943920142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.701159231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.69896828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.889787226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.724077681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.524402544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440092204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.281537209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.313772138 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.926839089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.304833498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44113783 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.1217244 seconds)
  done (took 188.423911744 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.291082142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.290311922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.290603531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.290618078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.29098116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.291607512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29305501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290934843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.290704989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.293728308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291153641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.310467903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.292042883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292250214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.29186692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.318060803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.290811311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.291344875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.291966261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.30093066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.29086288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.293713328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.291157937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.291798364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.305675804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.291192095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.291300084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291724526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.292013991 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.303333589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.290970175 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.29107276 seconds)
  done (took 202.640478459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.292890808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.291683702 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.315276734 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.292747486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.305600407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.290855646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.291623501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.293484101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.306740482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.291153797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.303869902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.294559438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.309077908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292383062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.305998225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.306430413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.292526468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.308849202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.291647158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290951584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.296389965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.306121266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.292013833 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.292176901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.292324048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.308022487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.292473359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.306870936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.293201781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.292717314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294385753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.293394989 seconds)
  done (took 202.760368458 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.498351328 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.30059647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.301303013 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.255435676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.30235076 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.301704589 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.29692601 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.493500466 seconds)
  done (took 13.981882898 seconds)
done (took 609.033849158 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.660769924 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.371782556 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.499646251 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.32175707 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.110450114 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.324473422 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.322445957 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.488493565 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.222046593 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.496126305 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.577025103 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.318915316 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.715776966 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.321610042 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.569919268 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.417126695 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.19653343 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.310344859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.631174586 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.851446418 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.572229625 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.763197047 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.489000362 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.239002891 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.722901266 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.76447231 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.053067946 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.200581262 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321580012 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.637301718 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.943149639 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.308924924 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.38159396 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.362473919 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.416574992 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.398672333 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250263667 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.360238693 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.503152922 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.523039362 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.843689096 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.0337857 seconds)
  done (took 90.05103038 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.290792302 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.291359939 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.291275293 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.292998057 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.293455564 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.291967703 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.292272138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.291070082 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.290833827 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.290737298 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.290999066 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.292535341 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.291327347 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.291086908 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.290106258 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.291155331 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.291281553 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.293641436 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.290751865 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.290027376 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.292063057 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.293299107 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.292049679 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.29174409 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.291820127 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.292332031 seconds)
  done (took 34.819073378 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.305611585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.553115485 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.726138707 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.313690565 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.304182039 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.308054244 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.381587446 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.305796121 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.307377812 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.30768342 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.457721485 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.309581902 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.34314802 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.754425159 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.309376826 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.306884828 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.307020327 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.306681279 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.561504406 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.315199185 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.402130713 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.307469204 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.382835716 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.317224347 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.326687506 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.306060351 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.310675243 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.838015878 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.309961612 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.459874141 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087453187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.383625613 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.779387716 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.745149063 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.087366067 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.310588655 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.308287368 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464082351 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.308262999 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.306282438 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.382338734 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.307377306 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.747658797 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.945717459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.325929523 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.307819304 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.845382748 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.463713079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.556010914 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.318755236 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.792019314 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.314407125 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.310080843 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.309652317 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.555415418 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.317848122 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.307986308 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.850007595 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.331385844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.385046502 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.311130898 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.308818621 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.568262265 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.308688727 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.5587563 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.311606823 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.31738353 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.310321827 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.744441193 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.314219956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.974169362 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.326420494 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.308760189 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.461363629 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.559729046 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.879116634 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.312126424 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.578154829 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.794013534 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.386077016 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.313766558 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.813793719 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.388546091 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.311896378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.31192392 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.312881378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.310590003 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.355942855 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.384144313 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.886300355 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954538996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.869357619 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.405557276 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.322968477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.30935449 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.851780293 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.329083265 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310466143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.733096227 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.964438819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.326599351 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.319349286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.951490004 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.330634686 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.38797849 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.315385909 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.751037276 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.314713425 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.357503312 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.310669914 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.320507417 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.31470917 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.389684547 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.315055112 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.311960194 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.935526285 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.487958845 seconds)
  done (took 172.955794424 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.316237638 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.304644594 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.31803838 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.304413292 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.304385341 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.310772304 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.3044822 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.304962423 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.310854205 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.304854627 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.305870716 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.304962163 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.305581317 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.308499231 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.332067784 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.313735761 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.914610866 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.305332323 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.306223074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.305288388 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.116750777 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.307830949 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.304734223 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.304812634 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.305892279 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.303773323 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.31066668 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.30684309 seconds)
  done (took 151.29111045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.312673037 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.871546979 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.313530292 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.442762502 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332573696 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.309622129 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.439676765 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.36737425 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.314940643 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.311005159 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.311312225 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.611078889 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.31433871 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.820496602 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.503239761 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.445027936 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.820413527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.313992468 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.311632315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.311764734 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.44659916 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.323639438 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.613666389 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.87520404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.315393233 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.874474039 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.303465189 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.314042288 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.313134303 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.877787526 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.312706886 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.615797734 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.389763543 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.372582966 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.877548642 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.823258573 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.824656618 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.457384964 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.313548819 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.311516136 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.312404844 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.302540898 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.878044313 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.315514316 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.314349049 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.871993102 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.330191082 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.316186021 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.323418493 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.313141417 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.372132161 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.37549701 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.619589858 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.883918141 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.390042708 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.33562984 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.442871193 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.706688126 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.318198599 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.842031855 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.305594868 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.882475129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.318969882 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.303489821 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.315385636 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.320071211 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.463231154 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.444063682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.843949998 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.31884197 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.84621197 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.466349794 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.314438431 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.313418346 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.31725323 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.880820699 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.846375297 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.467349187 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.448212683 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.509678363 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.309174042 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.314747149 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.304394083 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.392529723 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.315089036 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.884590699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.842334041 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.32033032 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.31711454 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.318024874 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.316814507 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.492506293 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.885905053 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.392505638 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.82262206 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.635228727 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.620106257 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.318272298 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.374272232 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.316920299 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.623022607 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.319309876 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.373028069 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.778683439 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.623680005 seconds)
  done (took 157.285057786 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.56660302 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.551926161 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.409336501 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.42998153 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.905594429 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.894584062 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.629069256 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.437352866 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.423681409 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.566977919 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.467628148 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.408502881 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.483335649 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.390652976 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.052731321 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.385258511 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.408067345 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.443521221 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.412865904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.366265083 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.950449981 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.609271748 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.488037929 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.275507021 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.410974363 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.111751785 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.873897906 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.85526223 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.48929453 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.626521875 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.879715093 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.437485458 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.263725948 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.972547181 seconds)
  done (took 64.127308139 seconds)
done (took 671.761668497 seconds)
SAVING RESULT...
DONE!
